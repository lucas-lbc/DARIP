Repo,IssueNum,Title_Description,Fixers,Labels,Created_at,Closed_at,Creator,Commentators,Label_adders,Label_removers,Assigns,Unassigns,Closer,Links
electron/electron,10043,"Crash while double click on tray. <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.11
* Operating system: Windows 10 VM (VBox)

### Expected behavior
App not crashed
<!-- What do you think should happen? -->

### Actual behavior
App crashing on double click on tray if setup listeners for click and double click
<!-- What actually happens? -->

### How to reproduce

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
[electron-tray-click&dblclick-crash.zip](https://github.com/electron/electron/files/1152700/electron-tray-click.dblclick-crash.zip)",groundwater,platform/windows;bug :beetle:;2-0-x,2017-07-17T13:18:34Z,2019-06-25T05:03:19Z,ghost,zeke;ghost;groundwater;alper-teke;towfiqi;codebytere,zeke;codebytere,codebytere,zeke,,codebytere,
electron/electron,1005,"Contractions always appear as spelling errors We're using the `spellchecker` module within the `preload` script of a renderer process, and have followed the basic steps for setting it up as the provider via [`web-frame`](https://github.com/atom/atom-shell/blob/master/docs/api/web-frame.md).

However, it seems to break words at the apostrophe mark rather than process the complete contraction. I'm not sure if this is an issue with the dictionary or the affix file, but the result is undesirable:

![](https://s3.amazonaws.com/f.cl.ly/items/3Z0g2b2b221K2R0A412z/Image%202015-01-13%20at%203.01.06%20PM.png)

Any ideas on what's happening?
",nitsakh,bug :beetle:,2015-01-13T23:52:37Z,2021-03-09T16:57:48Z,CharlieHess,zcbenz;kevinlims;nirsmadar;anaisbetts;electron-triage,zcbenz;sofianguy,sofianguy,nornagon,,electron-triage,
electron/electron,10054,"Failed to get 'appData' path <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.11
* Operating system: WIN10

### Expected behavior
![733c1ee9-1c37-470a-a2f1-5b369084b895 _](https://user-images.githubusercontent.com/3371163/28317142-56a441ee-6bf8-11e7-88db-396389d6ca9c.jpg)

<!-- What do you think should happen? -->

### Actual behavior

<!-- What actually happens? -->

### How to reproduce
```bash
cnpm i -g electron
electron -v
```
<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",groundwater,platform/windows;bug :beetle:,2017-07-18T12:31:36Z,2018-09-24T05:05:20Z,kerwin612,zeke;MarshallOfSound;crazy-max;kerwin612;robinwassen;codebytere;Halkcyon;jamesxsc;Aminechakr,zeke,,zeke,,codebytere,
electron/electron,10163,"Electron application icon in KDE env * Electron version: not clear which one is used in latest riot-web: 0.11.4
* Operating system: Linux Ubuntu 16.04 (KDE Neon Packages KDE Plasma 5.10.4)

### Expected behavior
[They said](https://bugs.kde.org/show_bug.cgi?id=382728#c7) application is using the deprecated system tray icon specification. The app should be ported to [StatusNotifierItem](https://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/) under Linux.

### Actual behavior
Riot icon is violet blank square in KDE systray. Some screenshots to explain:
https://bugsfiles.kde.org/attachment.cgi?id=106945 - Riot icon in systray
https://bugsfiles.kde.org/attachment.cgi?id=106944 - Riot icon in task manager

### How to reproduce
Run Riot in latest KDE Plasma DE.",deepak1556,bug :beetle:,2017-07-31T08:16:31Z,2018-09-24T05:07:13Z,akontsevich,MTRNord;dos1;codebytere;akontsevich;MarshallOfSound,groundwater,,groundwater,,codebytere,
electron/electron,10218,"Navigating to another page will close all opened window 
* Electron version: 1.7.4
* Operating system: macOS Sierra 10.12.1

I opened one or more new windows and navigated to another page, the opened windows are closed.
e.g.,
Here is a page loaded by main window
```html
<a href=""https://www.google.com"" target=""_blank"">open new window</a>
<a href=""https://github.com/electron"">Navigate to electron github page</a>
```
I clicked ""open new window"" to create and show a BrowserWindow.
Then I clicked ""Navigate to electron github page"", the main window navigate to https://github.com/electron but the BrowserWindow just opened is closed.",zeke,platform/windows;platform/macOS;bug :beetle:;version/1.7.x,2017-08-08T06:45:09Z,2018-09-24T05:31:00Z,WhiteFur,WhiteFur;Vaggal;codebytere,sofianguy;zeke,,sofianguy,,codebytere,
electron/electron,10227,"App crashes on quit when calling `Notification#show` (main process) 2 times * Electron version: 1.7.4
* Operating system: MacOS

```
Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000028
Exception Note:        EXC_CORPSE_NOTIFY
Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [0]
VM Regions Near 0x28:
--> 
    __TEXT                 000000010c315000-000000010c316000 [    4K] r-x/rwx SM=COW  /Applications/Station Canary.app/Contents/MacOS/Station Canary
Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework   0x000000010e8d6e0b brightray::Notification::~Notification() + 43
1   com.github.electron.framework   0x000000010e8cec4a brightray::CocoaNotification::~CocoaNotification() + 106
2   com.github.electron.framework   0x000000010e8cec79 brightray::CocoaNotification::~CocoaNotification() + 9
3   com.github.electron.framework   0x000000010e8cec8e brightray::CocoaNotification::~CocoaNotification() + 14
4   com.github.electron.framework   0x000000010e8d6c7f brightray::NotificationPresenter::~NotificationPresenter() + 63
5   com.github.electron.framework   0x000000010e8cf75b brightray::NotificationPresenterMac::~NotificationPresenterMac() + 75
6   com.github.electron.framework   0x000000010e8cf789 brightray::NotificationPresenterMac::~NotificationPresenterMac() + 9
7   com.github.electron.framework   0x000000010e8cf79e brightray::NotificationPresenterMac::~NotificationPresenterMac() + 14
8   com.github.electron.framework   0x000000010e8bdf50 brightray::BrowserClient::~BrowserClient() + 48
9   com.github.electron.framework   0x000000010e7edda9 atom::AtomBrowserClient::~AtomBrowserClient() + 137
10  com.github.electron.framework   0x000000010e7eddd9 atom::AtomBrowserClient::~AtomBrowserClient() + 9
11  com.github.electron.framework   0x000000010e7ede0e atom::AtomBrowserClient::~AtomBrowserClient() + 14
12  com.github.electron.framework   0x000000010e75b848 atom::AtomMainDelegate::~AtomMainDelegate() + 88
13  com.github.electron.framework   0x000000010e75b869 atom::AtomMainDelegate::~AtomMainDelegate() + 9
14  com.github.electron.framework   0x000000010e758b95 AtomMain + 85
15  org.efounders.BrowserXCanary    0x000000010c315f26 main + 38
16  libdyld.dylib                   0x00007fffcd1f3235 start + 1
```",MarshallOfSound,platform/macOS;bug :beetle:;version/1.7.x,2017-08-09T08:35:31Z,2017-10-27T23:33:31Z,alexstrat,MarshallOfSound;alexstrat,sofianguy,sofianguy,sofianguy,,MarshallOfSound,
electron/electron,10398,"Mixed mode sandbox breaks right-click context menu in devtools * Electron version: 1.7.6
* Operating system: macOS 10.12, Windows 10

### Expected behavior

Right clicking should open context menu in devtools

### Actual behavior

Right clicking does not open the context menu in devtools

### How to reproduce

- `open Electron.app --args --enable-mixed-sandbox`
- open devtools
- right click in the source tab for example",nitsakh,platform/windows;platform/macOS;bug :beetle:;version/1.7.x,2017-08-30T09:26:33Z,2018-03-22T07:15:58Z,miniak,,sofianguy,,nitsakh,,zcbenz,
electron/electron,10424,"BrowserWindow with customButtonsOnHover and frame:false no longer rounds the corners on Mac * Electron version: 1.7.5
* Operating system: macOS 10.12.6

### Expected behavior
The corners should be rounded like they were in 1.6.x

### Actual behavior
The browser windows corners are no longer rounded when running with electron 1.7.5

### How to reproduce
```
git clone https://github.com/emilylaguna/electron-quick-start.git
cd electron-quick-start
npm install
./node_modules/.bin/electron .
```
",zcbenz,platform/macOS;bug :beetle:,2017-09-01T21:31:43Z,2020-12-11T19:03:09Z,emilylaguna,envomer;JSzaszvari;sofianguy;astoilkov;bjoernm;pronebird;Jip-Hop,sofianguy;electron-triage,zcbenz;sofianguy,zcbenz,,codebytere,
electron/electron,10433,"Electron 1.8.0 crashes if autoupdate is enabled Hi,

OS  : macOS Sierra
Electron version : 1.8.0

I was using electron@1.7.5 previously in my project.
Today I  upgraded to 1.8.0 after upgrade if I start my application it is getting crashed without any warning or message.However mac is throwing below error.

Once I reverted the version to 1.7.5  app is working fine even auto update is enabled[as usual]

Error:
<details>

```

Process:               Electron [60690]
Path:                  /Users/USER/Desktop/*/Electron.app/Contents/MacOS/Electron
Identifier:            com.github.electron
Version:               1.8.0 (1.8.0)
Code Type:             X86-64 (Native)
Parent Process:        ??? [60689]
Responsible:           Electron [60690]
User ID:               1910097182

Date/Time:             2017-09-03 15:36:54.520 +0530
OS Version:            Mac OS X 10.12.6 (16G29)
Report Version:        12
Anonymous UUID:        60BAD2FD-B110-A50F-C435-35E0565DFFC9

Sleep/Wake UUID:       5B09E2FE-5ED9-4638-B3F2-47E0353DFE88

Time Awake Since Boot: 240000 seconds
Time Since Wake:       12000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_INSTRUCTION (SIGILL)
Exception Codes:       0x0000000000000001, 0x0000000000000000
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Illegal instruction: 4
Termination Reason:    Namespace SIGNAL, Code 0x4
Terminating Process:   exc handler [0]

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework 	0x000000010a73cd14 atom::AtomBindings::Crash() + 4
1   com.github.electron.framework 	0x000000010a73cd06 0x10a646000 + 1010950
2   libnode.dylib                 	0x000000010694acab v8::V8::ToLocalEmpty() + 59
3   com.github.electron.framework 	0x000000010a73f2d1 mate::internal::CallMethodWithArgs(v8::Isolate*, v8::Local<v8::Object>, char const*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 113
4   com.github.electron.framework 	0x000000010a663051 0x10a646000 + 118865
5   com.github.electron.framework 	0x000000010a662f72 atom::api::AutoUpdater::OnError(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 194
6   com.github.electron.framework 	0x000000010a66309d non-virtual thunk to atom::api::AutoUpdater::OnError(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 13
7   com.github.electron.framework 	0x000000010a6d8dd1 auto_updater::AutoUpdater::SetFeedURL(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&) + 513
8   com.github.electron.framework 	0x000000010a663529 atom::api::AutoUpdater::SetFeedURL(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, mate::Arguments*) + 57
9   com.github.electron.framework 	0x000000010a65c481 0x10a646000 + 91265
10  com.github.electron.framework 	0x000000010a65c45c 0x10a646000 + 91228
11  com.github.electron.framework 	0x000000010a6622f2 0x10a646000 + 115442
12  com.github.electron.framework 	0x000000010a6647bd base::internal::Invoker<base::internal::BindState<void (atom::api::AutoUpdater::*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, mate::Arguments*)>, void (atom::api::AutoUpdater*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, mate::Arguments*)>::Run(base::internal::BindStateBase*, atom::api::AutoUpdater*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, mate::Arguments*&&) + 29
13  com.github.electron.framework 	0x000000010a66224c 0x10a646000 + 115276
14  com.github.electron.framework 	0x000000010a6621a0 0x10a646000 + 115104
15  com.github.electron.framework 	0x000000010a664492 mate::internal::Dispatcher<void (atom::api::AutoUpdater*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, mate::Arguments*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 130
16  libnode.dylib                 	0x00000001069456f1 0x106718000 + 2283249
17  libnode.dylib                 	0x0000000106a113ee 0x106718000 + 3118062
18  libnode.dylib                 	0x0000000106a1090b 0x106718000 + 3115275
19  ???                           	0x0000033ae51843fd 0 + 3551486559229
20  ???                           	0x0000033ae527786a 0 + 3551487555690
21  ???                           	0x0000033ae523bd9c 0 + 3551487311260
22  ???                           	0x0000033ae52779e5 0 + 3551487556069
23  ???                           	0x0000033ae523bd9c 0 + 3551487311260
24  ???                           	0x0000033ae527786a 0 + 3551487555690
25  ???                           	0x0000033ae523bd9c 0 + 3551487311260
26  ???                           	0x0000033ae52779e5 0 + 3551487556069
27  ???                           	0x0000033ae523bd9c 0 + 3551487311260
28  ???                           	0x0000033ae5185a7b 0 + 3551486564987
29  ???                           	0x0000033ae527833e 0 + 3551487558462
30  ???                           	0x0000033ae523bd9c 0 + 3551487311260
31  ???                           	0x0000033ae52770c8 0 + 3551487553736
32  ???                           	0x0000033ae523bd9c 0 + 3551487311260
33  ???                           	0x0000033ae52779e5 0 + 3551487556069
34  ???                           	0x0000033ae523bd9c 0 + 3551487311260
35  ???                           	0x0000033ae5185a7b 0 + 3551486564987
36  ???                           	0x0000033ae523b079 0 + 3551487307897
37  ???                           	0x0000033ae51aaaad 0 + 3551486716589
38  libnode.dylib                 	0x0000000106ba7283 0x106718000 + 4780675
39  libnode.dylib                 	0x0000000106ba6f69 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169
40  libnode.dylib                 	0x000000010696635d v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 509
41  libnode.dylib                 	0x00000001067f291e node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context) + 286
42  libnode.dylib                 	0x00000001067f2c9d node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context) + 109
43  libnode.dylib                 	0x00000001067f2c1c node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*, node::async_context) + 92
44  libnode.dylib                 	0x00000001067f2b9f node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*, node::async_context) + 95
45  com.github.electron.framework 	0x000000010a73f2ab mate::internal::CallMethodWithArgs(v8::Isolate*, v8::Local<v8::Object>, char const*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 75
46  com.github.electron.framework 	0x000000010a6c801d 0x10a646000 + 532509
47  com.github.electron.framework 	0x000000010a6c7f0e 0x10a646000 + 532238
48  com.github.electron.framework 	0x000000010a6b665c 0x10a646000 + 460380
49  com.github.electron.framework 	0x000000010a6b16df atom::api::WebContents::OnRendererMessageSync(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*) + 111
50  com.github.electron.framework 	0x000000010a6bbdab 0x10a646000 + 482731
51  com.github.electron.framework 	0x000000010a6bbd79 0x10a646000 + 482681
52  com.github.electron.framework 	0x000000010a6b15b6 0x10a646000 + 439734
53  com.github.electron.framework 	0x000000010a6b11aa atom::api::WebContents::OnMessageReceived(IPC::Message const&) + 442
54  com.github.electron.framework 	0x000000010a6b1c40 non-virtual thunk to atom::api::WebContents::OnMessageReceived(IPC::Message const&) + 16
55  com.github.electron.framework 	0x000000010aef1856 0x10a646000 + 9091158
56  com.github.electron.framework 	0x000000010ad870df 0x10a646000 + 7606495
57  com.github.electron.framework 	0x000000010ad8cb56 0x10a646000 + 7629654
58  com.github.electron.framework 	0x000000010b4588cb 0x10a646000 + 14756043
59  com.github.electron.framework 	0x000000010a8cb5b1 0x10a646000 + 2643377
60  com.github.electron.framework 	0x000000010a893a7b 0x10a646000 + 2415227
61  com.github.electron.framework 	0x000000010a893dcc 0x10a646000 + 2416076
62  com.github.electron.framework 	0x000000010a894183 0x10a646000 + 2417027
63  com.github.electron.framework 	0x000000010a89760a 0x10a646000 + 2430474
64  com.github.electron.framework 	0x000000010a8467ca 0x10a646000 + 2099146
65  com.github.electron.framework 	0x000000010a89702f 0x10a646000 + 2428975
66  com.apple.CoreFoundation      	0x00007fff893ce321 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
67  com.apple.CoreFoundation      	0x00007fff893af21d __CFRunLoopDoSources0 + 557
68  com.apple.CoreFoundation      	0x00007fff893ae716 __CFRunLoopRun + 934
69  com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
70  com.apple.HIToolbox           	0x00007fff8890eebc RunCurrentEventLoopInMode + 240
71  com.apple.HIToolbox           	0x00007fff8890ecf1 ReceiveNextEventCommon + 432
72  com.apple.HIToolbox           	0x00007fff8890eb26 _BlockUntilNextEventMatchingListInModeWithFilter + 71
73  com.apple.AppKit              	0x00007fff86ea7a54 _DPSNextEvent + 1120
74  com.apple.AppKit              	0x00007fff876237ee -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 2796
75  com.apple.AppKit              	0x00007fff86e9c3db -[NSApplication run] + 926
76  com.github.electron.framework 	0x000000010a897e7e 0x10a646000 + 2432638
77  com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
78  com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
79  com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
80  com.github.electron.framework 	0x000000010ab1681f 0x10a646000 + 5048351
81  com.github.electron.framework 	0x000000010ab16640 0x10a646000 + 5047872
82  com.github.electron.framework 	0x000000010ab18ee2 0x10a646000 + 5058274
83  com.github.electron.framework 	0x000000010ab124fc 0x10a646000 + 5031164
84  com.github.electron.framework 	0x000000010aa68c7b 0x10a646000 + 4336763
85  com.github.electron.framework 	0x000000010c52a418 0x10a646000 + 32392216
86  com.github.electron.framework 	0x000000010aa67ed4 0x10a646000 + 4333268
87  com.github.electron.framework 	0x000000010a64848a AtomMain + 74
88  com.github.electron           	0x00000001065def26 main + 38
89  libdyld.dylib                 	0x00007fff9eb2e235 start + 1

Thread 1:
0   libsystem_kernel.dylib        	0x00007fff9ec5d44e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff9ed47621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fff9ed4707d start_wqthread + 13

Thread 2:
0   libsystem_kernel.dylib        	0x00007fff9ec5d44e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff9ed4748e _pthread_wqthread + 1023
2   libsystem_pthread.dylib       	0x00007fff9ed4707d start_wqthread + 13

Thread 3:
0   libsystem_kernel.dylib        	0x00007fff9ec5d44e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff9ed47621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fff9ed4707d start_wqthread + 13

Thread 4:: WorkerPool/13827
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f9cc6 0x10a646000 + 2833606
4   com.github.electron.framework 	0x000000010a8fa158 0x10a646000 + 2834776
5   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
6   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 5:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.apple.Foundation          	0x00007fff8adc1252 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010a897cae 0x10a646000 + 2432174
7   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
8   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
9   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
10  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
11  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
12  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
13  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
14  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 6:: DnsConfigService
0   libsystem_kernel.dylib        	0x00007fff9ec5dd96 kevent + 10
1   com.github.electron.framework 	0x000000010a8fee69 0x10a646000 + 2854505
2   com.github.electron.framework 	0x000000010a8fdffd 0x10a646000 + 2850813
3   com.github.electron.framework 	0x000000010a896a7f 0x10a646000 + 2427519
4   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
5   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
6   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 7:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fff9ec5e246 read + 10
1   com.github.electron.framework 	0x000000010a6e097f 0x10a646000 + 633215
2   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
3   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
4   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
5   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 8:: WorkerPool/28931
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f9cc6 0x10a646000 + 2833606
4   com.github.electron.framework 	0x000000010a8fa158 0x10a646000 + 2834776
5   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
6   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 9:: TaskSchedulerServiceThread
0   libsystem_kernel.dylib        	0x00007fff9ec5dd96 kevent + 10
1   com.github.electron.framework 	0x000000010a8fee69 0x10a646000 + 2854505
2   com.github.electron.framework 	0x000000010a8fdffd 0x10a646000 + 2850813
3   com.github.electron.framework 	0x000000010a896a7f 0x10a646000 + 2427519
4   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
5   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
6   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 10:: TaskSchedulerBackgroundWorker0
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f7180 0x10a646000 + 2822528
4   com.github.electron.framework 	0x000000010a8f72b1 0x10a646000 + 2822833
5   com.github.electron.framework 	0x000000010a8aeb08 0x10a646000 + 2525960
6   com.github.electron.framework 	0x000000010a8aef77 0x10a646000 + 2527095
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 11:: TaskSchedulerBackgroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f7180 0x10a646000 + 2822528
4   com.github.electron.framework 	0x000000010a8f72b1 0x10a646000 + 2822833
5   com.github.electron.framework 	0x000000010a8aeb08 0x10a646000 + 2525960
6   com.github.electron.framework 	0x000000010a8aef77 0x10a646000 + 2527095
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 12:: TaskSchedulerForegroundWorker0
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f7180 0x10a646000 + 2822528
4   com.github.electron.framework 	0x000000010a8f72b1 0x10a646000 + 2822833
5   com.github.electron.framework 	0x000000010a8aeb08 0x10a646000 + 2525960
6   com.github.electron.framework 	0x000000010a8af1cd 0x10a646000 + 2527693
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 13:: TaskSchedulerForegroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f7180 0x10a646000 + 2822528
4   com.github.electron.framework 	0x000000010a8f72b1 0x10a646000 + 2822833
5   com.github.electron.framework 	0x000000010a8aeb08 0x10a646000 + 2525960
6   com.github.electron.framework 	0x000000010a8aef77 0x10a646000 + 2527095
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 14:: Chrome_DBThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010ab238f8 0x10a646000 + 5101816
10  com.github.electron.framework 	0x000000010ab23cbf 0x10a646000 + 5102783
11  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
12  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
13  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 15:: Chrome_FileThread
0   libsystem_kernel.dylib        	0x00007fff9ec5dd96 kevent + 10
1   com.github.electron.framework 	0x000000010a8fee69 0x10a646000 + 2854505
2   com.github.electron.framework 	0x000000010a8fdffd 0x10a646000 + 2850813
3   com.github.electron.framework 	0x000000010a896a66 0x10a646000 + 2427494
4   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
5   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
6   com.github.electron.framework 	0x000000010ab23978 0x10a646000 + 5101944
7   com.github.electron.framework 	0x000000010ab23ccf 0x10a646000 + 5102799
8   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
9   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
10  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
11  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
12  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 16:: Chrome_FileUserBlockingThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010ab239f8 0x10a646000 + 5102072
10  com.github.electron.framework 	0x000000010ab23cdf 0x10a646000 + 5102815
11  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
12  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
13  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 17:: Chrome_ProcessLauncherThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010ab23a78 0x10a646000 + 5102200
10  com.github.electron.framework 	0x000000010ab23cec 0x10a646000 + 5102828
11  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
12  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
13  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 18:: Chrome_CacheThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010ab23af8 0x10a646000 + 5102328
10  com.github.electron.framework 	0x000000010ab23cf9 0x10a646000 + 5102841
11  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
12  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
13  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 19:: Chrome_IOThread
0   libsystem_kernel.dylib        	0x00007fff9ec5dd96 kevent + 10
1   com.github.electron.framework 	0x000000010a8fee69 0x10a646000 + 2854505
2   com.github.electron.framework 	0x000000010a8fdffd 0x10a646000 + 2850813
3   com.github.electron.framework 	0x000000010a896a66 0x10a646000 + 2427494
4   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
5   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
6   com.github.electron.framework 	0x000000010ab23b78 0x10a646000 + 5102456
7   com.github.electron.framework 	0x000000010ab23d06 0x10a646000 + 5102854
8   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
9   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
10  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
11  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
12  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 20:: IndexedDB
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
10  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
11  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
12  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
13  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 21:: CompositorTileWorker1/44803
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed487fa _pthread_cond_wait + 712
2   com.github.electron.framework 	0x000000010a9f8948 0x10a646000 + 3877192
3   com.github.electron.framework 	0x000000010a8b905c 0x10a646000 + 2568284
4   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
5   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
6   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
7   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 22:: AudioThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010a8979cf 0x10a646000 + 2431439
6   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
7   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
8   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
9   com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
10  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
11  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
12  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
13  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 23:
0   libsystem_kernel.dylib        	0x00007fff9ec5ceb6 __select + 10
1   com.github.electron.framework 	0x000000010a75bd42 atom::NodeBindingsMac::PollEvents() + 210
2   com.github.electron.framework 	0x000000010a75b3df atom::NodeBindings::EmbedThreadRunner(void*) + 63
3   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
4   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
5   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 24:
0   libsystem_kernel.dylib        	0x00007fff9ec5d44e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff9ed4748e _pthread_wqthread + 1023
2   libsystem_pthread.dylib       	0x00007fff9ed4707d start_wqthread + 13

Thread 25:: BrowserBlockingWorker1/71687
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8b4a46 0x10a646000 + 2550342
4   com.github.electron.framework 	0x000000010a8b3946 0x10a646000 + 2545990
5   com.github.electron.framework 	0x000000010a8b905c 0x10a646000 + 2568284
6   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
7   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 26:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.apple.Foundation          	0x00007fff8adc1252 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010a897cae 0x10a646000 + 2432174
7   com.github.electron.framework 	0x000000010a89746c 0x10a646000 + 2430060
8   com.github.electron.framework 	0x000000010a89374e 0x10a646000 + 2414414
9   com.github.electron.framework 	0x000000010a8ac883 0x10a646000 + 2517123
10  com.github.electron.framework 	0x000000010a8ce619 0x10a646000 + 2655769
11  com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
12  libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
13  libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
14  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 27:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fff9ec5534a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff9ec54797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff893af434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff893ae8c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff893ae114 CFRunLoopRunSpecific + 420
5   com.apple.AppKit              	0x00007fff86ff4f02 _NSEventThread + 205
6   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 28:: BrowserBlockingWorker2/85775
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8b4a46 0x10a646000 + 2550342
4   com.github.electron.framework 	0x000000010a8b3946 0x10a646000 + 2545990
5   com.github.electron.framework 	0x000000010a8b905c 0x10a646000 + 2568284
6   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
7   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 29:: BrowserBlockingWorker3/86275
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8b4a46 0x10a646000 + 2550342
4   com.github.electron.framework 	0x000000010a8b3946 0x10a646000 + 2545990
5   com.github.electron.framework 	0x000000010a8b905c 0x10a646000 + 2568284
6   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
7   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 30:: CachePoolWorker1/87315
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed487fa _pthread_cond_wait + 712
2   com.github.electron.framework 	0x000000010a8b49b1 0x10a646000 + 2550193
3   com.github.electron.framework 	0x000000010a8b3946 0x10a646000 + 2545990
4   com.github.electron.framework 	0x000000010a8b905c 0x10a646000 + 2568284
5   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
6   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 31:: TaskSchedulerForegroundWorker1
0   libsystem_kernel.dylib        	0x00007fff9ec5cbf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff9ed48833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010a84b55b 0x10a646000 + 2119003
3   com.github.electron.framework 	0x000000010a8f7180 0x10a646000 + 2822528
4   com.github.electron.framework 	0x000000010a8f72b1 0x10a646000 + 2822833
5   com.github.electron.framework 	0x000000010a8aeb08 0x10a646000 + 2525960
6   com.github.electron.framework 	0x000000010a8af1cd 0x10a646000 + 2527693
7   com.github.electron.framework 	0x000000010a8a1757 0x10a646000 + 2471767
8   libsystem_pthread.dylib       	0x00007fff9ed4793b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fff9ed47887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fff9ed4708d thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000000  rbx: 0x00000001073c5681  rcx: 0x0000000000000000  rdx: 0x0000363033402201
  rdi: 0x0000000000000002  rsi: 0x00000001073c5694  rbp: 0x00007fff5961c5c0  rsp: 0x00007fff5961c5c0
   r8: 0x0000000000000000   r9: 0x00007ff1e88206f0  r10: 0x000000010a5fa110  r11: 0x000000010694ac70
  r12: 0x00000001073c5694  r13: 0x00007fff5961c790  r14: 0x000000010df9891c  r15: 0x00007ff1e8820660
  rip: 0x000000010a73cd14  rfl: 0x0000000000010246  cr2: 0x0000000106d08890
  
Logical CPU:     2
Error Code:      0x00000000
Trap Number:     6


Binary Images:
       0x1065de000 -        0x1065deff7 +com.github.electron (1.8.0 - 1.8.0) <CB63147A-C9DC-308B-8CA1-EE92A5042E8E> /Users/USER/Desktop/*/Electron.app/Contents/MacOS/Electron
       0x1065e1000 -        0x1065fbfff +com.github.Squirrel (1.0 - 1) <0A9F60FF-F2D2-364A-962A-65137E68760E> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x10661d000 -        0x106680ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x1066f2000 -        0x106706fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x106718000 -        0x1075f8ff7 +libnode.dylib (0) <AC1CA1C5-BC0A-3F32-8489-4745B819C8E7> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib
       0x10788c000 -        0x107af4fff +libffmpeg.dylib (0) <3F10DA70-D3AD-3B17-8753-3B07CE2F03CE> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x107cfe000 -        0x107d3cff7  com.apple.audio.midi.CoreMIDI (1.10 - 88) <5E2D1F53-B466-312E-AEA7-117B68C9A7F0> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
       0x107d64000 -        0x107d7dffb  libexpat.1.dylib (15) <F48F1B7B-BEB4-32EE-8C5D-0370096F3864> /usr/lib/libexpat.1.dylib
       0x10a5bb000 -        0x10a5f8dc7  dyld (433.5) <322C06B7-8878-311D-888C-C8FD2CA96FF3> /usr/lib/dyld
       0x10a646000 -        0x10e658f87 +com.github.electron.framework (0) <45CFF490-2804-3766-8B93-FFF7842F2AAD> /Users/USER/Desktop/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x112b9c000 -        0x112d42fff  GLEngine (14.0.16) <08F2E804-13D2-3E80-9322-1A23A84A55F3> /System/Library/Frameworks/OpenGL.framework/Resources/GLEngine.bundle/GLEngine
       0x112d81000 -        0x1132d0ff7  com.apple.driver.AppleIntelBDWGraphicsGLDriver (10.25.17 - 10.2.5) <8633C1AB-7008-3B8B-8D6D-8E1DE49DD265> /System/Library/Extensions/AppleIntelBDWGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsGLDriver
       0x1134eb000 -        0x113515fff  GLRendererFloat (14.0.16) <6B57F70A-EFAC-3DB2-B9BA-E55D05D44DB5> /System/Library/Frameworks/OpenGL.framework/Resources/GLRendererFloat.bundle/GLRendererFloat
       0x11351f000 -        0x11359eff7  com.apple.driver.AppleIntelBDWGraphicsMTLDriver (10.25.17 - 10.2.5) <20DB0471-534D-3570-9E5A-AB052CF54E68> /System/Library/Extensions/AppleIntelBDWGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsMTLDriver
    0x7fff83fd8000 -     0x7fff8431dff7  com.apple.RawCamera.bundle (7.04 - 914) <86A67D11-9791-3CE6-9FF5-3387C0AB925B> /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera
    0x7fff85b54000 -     0x7fff85d15fff  com.apple.avfoundation (2.0 - 1187.36) <2F390EAD-07BB-3788-9E73-13104C2E04CD> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff85d16000 -     0x7fff85db8ff7  com.apple.audio.AVFAudio (1.0 - ???) <7997D588-B542-3EBB-B822-D719C1114BB4> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff85e83000 -     0x7fff85e83fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <916E360F-323C-3AE1-AB3D-D1F3B284AEE9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff85e84000 -     0x7fff85e9bffb  libCGInterfaces.dylib (331.5) <17109679-A284-3C72-AA60-DBA815D3062B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff85e9c000 -     0x7fff863b5feb  com.apple.vImage (8.1 - ???) <B58A7937-BEE2-38FE-87F4-5D5F40D31DC9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff863b6000 -     0x7fff86527ff3  libBLAS.dylib (1185.50.4) <4087FFE0-627E-3623-96B4-F0A9A1991E09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff86528000 -     0x7fff8653cffb  libBNNS.dylib (15) <254698C7-7D36-3FFF-864E-ADEEEE543076> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff8653d000 -     0x7fff86933fef  libLAPACK.dylib (1185.50.4) <C35FFB2F-A0E6-3903-8A3C-113A74BCBCA2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff86934000 -     0x7fff8694afff  libLinearAlgebra.dylib (1185.50.4) <345CAACF-7263-36EF-B69B-793EA8B390AF> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff8694b000 -     0x7fff86951fff  libQuadrature.dylib (3) <EF56C8E6-DE22-3C69-B543-A8648F335FDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff86952000 -     0x7fff86966ff7  libSparseBLAS.dylib (1185.50.4) <67BA432E-FB59-3C78-A8BE-ED4274CBC359> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff86967000 -     0x7fff86aeefe7  libvDSP.dylib (600.60.1) <4155F45B-41CD-3782-AE8F-7AE740FD83C3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff86aef000 -     0x7fff86ba1fff  libvMisc.dylib (600.60.1) <E18365D7-DCC4-3304-A8D1-395E656D7B99> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff86ba2000 -     0x7fff86ba2fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <7C5733E7-0568-3E7D-AF61-160F19FED544> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff86e61000 -     0x7fff87c3aff3  com.apple.AppKit (6.9 - 1504.83.101) <AE51ACB3-D501-3F91-B369-3D3711F24D0A> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff87c4c000 -     0x7fff87c4cfff  com.apple.ApplicationServices (48 - 48) <DA687F9A-7B2D-342B-8796-16E45344F853> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff87c4d000 -     0x7fff87cbbff7  com.apple.ApplicationServices.ATS (377 - 422.2) <A31D17BE-F747-39FB-9A84-5F2F8891204C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff87d55000 -     0x7fff87e84ff7  libFontParser.dylib (194.12) <73C3946D-EF92-3AC1-89C3-0E75B2A85325> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff87e85000 -     0x7fff87ecffff  libFontRegistry.dylib (196.4) <EA96AE47-3369-3DEA-BB82-98348ADBD85B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff87f2c000 -     0x7fff87f5ffff  libTrueTypeScaler.dylib (194.12) <8944A23A-EE36-3657-9B4F-933231C8FDEC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff87fcc000 -     0x7fff88076ff7  com.apple.ColorSync (4.12.0 - 502.2) <ACA4001E-A0E3-33F6-9CD6-EEC2AA15E322> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff88077000 -     0x7fff880c8fff  com.apple.HIServices (1.22 - 593) <045870A9-1D92-3FEF-8722-671E99A35E71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff880c9000 -     0x7fff880d8ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <2CBE7F61-2056-3F96-99A1-0D527796AFA6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff880d9000 -     0x7fff88126fff  com.apple.print.framework.PrintCore (12 - 491) <5027FD58-F0EE-33E4-8577-934CA06CD2AF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff88127000 -     0x7fff88162fff  com.apple.QD (3.12 - 313) <B339C41D-8CDF-3342-8414-F9717DCCADD4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff88163000 -     0x7fff8816efff  com.apple.speech.synthesis.framework (6.6.2 - 6.6.2) <7853EFF4-62B9-394E-B7B8-41A645656820> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff8816f000 -     0x7fff8837bff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <01518CAB-7DAD-3F09-83F8-B9FE0ABE998F> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff8837c000 -     0x7fff8837cfff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <B92868F8-2F15-32C0-A5BE-4ABA546B8BE1> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff884e5000 -     0x7fff888bffff  com.apple.CFNetwork (811.5.4 - 811.5.4) <46B1227B-F38C-3F8E-B0B5-5D9861ABF36B> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff888d9000 -     0x7fff888d9fff  com.apple.Carbon (154 - 157) <69F403C7-F0CB-34E6-89B0-235CF4978C17> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff888da000 -     0x7fff888ddfff  com.apple.CommonPanels (1.2.6 - 98) <BF04BB22-D54C-309E-9F5C-897D969CAF70> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff888de000 -     0x7fff88be7fff  com.apple.HIToolbox (2.1.1 - 857.8) <5367366E-747E-32CF-8E76-93CD8E7424C7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff88be8000 -     0x7fff88bebff7  com.apple.help (1.3.5 - 49) <B1A930E3-5907-3677-BACD-858EF68B172D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff88bec000 -     0x7fff88bf1fff  com.apple.ImageCapture (9.0 - 9.0) <341252B4-E082-361A-B756-6A330259C741> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff88bf2000 -     0x7fff88c89ff3  com.apple.ink.framework (10.9 - 219) <1BD40B45-FD33-3177-A935-565EE5FC79D7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff88c8a000 -     0x7fff88ca4fff  com.apple.openscripting (1.7 - 172) <31CFBB35-24BD-3E12-9B6B-1FA842FB605B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff88ca5000 -     0x7fff88ca6ff3  com.apple.print.framework.Print (12 - 267) <E2F82F1F-DC27-3EF0-9F75-B354F701450A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff88ca7000 -     0x7fff88ca9ff7  com.apple.securityhi (9.0 - 55006) <DBD65629-535D-3669-8218-7F074D61638C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff88caa000 -     0x7fff88cb0ff7  com.apple.speech.recognition.framework (6.0.1 - 6.0.1) <082895DC-3AC7-3DEF-ADCA-5B018C19C9D3> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff88d91000 -     0x7fff88d91fff  com.apple.Cocoa (6.11 - 22) <85EDFBE1-75F0-369E-8CA8-C6A639B98FA6> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff88edb000 -     0x7fff88f68fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <78767F88-91D4-31CE-AAC6-1F9407F479BB> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff88f69000 -     0x7fff88f7cfff  com.apple.CoreBluetooth (1.0 - 1) <BCB78777-76F0-3CC1-8443-9E61AEF7EF63> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff88f7d000 -     0x7fff89278fff  com.apple.CoreData (120 - 754.2) <4C9CAB2C-60D4-3694-A0A0-5B04B14BD14E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff89279000 -     0x7fff89326ff7  com.apple.CoreDisplay (1.0 - 1) <53D1EAFE-23A4-398D-BF52-E4299E670DB6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff89327000 -     0x7fff897c0ff7  com.apple.CoreFoundation (6.9 - 1349.8) <09ED473E-5DE8-307F-B55C-16F6419236D5> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff897c1000 -     0x7fff89e43fff  com.apple.CoreGraphics (2.0 - 1070.22) <FAB476BB-B5CD-3936-8AFC-41229DBDF0E8> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff89e44000 -     0x7fff8a087ffb  com.apple.CoreImage (12.4.0 - 451.4.9) <BE4303C9-C9D9-361D-AC94-DBE40EB6700E> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff8a0ee000 -     0x7fff8a19ffff  com.apple.CoreMedia (1.0 - 1907.59.1.6) <570690D8-A956-3629-9E46-4F8BDDB8A82C> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff8a1a0000 -     0x7fff8a1ebff7  com.apple.CoreMediaIO (805.0 - 4932) <03F2B863-BF99-36DF-9A14-1DB534A289F3> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff8a1ec000 -     0x7fff8a1ecfff  com.apple.CoreServices (775.19 - 775.19) <7255917D-EFBB-3BE2-A8FD-DAD631BC0949> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff8a1ed000 -     0x7fff8a23efff  com.apple.AE (712.5 - 712.5) <61F2AE2C-E04E-3FDF-9E88-201325136C83> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff8a23f000 -     0x7fff8a51aff7  com.apple.CoreServices.CarbonCore (1159.6 - 1159.6) <08AC074C-965B-3EDF-8E45-0707C8DE9EAD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff8a51b000 -     0x7fff8a54efff  com.apple.DictionaryServices (1.2 - 274) <D23866E2-F7C8-3984-A9D4-96552CCDE573> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff8a54f000 -     0x7fff8a557ff3  com.apple.CoreServices.FSEvents (1230.50.1 - 1230.50.1) <2AD1B0E5-7214-37C4-8D11-A27C9CAC0F74> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff8a558000 -     0x7fff8a6c4ff7  com.apple.LaunchServices (775.19 - 775.19) <B75A0C49-E376-358C-81EE-6EFB0F605801> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff8a6c5000 -     0x7fff8a775ffb  com.apple.Metadata (10.7.0 - 1075.40) <B2FFCC10-5A9E-396B-B495-3D6C867669EE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff8a776000 -     0x7fff8a7d5fff  com.apple.CoreServices.OSServices (775.19 - 775.19) <4140569A-1848-3765-A52B-BB61C35CF88F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff8a7d6000 -     0x7fff8a846fff  com.apple.SearchKit (1.4.0 - 1.4.0) <7A6DDA2B-03F1-3137-BA9E-1CC211973E26> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff8a847000 -     0x7fff8a88cff7  com.apple.coreservices.SharedFileList (38 - 38) <DA096678-93AB-3291-BDE2-482F1D544589> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff8a915000 -     0x7fff8aa62ffb  com.apple.CoreText (352.0 - 544.15) <BF0EE575-BB7E-3BF9-9029-232B4ADC24E4> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff8aa63000 -     0x7fff8aa98ff3  com.apple.CoreVideo (1.8 - 235.3) <AC11D5FB-C77B-34F5-B942-F698E84C229F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff8aa99000 -     0x7fff8ab0affb  com.apple.framework.CoreWLAN (11.0 - 1200.31) <E47C0568-E37B-3052-9E77-F0F371DCDE7F> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff8ac08000 -     0x7fff8ac0dfff  com.apple.DiskArbitration (2.7 - 2.7) <70F56042-EF04-3BAF-9E04-90F423FB2BCC> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff8ad9f000 -     0x7fff8b145fff  com.apple.Foundation (6.9 - 1349.91) <A37CB4EC-0730-3DD6-9358-60491BF40EF2> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff8b171000 -     0x7fff8b1a2ff7  com.apple.GSS (4.0 - 2.0) <6FADED0B-0425-3567-A75A-040C5A4638EB> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff8b1a3000 -     0x7fff8b1bbff7  com.apple.GameController (1.0 - 1) <DAC8C83B-7EC8-3A88-A725-E13DD905BF4F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff8b262000 -     0x7fff8b305fff  com.apple.Bluetooth (5.0.5 - 5.0.5f1) <913B97A6-9E18-3F15-992D-D522AA22EDE9> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff8b306000 -     0x7fff8b39cff7  com.apple.framework.IOKit (2.0.2 - 1324.60.3) <7CE4C98B-107C-3AAA-B49A-F2ACFCBBF526> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff8b39d000 -     0x7fff8b3a3ffb  com.apple.IOSurface (159.9 - 159.9) <08F1A246-1367-32EC-B3CE-724379409729> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff8b3a4000 -     0x7fff8b3f5ff7  com.apple.ImageCaptureCore (7.0 - 7.0) <A640CA2F-8093-34AB-947C-26679ECB8A6D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff8b3f6000 -     0x7fff8b556fef  com.apple.ImageIO.framework (3.3.0 - 1599.12) <E54ADBF0-6001-3DEB-AEB0-3F857A781E06> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff8b557000 -     0x7fff8b55bfff  libGIF.dylib (1599.12) <A0836C44-9566-32A3-ACCF-82A5BAF2E521> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff8b55c000 -     0x7fff8b64cff7  libJP2.dylib (1599.12) <0DB4F152-B36D-365C-97B1-34F1C114982B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff8b64d000 -     0x7fff8b670ffb  libJPEG.dylib (1599.12) <2F66BA16-D569-35AD-A4BB-7A1909F1BF11> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff8b671000 -     0x7fff8b698ff7  libPng.dylib (1599.12) <A068239E-7DB3-33AD-BEA9-499D8DEF771B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff8b699000 -     0x7fff8b69bff3  libRadiance.dylib (1599.12) <D26D6FC9-1175-38AB-ACAA-0CA073FD3978> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff8b69c000 -     0x7fff8b6eaffb  libTIFF.dylib (1599.12) <5D161E6A-D279-37A0-9F5F-A71A4C13BB09> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff8b848000 -     0x7fff8c452fff  com.apple.JavaScriptCore (12603 - 12603.3.8) <9557271A-1838-38DD-93E3-D8A9ECDE3B6B> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff8c453000 -     0x7fff8c46cff7  com.apple.Kerberos (3.0 - 1) <B9D242EB-E325-3A21-9812-C77CBBFB0D51> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff8c6f6000 -     0x7fff8c6fcfff  com.apple.MediaAccessibility (1.0 - 97.1.1) <0BD82735-6644-37CE-B13D-8E7CC59A1752> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff8c712000 -     0x7fff8cc4bff7  com.apple.MediaToolbox (1.0 - 1907.59.1.6) <FA068C6F-0506-35C3-A637-C4AFF82411DB> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff8cc4c000 -     0x7fff8cca7fff  com.apple.Metal (87.18 - 87.18) <E3618B54-C728-34CA-9E8A-9BD33A295D31> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff8d590000 -     0x7fff8d598fff  com.apple.NetFS (6.0 - 4.0) <14A24D00-5673-330A-959D-87F72040DEFF> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff8d76f000 -     0x7fff8d777ff7  libcldcpuengine.dylib (2.8.5) <81563526-886E-37E4-BF85-4A6D75F93C65> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff8d778000 -     0x7fff8d7c6ff3  com.apple.opencl (2.8.6 - 2.8.6) <E78463D3-73B6-3002-BD71-9CC1D6722968> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff8d7c7000 -     0x7fff8d7e0ffb  com.apple.CFOpenDirectory (10.12 - 194) <A64E9A01-3F6E-36EA-9C10-88C564A68C9D> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff8d7e1000 -     0x7fff8d7ecff7  com.apple.OpenDirectory (10.12 - 194) <4298FFD0-B1A7-3064-AF5B-708B3FA38671> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff8d7ed000 -     0x7fff8d7effff  libCVMSPluginSupport.dylib (14.0.16) <9E12EB67-6630-39A0-AB93-77405F5EC2A7> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff8d7f0000 -     0x7fff8d7f3ff7  libCoreFSCache.dylib (156.3) <687C4CC3-6537-344B-8BE1-5234C8CB2864> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff8d7f4000 -     0x7fff8d7f8fff  libCoreVMClient.dylib (156.3) <E7AEFCBE-B6BF-3C7C-9A4E-E78CB04DB794> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff8d7f9000 -     0x7fff8d802ff7  libGFXShared.dylib (14.0.16) <D10C7A01-8A11-3A42-A9FA-C411AE453B27> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff8d803000 -     0x7fff8d80efff  libGL.dylib (14.0.16) <0801F3B9-A525-32BB-9BC0-478947CE21D9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff8d80f000 -     0x7fff8d84bff7  libGLImage.dylib (14.0.16) <FE39C57B-056C-3CBF-B653-A8F2005631C1> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff8d84c000 -     0x7fff8d9c2ff3  libGLProgrammability.dylib (14.0.16) <A95F26AD-D496-3581-A310-5131F61CFB4A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib
    0x7fff8d9c3000 -     0x7fff8da04ff7  libGLU.dylib (14.0.16) <B285EAD6-B3AA-3753-BB85-75864BD6E76C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff8e36c000 -     0x7fff8e37afff  com.apple.opengl (14.0.16 - 14.0.16) <167C9883-A79E-3B7F-AFED-8CD6683B291D> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff8e417000 -     0x7fff8e55efff  com.apple.QTKit (7.7.3 - 2978.7) <49F88771-52FE-3989-AAB7-10A7494C4419> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff8e55f000 -     0x7fff8e7c9ff7  com.apple.imageKit (3.0 - 1023) <9C547565-CBAA-3ACB-A3F6-1366A0DCDCB4> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff8e7ca000 -     0x7fff8e891fff  com.apple.PDFKit (1.0 - 1) <BE82F14C-B20C-3771-B16C-F0723F6552AD> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff8e892000 -     0x7fff8edb8ff7  com.apple.QuartzComposer (5.1 - 356) <C66293F6-EF05-3B36-8524-081CEB9FADD7> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff8edb9000 -     0x7fff8eddcffb  com.apple.quartzfilters (1.10.0 - 1.10.0) <365342ED-7A1A-3C75-AE60-90764E96034C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff8eddd000 -     0x7fff8eecafff  com.apple.QuickLookUIFramework (5.0 - 720.7) <3136C23E-399E-3296-928A-B18EC9FC423C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff8eecb000 -     0x7fff8eecbfff  com.apple.quartzframework (1.5 - 21) <09455972-8A33-3D61-B193-BA7E7CF984CA> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff8eecc000 -     0x7fff8f0ccfff  com.apple.QuartzCore (1.11 - 453.39.4) <A45AFBC4-87D4-3533-A0AC-1D6629C77984> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff8f0cd000 -     0x7fff8f122fff  com.apple.QuickLookFramework (5.0 - 720.7) <3BD7BA2F-924C-3EFF-B26E-3F930E62E6B4> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff8f123000 -     0x7fff8f138fff  com.apple.SafariServices.framework (12603 - 12603.3.8) <966BF0C8-B94B-3BDF-AFE1-0F99DAAE6D99> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff8f633000 -     0x7fff8f935ff7  com.apple.security (7.0 - 57740.60.18) <005E8C96-40B6-35E3-B58B-888A5F5957C2> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff8f936000 -     0x7fff8f9abfff  com.apple.securityfoundation (6.0 - 55132.50.7) <15C53957-A9DE-31AE-A192-949244F47CD7> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff8f9ac000 -     0x7fff8f9d5fff  com.apple.securityinterface (10.0 - 55079.50.4) <C9B0E11A-362B-3C0D-8B2E-B06510BCE20A> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff8f9d6000 -     0x7fff8f9d9ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <BE0F9708-0B55-3E78-A15E-C287B8ED13BA> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff8fd60000 -     0x7fff8fdcfff7  com.apple.SystemConfiguration (1.14 - 1.14) <3FFD3930-B307-3E31-9FA6-12221EB0F969> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff8fdd0000 -     0x7fff9017efff  com.apple.VideoToolbox (1.0 - 1907.59.1.6) <EB2577A4-DCDF-3FD1-B5FA-42A55653A74D> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff92626000 -     0x7fff92641ff3  com.apple.AppContainer (4.0 - 307.50.21) <C2E6BA3D-81FF-39C3-B4BF-DBB9A17DE078> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff92642000 -     0x7fff9264fff3  com.apple.AppSandbox (4.0 - 307.50.21) <BF9FA426-8C11-358B-9E1F-A3901E3F2B14> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff92650000 -     0x7fff92672ffb  com.apple.framework.Apple80211 (12.0 - 1200.47) <C3033EEE-771A-3664-BBDD-BE1F6D075FC7> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff92673000 -     0x7fff92682feb  com.apple.AppleFSCompression (88.50.3 - 1.0) <478E8BFF-8BA2-375E-BE02-BA27F115C15A> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff92770000 -     0x7fff927fb97f  com.apple.AppleJPEG (1.0 - 1) <B9E9570D-04A4-34E4-B756-D200043B25B8> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff92834000 -     0x7fff92837ff3  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <42A1731A-A576-307A-B07C-9F8F64696CB7> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff92838000 -     0x7fff9288afff  com.apple.AppleVAFramework (5.0.36 - 5.0.36) <7352078D-C230-397C-81A5-57A48CF218C0> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff92c2e000 -     0x7fff92cacff7  com.apple.backup.framework (1.8.5 - 1.8.5) <CC679891-E8F5-3166-8EB6-AEA06954A52D> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff93937000 -     0x7fff9395eff3  com.apple.ChunkingLibrary (173 - 173) <FC2165F9-FC93-39C0-8323-C2F43A5E00A3> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff94283000 -     0x7fff9428cffb  com.apple.CommonAuth (4.0 - 2.0) <216950CB-269F-3476-BA17-D6363AC49FBC> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff94411000 -     0x7fff947f0ff7  com.apple.CoreAUC (226.0.0 - 226.0.0) <FBF6C5BC-5937-3957-B6BA-E101DF9B0DF6> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff947f1000 -     0x7fff94821fff  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) <3F6857D1-AE7C-3593-B064-930F5BB7269E> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff949d5000 -     0x7fff949e5fff  com.apple.CoreEmoji (1.0 - 40.3.3) <E9A28301-2D79-3A97-A046-028258A6ABE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff94aaa000 -     0x7fff94ac0ff3  com.apple.CoreMediaAuthoring (2.2 - 956) <AEBFF55F-BF1E-3CA5-AA9C-1CE22218A665> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff94ac7000 -     0x7fff94b57ffb  com.apple.CorePDF (4.0 - 4) <7F50E4A6-940C-33F5-BE4E-7E01AFE98A8F> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff94d20000 -     0x7fff94d50ff3  com.apple.CoreServicesInternal (276.2 - 276.2) <05EB7D45-DD4C-3A0F-AC63-A0C2A68E6481> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff94fe1000 -     0x7fff95070ff7  com.apple.CoreSymbolication (62046) <7839CD8E-011D-3567-88DE-3D472C661136> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff95071000 -     0x7fff951b0fe7  com.apple.coreui (2.1 - 431.3) <2E8FEC10-FC5B-3782-92DA-A85C24B7BF7C> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff951b1000 -     0x7fff95281ff3  com.apple.CoreUtils (5.1 - 510.31) <E68BB8ED-8874-36EC-A7C5-1017C0E727CB> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff952d1000 -     0x7fff95336ff3  com.apple.framework.CoreWiFi (12.0 - 1200.31) <DF0972EF-F817-3FD3-8C00-2D57B8738D8C> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff95337000 -     0x7fff95345ff7  com.apple.CrashReporterSupport (10.12 - 827) <802A9B81-E349-348B-90AB-10E40B654250> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff953b7000 -     0x7fff953c1ffb  com.apple.framework.DFRFoundation (1.0 - 104.25) <7CFF896C-EF22-3941-BB3D-F3615CE4C908> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff953c2000 -     0x7fff953c6ff3  com.apple.DSExternalDisplay (3.1 - 380) <4B5E3FF0-E8C3-38CC-BF72-418C928956AB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff953fc000 -     0x7fff95471ffb  com.apple.datadetectorscore (7.0 - 539.1) <74595F6C-8283-3C73-9F56-C6FA957F8B94> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff954ad000 -     0x7fff954ecfff  com.apple.DebugSymbols (137 - 137) <58A70B66-2628-3CFE-B103-2200D95FC5F7> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff954ed000 -     0x7fff955fefff  com.apple.desktopservices (1.11.5 - 1.11.5) <46A9D4F3-1EF8-373C-98A4-AD48D285E484> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff95741000 -     0x7fff9574cfff  com.apple.DisplayServicesFW (3.1 - 380) <0BDF6C17-5E5F-33F8-8E99-C7350C6F9667> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff958e6000 -     0x7fff95d17ff7  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <9391D5A3-738C-3136-9D07-518CB43DBADA> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff9706e000 -     0x7fff9706efff  libmetal_timestamp.dylib (600.0.49.9) <E5EED927-1671-3390-BCBB-D76201D63C73> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib
    0x7fff9707b000 -     0x7fff97086ff3  libGPUSupportMercury.dylib (14.0.16) <7EE3DA75-2F9D-3C6D-AECD-F73EA47BE81B> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib
    0x7fff9733f000 -     0x7fff9735bfff  com.apple.GenerationalStorage (2.0 - 267.1) <3DE1C580-D089-362D-8582-8DE68A3C5F13> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff97a6c000 -     0x7fff97ae2ff3  com.apple.Heimdal (4.0 - 2.0) <8F9C9041-66D5-36C9-8A4C-1658035C311D> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff980fd000 -     0x7fff98104ffb  com.apple.IOAccelerator (311.14 - 311.14) <278124AF-02DC-3785-9FA9-14EDB8E5FD56> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff98106000 -     0x7fff9811aff7  com.apple.IOPresentment (1.0 - 29.10) <30DF04EE-10E2-353F-845F-A97B87DF3207> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff9811b000 -     0x7fff9813dfff  com.apple.IconServices (74.4 - 74.4) <218DDD05-35F4-3833-B98D-471ED0EBC031> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff981d9000 -     0x7fff981e9ff3  com.apple.IntlPreferences (2.0 - 216) <77C9C2E7-EF9F-34BB-A5E3-B8BEA4226B5F> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences
    0x7fff98224000 -     0x7fff983dbfff  com.apple.LanguageModeling (1.0 - 123.2.5) <A8CA965F-0399-310D-91C3-B93DDDE9A442> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff98a4b000 -     0x7fff98a4efff  com.apple.Mangrove (1.0 - 1) <98814966-FD65-302B-B47E-00928DC34E5C> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff98cfc000 -     0x7fff98d75ff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <C323FC94-FFA5-3EE6-B2AC-7E61EA92F304> /System/Library/PrivateFrameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff98ed1000 -     0x7fff98edffff  com.apple.MobileKeyBag (2.0 - 1.0) <D0983DB7-EF9D-3E19-A084-21319ECE5846> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff98ef0000 -     0x7fff98f18ff7  com.apple.MultitouchSupport.framework (368.16 - 368.16) <9E602B4A-22CD-3CF3-B284-78D5123C9AE8> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff98fca000 -     0x7fff98fd5fff  com.apple.NetAuth (6.2 - 6.2) <97F487D6-8089-31A8-B68C-6C1EAC6ED1B5> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff998ad000 -     0x7fff998eeff3  com.apple.PerformanceAnalysis (1.148.3 - 148.3) <4E468BC7-F863-3674-909D-417231EB8C28> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff99fd6000 -     0x7fff99ff0fff  com.apple.ProtocolBuffer (1 - 249.1) <A1F1B0F3-078F-378F-A9A9-0DEEA70E816A> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff99ff1000 -     0x7fff9a000ff7  com.apple.QuickLookThumbnailing (1.0 - 1) <173EE873-1700-3FCA-9782-C060FBB5BCAD> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff9a009000 -     0x7fff9a02cff3  com.apple.RemoteViewServices (2.0 - 124) <6B967FDA-6591-302C-BA0A-76C4856E584E> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff9acf6000 -     0x7fff9acf9fff  com.apple.SecCodeWrapper (4.0 - 307.50.21) <F8E957B2-D3F0-3B73-B38C-AE8868F00939> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fff9ad88000 -     0x7fff9ae15fff  com.apple.Sharing (696.2.67 - 696.2.67) <F681EE28-153F-3216-97A6-6F5E4148AB2E> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff9ae36000 -     0x7fff9b09cfeb  com.apple.SkyLight (1.600.0 - 170.3) <38AC05EF-3A9E-3E3E-9849-04E0223DF7B9> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff9b27b000 -     0x7fff9b287ff7  com.apple.SpeechRecognitionCore (3.3.2 - 3.3.2) <684BD1EA-8268-331C-A5A9-080EB375C658> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff9b973000 -     0x7fff9b9e7fdf  com.apple.Symbolication (62048.1) <1A30ED19-7532-3F46-9DD3-9879A973D0CF> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff9be26000 -     0x7fff9be2cff7  com.apple.TCC (1.0 - 1) <911B534B-4AC7-34E4-935E-E42ECD008CBC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff9beb8000 -     0x7fff9bf7eff7  com.apple.TextureIO (2.8 - 2.8) <3D61E533-4156-3B21-B7ED-CB823E680DFC> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff9bff2000 -     0x7fff9bff3fff  com.apple.TrustEvaluationAgent (2.0 - 28.50.1) <EBE65DD5-1732-3747-8C6C-7BECEBF089A4> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff9bff4000 -     0x7fff9c184ff3  com.apple.UIFoundation (1.0 - 490.7) <2A3063FE-1790-3510-8A0E-AEC581D42B7E> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff9cc53000 -     0x7fff9cd13fff  com.apple.ViewBridge (283 - 283) <25A635B3-C87C-3D3A-ADF3-539713FA1048> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff9d15e000 -     0x7fff9d164fff  com.apple.XPCService (2.0 - 1) <4B28B225-2105-33F4-9ED0-F04288FF4FB1> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
    0x7fff9d235000 -     0x7fff9d237ffb  com.apple.loginsupport (1.0 - 1) <F3140B97-12C3-35A7-9D3D-43DA2D13C113> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff9d28c000 -     0x7fff9d2a7ff7  libCRFSuite.dylib (34) <F78B7F5F-0B4F-35C6-AA2F-84EE9CB22137> /usr/lib/libCRFSuite.dylib
    0x7fff9d2a8000 -     0x7fff9d2b3fff  libChineseTokenizer.dylib (21) <0886E908-A825-36AF-B94B-2361FD8BC2A1> /usr/lib/libChineseTokenizer.dylib
    0x7fff9d345000 -     0x7fff9d346ff3  libDiagnosticMessagesClient.dylib (102) <84A04D24-0E60-3810-A8C0-90A65E2DF61A> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff9d347000 -     0x7fff9d55afff  libFosl_dynamic.dylib (16.39) <E22A4243-D148-3C74-BA15-2D906A3D1F9E> /usr/lib/libFosl_dynamic.dylib
    0x7fff9d576000 -     0x7fff9d57dfff  libMatch.1.dylib (27) <70D4BD2A-9383-37F2-B0D6-9B592D236601> /usr/lib/libMatch.1.dylib
    0x7fff9d57e000 -     0x7fff9d57efff  libOpenScriptingUtil.dylib (172) <90743888-C1E8-34E3-924E-1A754B2B63B9> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff9d57f000 -     0x7fff9d583ffb  libScreenReader.dylib (477.40.6) <CBE6420C-EF60-3ACD-A0B6-7CBE936BA3B8> /usr/lib/libScreenReader.dylib
    0x7fff9d584000 -     0x7fff9d585ffb  libSystem.B.dylib (1238.60.2) <F18AC1E7-C6F1-34B1-8069-BE571B3231D4> /usr/lib/libSystem.B.dylib
    0x7fff9d5f1000 -     0x7fff9d61cff3  libarchive.2.dylib (41.70.1) <A3FA7D6E-3D68-3524-8B48-EB2ECA44B13B> /usr/lib/libarchive.2.dylib
    0x7fff9d61d000 -     0x7fff9d699fc7  libate.dylib (1.12.13) <D0767875-D02E-3377-84D8-5F174C27BEA9> /usr/lib/libate.dylib
    0x7fff9d69d000 -     0x7fff9d69dff3  libauto.dylib (187) <34388D0B-C539-3C1B-9408-2BC152162E43> /usr/lib/libauto.dylib
    0x7fff9d69e000 -     0x7fff9d6aeff3  libbsm.0.dylib (34) <20084796-B04D-3B35-A003-EA11459557A9> /usr/lib/libbsm.0.dylib
    0x7fff9d6af000 -     0x7fff9d6bdff7  libbz2.1.0.dylib (38) <ADFA329A-DCE7-356D-8F09-A3168DFC6610> /usr/lib/libbz2.1.0.dylib
    0x7fff9d6be000 -     0x7fff9d714ff7  libc++.1.dylib (307.5) <0B43BB5D-E6EB-3464-8DE9-B41AC8ED9D1C> /usr/lib/libc++.1.dylib
    0x7fff9d715000 -     0x7fff9d73eff7  libc++abi.dylib (307.4) <BC271AD3-831B-362A-9DA7-E8C51F285FE4> /usr/lib/libc++abi.dylib
    0x7fff9d73f000 -     0x7fff9d74fffb  libcmph.dylib (6) <2B5D405E-2D0B-3320-ABD6-622934C86ABE> /usr/lib/libcmph.dylib
    0x7fff9d750000 -     0x7fff9d766fcf  libcompression.dylib (39) <F2726F95-F54E-3B21-BCB5-F7151DEFDC2F> /usr/lib/libcompression.dylib
    0x7fff9d767000 -     0x7fff9d767ff7  libcoretls.dylib (121.50.4) <64B1001E-10F6-3542-A3B2-C4B49F51817F> /usr/lib/libcoretls.dylib
    0x7fff9d768000 -     0x7fff9d769ff3  libcoretls_cfhelpers.dylib (121.50.4) <1A10303E-5EB0-3C7C-9165-021FCDFD934D> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff9d823000 -     0x7fff9d908ff7  libcrypto.0.9.8.dylib (64.50.6) <D34E16A7-990A-37A9-933A-DFAA46554EAA> /usr/lib/libcrypto.0.9.8.dylib
    0x7fff9daa6000 -     0x7fff9daf9ff7  libcups.2.dylib (450) <9950BFCB-7882-33C9-9ECF-CE66773C5657> /usr/lib/libcups.2.dylib
    0x7fff9db4d000 -     0x7fff9db54ff3  libdscsym.dylib (148.3) <EF99B991-18D9-3A73-BE88-4DC55F036DEF> /usr/lib/libdscsym.dylib
    0x7fff9db76000 -     0x7fff9db76fff  libenergytrace.dylib (15) <A1B040A2-7977-3097-9ADF-34FF181EB970> /usr/lib/libenergytrace.dylib
    0x7fff9db86000 -     0x7fff9db8bff7  libheimdal-asn1.dylib (498.50.8) <A40E3196-235E-34CE-AD9A-8D1AFC5DE004> /usr/lib/libheimdal-asn1.dylib
    0x7fff9db8c000 -     0x7fff9dc7eff7  libiconv.2.dylib (50) <42125B35-81D7-3FC4-9475-A26DBE10884D> /usr/lib/libiconv.2.dylib
    0x7fff9dc7f000 -     0x7fff9dea4ffb  libicucore.A.dylib (57166.0.1) <CCD2ED24-3071-383B-925D-8D763BB12A6F> /usr/lib/libicucore.A.dylib
    0x7fff9deaa000 -     0x7fff9deabfff  liblangid.dylib (126) <2085E7A7-9A34-3735-87F4-F174EF8EABF0> /usr/lib/liblangid.dylib
    0x7fff9deac000 -     0x7fff9dec5ffb  liblzma.5.dylib (10) <44BD0279-99DD-36B5-8A6E-C11432E2098D> /usr/lib/liblzma.5.dylib
    0x7fff9dec6000 -     0x7fff9dedcff7  libmarisa.dylib (5) <9030D214-5D0F-30CB-AC03-902C63909362> /usr/lib/libmarisa.dylib
    0x7fff9dedd000 -     0x7fff9e185ff7  libmecabra.dylib (744.8) <D429FCC9-42A4-38B3-8784-44024BC859EF> /usr/lib/libmecabra.dylib
    0x7fff9e1b8000 -     0x7fff9e232ff3  libnetwork.dylib (856.60.1) <191E99F5-4723-3180-8013-02AF2F9AE4B8> /usr/lib/libnetwork.dylib
    0x7fff9e233000 -     0x7fff9e605047  libobjc.A.dylib (709.1) <70614861-0340-32E2-85ED-FE65759CDFFA> /usr/lib/libobjc.A.dylib
    0x7fff9e608000 -     0x7fff9e60cfff  libpam.2.dylib (21.30.1) <71EB0D88-DE84-3C8D-A2C5-58AA282BC5BC> /usr/lib/libpam.2.dylib
    0x7fff9e60d000 -     0x7fff9e63efff  libpcap.A.dylib (67.60.1) <F6BC6ED6-AEE4-3520-B248-0C342636E2B0> /usr/lib/libpcap.A.dylib
    0x7fff9e65b000 -     0x7fff9e677ffb  libresolv.9.dylib (64) <A244AE4C-00B0-396C-98FF-97FE4DB3DA30> /usr/lib/libresolv.9.dylib
    0x7fff9e678000 -     0x7fff9e6b1fff  libsandbox.1.dylib (592.70.1) <9C428C49-9D9A-3F9F-9573-BF5202D1F933> /usr/lib/libsandbox.1.dylib
    0x7fff9e6c5000 -     0x7fff9e6c6ff3  libspindump.dylib (231.3) <C7CEEB64-06F4-3ACA-AAC1-30ECA909501A> /usr/lib/libspindump.dylib
    0x7fff9e6c7000 -     0x7fff9e815ff7  libsqlite3.dylib (254.8) <1ECF7DF7-7A07-3B4B-A63B-F4EFF6BC7ACF> /usr/lib/libsqlite3.dylib
    0x7fff9e90a000 -     0x7fff9e917fff  libxar.1.dylib (357) <69547C64-E811-326F-BBED-490C6361BDCB> /usr/lib/libxar.1.dylib
    0x7fff9e918000 -     0x7fff9ea07fff  libxml2.2.dylib (30.17) <D4C3E467-37C6-34DE-8A1B-E7BFC29985E9> /usr/lib/libxml2.2.dylib
    0x7fff9ea08000 -     0x7fff9ea31fff  libxslt.1.dylib (15.9) <00735AD5-B62D-3E83-86AC-5533E4E2B102> /usr/lib/libxslt.1.dylib
    0x7fff9ea32000 -     0x7fff9ea43ff3  libz.1.dylib (67) <46E3FFA2-4328-327A-8D34-A03E20BFFB8E> /usr/lib/libz.1.dylib
    0x7fff9ea52000 -     0x7fff9ea56ff7  libcache.dylib (79) <093A4DAB-8385-3D47-A350-E20CB7CCF7BF> /usr/lib/system/libcache.dylib
    0x7fff9ea57000 -     0x7fff9ea61fff  libcommonCrypto.dylib (60092.50.5) <8A64D1B0-C70E-385C-92F0-E669079FDA90> /usr/lib/system/libcommonCrypto.dylib
    0x7fff9ea62000 -     0x7fff9ea69fff  libcompiler_rt.dylib (62) <55D47421-772A-32AB-B529-1A46C2F43B4D> /usr/lib/system/libcompiler_rt.dylib
    0x7fff9ea6a000 -     0x7fff9ea72fff  libcopyfile.dylib (138) <819BEA3C-DF11-3E3D-A1A1-5A51C5BF1961> /usr/lib/system/libcopyfile.dylib
    0x7fff9ea73000 -     0x7fff9eaf6fdf  libcorecrypto.dylib (442.50.19) <65D7165E-2E71-335D-A2D6-33F78E2DF0C1> /usr/lib/system/libcorecrypto.dylib
    0x7fff9eaf7000 -     0x7fff9eb28fff  libdispatch.dylib (703.50.37) <6582BAD6-ED27-3B30-B620-90B1C5A4AE3C> /usr/lib/system/libdispatch.dylib
    0x7fff9eb29000 -     0x7fff9eb2effb  libdyld.dylib (433.5) <9B2AC56D-107C-3541-A127-9094A751F2C9> /usr/lib/system/libdyld.dylib
    0x7fff9eb2f000 -     0x7fff9eb2fffb  libkeymgr.dylib (28) <7AA011A9-DC21-3488-BF73-3B5B14D1FDD6> /usr/lib/system/libkeymgr.dylib
    0x7fff9eb30000 -     0x7fff9eb3cfff  libkxld.dylib (3789.70.16) <BD02EF3F-6E09-3A64-AB21-553D5B1D2859> /usr/lib/system/libkxld.dylib
    0x7fff9eb3d000 -     0x7fff9eb3dfff  liblaunch.dylib (972.70.1) <B856ABD2-896E-3DE0-B2C8-146A6AF8E2A7> /usr/lib/system/liblaunch.dylib
    0x7fff9eb3e000 -     0x7fff9eb43ff3  libmacho.dylib (898) <17D5D855-F6C3-3B04-B680-E9BF02EF8AED> /usr/lib/system/libmacho.dylib
    0x7fff9eb44000 -     0x7fff9eb46ff3  libquarantine.dylib (85.50.1) <12448CC2-378E-35F3-BE33-9DC395A5B970> /usr/lib/system/libquarantine.dylib
    0x7fff9eb47000 -     0x7fff9eb48ffb  libremovefile.dylib (45) <38D4CB9C-10CD-30D3-8B7B-A515EC75FE85> /usr/lib/system/libremovefile.dylib
    0x7fff9eb49000 -     0x7fff9eb61ff7  libsystem_asl.dylib (349.50.5) <096E4228-3B7C-30A6-8B13-EC909A64499A> /usr/lib/system/libsystem_asl.dylib
    0x7fff9eb62000 -     0x7fff9eb62ff7  libsystem_blocks.dylib (67) <10DC5404-73AB-35B3-A277-A8AFECB476EB> /usr/lib/system/libsystem_blocks.dylib
    0x7fff9eb63000 -     0x7fff9ebf0fef  libsystem_c.dylib (1158.50.2) <E5AE5244-7D0C-36AC-8BB6-C7AE7EA52A4B> /usr/lib/system/libsystem_c.dylib
    0x7fff9ebf1000 -     0x7fff9ebf4ffb  libsystem_configuration.dylib (888.60.2) <BECC01A2-CA8D-31E6-BCDF-D452965FA976> /usr/lib/system/libsystem_configuration.dylib
    0x7fff9ebf5000 -     0x7fff9ebf8fff  libsystem_coreservices.dylib (41.4) <7D26DE79-B424-3450-85E1-F7FAB32714AB> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff9ebf9000 -     0x7fff9ec11fff  libsystem_coretls.dylib (121.50.4) <EC6FCF07-DCFB-3A03-9CC9-6DD3709974C6> /usr/lib/system/libsystem_coretls.dylib
    0x7fff9ec12000 -     0x7fff9ec18fff  libsystem_dnssd.dylib (765.50.9) <CC960215-0B1B-3822-A13A-3DDE96FA796F> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff9ec19000 -     0x7fff9ec42ff7  libsystem_info.dylib (503.50.4) <611DB84C-BF70-3F92-8702-B9F28A900920> /usr/lib/system/libsystem_info.dylib
    0x7fff9ec43000 -     0x7fff9ec65ff7  libsystem_kernel.dylib (3789.70.16) <34B1F16C-BC9C-3C5F-9045-0CAE91CB5914> /usr/lib/system/libsystem_kernel.dylib
    0x7fff9ec66000 -     0x7fff9ecadfe7  libsystem_m.dylib (3121.6) <86D499B5-BBDC-3D3B-8A4E-97AE8E6672A4> /usr/lib/system/libsystem_m.dylib
    0x7fff9ecae000 -     0x7fff9ecccff7  libsystem_malloc.dylib (116.50.8) <A3D15F17-99A6-3367-8C7E-4280E8619C95> /usr/lib/system/libsystem_malloc.dylib
    0x7fff9eccd000 -     0x7fff9ed26ffb  libsystem_network.dylib (856.60.1) <369D0221-56CA-3C3E-9EDE-94B41CAE77B7> /usr/lib/system/libsystem_network.dylib
    0x7fff9ed27000 -     0x7fff9ed30ff3  libsystem_networkextension.dylib (563.60.2) <B021F2B3-8A75-3633-ABB0-FC012B8E9B0C> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff9ed31000 -     0x7fff9ed3aff3  libsystem_notify.dylib (165.20.1) <B8160190-A069-3B3A-BDF6-2AA408221FAE> /usr/lib/system/libsystem_notify.dylib
    0x7fff9ed3b000 -     0x7fff9ed43fe7  libsystem_platform.dylib (126.50.8) <897462FD-B318-321B-A554-E61982630F7E> /usr/lib/system/libsystem_platform.dylib
    0x7fff9ed44000 -     0x7fff9ed4eff7  libsystem_pthread.dylib (218.60.3) <B8FB5E20-3295-39E2-B5EB-B464D1D4B104> /usr/lib/system/libsystem_pthread.dylib
    0x7fff9ed4f000 -     0x7fff9ed52ff7  libsystem_sandbox.dylib (592.70.1) <4B92EC49-ACD0-36AE-B07A-A2B8152EAF9D> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff9ed53000 -     0x7fff9ed54ff3  libsystem_secinit.dylib (24.50.4) <F78B847B-3565-3E4B-98A6-F7AD40392E2D> /usr/lib/system/libsystem_secinit.dylib
    0x7fff9ed55000 -     0x7fff9ed5cffb  libsystem_symptoms.dylib (532.50.47) <3390E07C-C1CE-348F-ADBD-2C5440B45EAA> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff9ed5d000 -     0x7fff9ed70ff7  libsystem_trace.dylib (518.70.1) <AC63A7FE-50D9-3A30-96E6-F6B7FF16E465> /usr/lib/system/libsystem_trace.dylib
    0x7fff9ed71000 -     0x7fff9ed76ffb  libunwind.dylib (35.3) <3D50D8A8-C460-334D-A519-2DA841102C6B> /usr/lib/system/libunwind.dylib
    0x7fff9ed77000 -     0x7fff9eda0ff7  libxpc.dylib (972.70.1) <BF896DF0-D8E9-31A8-A4B3-01120BFEEE52> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 300201
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=382.9M resident=0K(0%) swapped_out_or_unallocated=382.9M(100%)
Writable regions: Total=331.3M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=331.3M(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Accelerate framework               128K        2 
Activity Tracing                   256K        2 
CG backing stores                  880K        3 
CG image                            52K        6 
CoreAnimation                       64K        7 
CoreUI image data                 1532K       13 
CoreUI image file                  184K        5 
Dispatch continuations            8192K        2 
Foundation                           4K        2 
IOKit                             7940K        2 
Image IO                            76K        2 
Kernel Alloc Once                    8K        2 
MALLOC                            66.4M       24 
MALLOC guard page                   48K       10 
Memory Tag 242                      12K        2 
Memory Tag 251                      24K        2 
Memory Tag 255                   525.0M       54 
STACK GUARD                       56.1M       33 
Stack                            196.8M       34 
VM_ALLOCATE                       29.2M       20 
__DATA                            32.3M      265 
__GLSLBUILTINS                    2588K        2 
__IMAGE                            528K        2 
__LINKEDIT                       121.0M       16 
__TEXT                           261.9M      263 
__UNICODE                          556K        2 
mapped file                       69.1M       23 
shared memory                     16.3M       11 
===========                     =======  ======= 
TOTAL                              1.4G      783 

Model: MacBookPro12,1, BootROM MBP121.0167.B33, 2 processors, Intel Core i7, 3.1 GHz, 16 GB, SMC 2.28f7
Graphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In
Memory Module: BANK 0/DIMM0, 8 GB, DDR3, 1867 MHz, 0x80CE, 0x4B3445424533303445422D45474346202020
Memory Module: BANK 1/DIMM0, 8 GB, DDR3, 1867 MHz, 0x80CE, 0x4B3445424533303445422D45474346202020
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.21.171.130.1a1)
Bluetooth: Version 5.0.5f1, 3 services, 17 devices, 1 incoming serial ports
Network Service: Wi-Fi, AirPort, en0
Serial ATA Device: APPLE SSD SM0512G, 500.28 GB
USB Device: USB 3.0 Bus
USB Device: Bluetooth USB Host Controller
USB Device: Yubikey 4 OTP+U2F
Thunderbolt Bus: MacBook Pro, Apple Inc., 27.1
```

</details>

Based on message I assumed something is wrong with autoupdate.
When I try to comment all autoupdate related code app is working fine

Commented code 

```
remote = require(""electron"").remote;
var autoUpdater = remote.autoUpdater;

autoUpdater.on('update-availabe', () => {
    console.log('update available')
});
autoUpdater.on('checking-for-update', () => {
    console.log('checking-for-update')
});

autoUpdater.on('update-not-available', () => {
    console.log('update-not-available')
});

autoUpdater.on('update-downloaded', (e) => {
    console.log(e)
alert(""Update is available please install ! Tool will update & restart once you click OK or CANCEL :P  "");
autoUpdater.quitAndInstall();
});


autoUpdater.setFeedURL('https://s3.ap-north-1.amazonaws.com/myupdatelocation/');
autoUpdater.checkForUpdates();
window.autoUpdater = autoUpdater;
```

Main.js

```

// Handle install,uninstall,auto update features.
var handleSquirrelEvent = function() {
    if (process.platform != 'win32') {
        return false;
    }

    function executeSquirrelCommand(args, done) {
        var updateDotExe = path.resolve(path.dirname(process.execPath), '..', 'update.exe');
        var child = cp.spawn(updateDotExe, args, { detached: true });
        child.on('close', function(code) {
            done();
        });
    }

    function install(done) {
        var target = path.basename(process.execPath);
        executeSquirrelCommand([""--createShortcut"", target], done);
    }

    function uninstall(done) {
        var target = path.basename(process.execPath);
        executeSquirrelCommand([""--removeShortcut"", target], done);
    }

    var squirrelEvent = process.argv[1];
    switch (squirrelEvent) {
        case '--squirrel-install':
            install(app.quit);
            return true;

        case '--squirrel-updated':
            install(app.quit);
            return true;

        case '--squirrel-obsolete':
            app.quit();
            return true;

        case '--squirrel-uninstall':
            uninstall(app.quit);
            return true;
    }
    return false;
};

if (handleSquirrelEvent()) {
    return;
}


```

Thanks
Jk",codebytere;MarshallOfSound,platform/macOS;crash :boom:;component/auto-updater;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;version/1.8.x,2017-09-03T10:12:58Z,2017-11-16T21:57:08Z,myfrndjk,MarshallOfSound;jkleinsc;myfrndjk;kwonoj;dengyaolong;bpasero,MarshallOfSound;sofianguy,,sofianguy;MarshallOfSound,,ckerr,
electron/electron,10442,"[macOS] App crashed when call `SetEscapeTouchBarItem` * Electron version: 1.6.8 ~ 1.7.6
* Operating system: macOS 10.12.1

### Expected behavior

Shouldn't crash app when called `SetEscapeTouchBarItem` native method.

### Actual behavior

https://github.com/jhen0409/react-native-debugger/issues/81#issuecomment-302939005 provided the error messages, and seems another one have same problem:

```
Crashing on exception: -[NSTouchBar setEscapeKeyReplacementItemIdentifier:]: unrecognized selector sent to instance 0x600000288570

Application Specific Backtrace 1:
0   CoreFoundation                      0x00007fff7f35948b __exceptionPreprocess + 171
1   libobjc.A.dylib                     0x00007fff93c4ecad objc_exception_throw + 48
2   CoreFoundation                      0x00007fff7f3dac94 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132
3   CoreFoundation                      0x00007fff7f2cbb55 ___forwarding___ + 1061
4   CoreFoundation                      0x00007fff7f2cb6a8 _CF_forwarding_prep_0 + 120
5   Electron Framework                  0x000000010b33162c _ZN17certificate_trust20ShowCertificateTrustEPN4atom12NativeWindowERK13scoped_refptrIN3net15X509CertificateEERKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERKN4base8CallbackIFvvELNSI_8internal8CopyModeE1ELNSL_10RepeatModeE1EEE + 8028
6   Electron Framework                  0x000000010b30e721 _ZN4atom15NativeWindowMac12SetStyleMaskEbm + 1601
7   Electron Framework                  0x000000010b3132b8 _ZN4atom15NativeWindowMac21SetEscapeTouchBarItemERKN4mate20PersistentDictionaryE + 40
8   Electron Framework                  0x000000010b2e8634 _ZN4atom3api6Window21SetEscapeTouchBarItemERKN4mate20PersistentDictionaryE + 20
9   Electron Framework                  0x000000010b275a3e _ZN4base8internal7InvokerINS0_9BindStateIMNS_11CommandLineEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EEEEEFvSC_EE3RunEPNS0_13BindStateBaseESC_ + 206
10  Electron Framework                  0x000000010b2759ff _ZN4base8internal7InvokerINS0_9BindStateIMNS_11CommandLineEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EEEEEFvSC_EE3RunEPNS0_13BindStateBaseESC_ + 143
11  Electron Framework                  0x000000010b27e12f _ZN4base8internal7InvokerINS0_9BindStateIMN4atom3api3AppEFvRKNS_8FilePathEEJEEEFvPS5_S8_EE3RunEPNS0_13BindStateBaseEOSC_S8_ + 79
12  Electron Framework                  0x000000010b2f0cb0 _ZN4base8internal7InvokerINS0_9BindStateIMN4atom3api6WindowEFvRKN4mate20PersistentDictionaryEEJEEEFvPS5_S9_EE3RunEPNS0_13BindStateBaseEOSD_S9_ + 32
13  Electron Framework                  0x000000010b272961 _ZN4atom3api3App11GetFileIconERKN4base8FilePathEPN4mate9ArgumentsE + 977
14  Electron Framework                  0x000000010b2df23c _ZN4mate8internal10DispatcherIFvPN4atom3api11WebContentsERKNS2_13SetSizeParamsEEE18DispatchToCallbackERKN2v820FunctionCallbackInfoINSB_5ValueEEE + 460
15  Electron Framework                  0x000000010b2f09dc _ZN4mate8internal10DispatcherIFvPN4atom3api6WindowERKNS_20PersistentDictionaryEEE18DispatchToCallbackERKN2v820FunctionCallbackInfoINSB_5ValueEEE + 124
16  libnode.dylib                       0x000000010f87c025 _ZN2v88internal6StrDupEPKc + 565
17  libnode.dylib                       0x000000010f92cfe8 _ZNK2v88internal8compiler17BranchElimination21ControlPathConditionseqERKS3_ + 4184
18  libnode.dylib                       0x000000010f92c541 _ZNK2v88internal8compiler17BranchElimination21ControlPathConditionseqERKS3_ + 1457
19  ???                                 0x000029ae970043a7 0x0 + 45829834425255
20  ???                                 0x000029ae971dd77f 0x0 + 45829836363647
21  ???                                 0x000029ae971dd638 0x0 + 45829836363320
22  ???                                 0x000029ae971dc55e 0x0 + 45829836359006

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.apple.AppKit              	0x00007fff7d1c0836 -[NSApplication _crashOnException:] + 109
1   com.apple.AppKit              	0x00007fff7d1c0768 -[NSApplication reportException:] + 917
2   com.apple.AppKit              	0x00007fff7d29599f uncaughtErrorProc + 158
3   com.apple.CoreFoundation      	0x00007fff7f3d7d2a __handleUncaughtException + 746
4   libobjc.A.dylib               	0x00007fff93c50f15 _objc_terminate() + 94
5   libc++abi.dylib               	0x00007fff93142d69 std::__terminate(void (*)()) + 8
6   libc++abi.dylib               	0x00007fff931427de __cxa_throw + 121
7   libobjc.A.dylib               	0x00007fff93c4edd6 objc_exception_throw + 345
8   com.apple.CoreFoundation      	0x00007fff7f3dac94 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132
9   com.apple.CoreFoundation      	0x00007fff7f2cbb55 ___forwarding___ + 1061
10  com.apple.CoreFoundation      	0x00007fff7f2cb6a8 _CF_forwarding_prep_0 + 120
11  com.github.electron.framework 	0x000000010b33162c 0x10b265000 + 837164
12  com.github.electron.framework 	0x000000010b30e721 0x10b265000 + 694049
13  com.github.electron.framework 	0x000000010b3132b8 atom::NativeWindowMac::SetEscapeTouchBarItem(mate::PersistentDictionary const&) + 40
14  com.github.electron.framework 	0x000000010b2e8634 atom::api::Window::SetEscapeTouchBarItem(mate::PersistentDictionary const&) + 20
```

### How to reproduce

[Here](https://github.com/jhen0409/react-native-debugger/blob/master/app/utils/devMenu.js#L28) is the app code that used Touch Bar API, it will called `_setEscapeTouchBarItem(null)` I tracked, but __it works as expected for me even CI is green__, so I guess maybe it only happened on some macOS versions or settings.

/cc @MarshallOfSound and @urikphytech @danishmughal @dannyvassallo @Manuelandro",MarshallOfSound,platform/macOS;bug :beetle:;version/1.7.x,2017-09-05T09:08:27Z,2017-10-10T06:07:05Z,jhen0409,MarshallOfSound;jhen0409;gerges-zz;bpasero,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,10445,"`--remote-debugging-port` doesn't work since 1.6.11 `--remote-debugging-port` is used to debug renderer process in the IDE.

It works in the Electron `1.5.1`, but doesn't work in the 1.6.11+ (I have checked 1.6.11, 1.7.5 and 1.8.0).

Project 閳 https://github.com/develar/__debug_electron-quick-start

Change electron version in the `package.json` from `""1.5.1""` to `""1.6.11""` to reproduce 閳 WebStorm/VSCode cannot connect to localhost:9222

Debug works only if add `app.commandLine.appendSwitch('remote-debugging-port', '9222')` to `main.js`

Is it regression or intended change?",MarshallOfSound,bug :beetle:;3-0-x,2017-09-05T16:16:26Z,2019-06-05T23:47:43Z,develar,MarshallOfSound;develar;natew;mihe;ramya-rao-a;sofianguy;hatpick;prigara,sofianguy;MarshallOfSound,sofianguy,sofianguy,,sofianguy,
electron/electron,10448,"Minor electron.d.ts issues Some issues I noticed while adopting the electron.d.ts from this repository for VS Code. Overall not a lot of things, great work!

```typescript
interface Event extends GlobalEvent {
	preventDefault: () => void;
	sender: WebContents;
	returnValue: any;
	ctrlKey?: boolean; // change
	metaKey?: boolean;
	shiftKey?: boolean;
	altKey?: boolean; // add
}
```

The `ctrlKey` is not lowercase, but camelcase. I also added `altKey`. 

`CrashReporterStartOptions`: I added `crashesDirectory` that can be used if the crash reporter is used in forked processes. I also declare `extra` as `any`. It should not implement an interface that is empty.

/cc @zeke (maybe let me know where this changes need to be done so I can do a PR instead)",zeke,bug :beetle:,2017-09-06T13:38:38Z,2017-10-09T13:43:16Z,bpasero,bpasero;MarshallOfSound;codebytere,sofianguy,,zeke,,codebytere,
electron/electron,10477,"`shell.openItem` should activate the opened app <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.7
* Operating system: macOS 10.12.6

### Expected behavior

For example, if I ask it to open a path to a directory, it should open it in Finder and focus the Finder window.

### Actual behavior

It opens the Finder window in the background and my app window is still focused.

### How to reproduce

```js
shell.openItem('path/to/some/dir/');
```

---

Focusing the opened app is expected behavior on macOS and should at least be an option.

The `shell.openExternal` method has this, so it's clear you agree. We just need the behavior/option added to this method too.",codebytere,platform/macOS;bug :beetle:;version/1.7.x,2017-09-09T19:14:20Z,2017-09-20T03:05:52Z,sindresorhus,MarshallOfSound;sindresorhus;codebytere;stanleyxu2005;n-smits,sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,10488,"win.setSize doesn't resize window <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.6
* Operating system: windows 7, macOS

### Expected behavior

Window should be resized.

### Actual behavior

Window size doesn't change.

### How to reproduce

Set window fullscreen mode. 
Call -> window.setFullScreen(false).
Call -> window.setSize(w, h). 
Window size doesn't change.

  $ git clone https://github.com/mcieslakcc/electron-quick-start.git -b set_size
  $ npm install
  $ ./node_modules/.bin/electron .


",codebytere,platform/windows;platform/macOS;bug :beetle:;version/1.7.x,2017-09-11T17:51:06Z,2017-09-21T15:34:44Z,mcieslakcc,akashnimare;mcieslakcc;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,10521,"hiddenInset and vibrancy cause a invisible/low-alpha titlebar on 10.13  * Electron version: 1.7.6
* Operating system: MacOS High Sierra GM

### Expected behavior

Title bar should not be invisible

![screen shot 2017-09-14 at 11 22 04 am](https://user-images.githubusercontent.com/320654/30441406-f34fe61a-993e-11e7-8592-244e50a92bb9.png)

### Actual behavior

Title bar is invisible

### How to reproduce
```
  mainWindow = new BrowserWindow({
      vibrancy: 'light',
      titleBarStyle: 'hiddenInset',
      width: 800,
      height: 600
  })
```

```
 $ git clone git@github.com:gerges/electron-quick-start.git -b  issue/invisible-titlebar
 $ npm install
 $ npm run start
```
",MarshallOfSound,platform/macOS;bug :beetle:;version/1.7.x,2017-09-14T16:22:24Z,2018-02-12T18:38:38Z,gerges-zz,gerges-zz;CodingMeSwiftly;mdeboer;sbward;tborychowski;everdrone;archae0pteryx;igor10k;tommoor;juliangruber;MarshallOfSound;gnattu;sallar,sofianguy,,,,codebytere,
electron/electron,10543,"Autoupdater 'update-available' callback is getting trigerred event when lower version of app is on the server Our app is built on electron and we are using autoUpdater to update the app.
Our release is going as follows:
1.0.0
1.1.0
....1.8.0
1.8.1
1.8.2
1.8.3
1.8.4
1.8.5
1.8.6
1.8.7
1.9.0

Now since 1.8.5, some of the customers were getting 'update-available and update-downloaded' message and with each further release, the customers complaining about it is increasing.
Right now its 1.9.0 and every time this problem is happening. 
Here is my index.js code

`autoUpdater.setFeedURL('https://s3-us-west-2.amazonaws.com/company/desktop/');
        autoUpdater.checkForUpdates();

        autoUpdater.on('error', () => {
            console.log('error occured');
            return;
        })

        autoUpdater.on('checking-for-update',()=>{
            console.log('checking for update');
        });

        autoUpdater.on('update-available', () =>{
            console.log('update is available');
            // # confirm install or not to user
            var index = dialog.showMessageBox(mainWindow, {
                type: 'info',
                buttons: ['Ok'],
                title: ""Company Tech Solution"",
                message: 'A new version of company app is getting downloaded bla bla bla.'
            });

            if(index === 1){
                return;
            }

            autoUpdater.on('update-downloaded', function (event,releaseName) {

                // # confirm install or not to user
                var index = dialog.showMessageBox(mainWindow, {
                    type: 'info',
                    buttons: ['Restart','Later'],
                    title: ""Company Tech Solution"",
                    message: 'New version has been downloaded. Please restart the application to apply the updates.',
                    detail: releaseName
                });

                if (index === 1) {
                    return;
                }

                // # restart app, then update will be applied
                autoUpdater.quitAndInstall();
            });

        });

        autoUpdater.on('update-not-available', () =>{
            console.log('update not available');
            return;
        });`


and here is the installerFile i am using to generate installer.

`var electronInstaller = require('electron-winstaller');
resultPromise = electronInstaller.createWindowsInstaller({
    appDirectory: '\Company-win32-ia32',
    outputDirectory: 'C:/release32',
    loadingGif: './loader.gif',
    authors: 'Company Tech Solution.',
    exe: 'Comany.exe',
    description: 'Compnay Business Accounting App',
    certificateFile: './Cert/xyz.pfx',
    certificatePassword: 'iamnotidiot',
    setupIcon: './icon.ico',
    iconUrl: 'https://company.in/favicon/favicon.ico',
    setupExe: 'CompanyApp.exe',
    noMsi: true,
    remoteReleases: 'https://s3-us-west-2.amazonaws.com/vcompany/desktop/',
    
});
resultPromise.then(() => console.log(""It worked!""), (e) => console.log(""Not worked""));`

p.s since past few release, i have removed one external dependency which was of quite big size. So the newer installers are of smaller size.
",codebytere,blocked/need-info 閴;bug :beetle:,2017-09-18T06:42:33Z,2017-10-08T22:33:38Z,ishwarrimal,codebytere;sofianguy;ishwarrimal;sonu461993,codebytere;sofianguy,,sofianguy,,sofianguy,
electron/electron,10572,"Previous zoomFactor is getting cached, unless you manually reset browserWindow's zoom * Electron version: 1.7.6
* Operating system: MacOS 10.11.6

### Expected behavior

When a custom zoomFactor is defined in the BrowserWindow initialization (say 1.5), the window is displayed in that specific zoomFactor.

If you close the app, set a new zoomFactor in the code (say 1.2), and start the app again, the new zoomFactor should take in effect.

### Actual behavior

The new zoomFactor does not take into effect, and the old one is still being used by the browser window.

The only way I know of to reset it is to manually do a zoom-default keyboard command in the window (Cmd+0 in OSX), then restart the app.

### How to reproduce

1. Set zoomFactor to something other than the default of 1.0:

```
mainWindow = new electron.BrowserWindow({
    width: 800,
    height: 600,
    useContentSize: true,
    webPreferences: {
      zoomFactor: 1.5
    }
  })
```

2. Close the window.

3. Set `zoomFactor: 1.2`.

4. Start the app again.

5. Notice the page is still zoomed in at 1.5. This will persist even with an app restart, and one way to get it to read the new value is to set browser zoom to 0 manually (Cmd+0 on OSX). Also, sometimes, the page will have the proper zoomFactor visually, but if you check with `require('electron').webFrame.getZoomFactor()` in the renderer side, you'll still get the old/wrong value.",deepak1556,platform/macOS;blocked/need-info 閴;bug :beetle:;version/1.7.x;4-2-x,2017-09-21T20:05:05Z,2020-02-26T20:43:12Z,karlpablo,karlpablo;zhoou;sofianguy;iamapig120;kutu;M0rious;kailo777;krausekai;bluebrown;stanleyxu2005;rooklift;nathanb21;electron-triage;ameer-clara;slooi;hz0324;tmirun;Hishengs;R00iBaard,codebytere;deepak1556;sofianguy,deepak1556;sofianguy,deepak1556,,electron-triage,
electron/electron,10575,"Bug with menu Menu on Mac OS do not works properly when using ""role"".  Example:
                {
                    label: ""My custom label"",
                    role: 'togglefullscreen'
                },

On windows i see label -  ""My custom label"".
On mac - ""Enter Full Screen"".
",codebytere,platform/macOS;component/menu;bug :beetle:;version/1.7.x,2017-09-22T08:04:33Z,2017-10-10T16:31:14Z,Isahara86,codebytere;Isahara86,codebytere,sofianguy,codebytere,,codebytere,
electron/electron,10668,"Honor the OS's cursor blink settings * Electron version: Various, as tested by apps mentioned below
* Operating system: Windows, macOS, Linux


### Expected behavior

<!-- What do you think should happen? -->

Electron should honor OS-level cursor blink settings.

Using Windows and Firefox as an example, here is what should be happening (thanks @jonathansampson for the gif):

<img src=""https://cloud.githubusercontent.com/assets/815158/24823693/131bb71c-1bc7-11e7-8dd4-b969b1c86bbe.gif"">


### Actual behavior

<!-- What actually happens? -->

The cursor still blinks. The choices made by the user in his/her OS are ignored.

Aside from the OS閳ユ獨 settings not being honored, note that this is an accessibility issue for some ([example 1](https://discussions.apple.com/thread/7689487), [example 2](https://github.com/brave/browser-laptop/issues/8123)), and an irritation or frustration for many others. A google search for `turn off blinking cursor` produces [387,000 results](https://www.google.com/search?q=turn+off+blinking+cursor).

I tried various apps built using Electron ([Tusk](https://champloohq.github.io/tusk/), [Wavebox](https://wavebox.io/), [Wire](https://wire.com/en/), [Boostnote](https://boostnote.io/), [Brave](https://brave.com/), and [Min](https://minbrowser.github.io/min/)). In every app and on any OS, the result was the same: the cursor blinked, though I have the OS settings for cursor blinking turned off.


### How to reproduce

1. Change your respective OS閳ユ獨 setting for cursor blink to off.

    #### On Windows:

     - Set `HKEY_CURRENT_USER\Control Panel\Desktop\CursorBlinkRate` in the registry to `-1`.
     - OR (this will set the above value) navigate to Control Panel -> Keyboard, and under 閳ユ窅ursor blink rate,閳 move the slider all the way to the left.

    #### On macOS:
    Set values in the terminal approximating the following:
    ```
    defaults write -g NSTextInsertionPointBlinkPeriodOn -float 30000
    defaults write -g NSTextInsertionPointBlinkPeriodOff -float 1
    ```
    This input causes the cursor to be on for 30 seconds, off for just a millisecond, then on again. Though this is not technically 閳ユ笝ff,閳 with these values the blink is not noticeable and is as good as being off.

    #### On Linux:
    ##### GNOME
    Enter `gsettings set org.gnome.desktop.interface cursor-blink false` in a terminal.

     ##### Xfce
     - Enter `xfconf-query -c xsettings -p /Net/CursorBlink -s false` in a terminal.
     - OR (changes above value) navigate to the Keyboard settings and on the first tab (Behavior) uncheck 閳ユ藩how blinking閳 in the Cursor section.

     ##### MATE
     - Enter `gsettings set org.mate.interface cursor-blink false` in a terminal.
     - OR (changes above value) navigate to Preferences -> Keyboard and uncheck ""Cursor blinks in text fields.""

     ##### KDE (since 5.11)
     Edit the ~/.config/kdeglobals file, adding `CursorBlinkRate=0` to the `[KDE]` section.
<cr>

2. On macOS it may be necessary to then log out and back in. Within the other two OSes, the effect should be immediate.

3. Use _any_ app built with Electron. Place the cursor in any text field. It will continue to blink on steadily, irrespective of what you have just done with the blink rate settings.

Bonus: Thanks, [Charles A. Kiesling, Sr. (1930-2014)](https://docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/US3531796.pdf)!

(17/11/21) EDITED to add: Xfce cursor blink settings
(18/8/30) EDITED to add: MATE and KDE cursor blink settings",codebytere,bug :beetle:;platform/all;5-0-x,2017-10-02T05:08:17Z,2019-08-30T14:39:47Z,davidhfo,MarshallOfSound;davidhfo;sofianguy;nikpmr;ghost,sofianguy,codebytere;sofianguy,,,sofianguy,
electron/electron,10669,"Issue with intl api in the browsers * Electron version: 1.7.8
* Operating system: ubuntu, windows

### Expected behavior
When I run this snippet in the console of chrome
```javascript
new Intl.NumberFormat('ar-TN', { style: 'currency', currency: 'TND'}).format(34);
```
I get the following result which is right:
```javascript
""涓.楝.閳ュ緵34,000""
```
### Actual behavior
But in the console of the electron BrowserWindow, I get this which is wrong:
```javascript
""浼蹭冀浣捐磵璐嶈磵鑱戒缚.楝.閳""
```
See the difference between numbers formatting.

Is there a way to fix that?",vanessayuenn,platform/windows;platform/macOS;platform/linux;bug :beetle:;version/1.7.x,2017-10-02T14:18:19Z,2017-10-23T18:56:29Z,ziedhajsalah,barinali;ziedhajsalah;vanessayuenn,codebytere;vanessayuenn,,sofianguy,,vanessayuenn,
electron/electron,10671,"Hidden Transparent Frameless window when shown, appears twice. <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: Node.js 8.2.1, Chromium 59.0.3071.115, and Electron 1.8.1
* Operating system: Windows 10 v1703 x64

### Expected behavior
Hidden Transparent Frameless window when shown should appear only once.
<!-- What do you think should happen? -->

### Actual behavior
Hidden Transparent Frameless window when shown appears once then disappears then appears again.
<!-- What actually happens? -->

### How to reproduce
Make a SingleInstance application. Using https://github.com/electron/electron/issues/4478#issuecomment-199959813
Only use the MainWindow.Show statement of above comment.

Create a Frameless Transparent MainWindow. (Style the Body tag of Index.html with a White Background)

Once the Window is shown normally, Hide it.
Launch a new instance, Old Hidden window will be shown but it will disappear and will be shown again.

Repository to reproduce: https://github.com/XEonAX/jar-client/tree/Bug

Steps to run:
Open 2 terminal in repo directory.
In First run `npm install` followed by `npm start`
Wait for the window to appear.
Click Hide Button

In Second, run `npm start`
window will be shown twice.
To reproduce again. In Second, run `npm start`


It seems that the window disappears then appears again while returning from the app.MakeSingleInstance callback.


<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",vanessayuenn,platform/windows;bug :beetle:;version/1.7.x,2017-10-02T15:39:16Z,2018-09-24T05:33:39Z,XEonAX,codebytere;Fental,codebytere,,sofianguy,,codebytere,
electron/electron,10674,"close event not fired on macOS if the window is opened as a modal * Electron version: 1.6.10
* Operating system: macOS Sierra 10.12.6

### Expected behavior

The `close` event should be fired when the modal window is closed on Mac. It is fired on Windows.

### Actual behavior

The `close` event is not fired.

### How to reproduce

I have created a repro at this [repository](https://github.com/rongduan-zhu/electron-quick-start).

Just run `main.js` using electron.

The code essentially creates another modal window with the parent set to the main browser window. Created a `setTimeout` which closes the modal window after 3 seconds.

The modal window also listens to the `close` event and logs a message when the event is fired.

On Mac, the event listener callback is never called (nothing shows up in terminal). On Windows, the event listener callback is called (message shows up in terminal).

",vanessayuenn,platform/macOS;bug :beetle:;2-0-x;3-0-x,2017-10-02T21:35:47Z,2019-07-01T02:57:32Z,rongduan-zhu,rongduan-zhu;clusterberries;erickzhao;xaviergonz;vanessayuenn;ghost;joernroeder;percyhanna,codebytere;sofianguy;vanessayuenn,codebytere,vanessayuenn,,zcbenz,
electron/electron,10760,"Release file at https://github.com/electron/electron/releases/download/v1.7.9/electron-v1.7.9-linux-arm.zip does not match SHASUM256.txt <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.9
* Operating system: Linux/ARM

The release file at https://github.com/electron/electron/releases/download/v1.7.9/electron-v1.7.9-linux-arm.zip has a SHA256 checksum value of: 7ec366ec543858bf4f53a944fdafff37995be1771498fb4d4a89814b3d93a923

The corresponding SHASUMS256.txt file at https://github.com/electron/electron/releases/download/v1.7.9/SHASUMS256.txt lists the value as: 9c4f0ad93cd41ea8f3c2bf3c4ec99fc7254126943ea3b1e9f86c1b148cc982ef

I spot-checked another file (electron-v1.7.9-linux-ia32.zip) and it was fine.
",jkleinsc,bug :beetle:;version/1.7.x,2017-10-11T19:41:58Z,2017-10-11T23:26:16Z,AdamYellen,Kugelfang666;jkleinsc;AdamYellen,groundwater,,groundwater,,jkleinsc,
electron/electron,10864,"Notification API do not work with Windows 10 16299.19 (fall creators update) <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.8
* Operating system: Windows 10 16299.19 - latest **update**

### Expected behavior

Create a desktop notifications.

### Actual behavior

No notification.

### How to reproduce

Try with yours https://github.com/electron/electron-api-demos
",felixrieseberg,platform/windows;bug :beetle:;component/notifications,2017-10-20T17:38:39Z,2021-06-17T18:27:02Z,GregorBiswanger,robinwassen;MarshallOfSound;adlk;levinunnink;latoohey;JimminiKin;hacdias;felixrieseberg;abardik;samuelcarreira;quietnumeric;ClaudiaStefan;EternallLight;sidneys;dustinsoftware;qqj1228,felixrieseberg,,felixrieseberg,,nornagon,
electron/electron,10877,"Electron 1.8.2 only runs 1 require script * Electron version: 1.8.2
* Operating system: MacOS

Git Repo to reproduce: 

https://github.com/dpgraham/electron-repro

### Description
The command `electron -r ./a -r ./b main` is only running `./a.js` on Electron 1.8.2-beta.1

When the same command is run on Electron 1.7, all three (`./a.js`, `./b.js`, `./main.js`) are run

(the three files all just run one console log with the name of the file)

### Expected behavior

This is what happens with Electron 1.7 and Electron 1.8.1

```
npm test
```

Output:
```
> electron -r ./a -r ./b main

A
B
Main
```

### Actual behavior
This is what happens with Electron 1.8.2
```
npm install electron@beta
npm test
```

Output:
```
> electron -r ./a -r ./b main

A
```

It never runs module b or main

### How to reproduce

```
git clone https://github.com/dpgraham/electron-repro
cd electron-repro
npm install
npm test # Success with Electron 1.7
npm install electron@beta
npm test # Fails with Electron 1.8.2
```
",felixrieseberg,bug :beetle:,2017-10-23T04:24:52Z,2017-10-25T00:21:09Z,dpgraham,felixrieseberg;dpgraham,felixrieseberg,,felixrieseberg,,felixrieseberg,
electron/electron,10880,"Disable setLoginItemSettings -> openAtLogin not working * Electron version: 1.7.9
* Operating system: macOS High Sierra (10.13)

### Expected behavior
`app.setLoginItemSettings({ openAtLogin: false });` should disable auto start.

### Actual behavior
`app.setLoginItemSettings({ openAtLogin: true });` adds app to auto start as expected. However setting it to `false` does not remove it. 
On macOS 10.12 it was working as expected.

### How to reproduce
In main or renderer run the following code
```js
console.log(app.getLoginItemSettings().openAtLogin); // either true or false if it has been set before
app.setLoginItemSettings({ openAtLogin: true }); 
console.log(app.getLoginItemSettings().openAtLogin); // true
app.setLoginItemSettings({ openAtLogin: false });
console.log(app.getLoginItemSettings().openAtLogin); // true
```

I've provided a test repo here:
```
$ git clone https://github.com/adlk/openAtLogin-issue -b master
$ npm install
$ npm start || electron .
```",codebytere,platform/macOS;bug :beetle:;3-0-x,2017-10-23T14:12:29Z,2018-10-12T22:19:27Z,adlk,michael-gollmick;djalmaaraujo;eivindml;usergit;dittos;joedawson;ccoble;mickours;pronebird;gavJackson;SilencerWeb;zhenchaoli;petervanderwalt;absalomedia;codebytere;sindresorhus;tshenin;Elias-Graf;aceimnorstuvwxz;seanlerner;lucasbento;kennethlynne,sofianguy,,,,nornagon,
electron/electron,10910,"Launching Electron creates an unwanted folder * Electron version: 1.8.2-beta 1
* Operating system: Windows 7

### Expected behavior

Launching electron should not create a subfolder.

### Actual behavior

Running electron creates a subfolder in the electron folder. The subfolder is named ""%HOMEDRIVE%%HOMEPATH%"" and contains subfolders AppData\Roaming\Electron\logs
I've not seen this behaviour in any previous version, and obviously %HOMEDRIVE%%HOMEPATH% are environnement variables names that should be expanded (hence the bug).

### How to reproduce

Download electron-v1.8.2-beta.1-win32-x64.zip
Launch electron.exe
See the folder appearing
 
",codebytere,platform/windows;bug :beetle:;version/1.8.x,2017-10-25T14:20:31Z,2017-10-27T21:30:55Z,ogo-adp,codebytere;ogo-adp,codebytere,,codebytere,,codebytere,
electron/electron,10940,"Notification onclick is triggered when clicking Close on alert Style MacOS High Sierra notification * Electron version: 1.7.9
* Operating system: 10.13 High Sierra

### Expected behavior

`Notification.onclick` should not be triggered when `Close` is clicked

### Actual behavior

`Notification.onclick` is triggered when `Close` is clicked

![notification-triggers-click](https://user-images.githubusercontent.com/320654/32076487-c1d4f4ca-ba65-11e7-9986-873ea3bd60ef.gif)

### How to reproduce

Enable alert style notifications for Electron in MacOS

```
  $ git clone git@github.com:gerges/electron-quick-start.git -b  issue/notification-close-triggers-click
  $ npm install
  $ npm run start
```",MarshallOfSound,platform/macOS;bug :beetle:;version/1.7.x,2017-10-26T20:53:47Z,2017-10-27T23:35:08Z,gerges-zz,gerges-zz;clusterberries,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,11052,"Exception with Menu.setApplicationMenu(null) since 1.8.2-beta.2 * Electron version: 1.8.2-beta.2
* Operating system: macOS 10.13.1

### Expected behavior

As per documentation `Menu.setApplicationMenu(null)` should remove menu bar in Windows/Linux and do nothing in macOS.

### Actual behavior

Exception is thrown (starting with Electron 1.8.2-beta.2 version):

```
TypeError: Cannot read property 'constructor' of null
    at Function.Menu.setApplicationMenu (<hidden>/electron/dist/Electron.app/Contents/Resources/electron.asar/browser/api/menu.js:136:21)
    at App._electron.app.on (<hidden>)
    at emitTwo (events.js:130:20)
    at App.emit (events.js:213:7)
```

### How to reproduce

Try calling static `Menu.setApplicationMenu(null)` from app `ready` event.",felixrieseberg,platform/macOS;bug :beetle:;version/1.8.x,2017-11-07T20:02:19Z,2017-11-11T03:33:19Z,simast,felixrieseberg,felixrieseberg;sofianguy,,felixrieseberg,,MarshallOfSound,
electron/electron,11053,"`navigator.languages` returns an empty array * Electron version: 1.7.9
* Operating system: macOS

### Expected behavior
`navigator.languages` should return array of user's preferred languages, e.g. `[""en-US"", ""zh-CN"", ""ja-JP""]`

### Actual behavior
`navigator.languages` returns an empty array `[]`

### How to reproduce
Create a primitive HTML file that logs `navigator.languages` into console. Then try loading via `file://`, `http` and inside Electron's `renderer` process. The first two will give you actual results while `renderer` yields empty array.
",nitsakh,platform/macOS;documentation :notebook:;beginner friendly;bug :beetle:;version/1.7.x,2017-11-07T20:04:42Z,2018-08-03T00:50:09Z,kysely,kysely;felixrieseberg;melvin-clickprofits;haoRchen;nitsakh;tonyganch;nornagon,felixrieseberg;sofianguy;codebytere,codebytere,nitsakh,,nornagon,
electron/electron,11101,"process.versions does not include new version format * Electron version: 1.8.2-beta.2
* Operating system: macOS

### Expected behavior

process.versions should print `1.8.2-beta.2` for electron

### Actual behavior

`1.8.2` is printed

### How to reproduce

Use devtools and execute `process.versions`",felixrieseberg,bug :beetle:,2017-11-12T17:27:00Z,2017-11-15T01:18:04Z,bpasero,,felixrieseberg,,felixrieseberg,,ckerr,
electron/electron,11147,"Spellchecking broken in iFrames in 1.8.* * Electron version: 1.8.x only. Tested with 1.8.1, 1.8.2-beta.1, 1.8.2-beta.2. Not seen with any 1.7 or 1.6
* Operating system: macOS, ubuntu 17.04, probably others

### Expected behavior

Setting the following should result in all words being marked as mispelled on the page as in electron versions prior to 1.8.

```js
require('electron').webFrame.setSpellCheckProvider('enUS', true, {
	spellCheck: (word) => false
})
```

### Actual behavior

In 1.8.* Words are marked as mispelled in the main frame, but not child iframes. See screenshots below....

**1.8.2-beta.2**
![screen shot 2017-11-17 at 11 35 55](https://user-images.githubusercontent.com/103586/32945726-79af89b6-cb8c-11e7-8b03-7b1d3628ad22.png)

**1.7.9**
![screen shot 2017-11-17 at 11 36 56](https://user-images.githubusercontent.com/103586/32945755-8ad98052-cb8c-11e7-8bec-74a81d6f0556.png)

### How to reproduce

```
git clone https://github.com/wavebox/electron-quick-start.git
cd electron-quick-start
git checkout 1_8_spellchecker
npm install
npm start
```

I've done a little bit of digging, but haven't come up with a solid solution. It looks like the way the spell check provider works was changed between chrome 58 and 59. `SetTextCheckClient` was added to `atom_api_web_frame.cc` in the 1.8 upgrade and a little searching on that reveals [this conversation chromium](https://bugs.chromium.org/p/chromium/issues/detail?id=638361) which talks about the refactoring the spell checker to be frame-based rather than view-based.",deepak1556,platform/macOS;bug :beetle:;version/1.8.x,2017-11-17T11:50:03Z,2017-12-21T08:00:02Z,Thomas101,,sofianguy,,deepak1556,,zcbenz,
electron/electron,11150,"titleBarStyle: hidden logs an error <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.8.2
* Operating system: macOS 10.13.1 

### Expected behavior
The use of `titleBarStyle: hidden` should not log an error.

### Actual behavior
When using `titleBarStyle: hidden`, the following error gets logged.

```
Electron[10655:980586] *** WARNING: Textured window <AtomNSWindow: 0x7fcb0f71bdb0> is getting an implicitly transparent titlebar. This will break when linking against newer SDKs. Use NSWindow's -titlebarAppearsTransparent=YES instead.
```

### How to reproduce

Set the `titleBarStyle` of the electron window to `hidden`.",felixrieseberg,platform/macOS;bug :beetle:;version/1.8.x,2017-11-17T16:04:31Z,2018-03-14T00:01:06Z,hpohlmeyer,hpohlmeyer;qazbnm456;axelkennedal;rmnprt;venom90;Eugeny;shams-ali;aguynamedben;sambeau;varave;nehbit;singhshashi;dhanyn10;hacdias;felixrieseberg;movingobjects;caesarsol;steffanhalv,felixrieseberg;sofianguy,,felixrieseberg,,felixrieseberg,
electron/electron,11182,"fs.readFile(path, null, cb) TypeError: Bad arguments Hello!
When read file from asar I see error: TypeError: Bad arguments.
`fs.readFile(path, null, cb)`
This code work fine:
`fs.readFile(path, {}, cb)`

If use fs-extra throw same error:
`fse.readFile(path)`

Tested in 1.8.2-beta.2",felixrieseberg,bug :beetle:,2017-11-20T14:43:39Z,2017-11-20T16:57:31Z,Feverqwe,felixrieseberg,felixrieseberg,,felixrieseberg,,ckerr,
electron/electron,11269,"Update.exe Flashes on Screen for Windows * Electron version: 1.7.9
* Operating system: Windows 10 / 8.1

### Expected behavior

On running `electron.autoUpdater.checkForUpdates()`, Update.exe should run in the background.

### Actual behavior

On running `electron.autoUpdater.checkForUpdates()`, Update.exe flashes on the screen.

### How to reproduce

In `package.json` set `electronVersion` to `1.7.9` or higher

Build application that calls `electron.autoUpdater.checkForUpdates()`

Update.exe will flash momentarily in the foreground.

### More details

This is not an issue for `electronVersion: 1.6.8.`

Looking quickly at `squirrel-update-win.js` and https://nodejs.org/api/child_process.html, it might be possible to hide this window by setting `windowsHide` to true when calling `spawn` in `spawnUpdate`


",felixrieseberg,platform/windows;bug :beetle:;version/1.7.x,2017-11-27T21:37:35Z,2017-12-06T05:50:13Z,emaciel10,,sofianguy,,felixrieseberg,,zcbenz,
electron/electron,11371,"Filters don't work in webRequest <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.9
* Operating system: macOS

### Expected behavior

The callback should be used only for URLs matching the filter.

```
const filter = { urls: ['*://www.googleapis.com'] };
session.defaultSession.webRequest.onBeforeRequest(filter, (details, callback) => {
  console.log('onBeforeRequest: ', details);
  callback({ cancel: true });
});
```

<!-- What do you think should happen? -->

### Actual behavior

The callback is called for random URLs.

```
onBeforeRequest:  { id: 1,
  method: 'GET',
  referrer: '',
  resourceType: 'mainFrame',
  timestamp: 1512654154551.9841,
  url: 'file:///Users/pronebird/apple/mail/build/index.html' }
onBeforeRequest:  { id: 4,
  method: 'GET',
  referrer: '',
  resourceType: 'mainFrame',
  timestamp: 1512654154564.2021,
  url: 'chrome-devtools://devtools/bundled/inspector.html?remoteBase=https://chrome-devtools-frontend.appspot.com/serve_file/@691bdb490962d4e6ae7f25c6ab1fdd0faaf19cd0/&can_dock=&toolbarColor=rgba(223,223,223,1)&textColor=rgba(0,0,0,1)&experiments=true' }
```

<!-- What actually happens? -->
",codebytere,platform/macOS;bug :beetle:;version/1.7.x;3-0-x,2017-12-07T13:45:47Z,2019-07-25T17:20:03Z,pronebird,Pingze-github;brospars;tcd156;naturejune;amanharwara;nref-dan,sofianguy,,codebytere,,codebytere,
electron/electron,11376,"menu.popup() doesn't accept the ""async"" option anymore. * Electron version: fails only on 1.8.2-beta.2, 1.8.2-beta.3 (works on 1.8.2-beta.1)
* Operating system: macOS 10.13.2

### Expected behavior

Calling `menu.popup({async: true})` from the main or renderer process should work (it does in versions 1.8.2-beta.1 and 1.7.9 and below).

### Actual behavior

When calling `menu.popup({async: true})` with 1.8.2-beta.2 and 1.8.2-beta.3, it throws the following error:

From main process:
`Uncaught Exception: TypeError: Error processing argument at index 0, conversion failure from #<Object>`

From renderer process:
`Error: Could not call remote function ''. Check that the function signature is correct. Underlying error: Error processing argument at index 0, conversion failure from #<Object>`

### How to reproduce

https://github.com/romaincointepas/electron-quick-start

- menu will show after 3 seconds behind at the pointer position with electron 1.7.9 and 1.8.2-beta.1
- menu will now show (error in console) when using electron 1.8.2-beta.2 and 1.8.2-beta.2",felixrieseberg,component/menu;bug :beetle:;bug/regression :leftwards_arrow_with_hook:,2017-12-07T20:04:50Z,2017-12-12T00:02:34Z,romaincointepas,felixrieseberg;romaincointepas;sindresorhus,felixrieseberg;alexeykuzmin,,felixrieseberg,,ckerr,
electron/electron,11389,"checkbox in dialog not working <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.8.2-beta.3
* Operating system: Mac OS X 10.12.6

### Expected behavior

When ticking the checkbox on a dialog box we should receive a true value in the callback
<!-- What do you think should happen? -->

### Actual behavior

I always receive false value checked or not
<!-- What actually happens? -->

### How to reproduce

clone https://github.com/electron/electron-quick-start  project and add this to renderer.js

`require('electron').remote.dialog.showMessageBox({
  type: ""question"",
  buttons: [""OK"", ""Cancel""],
  message: ""This is a test."",
  checkboxLabel: ""Do not show this message again.""  
}, function (...args) { console.log(...args) })`

It will always display `0 false`

I also tested on Windows 10 and it's working as expected.
And I tested the electron@1.7.9 on both windows and mac OS X, it works too.
",codebytere,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;version/1.8.x,2017-12-09T14:58:47Z,2018-01-17T13:52:15Z,mymyoux,codebytere;agalwood;ckerr,sofianguy;codebytere;alexeykuzmin,,codebytere,,codebytere,
electron/electron,11391,"showOpenDialog using 'openFile' on macOS selects directory  * Electron version: `1.7.9`
* Operating system: `macOS 10.13.2 (17C88)`

### Expected behavior

The dialog only allows to select *files* with the `.foo` extension.

### Actual behavior

On macOS it will select a directory with the `.foo` extension (e.g. extracted archive) and does not allow to drill into the folder that might have a file with the same name...

### How to reproduce

```
var showOpenDialogOptions = { properties: [ 'openFile' ], filters: [ { name: 'Foo file', extensions: [ 'foo' ] } ]
    };
electron.dialog.showOpenDialog(showOpenDialogOptions, function(selectedFiles) {
    // ...
});",codebytere,platform/macOS;bug :beetle:;version/1.7.x,2017-12-10T00:21:57Z,2018-05-28T00:16:55Z,lutzroeder,shreyneil;codebytere;lutzroeder,sofianguy,,codebytere,,lutzroeder,
electron/electron,11429,"Menuitem display missing shift modifier in accelerator <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.8.2-beta.3
* Operating system: Windows / Linux

### Expected behavior
Expect accelerator correctly includes modifier

<!-- What do you think should happen? -->

### Actual behavior
For some key combination, shift modifier is not displayed while functionwise it works.

![image](https://user-images.githubusercontent.com/1210596/33964550-a0ca46a4-e00d-11e7-93b1-832317f60436.png)

<!-- What actually happens? -->

### How to reproduce

```
const menu = Menu.buildFromTemplate([
    {
      label: 'Test',
      submenu: [
        {
          label: 'Missing modifier',
          accelerator: 'Control+Shift+F'
        },
        {
          label: 'Working',
          accelerator: 'Control+Shift+Tab'
        }
      ]
    }
  ]);

Menu.setApplicationMenu(menu);
```

then ctrl-shift-f will be displayed as ctrl-f only.

This started from 1.8.2-beta.2, peeking history between version it seems like patch change around accelerator in libchromiumcontent might be reason - but I couldn't verify it by myself.

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",zcbenz,platform/windows;platform/linux;component/menu;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;version/1.8.x;3-0-x,2017-12-13T21:56:24Z,2018-01-08T07:15:29Z,kwonoj,alexeykuzmin,sofianguy;alexeykuzmin;nornagon,,zcbenz,,zcbenz,
electron/electron,11430,"cannot break in 1.8.2 * Electron version: v1.8.2-beta.3 x86
* Operating system: win7 x64

### Expected behavior

breaking

### Actual behavior

no breaking

### How to reproduce

- `electron-v1.8.2-beta.3-win32-ia32\electron.exe --inspect-brk`
- attach the chrome dev tools via chrome://inspect
- debugger should open stopped (it doesn't) other breakpoints will also not be hit

1.7.9 is ok",MarshallOfSound,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;version/1.8.x,2017-12-13T22:26:09Z,2018-01-04T21:20:37Z,bughit,alexeykuzmin;MarshallOfSound,sofianguy;ckerr,,MarshallOfSound,,MarshallOfSound,
electron/electron,11439,"Offscreen renderer compositor in gpu mode fails and falls back to SoftwareOutputDevice When using the offscreen renderer WITHOUT disabling hardware acceleration, it seems like the compositor output device fails to open a GPU channel and (after 5 tries) falls back to using the SoftwareOutputDevice. Seems like this doesn't happen for non-OSR windows (similar code path succeeds in the compositor code, when I set a breakpoint around the failure point), so it may be something specific to OSR.

electron --enable-logging --v=1 main.js yields 5x :
`[31672:1214/093050.323:ERROR:gl_surface_egl.cc(785)] eglCreateWindowSurface failed with error EGL_BAD_ALLOC`

More details following the template data.


* Electron version: 1.8.2beta3, 1.7.9, 1.7.3, 1.4.15
* Operating system: Win 8.1, Win 10

### Expected behavior

GPU channel for compositor is created.

### Actual behavior

software_output_device_ is created instead.

### How to reproduce

1. Grab the OSR example from the electron github: https://github.com/electron/electron/blob/master/docs/tutorial/offscreen-rendering.md
2. Comment out the `app.disableHardwareAcceleration()` line.
3. Run `electron --enable-logging --v=1 main.js`  (or whatever js you copy that example to)
4. Observe `[31672:1214/093050.323:ERROR:gl_surface_egl.cc(785)] eglCreateWindowSurface failed with error EGL_BAD_ALLOC` in the log.


More very verbose details:

I am hoping to use the OSR composited GPU texture directly on the Electron side, staying on the GPU, since we'll be doing other things with this texture on the GPU (without pulling down the pixels to system memory, then re-uploading it to GPU to re-render with it, which is slow). This also allows us to take advantage of e.g. WebGL, etc.

From my understanding, in the main process:
`libcc : src\content\browser\compositor\gpu_process_transport_factory.cc`
`GpuProcessTransportFactory::EstablishedGpuChannel` calls some GPU channel IPC code in `libcc : src\gpu\ipc\client\command_buffer_proxy_impl.cc` and &result returns false (or doesn't set true?), which causes an IPC failure: `Failed to send GpuChannelMsg_CreateCommandBuffer`. This results in `gpu_process_transport_factory.cc` `bool created_gpu_browser_compositor = !!context_provider && !!shared_worker_context_provider_;` to be false. So, the GPU channel setup has failed for the compositor. It tries up to 5 times:
```
    if (!created_gpu_browser_compositor) {
      // Try again.
      gpu::GpuChannelEstablishedCallback callback(
          base::Bind(&GpuProcessTransportFactory::EstablishedGpuChannel,
                     callback_factory_.GetWeakPtr(), compositor,
                     create_gpu_output_surface, num_attempts + 1));
      DCHECK(gpu_channel_factory_);
      gpu_channel_factory_->EstablishGpuChannel(callback);
      return;
    }
```
but this fails for the same reason every time.

Looking at the gpu process, presumably in response to the IPC message sent from the main process, it's the original error message from the verbose logging:
`[31672:1214/093050.323:ERROR:gl_surface_egl.cc(785)] eglCreateWindowSurface failed with error EGL_BAD_ALLOC`
`libcc : src\ui\gl\gl_surface_egl.cc` inside `NativeViewGLSurfaceEGL::Initialize` calls
```
  // Create a surface for the native window.
  surface_ = eglCreateWindowSurface(
      GetDisplay(), GetConfig(), window_, &egl_window_attributes[0]);

  if (!surface_) {
    LOG(ERROR) << ""eglCreateWindowSurface failed with error ""
               << GetLastEGLErrorString();
```
which fails. So, maybe the way Electron sets up the OSR is incompatible with eglCreateWindowSurface? The error message is unfortunately not very specific.

After these 5 failures, it falls back to using a software compositor output:
```
    if (!create_gpu_output_surface) {
      display_output_surface =
          base::MakeUnique<SoftwareBrowserCompositorOutputSurface>(
              CreateSoftwareOutputDevice(compositor.get()), vsync_callback,
              compositor->task_runner());
```
which calls back to Electron's `OffScreenRenderWidgetHostView::CreateSoftwareOutputDevice`, creates a `software_output_device_ = new OffScreenOutputDevice(...)`, and once this is set, `OffScreenRenderWidgetHostView::OnSwapCompositorFrame` runs:
```
    if (software_output_device_) {
      ... cpu path ...
    } else {
      ... gpu path? ...
    }
```
and the gpu path essentially never gets used. So we aren't able to get a GPU texture of the compositor output in the main process to use for other things.

Sorry in advance for such a complex problem, maybe masked in the past due to the built-in fallback code, but maybe it's some simple setting that would make more sense to you guys. We were really hoping to be able to use GPU acceleration in the compositor output if possible! Thanks!",brenca,platform/windows;blocked/need-info 閴;bug :beetle:;version/1.7.x;version/1.8.x,2017-12-14T18:57:30Z,2019-01-31T20:35:32Z,vulture,vulture;brenca;limoxi;sofianguy,sofianguy;brenca,sofianguy;codebytere,brenca,,sofianguy,
electron/electron,11549,"Every app with electron has app-name ""Electron"" in web notifications 
* Electron version: 1.7.8
* Operating system: Debian 9.3

### Expected behavior

""App-name"" field (libnotify) in notifications coming from BrowserWindow (WebView perhaps?) should be filled with the name of the app (either ""name"" or ""productName"" from package.json), or at least it should be allowed to modify its value within Electron.

### Actual behavior

Every notification have ""app-name"" field set to ""Electron""

### How to reproduce

Open a BrowserWindow object on any page which contains web notifications, such as https://developer.mozilla.org/en-US/docs/Web/API/notification",ckerr,platform/linux;bug :beetle:;version/1.7.x;version/1.8.x,2018-01-01T21:48:24Z,2018-03-12T00:33:07Z,Enrico204,ckerr,sofianguy;ckerr,,codebytere;ckerr,codebytere,ckerr,
electron/electron,11587,"Accessibility issue: Electron system tray context menu on Windows is not keyboard navigable <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.10
* Operating system: Windows 10

### Expected behavior

It is possible to access system tray items and their respective context menus on Windows using the keyboard only. This functionality is important for accessibility reasons.

The system tray is selected using the key combination **WINDOWS+B** and then opened using the **ENTER** key. It is then possible to navigate to a specific icon using the arrow keys and select it with **ENTER** to open the icon's context menu. It _should_ be possible to then navigate through this menu using the arrow keys and select a specific item with **ENTER**.

### Actual behavior

Arrow key navigation and ENTER selection is not available for Electron apps' system tray icon context menus. Pressing the arrow keys while the system tray icon's context menu is open, after being opened using the keyboard steps above, produces no result.

### How to reproduce

1. **WINDOWS+B** and then **ENTER** to open the list of icons
2. Arrow keys and to select the Electron app's icon
3. Press **SHIFT+F-10** to open the icon's context menu
4. Observe that arrow keys are not useable within this icon's menu, but are for other icons.

### Technical details

See **notify_icon.cc**'s function `NotifyIcon::PopUpContextMenu` which makes a call to the `->RunMenuAt`. I am new to the Electron codebase, but as far as I can tell, this is `RunMenuAt` call is defined in Chromium, meaning we can't change it directly, but will need to find another way to show context menus that is keyboard accessible.

  ",ckerr;zcbenz,platform/windows;component/accessibility;bug :beetle:;7-0-x;8-x-y;7-1-x;9-x-y,2018-01-08T03:25:21Z,2020-06-18T04:21:44Z,josimi,josimi;brentgti;danikane;ckerr,sofianguy;alexeykuzmin;ckerr,sofianguy;alexeykuzmin;miniak,ckerr;zcbenz,,brenca,
electron/electron,11636,"menu.popup() callback argument doesn't seem to work * Electron version: 1.7.9
* Operating system: macOS 10.13 and Windows 10

### Expected behavior

`menu.popup(options, callback)` to execute `callback` function when context menu is closed

### Actual behavior

`callback` function is not executed

### How to reproduce

I am calling the code from the main process.

```
let menu = electron.Menu.buildFromTemplate(template);
menu.popup({
  async: true,
  x: 10,
  y: 10
}, () => {
   // this is not executed  
});
```",codebytere,platform/windows;platform/macOS;bug :beetle:;version/1.7.x,2018-01-14T17:21:34Z,2018-01-23T12:32:42Z,astoilkov,astoilkov;codebytere;brenca,sofianguy,,codebytere,,brenca,
electron/electron,11715,"How to use stopPainting() ? <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.11
* Operating system: win10 x64

i want record every frame to make a video,

### Expected behavior

stop painting page, until call startPainting()

### Actual behavior

not stop painting page

### How to reproduce
```js
const electron = require('electron');
const fs = require('fs');
const app = electron.app
const BrowserWindow = electron.BrowserWindow

let mainWindow

// app.disableHardwareAcceleration()
function createWindow() {
  mainWindow = new BrowserWindow({
    width: 480, height: 800, frame: false, resizable: false, // show: false,
    webPreferences: {
      offscreen: true
    }
  })
  // mainWindow = new BrowserWindow({ width: 480, height: 800 })
  var i = 0;
  mainWindow.webContents.on('paint', (event, dirty, image) => {
    mainWindow.webContents.stopPainting()
    const data = image.toPNG()
    fs.writeFileSync('./f/' + i++ + '.png', data)
    // mainWindow.webContents.startPainting()
  })
  mainWindow.webContents.setFrameRate(1)

  mainWindow.on('closed', function () {
    mainWindow = null
  })
  
  var url = 'https://github.com';
  mainWindow.loadURL(url)
  //mainWindow.webContents.openDevTools()

}

app.on('ready', createWindow)
app.on('window-all-closed', function () {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})
app.on('activate', function () {
  if (mainWindow === null) {
    createWindow()
  }
})
```
",brenca,platform/windows;bug :beetle:;component/offscreen;version/1.7.x;version/1.8.x,2018-01-24T09:36:57Z,2018-02-16T13:21:02Z,zengming00,brenca;zengming00;codebytere,brenca;sofianguy,,brenca,,codebytere,
electron/electron,11749,"CrashReporter.getLastCrashReport() does not return latest Electron: 1.7.11
Platform: Windows

```JSON.stringify(require('electron').remote.crashReporter.getLastCrashReport())```
Returns:
```json
{
  ""date"":""2018-01-27T10:48:47.000Z"",
  ""id"":""a1f8a8c4-e6d3-4729-a126-aadcef61d9da""
}
```
```JSON.stringify(require('electron').remote.crashReporter.getUploadedReports())```
Returns:
```json
[
  {
    ""date"": ""2018-01-27T10:48:47.000Z"",
    ""id"": ""a1f8a8c4-e6d3-4729-a126-aadcef61d9da""
  },
  {
    ""date"": ""2018-01-27T11:11:54.000Z"",
    ""id"": ""3d8d2e06-d186-4cc9-b9b3-396673d68902""
  },
  {
    ""date"": ""2018-01-27T11:12:28.000Z"",
    ""id"": ""24668c94-44e0-4b58-901c-32a6ec950d1b""
  },
  {
    ""date"": ""2018-01-27T11:38:17.000Z"",
    ""id"": ""1d99e1cc-9a54-4dff-bbae-9c37a5566592""
  },
  {
    ""date"": ""2018-01-27T11:50:30.000Z"",
    ""id"": ""9b222337-806c-4b53-bab1-aa9e84cbfe37""
  }
]
```

The last error report by timestamp is clearly `9b222337-806c-4b53-bab1-aa9e84cbfe37`

Looking at the code, [its expecting the first crash](https://github.com/electron/electron/blob/63c91e7dd3764499d846f7e0b384d82d1da2bbc5/lib/common/api/crash-reporter.js#L61) to be the latest. ",felixrieseberg,platform/windows;component/crash-reporter;bug :beetle:;version/1.7.x;version/1.8.x;2-0-x,2018-01-27T12:03:46Z,2018-03-14T01:36:28Z,timfish,alexeykuzmin;timfish,sofianguy;alexeykuzmin,,felixrieseberg,,MarshallOfSound,
electron/electron,11818,"Popup MenuItem click handlers not being called * Electron version: Electron built at aea06ed
* Operating system: macOS 10.13.2

### Expected behavior

`MenuItem` click handlers should get called in the popped up context menu.

### Actual behavior

Click handlers never getting called back.

### How to reproduce

Open a popup in the main window:

```
window.webContents.on('context-menu', (event) => {
    const menu = new Menu()
    menu.append(new MenuItem({label: 'MenuItem1', click() { console.log('item 1 clicked') }}))
    menu.append(new MenuItem({type: 'separator'}))
    menu.append(new MenuItem({label: 'MenuItem2', type: 'checkbox', checked: true}))
    menu.popup(mainWindow)
  })
```

Right click on the running window and select `MenuItem1`, the log `item 1 clicked` should print but doesn't.
",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-02-02T21:45:17Z,2018-03-08T14:37:24Z,gshahbazian,codebytere;bpasero;PalmerAL;MarshallOfSound,ckerr;alexeykuzmin,,codebytere,,codebytere,
electron/electron,11833,"Closing OSR devtools in software rendering mode causes OnPaint callback for transparent window to be permanently filled with white background * Electron version: 1.8.2beta5
* Operating system: Windows 32-bit

### Expected behavior

After closing devtools, OSR rendered window should remain transparent. This is the case with 1.7.12 (latest 1.7 version as of this bug report)

### Actual behavior

OSR rendered window is filled with white background.

### How to reproduce

`electron main.js` (with the following two files stuck somewhere). dev tools will open themselves. OSR onpaint gets the correct transparent window, until devtools is closed, at which point, background becomes permanently white, destroying transparency.

main.js:
```
const {app, BrowserWindow} = require('electron')
const fs = require('fs');

app.disableHardwareAcceleration()

var counter = 0;

let win
app.once('ready', () => {
  win = new BrowserWindow({
    webPreferences: {
      offscreen: true,
    },
    show: false,
    transparent: true,
    width: 800,
    height: 600,
    frame: false,
  })
  win.loadURL(`file://${__dirname}/index.html`);
  win.webContents.on('paint', (event, dirty, image) => {
    // updateBitmap(dirty, image.getBitmap())
    ++counter;
    fs.writeFile('bitmap' + counter + '.raw', image.getBitmap(), (err) => {
      if (err) throw err;
      console.log('It\'s saved!');
    });
  })
  win.webContents.setFrameRate(30)
  win.toggleDevTools();
})
```

index.html:
```
<!DOCTYPE html>
<html>
    <head>
        <meta charset=""UTF-8"">
        <title>OSR test</title>
        <style>
          html, body { background: rgba(0, 0, 0, 0); }
       </style>
    </head>
    <body><font color=#ffffff>testing</font></body>
</html>
```",brenca,platform/windows;bug :beetle:;version/1.8.x,2018-02-05T22:03:03Z,2018-02-21T10:54:36Z,vulture,codebytere;vulture;brenca,sofianguy,,brenca,,zcbenz,electron/electron#11439;
electron/electron,11849,"Windows: Unexpected titlebar for frameless and transparent windows We're seeing a bug where `BrowserWindows` created with `transparent: true, frame: false` show a title bar in various states of user interaction.

* Electron version: 1.8.2-beta.5 (not present on beta.4, like [due to this change](https://github.com/electron/electron/pull/11710))
* Operating system: Windows

### Expected behavior

`BrowserWindows` created with `transparent: true, frame: false` should never show a title bar.

### Actual behavior

`BrowserWindows` created with `transparent: true, frame: false` show a title bar in various states of user interaction.

![frameless](https://user-images.githubusercontent.com/1426799/35893110-5588740c-0b61-11e8-8d10-73838a1f88d7.JPG)

### How to reproduce

Run the following:

```sh
git clone https://github.com/felixrieseberg/electron-quick-start
git checkout frame-titlebar-issue
npm start
```

Then, select the window in the taskbar, or click on it. The repro steps vary a bit, but you should eventually see a title bar.
",brenca,platform/windows;bug :beetle:;version/1.8.x,2018-02-07T01:16:41Z,2018-03-07T13:11:13Z,felixrieseberg,GryoMx;bbatliner;brenca;alexeykuzmin,felixrieseberg;alexeykuzmin,,felixrieseberg,,alexeykuzmin,
electron/electron,11858,"getPath(""logs"") use the wrong ""userData"" path Hi, getPath(""logs"") return the wrong path.
getPath(""logs"") return : %APPDATA% + ProductName from the executable of Electron
when it should return : ""userData"" (when edited) + productName from package.json

The consequence is that Electron creates an empty folder ""logs"" in the wrong place.

It seems to me that the problem has occurred since this fix : #10911

* Electron version: 1.8.2 (since 1.8.2-beta.2)
* Operating system: Windows 7 64 bit",codebytere,platform/windows;bug :beetle:;version/1.8.x;2-0-x,2018-02-08T01:46:53Z,2019-04-19T05:04:59Z,KevinRouchut,MarshallOfSound;pronebird;tbenyon;christianp;bingqiao;daniloprates;KevinRouchut;kspearrin;Mic75;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,11969,"net::ERR_INSECURE_RESPONSE * Electron version: 1.8.2
* Operating system: Windows 10

### Expected behavior

window.fetch should work with an https URL

### Actual behavior

window.fetch produces `net::ERR_INSECURE_RESPONSE` with an https URL that works just fine in plain Chrome. There is no newer version of Electron to target.

### How to reproduce

This is the repository, but there's quite a lot of stuff in there: https://github.com/IAmPicard/StarTrekTimelinesSpreadsheet . The issue occurs when running a simple window.fetch on particular host (https).

Found this [old article](http://rion.io/2017/01/17/when-insecure-responses-and-certificate-transparency-completely-break-electron/) pointing to a potential issue with libchromiumcontent (if it's been more than 10 weeks since it was last rebuilt). However, I couldn't find a newer version of Electron to test against, to verify if this is the same problem.

If I add `app.commandLine.appendSwitch('ignore-certificate-errors');`, the call succeeds without problems and everything works as expected. But I don't want to release my app with that flag turned on, for obvious reasons.

Any chance we could get an update to electron if this is indeed related to an outdated libchromiumcontent ? Any other workarounds that don't involve compromising security?

Thanks!",deepak1556,bug :beetle:;version/1.8.x;platform/all;chromium,2018-02-20T06:41:39Z,2019-01-15T22:12:01Z,IAmPicard,vulture;alexeykuzmin;deepak1556;sofianguy;JustinPierce;IAmPicard;nous-,deepak1556;alexeykuzmin,,deepak1556,,sofianguy,
electron/electron,12025,"Regression: Invisible menu items no longer work via their accelerator keys With Electron `1.8`, it was possible to create an *invisible* menu item in the application menu and, assuming it was still enabled, it could be invoked via its accelerator key. This provided a mechanism for creating application-wide shortcut keys that were independent from content.

For example, this menu-item template worked just fine:

                {
                    visible: false,
                    accelerator: ""F12"",
                    click: () => {
                        mainWindow.webContents.openDevTools({ mode: ""detach"" });
                    }
                },

Since upgrading to `Electron2.0.0-beta.1`, this no longer works. Instead, I have to make the menu item visible and give it a name in order for it to be triggered by its accelerator key:

                {
                    visible: true,
                    label: ""Developer Tools"",
                    accelerator: ""F12"",
                    click: () => {
                        mainWindow.webContents.openDevTools({ mode: ""detach"" });
                    }
                },

Is this just a regression or is this by design? If it is by design, is there any way to achieve window-level shortcut keys without resorting to nasty `keydown` and `keyup` handlers on the content level?",codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;2-0-x,2018-02-23T14:24:14Z,2018-05-04T14:59:41Z,stephenmartindale,codebytere;stephenmartindale;abnerlee,sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,12047,"Context menu event: pageX/pageY positions are off * Electron version: 2.0.0-beta.1
* Operating system: Windows 10 and Ubuntu 16 (I cannot reproduce on macOS)

### Expected behavior

We use `event.pageX` and `event.pageY` to position the context menu under the mouse and this used to work fine in Electron 1.7.x. 

### Actual behavior

The coordinates can easily end up outside of the window. 

### How to reproduce

* electron quick start example
* open the renderer and add below code
* right click

=> the menu opens outside the window

```javascript
var electron = require(""electron"");
var menu = new electron.remote.Menu()
menu.append(new electron.remote.MenuItem({ label: 'MenuItem1', click: function () { console.log('item 1 clicked') } }))
menu.append(new electron.remote.MenuItem({ type: 'separator' }))
menu.append(new electron.remote.MenuItem({ label: 'MenuItem2', click: function () { console.log('item 2 clicked') }, type: 'checkbox', checked: true }))

window.addEventListener('contextmenu', function (e) {
    e.preventDefault()
    menu.popup({ window: electron.remote.getCurrentWindow(), x: e.pageX, y: e.pageY })
}, false)
```",codebytere,platform/windows;platform/linux;component/menu;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;2-0-x,2018-02-26T11:42:10Z,2018-03-09T01:36:27Z,bpasero,zcbenz;bpasero,codebytere;alexeykuzmin,alexeykuzmin,codebytere,,zcbenz,
electron/electron,12150,"-webkit-app-region: drag prevents clicks on overlapping browser view * Electron version: 1.8.2
* Operating system: macos 10.13.3

Reproducing repo: https://github.com/ibash/electron-webkit-app-drag

Demonstrates a bug where `-webkit-app-region: drag` causes a browser view in front of it to miss click events. Oddly - it does not prevent hover events.

Steps:
1. Clone https://github.com/ibash/electron-webkit-app-drag, `yarn install`, `yarn start`
2. Click ""button1""
3. Click ""button2""

Expected:

Clicking button1 or button2 pops up an alert: ""button clicked!""

Actual:

Only clicking button2 pops up an alert: ""button clicked!""
",poiru,platform/macOS;bug :beetle:;version/1.8.x,2018-03-06T23:51:50Z,2018-03-20T14:40:28Z,ibash,ibash;jlfwong;MarshallOfSound;poiru,sofianguy,,poiru,,jkleinsc,
electron/electron,12230,"Format selection in Save/Open dialog causes crash Electron version: 2.0.0-beta.2
Operating system: macOS 10.13.3

**Expected behavior**
In dialogs (dialog.showSaveDialog(), dialog.showOpenDialog()) Format selector should work.

**Actual behavior**
Selecting other format from the list causes app crashing. Sometimes (in open dialog) it works, but in most cases it crashes.

**How to reproduce**
Call save or open dialog with e.g. this filter - filters: [{ name: 'HTML files', extensions: ['html', 'htm']}] and try to select ""html"".",codebytere,platform/macOS;bug :beetle:;2-0-x;semver/major,2018-03-12T18:06:42Z,2018-05-03T18:11:52Z,teslor,codebytere;teslor;jonathon-love,sofianguy;codebytere;ckerr,ckerr,codebytere,,codebytere,
electron/electron,12275,"Invisible menu on Linux <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.3
* Operating system: Ubuntu 16.04.04 LTS

### Expected behavior

App menu should be visible

### Actual behavior

App menu is invisible

### How to reproduce

- Run `electron`
- Observe that the app menu is invisible. It is still possible to open submenus.

![screenshot from 2018-03-14 17-01-18](https://user-images.githubusercontent.com/19880051/37415303-7296c25e-27ab-11e8-8284-d213c8bf5230.png)
",ckerr,platform/linux;bug :beetle:;2-0-x;3-0-x;4-2-x;8-x-y,2018-03-14T16:16:58Z,2021-03-08T20:56:32Z,alespergl,bpasero;ckerr;electron-triage;alespergl;alexeykuzmin;jainsuchita;johnosbb,alespergl;sofianguy;ckerr;electron-triage,electron-triage,ckerr,,alexeykuzmin,
electron/electron,12283,WebFrame is being leaked on destruction of render processes https://cs.chromium.org/chromium/src/content/renderer/render_process_impl.cc?dr=C&l=195,nitsakh,bug :beetle:;platform/all;chromium,2018-03-15T02:27:25Z,2021-11-10T12:29:10Z,alexeykuzmin,nitsakh;alexeykuzmin;miniak,deepak1556;sofianguy,sofianguy,alexeykuzmin,,miniak,
electron/electron,12302,"GTK3: file dialogs are causing UI freeze (Antergos Linux) * Electron version: 2.0.0-beta.3
* Operating system: Antergos Linux (4.15.9-1-ck)

### Expected behavior

File dialogs open normally and the UI does not freeze. 

### Actual behavior

File dialogs cause the window and menu to freeze. 

### How to reproduce

This was reported from @l0k1verloren via https://github.com/Microsoft/vscode/issues/45542#issuecomment-372916724

When the folder dialog opened nothing rendered and the menus didn't respond.

Initial startup:

![image](https://user-images.githubusercontent.com/20619963/37386247-474f06b0-2760-11e8-95fd-c02f28f91470.png)

After opening a (golang) repository folder:

![image](https://user-images.githubusercontent.com/20619963/37386283-60ba1ae0-2760-11e8-9344-a1917be0ceb0.png)

/cc @ckerr ",ckerr,platform/linux;blocked/need-info 閴;bug :beetle:;2-0-x,2018-03-15T09:42:38Z,2018-03-24T06:10:03Z,bpasero,ckerr;l0k18;bpasero,sofianguy;ckerr,,ckerr,,bpasero,
electron/electron,12308,"Transparency from browserWindow.capturePage is lost after calling nativeImage.resize * Electron version: 2.0.0beta3 & 1.8.3
* Operating system: OSX & Windows 10 64bit

### Expected behavior

Resizing a nativeImage that is a product of calling BrowserWindow.capturePage should maintain transparency in all cases, not just when hardware acceleration is disabled

### Actual behavior
Resizing a nativeImage that is a product of calling BrowserWindow.capturePage converts tranparent pixels to black. If you instantiate your app disabling the gpu / hardware acceleration (app.disableHardwareAcceleration) it works as one would expect.

### How to reproduce
```
git clone https://github.com/countravioli/electron-native-image-resize-transparency-bug
cd electron-native-image-resize-transparency-bug
npm install
npm start
npm run start-works
```

npm start - will run the app normally, illustrating the bug. Two images are written in the directory at the same level as app.js (original.png and resized.png)
npm run start-works - will run the app with disableHardwareAcceleration showing things work. The same to pngs are created.

The app will quit when its done. If you are on mac the pngs will open in your default application associated with the file type. 
",nitsakh,platform/windows;platform/macOS;bug :beetle:;version/1.8.x;2-0-x,2018-03-15T19:04:24Z,2018-04-10T10:07:16Z,countravioli,nitsakh,sofianguy,,sofianguy,,zcbenz,
electron/electron,12311,"Web Audio Bug With Removing 'Default' Audio Output on Windows OS * Electron version: 1.7.8 - 2.0.0 beta 4
* Operating system: Windows 10

### Expected behavior

When the 'default output' for the OS is removed, electron should fall back to some other device, and the audio stream for the input device should not be corrupted.

### Actual behavior

Removing the 'default' output device corrupts the audio of the app.

### How to reproduce

```bash
git clone https://github.com/AGiantSquid/electron-quick-start.git
cd electron-quick-start/
yarn / npm install
yarn start / npm start
```

Start with a computer with Windows installed. The bug will be easiest to see with at least 2 devices attached. In your Windows settings, check which audio device is set to 'default' for output. Your default for input does not matter.

Start up electron like normal. When you talk into your mic, you should see the number 0 on the screen become some higher number corresponding to how loud you are talking. You should also hear yourself from the 'default' audio device. 

Now, remove the device that is set to 'default' for output on your os. You will see that the number reflecting your volume freezes and the audio stops. It becomes impossible to recover the audio connection for the duration of the session.

This is not normal. If you open index.html in Chrome, you will see that it will fall back to another device and your stream will continue, uninterrupted.",nornagon,platform/windows;platform/macOS;blocked/need-info 閴;bug :beetle:;version/1.7.x;2-0-x,2018-03-15T21:00:26Z,2019-08-19T19:08:54Z,AGiantSquid,ckerr;sofianguy,ckerr;sofianguy;codebytere,,sofianguy,,sofianguy,
electron/electron,12322,"session.clearStorageData cannot clear localstorage in file protocol without origin option * Electron version: 1.8.3 , 2.0.0-beta.2
* Operating system: osx 10.11.6

### Expected behavior

Exectue these code on `file://index.html`

````
const { session } = require('electron').remote
session.defaultSession.clearStorageData({
  // without set origin options
  storages: ['localstorage', 'caches', 'indexdb']
})
````

All local data should be removed.

### Actual behavior

Local storage data still exists. But cookies and indexdb were removed successfully.

If I set origin: `file://`, it works only for `file://` origin.

### How to reproduce

https://github.com/ekoneko/electron-clear-localstorage-bugreport",felixrieseberg,platform/macOS;bug :beetle:;version/1.8.x;blocked/upstream 閴;2-0-x;status/confirmed,2018-03-16T11:48:00Z,2018-11-02T11:32:52Z,ekoneko,felixrieseberg;deepak1556;ekoneko;ckerr;couranos,felixrieseberg;sofianguy;ckerr,,felixrieseberg,,ekoneko,
electron/electron,12366,"Tray icon is always highlighted with dark menu bar on macOS * Electron version: 2.0.0-beta.4
* Operating system: macOS 10.13.3

Tray icon highlighting works as expected with the light menu bar, but with the dark menu bar it's always highlighted. I believe this is a regression in 2.0 as it does not occur 1.8.4 or earlier.

Seen here in the https://github.com/electron/electron-api-demos app with the Electron version bumped to 2.0.0-beta.4:

![screen recording 2018-03-20 at 07 10 am](https://user-images.githubusercontent.com/5355/37651547-d936c8e4-2c0e-11e8-8163-372ba624fbf3.gif)

Seeing the same behavior in our Basecamp 3 app while testing 2.0.",codebytere,platform/macOS;component/tray;bug :beetle:;2-0-x,2018-03-20T11:20:14Z,2018-03-21T23:03:58Z,javan,MarshallOfSound;konrad-ch,sofianguy,,codebytere,,codebytere,
electron/electron,12380,"Electron 2.0.x: running with ELECTRON_ENABLE_LOGGING=1 freezes window (Linux) * Electron version: 2.0.0-beta.5
* Operating system: Ubuntu 17

### Expected behavior

It should not freeze the window.

### Actual behavior

Window freezes right on startup.

### How to reproduce

* `export ELECTRON_ENABLE_LOGGING=1`
* `./electron`

results in:

![image](https://user-images.githubusercontent.com/900690/37697140-604a81be-2cdb-11e8-8ceb-7bdc4710e9d7.png)
",ckerr,bug :beetle:;2-0-x,2018-03-21T06:42:18Z,2018-03-26T17:35:11Z,bpasero,bpasero;zcbenz;ckerr;Kagami;joaomlneto;Exidex,ckerr;sofianguy,,ckerr,,ckerr,
electron/electron,12405,"`BrowserWindow.getFocusedWindow()` returns `null` when DevTools is undocked and focused <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.5
* Operating system: macOS 10.13.3

### Expected behavior

<!-- What do you think should happen? -->

Calling `BrowserWindow.getFocusedWindow()` when DevTools is undocked and focused should return the owner window. Technically DevTools is the focused window, but it's not a normal window and it breaks expectations, and causes issues with differing behavior in development and production, as it's normal to not open DevTools in production.

Alternatively, there should be an option in `getFocusedWindow()` to ignore DevTools windows, preferably set to `true` by default. But I would strongly prefer this just being handled by Electron by default.

### Actual behavior

Calling `BrowserWindow.getFocusedWindow()` when DevTools is undocked and focused returns `null`.

<!-- What actually happens? -->

### How to reproduce

```js
const electron = require('electron');

electron.app.on('ready', () => {
	const win = new electron.BrowserWindow();
	win.webContents.openDevTools({mode: 'undocked'});
	setTimeout(() => {
		console.log('Focused window', electron.BrowserWindow.getFocusedWindow());
		//=> null
	}, 1000);
});
```

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",nitsakh,platform/macOS;bug :beetle:;version/1.8.x;2-0-x,2018-03-22T08:24:24Z,2018-04-06T13:21:33Z,sindresorhus,sindresorhus;marianoweber;ckerr,ckerr;sofianguy,sofianguy,nitsakh,,codebytere,
electron/electron,12416,"shell.openExternal passes console on Windows `shell.openExternal` opens target processes as true child processes and passes the console. In practice, that means that environment variables set for your app are passed to the child processes. 

Here's an example:

閳モ挋鐕硂ur app sets `process.env.NODE_ENV=""development""`
閳モ挋鐕ow, using `shell.openExternal`, you open a link (`https://google.com`)
閳 If the system's default browser wasn't already running, it will now be launched with `NODE_ENV=""development""`

* Electron version: 1.8.5, 2.0.0-beta
* Operating system: Windows, all versions

![pasted image at 2018_03_22 04_30 pm](https://user-images.githubusercontent.com/1426799/37803840-5e781964-2dee-11e8-8388-20fc7e97320b.png)

### Expected behavior

`shell.openExternal` should not pass the current console and launch processes detached.

### Actual behavior

`shell.openExternal` passes the current console and environment.

### How to reproduce

```sh
  $ git clone https://github.com/felixrieseberg/electron-quick-start -b passed-env
  $ npm install
  $ npm start || electron .
```

Then, do the following:
1) Close your browser
2) Open [Process Explorer](https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer)
3) In the app, click the ""Launch Browser and Open Google"" button
4) In Process Explorer, select your browser, right-click, and open the ""Properties"". Switch the panel to `Environment` to see your whole environment passed to your browser.",nornagon,platform/windows;blocked/need-info 閴;bug :beetle:;version/1.8.x;2-0-x;status/confirmed,2018-03-22T23:31:10Z,2019-08-19T19:07:49Z,felixrieseberg,nornagon;ckerr;sofianguy;phosphore,felixrieseberg;sofianguy;ckerr,,nornagon,,sofianguy,
electron/electron,12423,"Warning from HTML dialog tag: ""GtkDialog mapped without a transient parent. This is discouraged."" I get the below message when opening a hidden dialog (used standard HTML tag dialog)
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.

* Electron version: electron beta 5
* Operating system:  OpenSuse 42.3 Linux



### Actual behavior
Actually the dialog works as expected without any issues.  I don't see this on 1.8.4 so I can only assume it has something to do with beta 5.  Also I see the message in the terminal (not in the Dev tools console) while in dev mode (not ready for production at this time).



",ckerr,platform/linux;bug :beetle:;version/1.8.x;2-0-x;status/confirmed,2018-03-23T22:43:14Z,2019-08-09T03:24:22Z,jfabiani,jfabiani;hassansaleh31;Stuyk;kmaher9;neytjs;ckerr;sofianguy;betamos;kosarev;ig3;manavmehta;Akela223;BATMAH69;ulvido;marcoippolito;raddevus;niikoo;avishkarabhishek786;niksteff;stalina;joehonton;jaysaurus;iamthe-Wraith,ckerr;sofianguy,sofianguy,ckerr,,sofianguy,
electron/electron,12425,"Dialog multiSelections do not allow contiguous selection under MacOS Using `showOpenDialog` with the properties `['openFile', 'multiSelections']` (or 'openDirectory') does allow for multiple selection of individual files if holding down the Command key or dragging with the mouse, however you are not able to selection a range by shift+clicking, and perhaps more annoyingly, you are not able to select all files by using CMD+A

* Electron version: 1.8.4
* Operating system: MacOS

### Expected behavior

Pressing CMD+A in a file open dialog should select all items

### Actual behavior

CMD+A is a no-op.  Additionally, selecting the first item and then SHIFT+Clicking another does not select the items in between.  The only way to select all items is to CMD+Click them each individually or to selection drag with the mouse/trackpad.   Too cumbersome when there are many items to select.

### How to reproduce

```
import { remote } from 'electron'

const options = {
  properties: ['openFile', 'multiSelections'], // same happens with openDirectory
  defaultPath,
  filters,
}

remote.dialog.showOpenDialog(options, (sourcePaths) => { ... })
```
",sethlu,platform/macOS;bug :beetle:;version/1.8.x,2018-03-24T05:45:47Z,2018-04-11T01:58:23Z,dkadrios,MarshallOfSound;dkadrios;sethlu,sofianguy,sofianguy,sethlu,,dkadrios,
electron/electron,12438,"Electron should not spam the terminal with internal log events <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.5
* Operating system: macOS 10.13.3

### Expected behavior

I expected nothing to be shown in the terminal by default.

<!-- What do you think should happen? -->

### Actual behavior

Electron spams the terminal:

```
2018-03-26 22:28:45.642 Electron[28904:4880139] *** WARNING: Textured window <EventDispatchingWindow: 0x7ff4c6fcbd60> is getting an implicitly transparent titlebar. This will break when linking against newer SDKs. Use NSWindow's -titlebarAppearsTransparent=YES instead.
2018-03-26 22:28:45.904 Electron Helper[28912:4880190] Couldn't set selectedTextBackgroundColor from default ()
```

<!-- What actually happens? -->

### How to reproduce

Run this and look at the terminal output:

```js
const electron = require('electron');

electron.app.on('ready', () => {
	const win = new electron.BrowserWindow({show: true});
	win.loadURL('https://google.com');
	win.openDevTools();
});
```

---

In my private app, I also get other events logged, when I show DevTools before the page has loaded:

```
[26570:0326/221530.524351:ERROR:CONSOLE(7574)] ""Extension server error: Operation failed: : has no execution context"", source: chrome-devtools://devtools/bundled/inspector.js (7574)
[26570:0326/221531.517350:ERROR:CONSOLE(7574)] ""Extension server error: Operation failed: : has no execution context"", source: chrome-devtools://devtools/bundled/inspector.js (7574)
[26570:0326/221532.520244:ERROR:CONSOLE(7574)] ""Extension server error: Operation failed: : has no execution context"", source: chrome-devtools://devtools/bundled/inspector.js (7574)
[26570:0326/221533.517304:ERROR:CONSOLE(7574)] ""Extension server error: Operation failed: : has no execution context"", source: chrome-devtools://devtools/bundled/inspector.js (7574)
[26570:0326/221534.519767:ERROR:CONSOLE(7574)] ""Extension server error: Operation failed: : has no execution context"", source: chrome-devtools://devtools/bundled/inspector.js (7574)
```

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-03-26T15:32:23Z,2018-04-05T18:31:49Z,sindresorhus,deepak1556;ckerr;codebytere;sindresorhus;danieltian;anderconal,sofianguy,,codebytere,,codebytere,
electron/electron,12495,"macOS localhost 404 Electron version: v2.0.0-beta.6
Operating system: macOS 10.13.4

### Expected behavior

index.htm is found

### Actual behavior

index.htm is not there (404 error)

### How to reproduce

[macOS localhost 404.zip](https://github.com/electron/electron/files/1866452/macOS.localhost.404.zip)

### Information

I am running a local webserver when starting Electron. The exact same code works just fine under both Windows and Linux, sucessfully loading index.htm as localhost:9000/resources/app/index.htm. However, on macOS index.htm cannot be found. I am able to reach localhost:9000 via Safari, so the server is sucessfully running (so I assume at least). I can't reach any files though. I am out of ideas, so im asking for help here. 


",nitsakh,platform/macOS;bug :beetle:;version/1.8.x;2-0-x,2018-04-01T15:35:27Z,2018-04-04T18:42:12Z,GhostlyDark,ckerr;nitsakh;GhostlyDark,sofianguy;ckerr,,sofianguy,,nitsakh,
electron/electron,12529,"app.setBadgeCount() after app.dock.hide() -> app.dock.show() has no visual effect * Electron version: 1.8.4
* Operating system: OS X (10.13.3)

### Expected behavior

I have an application that 'runs in the background' by hiding the BrowserWindow and dock icon when closed (see sample code below). I'm showing a badgeCount on the dock icon when the window is open, and expect that the badge count should be maintained between hide() and show() calls.

### Actual behavior

The app icon badge disappears after the initial call to app.dock.hide(). Subsequent app.dock.show() will bring back the app icon in the dock, but with no badging.

I tried resetting the badgeCount using app.setBadgeCount() every time I call app.dock.show(), but the method seems to have no effect once the dock icon has been hidden (and re-shown).

### How to reproduce

The code I'm using to hide and show the dock:

```javascript
function show() {
    if (!mainWindow) return;
    if (mainWindow.isMinimized()) mainWindow.restore();
    if (app.dock) app.dock.show();

    mainWindow.show();
    mainWindow.focus();

    log.info('badge currently shows', app.getBadgeCount());   // badge currently shows 3
    log.info('trying to set badge count', state.badgeCount);  // trying to set badge count 3
    log.info(app.setBadgeCount(state.badgeCount));            // true
}

function hide() {
    if (!mainWindow) return;
    if (app.dock) app.dock.hide();
    mainWindow.hide();
}

state.badgeCount = 3;

app.setBadgeCount(state.badgeCount) // 3 is shown on dock icon
hide(); // badge disappears as app icon fades away (maybe desired behavior idk)
show(); // app icon reappears, but without badging
```
",sethlu,platform/macOS;blocked/need-info 閴;bug :beetle:;version/1.8.x,2018-04-04T08:57:30Z,2019-01-15T20:43:06Z,ctotheameron,ctotheameron;sethlu;sofianguy,sofianguy,,sethlu,,sofianguy,
electron/electron,12545,"End event of net.request Response is never emitted <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.6
* Operating system: Windows 10

### Expected behavior

HTTP Response should emit ""end"" event to let the application know that the entire body was received.

### Actual behavior

I can see that data is received and actually on this very specific call the whole reponse body is passed to the data callback at once, but i cannot assume that this will always be the case. So i sort of rely on the ""end"" event.

### How to reproduce

Im follwong this example: https://github.com/electron/electron/blob/master/docs/api/net.md#net

Im trying to use the [net](https://github.com/electron/electron/blob/master/docs/api/net.md) package (from the rendering process) via the remote interface to make a REST call to a webservice, like so:

```javascript

const net = require(""electron"").remote.net;
const requestOptions = {
     auth: ""myuser:mypwd"", 
     url: ""https://my.rest.service/oauth/token"", 
     method: ""POST""
};

const request = net.request(requestOptions);
request.on(""response"", function(response) {
     console.log(response.statusCode);

     response.on(""data"", function(data) {
          console.log(""data: "" data);
     });
     response.on(""end"", function {
          // will never get called
          console.log(""end"");
     });
});
request.end();
```
",codebytere,platform/windows;bug :beetle:;2-0-x,2018-04-05T19:08:40Z,2018-04-11T14:44:28Z,martyglaubitz,codebytere;Annihil;chemzqm;nornagon;Bakhaow;blacksider;ok-dok;martyglaubitz;MarshallOfSound;mikilion;Mr-Wallet,sofianguy,,codebytere,,codebytere,
electron/electron,12602,"Sending sparse arrays over IPC <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->
Electron IPC does not seem to handle sparse arrays correctly. Missing elements seem to be ignored by making the array dense before transfering it via IPC.

* Electron version: 1.8.4
* Operating system: Windows 10

### Expected behavior

Main should print `renderer -> main [ <1 empty item>, 'msg' ]`
Renderer should print `main -> renderer Array(2)` with the array having `1: ""msg""` and `length: 2`

### Actual behavior

Main prints `renderer -> main [ 'msg' ]`
Renderer prints `main -> renderer Array(1)` with the array having `0: ""msg""` and `length: 1`

### How to reproduce

```
git clone https://github.com/conradreuter/electron-ipc-sparse-array-bug
cd electron-ipc-sparse-array-bug
npm install
npm start
```

",felixrieseberg,platform/windows;blocked/need-info 閴;bug :beetle:;version/1.8.x;status/confirmed,2018-04-12T15:29:49Z,2019-01-15T20:43:38Z,conradreuter,sofianguy,sofianguy;ckerr,ckerr,felixrieseberg,,sofianguy,
electron/electron,12634,"window.open with nativeWindowOpen option causes memory leak <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.7
* Operating system: Windows 10 x64

### Expected behavior

<!-- What do you think should happen? -->
When `webPreferences.nativeWindowOpen` is set to true, BrowserWindows opened by `window.open`'s memory will be released after be closed.

### Actual behavior

<!-- What actually happens? -->
The memory is not released and caused memory leak

### How to reproduce
- Clone https://github.com/KochiyaOcean/electron-bugs/tree/native-open-memory-leak
- Run `electron . ` in the cloned repo
- Memory usage of electron process will be increasing in task manager

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",zcbenz,platform/windows;bug :beetle:;version/1.8.x;2-0-x;3-0-x;app-feedback-program;4-2-x,2018-04-17T07:38:28Z,2018-10-25T06:31:08Z,KochiyaOcean,KochiyaOcean;MarshallOfSound;GhostDev26;VishwasShashidhar;zcbenz;orange4glace,sofianguy;MarshallOfSound,,MarshallOfSound;sofianguy;zcbenz,MarshallOfSound;sofianguy;zcbenz,zcbenz,electron/electron#15666;
electron/electron,12636,"Main app menu is buggy on macOS if user interacts with it while it's being updated <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0-beta.7
* Operating system: macOS 10.13.4

### Expected behavior

<!-- What do you think should happen? -->

I expected Electron to not update the menu while it's being interacted with.

It should behave like native and not update when open.

### Actual behavior

![electron-menu](https://user-images.githubusercontent.com/170270/38865525-3b962074-4268-11e8-88f5-a2b9943a9718.gif)


### How to reproduce

Run this and try to click the Electron menu and hover Bar menu item multiple times.

```js
const electron = require('electron');

const buildMenu = () => {
	electron.Menu.setApplicationMenu(electron.Menu.buildFromTemplate([{
		label: 'Foo',
		submenu: [
			{
				label: 'Bar'
			}
		]
	}]));
};

electron.app.on('ready', () => {
	setInterval(buildMenu, 1000);
});
```

Since Electron has no good way to make dynamic menus, rebuilding it based on events in the renderer process is the only way to keep the menu in sync with the content in the renderer.",sethlu,platform/macOS;bug :beetle:;2-0-x,2018-04-17T10:56:46Z,2018-05-17T01:19:29Z,sindresorhus,petrbrzek,sofianguy,,sethlu,,MarshallOfSound,
electron/electron,12737,"showOpenDialog() unexpected behaviors * Electron version: 2.0.0-beta.8 and lower
* Operating system: macOS

### Expected behavior

Using `filters` option, all filters should properly appear, showing defined names and extensions in a dropdown list.

### Actual behavior

There is a pending #11959 which may fix this problem.
Problem: when using a wildcard filter, other filters don't appear.

Another problem is that after trying to quit (Cmd+Q) when the dialog is open it will then be impossible to quit the app without the ""force quit"" option.

### How to reproduce

For instance, try:
```javascript
	filters: [
		{ name: ""All Files"", extensions: [""*""] },
		{ name: ""Interchange File Format"", extensions: [""lbm"", ""iff"", ""bl1"", ""bl2"", ""bl3""] },
		{ name: ""Atari Degas Elite"", extensions: [""pi1"", ""pi2"", ""pi3"", ""pc1"", ""pc2"", ""pc3""] }
	]
```

Nothing will appear in the dialog. Now remove the first filter and the filters will appear but still showing extensions only as stated in #12571.

Thanks!",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-04-27T18:29:51Z,2018-05-16T23:11:49Z,chrilith,codebytere;chrilith;AdrianoFerrari,sofianguy,,codebytere,,codebytere,
electron/electron,12820,"Drag-Drop making element go black and crash <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.0
* Operating system: Fedora Linux 28 - 4.16.5-300.fc28.x86_64
* Hardware: Intel HD Graphics 4400

<!-- If this used to work -->
* Last known working Electron version:
1.8.6 (but flashes black at the beginning of the drag)
Message on debug 1.8.6:
`[6956:0503/113418.226485:ERROR:buffer_manager.cc(453)] [.DisplayCompositor-0x345f2e791700]GL ERROR :GL_INVALID_OPERATION : glBufferData: <- error from previous GL command`

### Expected behavior
Drag and drop without crash the Electron, and the element not turn to black.

### Actual behavior
When drag an element it turn black, freeze Electron and the black element stay on screen even through other programs. No messages on debug, just freeze.
<!-- What actually happens? -->

### How to reproduce

Start any project with a button with attribute draggable=""true"". Start dragging it, done.

_ckerr edit: duplicate bug https://github.com/electron/electron/issues/13384 has a repro repo_
",ckerr,platform/linux;blocked/need-info 閴;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;2-0-x;status/confirmed;3-0-x;4-2-x,2018-05-03T15:00:52Z,2021-03-08T04:35:24Z,leotada,codebytere;ruslang02;christianbundy;SebT;bpasero;daviwil;leotada;Brootux;ckerr;dev-zetta;anchepiece;Serisium;lsl;TitouanT;daniel-j,sofianguy,,sofianguy,,electron-triage,
electron/electron,12862,"Destroying Tray while interacting with one of its events causes sporadic crashes * Electron Version: 1.8.4 and 2.0.0
* Operating System (Platform and Version): macOS 10.13.4
* Last known working Electron version: n/a

**Expected Behavior**
Be able to destroy tray icon without crashes from interacting with it.

**Actual behavior**
Destroying a tray after performing an action from that tray will cause sporadic crashes. When interacting with the tray icon's click event to destroy, we get crashes stemming from `atom::TrayIcon::NotifyMouseExited(gfx::Point const&, int)` and `atom::api::Tray::OnClicked(gfx::Rect const&, gfx::Point const&, int)`. When interacting with a tray icon's context menu, we get crashes stemming from `atom::AtomMenuModel::MenuWillClose()`.

This doesn't happen every time you interact with the tray events. I'd say 1/3 of the time it will crash the app. Even one time I could never get it to happen at all until I restarted the app. Very inconsistent. Maybe some type of race condition?

**To Reproduce**
Get quick start example here: https://github.com/kspearrin/electron-quick-start

```
npm install
npm start
```

Select the Options -> Hide to Tray menu option to hide the main window and make the tray icon appear. Then click the tray icon to make the window show again. Do this several times until the app crashes.

Sample code from repo:

https://github.com/kspearrin/electron-quick-start/commit/964a30e5f9e48483dfbbbfa07cb28c9698cabf4f

```
  menu = Menu.buildFromTemplate([
    {
      label: 'Main'
    },
    {
      label: 'Options',
      submenu: [
        {
          label: 'Hide to Tray',
          click: function() {
            mainWindow.hide()
            makeTray()
          }
        }
      ]
    }
  ])
  Menu.setApplicationMenu(menu)


...


function makeTray() {
  if(tray != null) {
    return
  }

  tray = new Tray('trayTemplate.png')

  tray.on('click', function() {
    if(tray != null) {
      tray.destroy()
      tray = null
    }
    if(!mainWindow.isVisible()) {
      mainWindow.show()
    }
  })
}
```

**Additional Information**

This only seems to be a problem on macOS.

Click event crash:

<details>

```
Process:               Electron [2101]
Path:                  /Users/USER/*/Electron.app/Contents/MacOS/Electron
Identifier:            com.github.electron
Version:               1.8.4 (1.8.4)
Code Type:             X86-64 (Native)
Parent Process:        ??? [2099]
Responsible:           Electron [2101]
User ID:               501

Date/Time:             2018-05-08 10:47:57.982 -0400
OS Version:            Mac OS X 10.13.4 (17E202)
Report Version:        12
Anonymous UUID:        EB206DA2-6DE4-1263-B62D-BF9731D8EBC0

Sleep/Wake UUID:       AC7B1DF2-6688-4104-B317-C60FEEBF362A

Time Awake Since Boot: 370000 seconds
Time Since Wake:       1000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       EXC_I386_GPFLT
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [0]

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework 	0x0000000109700b44 0x109492000 + 2550596
1   com.github.electron.framework 	0x000000010974cd1e 0x109492000 + 2862366
2   com.github.electron.framework 	0x000000010954455c 0x109492000 + 730460
3   com.github.electron.framework 	0x00000001095444f2 0x109492000 + 730354
4   com.github.electron.framework 	0x00000001095444d9 0x109492000 + 730329
5   com.github.electron.framework 	0x00000001095427db 0x109492000 + 722907
6   com.github.electron.framework 	0x000000010956d79d atom::TrayIcon::NotifyMouseExited(gfx::Point const&, int) + 45
7   com.github.electron.framework 	0x000000010956ec19 0x109492000 + 904217
8   com.apple.AppKit              	0x00007fff33556eb7 -[NSTrackingArea _dispatchMouseExited:] + 86
9   com.apple.AppKit              	0x00007fff33556db2 -[NSTrackingArea _mouseExited:] + 78
10  com.apple.AppKit              	0x00007fff33b3a46f -[NSApplication(NSEvent) sendEvent:] + 3031
11  com.github.electron.framework 	0x000000010953df7b 0x109492000 + 704379
12  com.apple.AppKit              	0x00007fff3339a8b5 -[NSApplication run] + 812
13  com.github.electron.framework 	0x00000001096ecb0e 0x109492000 + 2468622
14  com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
15  com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
16  com.github.electron.framework 	0x000000010996870f 0x109492000 + 5072655
17  com.github.electron.framework 	0x0000000109968530 0x109492000 + 5072176
18  com.github.electron.framework 	0x000000010996ad42 0x109492000 + 5082434
19  com.github.electron.framework 	0x00000001099643dc 0x109492000 + 5055452
20  com.github.electron.framework 	0x00000001098bb55b 0x109492000 + 4363611
21  com.github.electron.framework 	0x000000010b3543fc 0x109492000 + 32252924
22  com.github.electron.framework 	0x00000001098ba834 0x109492000 + 4360244
23  com.github.electron.framework 	0x000000010949490a AtomMain + 74
24  com.github.electron           	0x000000010948ff26 main + 38
25  libdyld.dylib                 	0x00007fff5e1cc015 start + 1

Thread 1:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 2:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 3:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 4:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 5:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 6:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 7:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e7538b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x000000010e7589e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x000000010e75cf4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x000000010e753097 0x10e528000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 8:
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010e6a9ee0 uv_sem_wait + 16
2   libnode.dylib                 	0x000000010e6604fd 0x10e528000 + 1279229
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 9:
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   libnode.dylib                 	0x000000010e6ae90a 0x10e528000 + 1599754
2   libnode.dylib                 	0x000000010e69fe78 uv_run + 152
3   libnode.dylib                 	0x000000010e661a43 0x10e528000 + 1284675
4   libnode.dylib                 	0x000000010e661709 node::inspector::InspectorIo::ThreadMain(void*) + 9
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 10:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010e6aa039 uv_cond_wait + 9
3   libnode.dylib                 	0x000000010e69e003 0x10e528000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 11:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010e6aa039 uv_cond_wait + 9
3   libnode.dylib                 	0x000000010e69e003 0x10e528000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 12:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010e6aa039 uv_cond_wait + 9
3   libnode.dylib                 	0x000000010e69e003 0x10e528000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 13:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010e6aa039 uv_cond_wait + 9
3   libnode.dylib                 	0x000000010e69e003 0x10e528000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 14:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.Foundation          	0x00007fff37f1ef26 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x00000001096ec96e 0x109492000 + 2468206
7   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
8   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
9   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
10  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
11  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
12  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
13  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 15:: DnsConfigService
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x00000001097527e9 0x109492000 + 2885609
2   com.github.electron.framework 	0x000000010975197d 0x109492000 + 2881917
3   com.github.electron.framework 	0x00000001096eb73f 0x109492000 + 2463551
4   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
5   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
6   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 16:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fff5e31e14a read + 10
1   com.github.electron.framework 	0x0000000109530b5f 0x109492000 + 650079
2   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 17:: TaskSchedulerServiceThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x00000001097527e9 0x109492000 + 2885609
2   com.github.electron.framework 	0x000000010975197d 0x109492000 + 2881917
3   com.github.electron.framework 	0x00000001096eb73f 0x109492000 + 2463551
4   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
5   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
6   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 18:: TaskSchedulerBackgroundWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974ab30 0x109492000 + 2853680
4   com.github.electron.framework 	0x000000010974ac61 0x109492000 + 2853985
5   com.github.electron.framework 	0x00000001097030e8 0x109492000 + 2560232
6   com.github.electron.framework 	0x00000001097037ad 0x109492000 + 2561965
7   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 19:: TaskSchedulerBackgroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974ab30 0x109492000 + 2853680
4   com.github.electron.framework 	0x000000010974ac61 0x109492000 + 2853985
5   com.github.electron.framework 	0x00000001097030e8 0x109492000 + 2560232
6   com.github.electron.framework 	0x00000001097037ad 0x109492000 + 2561965
7   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 20:: TaskSchedulerForegroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974ab30 0x109492000 + 2853680
4   com.github.electron.framework 	0x000000010974ac61 0x109492000 + 2853985
5   com.github.electron.framework 	0x00000001097030e8 0x109492000 + 2560232
6   com.github.electron.framework 	0x00000001097037ad 0x109492000 + 2561965
7   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 21:: Chrome_DBThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x0000000109975684 0x109492000 + 5125764
9   com.github.electron.framework 	0x00000001099757fb 0x109492000 + 5126139
10  com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
11  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 22:: Chrome_FileThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x00000001097527e9 0x109492000 + 2885609
2   com.github.electron.framework 	0x000000010975197d 0x109492000 + 2881917
3   com.github.electron.framework 	0x00000001096eb73f 0x109492000 + 2463551
4   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
5   com.github.electron.framework 	0x00000001099756b4 0x109492000 + 5125812
6   com.github.electron.framework 	0x0000000109975808 0x109492000 + 5126152
7   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
8   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
9   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
10  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
11  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 23:: Chrome_FileUserBlockingThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x00000001099756e4 0x109492000 + 5125860
9   com.github.electron.framework 	0x0000000109975815 0x109492000 + 5126165
10  com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
11  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 24:: Chrome_ProcessLauncherThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x0000000109975714 0x109492000 + 5125908
9   com.github.electron.framework 	0x0000000109975822 0x109492000 + 5126178
10  com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
11  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 25:: Chrome_CacheThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x0000000109975744 0x109492000 + 5125956
9   com.github.electron.framework 	0x000000010997582f 0x109492000 + 5126191
10  com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
11  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 26:: Chrome_IOThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x00000001097527e9 0x109492000 + 2885609
2   com.github.electron.framework 	0x000000010975197d 0x109492000 + 2881917
3   com.github.electron.framework 	0x00000001096eb726 0x109492000 + 2463526
4   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
5   com.github.electron.framework 	0x0000000109975774 0x109492000 + 5126004
6   com.github.electron.framework 	0x000000010997583c 0x109492000 + 5126204
7   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
8   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
9   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
10  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
11  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 27:: IndexedDB
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
9   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
10  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
11  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
12  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 28:: CompositorTileWorker1/83971
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010984b908 0x109492000 + 3905800
3   com.github.electron.framework 	0x000000010970d2ec 0x109492000 + 2601708
4   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 29:: AudioThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x00000001096ec68f 0x109492000 + 2467471
6   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
7   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
8   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
9   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
10  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
11  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
12  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 30:
0   libsystem_kernel.dylib        	0x00007fff5e31ccfa __select + 10
1   com.github.electron.framework 	0x00000001095b1d72 atom::NodeBindingsMac::PollEvents() + 210
2   com.github.electron.framework 	0x00000001095b140f atom::NodeBindings::EmbedThreadRunner(void*) + 63
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 31:: BrowserBlockingWorker1/77319
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x0000000109709006 0x109492000 + 2584582
4   com.github.electron.framework 	0x0000000109707f36 0x109492000 + 2580278
5   com.github.electron.framework 	0x000000010970d2ec 0x109492000 + 2601708
6   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 32:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.Foundation          	0x00007fff37f1ef26 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x00000001096ec96e 0x109492000 + 2468206
7   com.github.electron.framework 	0x00000001096ec12c 0x109492000 + 2466092
8   com.github.electron.framework 	0x0000000109701153 0x109492000 + 2552147
9   com.github.electron.framework 	0x00000001097226d9 0x109492000 + 2688729
10  com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
11  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
12  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
13  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 33:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.AppKit              	0x00007fff334e2fc4 _NSEventThread + 184
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 34:: TaskSchedulerForegroundWorker1
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974ab30 0x109492000 + 2853680
4   com.github.electron.framework 	0x000000010974ac61 0x109492000 + 2853985
5   com.github.electron.framework 	0x00000001097030e8 0x109492000 + 2560232
6   com.github.electron.framework 	0x00000001097037ad 0x109492000 + 2561965
7   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 35:: WorkerPool/15115
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974d646 0x109492000 + 2864710
4   com.github.electron.framework 	0x000000010974dad8 0x109492000 + 2865880
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 36:: WorkerPool/18439
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974d646 0x109492000 + 2864710
4   com.github.electron.framework 	0x000000010974dad8 0x109492000 + 2865880
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 37:: WorkerPool/25095
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974d646 0x109492000 + 2864710
4   com.github.electron.framework 	0x000000010974dad8 0x109492000 + 2865880
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 38:: WorkerPool/9995
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974d646 0x109492000 + 2864710
4   com.github.electron.framework 	0x000000010974dad8 0x109492000 + 2865880
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 39:: WorkerPool/36103
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x000000010974d646 0x109492000 + 2864710
4   com.github.electron.framework 	0x000000010974dad8 0x109492000 + 2865880
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 40:: Dispatch queue: NSCGSDisableUpdates
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.SkyLight            	0x00007fff57ff79f5 CGSUpdateManager::enable_updates_common() + 565
3   com.apple.SkyLight            	0x00007fff57f9bb28 CGSUpdateManager::enable_update(unsigned long long) + 320
4   libdispatch.dylib             	0x00007fff5e19a64a _dispatch_call_block_and_release + 12
5   libdispatch.dylib             	0x00007fff5e192e08 _dispatch_client_callout + 8
6   libdispatch.dylib             	0x00007fff5e1a7267 _dispatch_queue_serial_drain + 635
7   libdispatch.dylib             	0x00007fff5e19a1b6 _dispatch_queue_invoke + 373
8   libdispatch.dylib             	0x00007fff5e1a7f5d _dispatch_root_queue_drain_deferred_wlh + 332
9   libdispatch.dylib             	0x00007fff5e1abd71 _dispatch_workloop_worker_thread + 880
10  libsystem_pthread.dylib       	0x00007fff5e4e3fd2 _pthread_wqthread + 980
11  libsystem_pthread.dylib       	0x00007fff5e4e3be9 start_wqthread + 13

Thread 41:
0   libsystem_kernel.dylib        	0x00007fff5e31d292 __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e420e _pthread_wqthread + 1552
2   libsystem_pthread.dylib       	0x00007fff5e4e3be9 start_wqthread + 13

Thread 42:: BrowserBlockingWorker2/58903
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x0000000109709006 0x109492000 + 2584582
4   com.github.electron.framework 	0x0000000109707f36 0x109492000 + 2580278
5   com.github.electron.framework 	0x000000010970d2ec 0x109492000 + 2601708
6   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 43:: BrowserBlockingWorker3/24895
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x00000001096a141b 0x109492000 + 2159643
3   com.github.electron.framework 	0x0000000109709006 0x109492000 + 2584582
4   com.github.electron.framework 	0x0000000109707f36 0x109492000 + 2580278
5   com.github.electron.framework 	0x000000010970d2ec 0x109492000 + 2601708
6   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 44:: CachePoolWorker1/3419
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x0000000109708f71 0x109492000 + 2584433
3   com.github.electron.framework 	0x0000000109707f36 0x109492000 + 2580278
4   com.github.electron.framework 	0x000000010970d2ec 0x109492000 + 2601708
5   com.github.electron.framework 	0x00000001096f60b7 0x109492000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 45:
0   libsystem_pthread.dylib       	0x00007fff5e4e3bdc start_wqthread + 0
1   ???                           	0x0000006e6f697461 0 + 474315584609

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000001  rbx: 0x00007f9e03737f08  rcx: 0x0000000000000000  rdx: 0x0000000000000000
  rdi: 0x800007f900000000  rsi: 0x00007f9e03737f08  rbp: 0x00007ffee676bf30  rsp: 0x00007ffee676bf30
   r8: 0x00007f9e03518a60   r9: 0x0000000000000040  r10: 0x00007fff8f6e4728  r11: 0x00007f9e0697f710
  r12: 0x00007ffee676bff8  r13: 0x00007fff5d5a7e80  r14: 0x00007ffee676bf70  r15: 0x00007f9e03737f08
  rip: 0x0000000109700b44  rfl: 0x0000000000010286  cr2: 0x000000011b8b51ac
  
Logical CPU:     2
Error Code:      0x00000000
Trap Number:     13


Binary Images:
       0x10948f000 -        0x10948fff7 +com.github.electron (1.8.4 - 1.8.4) <C11B8E11-EDD2-37B9-9AB5-5FE9E97FFFFB> /Users/USER/*/Electron.app/Contents/MacOS/Electron
       0x109492000 -        0x10d474f03 +com.github.electron.framework (0) <954F1C6C-2AEA-30D2-BE41-84B5CFB95867> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x10d9e8000 -        0x10da02fff +com.github.Squirrel (1.0 - 1) <0A9F60FF-F2D2-364A-962A-65137E68760E> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x10da2a000 -        0x10da8dff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x10db02000 -        0x10db16fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x10db28000 -        0x10dd90fff +libffmpeg.dylib (0) <701E8887-223E-357E-8D44-272038AF555F> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x10e393000 -        0x10e393fff +desktopIdle.node (???) <ED041ACB-A428-3E3B-B20C-5DA3919DB699> /Users/USER/*/desktopIdle.node
       0x10e396000 -        0x10e39afff +keytar.node (???) <5810D2F6-5D75-3F87-90F4-02CB8B4CB3DC> /Users/USER/*/keytar.node
       0x10e48a000 -        0x10e4d49df  dyld (551.3) <AFAB4EFA-7020-34B1-BBEF-0F26C6D3CA36> /usr/lib/dyld
       0x10e528000 -        0x10f408ff3 +libnode.dylib (0) <D887239E-2626-3152-8FD6-5D25CF550A50> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib
       0x1161de000 -        0x1164cafff  com.apple.driver.AppleIntelHD3000GraphicsGLDriver (10.4.14 - 10.0.4) <FE57B18A-B034-3FB9-ABA5-D6D96B463142> /System/Library/Extensions/AppleIntelHD3000GraphicsGLDriver.bundle/Contents/MacOS/AppleIntelHD3000GraphicsGLDriver
       0x116697000 -        0x11674fffb  com.apple.AMDRadeonX3000GLDriver (1.66.31 - 1.6.6) <A21198BB-FFD8-3F1A-9DBE-0D179B5F5197> /System/Library/Extensions/AMDRadeonX3000GLDriver.bundle/Contents/MacOS/AMDRadeonX3000GLDriver
    0x7fff2e423000 -     0x7fff2e64bff3  ATIRadeonX3000SCLib.dylib (1.66.31) <83E4E3AA-493C-3F2E-9473-01ED87283B32> /System/Library/Extensions/AMDRadeonX3000GLDriver.bundle/Contents/MacOS/ATIRadeonX3000SCLib.dylib
    0x7fff31cd8000 -     0x7fff31eb7fff  com.apple.avfoundation (2.0 - 1535.42) <A4E74521-3C02-329A-BCB7-C2C4308DECD4> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff31eb8000 -     0x7fff31f71fff  com.apple.audio.AVFAudio (1.0 - ???) <ECE63BA3-4344-3522-904B-71F89677AC7D> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff32077000 -     0x7fff32077fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <2EF00EFE-06E8-3082-85C3-2988B422A19D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff32078000 -     0x7fff3208fff7  libCGInterfaces.dylib (417.2) <E3732720-0B2C-3FA6-9D05-5C71990102CE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff32090000 -     0x7fff327deffb  com.apple.vImage (8.1 - ???) <56C275C1-459F-37CD-BF29-2E6D81C29E53> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff327df000 -     0x7fff3297fff3  libBLAS.dylib (1211.50.2) <93259222-2D94-333D-A1EB-09C6FC4A64B4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff32980000 -     0x7fff329bafef  libBNNS.dylib (38.1) <0AAE0109-71D5-3B26-8401-3E62DDF97624> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff329bb000 -     0x7fff32d94ff7  libLAPACK.dylib (1211.50.2) <70781D0B-AEAD-33EB-9900-10DC30F37D61> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff32d95000 -     0x7fff32dabff7  libLinearAlgebra.dylib (1211.50.2) <FB5A35EA-D636-3D69-AB53-B67E1EB8134C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff32dac000 -     0x7fff32db1ff3  libQuadrature.dylib (3) <3D6BF66A-55B2-3692-BAC7-DEB0C676ED29> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff32db2000 -     0x7fff32e32fff  libSparse.dylib (79.50.2) <0DC25CDD-F8C1-3D6E-B472-8B060708424F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff32e33000 -     0x7fff32e45ff7  libSparseBLAS.dylib (1211.50.2) <994A7D7E-FA3B-3943-A59C-8150B9AF86BE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff32e46000 -     0x7fff32fb9fe7  libvDSP.dylib (622.50.5) <4BF310F4-31A3-3DA5-80E4-7F8014AD380B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff32fba000 -     0x7fff33070fef  libvMisc.dylib (622.50.5) <88143A88-4FDE-35A1-85FE-54FF0C2A9E43> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff33071000 -     0x7fff33071fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <880DEF40-389A-3F56-ACA1-B62A5BC57E59> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff33364000 -     0x7fff341c2fff  com.apple.AppKit (6.9 - 1561.40.112) <C839B0C1-F7EE-3056-985C-63CF1A030EC4> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff34214000 -     0x7fff34214fff  com.apple.ApplicationServices (48 - 50) <8DA47D38-B07B-3AE2-B343-4579864430C6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff34215000 -     0x7fff3427bfff  com.apple.ApplicationServices.ATS (377 - 445.3) <000C4E9F-E0D9-371D-B304-83BA37460724> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff34314000 -     0x7fff34436fff  libFontParser.dylib (222.1.4) <FF68FAF6-70BB-3E39-A263-E17B6F5E00D0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff34437000 -     0x7fff34481ff7  libFontRegistry.dylib (221.3) <C84F7112-4764-3F4B-9FBA-4A022CF6346B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff34526000 -     0x7fff34559ff7  libTrueTypeScaler.dylib (222.1.4) <4734ECD6-6F41-3A16-AE35-265BDC1572C5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff345c3000 -     0x7fff345c7ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <A5FB2694-1559-34A8-A3D3-2029F68A63CA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff34667000 -     0x7fff346b9ffb  com.apple.HIServices (1.22 - 624) <828E189A-62F9-3961-8A89-22F508870CC5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff346ba000 -     0x7fff346c8fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <B65FF7E6-E9B5-34D8-8CA7-63D415A8A9A6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff346c9000 -     0x7fff34715fff  com.apple.print.framework.PrintCore (13.4 - 503.2) <B90C67C1-0292-3CEC-885D-F1882CD104BE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff34716000 -     0x7fff34750fff  com.apple.QD (3.12 - 404.2) <38B20AFF-9D54-3B52-A6DC-C0D71380AA5F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff34751000 -     0x7fff3475dfff  com.apple.speech.synthesis.framework (7.5.1 - 7.5.1) <84ADDF38-36F1-3D3B-B28D-8865FA10FCD7> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff3475e000 -     0x7fff349ebff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <87D81714-F167-39F5-B5E7-A7A432EDAB5B> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff349ed000 -     0x7fff349edfff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <513C9A4B-4F6D-3A21-921F-2CA101B97830> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff34d0f000 -     0x7fff350a9ff7  com.apple.CFNetwork (897.15 - 897.15) <0C03AF39-3527-3E0D-8413-8E1B2A962F0D> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff350be000 -     0x7fff350befff  com.apple.Carbon (158 - 158) <F8B370D9-2103-3276-821D-ACC756167F86> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff350bf000 -     0x7fff350c2ffb  com.apple.CommonPanels (1.2.6 - 98) <2391761C-5CAA-3F68-86B7-50B37927B104> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff350c3000 -     0x7fff353c8fff  com.apple.HIToolbox (2.1.1 - 911.10) <BF7F9C0E-C732-3FB2-9BBC-362888BDA57B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff353c9000 -     0x7fff353ccffb  com.apple.help (1.3.8 - 66) <DEBADFA8-C189-3195-B0D6-A1F2DE95882A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff353cd000 -     0x7fff353d2fff  com.apple.ImageCapture (9.0 - 9.0) <23B4916F-3B43-3DFF-B956-FC390EECA284> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff353d3000 -     0x7fff35468ffb  com.apple.ink.framework (10.9 - 221) <5206C8B0-22DA-36C9-998E-846EDB626D5B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff35469000 -     0x7fff35483ff7  com.apple.openscripting (1.7 - 174) <1B2A1F9E-5534-3D61-83CA-9199B39E8708> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff354a4000 -     0x7fff354a5fff  com.apple.print.framework.Print (12 - 267) <3682ABFB-2561-3419-847D-02C247F4800D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff354a6000 -     0x7fff354a8ff7  com.apple.securityhi (9.0 - 55006) <C1406B8D-7D05-3959-808F-9C82189CF57F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff354a9000 -     0x7fff354affff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <2ED8643D-B0C3-3F17-82A2-BBF13E6CBABC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff355d0000 -     0x7fff355d0fff  com.apple.Cocoa (6.11 - 22) <4CF8E31C-B5C7-367B-B73D-1A8AC8E41B7F> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff355de000 -     0x7fff35697fff  com.apple.ColorSync (4.13.0 - 3325) <D283C285-447D-3258-A7E4-59532123B8FF> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff35824000 -     0x7fff358b7ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <6E3F958D-79BB-3658-99AD-59F16BF756F1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff3591e000 -     0x7fff35947ffb  com.apple.CoreBluetooth (1.0 - 1) <E1335074-9D07-370E-8440-61C4874BAC56> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff35948000 -     0x7fff35cacff3  com.apple.CoreData (120 - 851) <8D605466-8676-3D45-9A4B-8980971551C3> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff35cad000 -     0x7fff35d92ff7  com.apple.CoreDisplay (1.0 - 97.16) <FCFB2A8C-7A5E-314B-AA12-04D33656A0E6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff35d93000 -     0x7fff3622dff7  com.apple.CoreFoundation (6.9 - 1452.23) <358C547D-E227-3228-8218-62327F4605C8> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff3622f000 -     0x7fff3685dff7  com.apple.CoreGraphics (2.0 - 1161.10) <3B808DE4-D373-3E19-A3FD-99B4EB21AD01> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff3685f000 -     0x7fff36b4efff  com.apple.CoreImage (13.0.0 - 579.4.11) <702F8035-26FE-3C78-8587-4C9563E03CC4> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff36bbb000 -     0x7fff36c00fff  com.apple.audio.midi.CoreMIDI (1.10 - 88) <BC3E756C-A066-325C-9383-A78A4A66C7BF> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff36ddd000 -     0x7fff36ec6ff7  com.apple.CoreMedia (1.0 - 2275.61.1) <C440188D-BC13-3E1C-A322-5F1FF70BDB34> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff36ec7000 -     0x7fff36f15fff  com.apple.CoreMediaIO (812.0 - 4994) <2FDA2056-D26F-343D-AB91-488CF809FE63> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff36f16000 -     0x7fff36f16fff  com.apple.CoreServices (822.31 - 822.31) <615919A2-AE11-3F27-9A37-FB0CFF8D36B6> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff36f17000 -     0x7fff36f8bffb  com.apple.AE (735.1 - 735.1) <08EBA184-20F7-3725-AEA6-C314448161C6> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff36f8c000 -     0x7fff37263fff  com.apple.CoreServices.CarbonCore (1178.4 - 1178.4) <0D5E19BF-18CB-3FA4-8A5F-F6C787C5EE08> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff37264000 -     0x7fff37298fff  com.apple.DictionaryServices (1.2 - 284.2) <6505B075-41C3-3C62-A4C3-85CE3F6825CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff37299000 -     0x7fff372a1ffb  com.apple.CoreServices.FSEvents (1239.50.1 - 1239.50.1) <3637CEC7-DF0E-320E-9634-44A442925C65> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff372a2000 -     0x7fff3745fff7  com.apple.LaunchServices (822.31 - 822.31) <BDFAB0FF-C2C6-375B-9E84-E43E267E2F82> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff37460000 -     0x7fff37510ff7  com.apple.Metadata (10.7.0 - 1191.4.13) <B5C22E70-C265-3C9F-865F-B138994A418D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff37511000 -     0x7fff37571fff  com.apple.CoreServices.OSServices (822.31 - 822.31) <690E3C93-8799-39FF-8663-190A49B002E3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff37572000 -     0x7fff375e0fff  com.apple.SearchKit (1.4.0 - 1.4.0) <3662545A-B1CF-3079-BDCD-C83855CEFEEE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff375e1000 -     0x7fff37605ffb  com.apple.coreservices.SharedFileList (71.21 - 71.21) <7DB79D78-9925-33F8-96BA-35AB7AEB326A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff378a6000 -     0x7fff379f6fff  com.apple.CoreText (352.0 - 578.18) <B8454115-2A4B-3585-A7A1-B47A638F2EEB> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff379f7000 -     0x7fff37a31fff  com.apple.CoreVideo (1.8 - 0.0) <86CCC036-51BB-3DD1-9601-D93798BCCD0F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff37a32000 -     0x7fff37abdff3  com.apple.framework.CoreWLAN (13.0 - 1350.1) <E862CC02-69D2-3503-887B-B6E8223081E7> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff37d38000 -     0x7fff37d3dfff  com.apple.DiskArbitration (2.7 - 2.7) <A6450227-DD23-3100-ADBF-DB1C21E979F7> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff37efe000 -     0x7fff382c4fff  com.apple.Foundation (6.9 - 1452.23) <E64540AD-1755-3C16-8537-552A00E92541> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff38334000 -     0x7fff38364fff  com.apple.GSS (4.0 - 2.0) <41087278-74AE-3FA5-8C0E-9C78EB696299> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff38365000 -     0x7fff3837dff3  com.apple.GameController (1.0 - 1) <CE96F310-B3E5-3EAE-B1BC-334F8C224FA7> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff38476000 -     0x7fff3857affb  com.apple.Bluetooth (6.0.5 - 6.0.5f3) <85F1B5A6-03C5-3D5A-90B8-5FC86349E330> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff385da000 -     0x7fff38675ff7  com.apple.framework.IOKit (2.0.2 - 1445.50.26) <A63CAC8D-BF57-34FD-9A88-2F74546F2000> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff38677000 -     0x7fff3867effb  com.apple.IOSurface (211.12 - 211.12) <392CA7DE-B365-364E-AF4A-33EC2CC48E6F> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff3867f000 -     0x7fff386d4ff3  com.apple.ImageCaptureCore (7.0 - 7.0) <0DAB3D7E-8C3F-35DE-96DF-C370AD35EB65> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff386d5000 -     0x7fff38852fff  com.apple.ImageIO.framework (3.3.0 - 1739.1) <4D2F4CA2-3987-3A15-9149-952E461C6D11> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff38853000 -     0x7fff38857ffb  libGIF.dylib (1739.1) <6C6F294B-22AD-3FFE-B45E-3B08D30F2FD3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff38858000 -     0x7fff3893ffff  libJP2.dylib (1739.1) <7E584907-C856-3205-B1D2-E2E5B1D93BBE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff38940000 -     0x7fff38963fff  libJPEG.dylib (1739.1) <5DD38B10-4FDA-3BF8-AD6D-CF08AE2808D0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff38c40000 -     0x7fff38c66ff3  libPng.dylib (1739.1) <6D7994E2-B847-333A-9F03-C80E11AC9BB0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff38c67000 -     0x7fff38c69ff3  libRadiance.dylib (1739.1) <3320516C-A74A-323C-9BE9-C01D2E6A23EB> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff38c6a000 -     0x7fff38cb7ff3  libTIFF.dylib (1739.1) <F08B297E-6366-3DB6-A3B4-2B158D796EC9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff38e73000 -     0x7fff39b3bfff  com.apple.JavaScriptCore (13605 - 13605.1.33.1.4) <38CD7602-E3E1-3C57-B3E6-EF459AE25641> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff39b53000 -     0x7fff39b6cff7  com.apple.Kerberos (3.0 - 1) <F86DCCDF-93C1-38B3-82C2-477C12E8EE6D> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff39e2a000 -     0x7fff39e31fff  com.apple.MediaAccessibility (1.0 - 114) <9F72AACD-BAEB-3646-BD0F-12C47591C20D> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff39edd000 -     0x7fff3a544ff7  com.apple.MediaToolbox (1.0 - 2275.61.1) <E92B8487-AE1C-3EA9-A80B-99B43AD75FC0> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff3a546000 -     0x7fff3a5c7ff7  com.apple.Metal (125.25 - 125.25) <B2ECA050-4C13-3EAD-A1C8-AC21EFF122F1> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff3a5e4000 -     0x7fff3a5fffff  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <0B4455FE-5C97-345C-B416-325EC6D88A2A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff3a600000 -     0x7fff3a66ffef  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <87F14199-C445-34C2-90F8-57C29212483E> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff3a670000 -     0x7fff3a694fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <BD50FD9C-CE92-34AF-8663-968BF89202A0> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff3a695000 -     0x7fff3a77cff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <FBDDCAE6-EC6E-361F-B924-B3EBDEAC2D2F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff3a77d000 -     0x7fff3a77dff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <20ECB52B-B5C2-39EA-88E3-DFEC0C3CC9FF> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff3b77c000 -     0x7fff3b788ffb  com.apple.NetFS (6.0 - 4.0) <471DD96F-FA2E-3FE9-9746-2519A6780D1A> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff3e571000 -     0x7fff3e579fef  libcldcpuengine.dylib (2.8.7) <EF9A91AC-029C-300A-99E7-4952C15DA09F> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff3e57a000 -     0x7fff3e5c8fff  com.apple.opencl (2.8.15 - 2.8.15) <83ED39D0-1D39-3593-BA25-70A8A911DE71> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff3e5c9000 -     0x7fff3e5e5ffb  com.apple.CFOpenDirectory (10.13 - 207.50.1) <C2715A7A-2E5C-3A21-ADB4-726F707A1294> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff3e5e6000 -     0x7fff3e5f1fff  com.apple.OpenDirectory (10.13 - 207.50.1) <220FB6F2-4892-3A66-8838-C134CF657D3A> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff3f770000 -     0x7fff3f772fff  libCVMSPluginSupport.dylib (16.5.10) <BF5D065A-A38B-3446-9418-799F598072EF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff3f773000 -     0x7fff3f778ffb  libCoreFSCache.dylib (162.6.1) <879B2738-2E8A-3596-AFF8-9C3FB1B6828B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff3f779000 -     0x7fff3f77dfff  libCoreVMClient.dylib (162.6.1) <64ED0A84-225F-39BC-BE0D-C896ACF5B50A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff3f77e000 -     0x7fff3f787ff7  libGFXShared.dylib (16.5.10) <6024B1FE-ACD7-3314-B390-85972CB9B778> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff3f788000 -     0x7fff3f793fff  libGL.dylib (16.5.10) <AB8B6C73-8496-3784-83F6-27737ED03B09> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff3f794000 -     0x7fff3f7cffe7  libGLImage.dylib (16.5.10) <5B41D074-3132-3587-91B6-E441BA8C9F13> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff3f7d0000 -     0x7fff3f93cfff  libGLProgrammability.dylib (16.5.10) <3839266D-CA93-3B35-A6D0-CC851AE72367> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib
    0x7fff3f93d000 -     0x7fff3f97bffb  libGLU.dylib (16.5.10) <F6844912-1B86-34DF-9FB5-A428CC7B5B18> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff402f3000 -     0x7fff40302fff  com.apple.opengl (16.5.10 - 16.5.10) <BC4EEFE3-A09B-3998-B723-1415B995B0EE> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff40303000 -     0x7fff4049aff7  GLEngine (16.5.10) <FCC01BF5-735B-3275-910F-21803D3C57D8> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine
    0x7fff4049b000 -     0x7fff404c3ffb  GLRendererFloat (16.5.10) <7186EEF3-7B8F-376E-BD2E-C48BCD4067F9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat
    0x7fff4067c000 -     0x7fff407c8ff7  com.apple.QTKit (7.7.3 - 3014.8) <3F98E9C1-E9F0-33E8-902C-61194FC68883> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff407c9000 -     0x7fff40a2eff7  com.apple.imageKit (3.0 - 1043) <49A20EDB-F529-3E3F-BCF9-2624722F8A7B> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff40a2f000 -     0x7fff40b1effb  com.apple.PDFKit (1.0 - 677.67) <6BD11C23-1AEA-3078-8D0C-A7152BCF9031> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff40b1f000 -     0x7fff41031ff7  com.apple.QuartzComposer (5.1 - 364) <1369D6DA-8842-3878-B546-1D09828331F5> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff41032000 -     0x7fff41055fff  com.apple.quartzfilters (1.10.0 - 1.10.0) <C95CB89D-148D-341B-BC50-82D8C32BF767> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff41056000 -     0x7fff4114fff7  com.apple.QuickLookUIFramework (5.0 - 743.13) <09B296B3-4242-3224-9F44-5DFB4AB894CC> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff41150000 -     0x7fff41150fff  com.apple.quartzframework (1.5 - 21) <DCEB0FCC-2C32-3D02-8752-7B6FA009AB85> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff41151000 -     0x7fff4139cff7  com.apple.QuartzCore (1.11 - 584.40) <ABC7F8FA-5F5A-31F4-868B-FDC4175BAFAC> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff4139d000 -     0x7fff413f4ff7  com.apple.QuickLookFramework (5.0 - 743.13) <4FA54690-032B-3DE2-B088-6774034DEDB9> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff415b9000 -     0x7fff415d0ff7  com.apple.SafariServices.framework (13605 - 13605.1.33.1.4) <3DBCD702-E1FB-320F-B7B7-674D6167CF33> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff41bd0000 -     0x7fff41ef8fff  com.apple.security (7.0 - 58286.51.6) <7212D257-5324-3DBA-8C26-504D6B8F632A> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff41ef9000 -     0x7fff41f85ff7  com.apple.securityfoundation (6.0 - 55185.50.5) <087D601E-7813-3F9E-97EE-BC7081F520BD> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff41f86000 -     0x7fff41fb6fff  com.apple.securityinterface (10.0 - 55109.50.6) <343FFA91-89CF-3A3F-833A-D65A2647CCF1> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff41fb7000 -     0x7fff41fbbffb  com.apple.xpc.ServiceManagement (1.0 - 1) <5BFDB3ED-73A7-3035-A5BC-ADA6E4F74BFD> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff42360000 -     0x7fff423d0ff3  com.apple.SystemConfiguration (1.17 - 1.17) <8532B8E9-7E30-35A3-BC4A-DDE8E0614FDA> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff42585000 -     0x7fff42900fff  com.apple.VideoToolbox (1.0 - 2275.61.1) <B8E60F20-DEB7-38CA-B294-FD1DB3F233EC> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff452c1000 -     0x7fff45354ff7  com.apple.APFS (1.0 - 1) <D1CE52E0-45C0-30C4-B440-E2CF2F74CEE5> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff45f6f000 -     0x7fff45f97fff  com.apple.framework.Apple80211 (13.0 - 1361.7) <16627876-8CF5-3502-A1D6-35FCBDD5E79A> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff45f99000 -     0x7fff45fa8fef  com.apple.AppleFSCompression (96.30.2 - 1.0) <ABFF224B-22D6-35F6-A072-9548FD388EB7> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff460ea000 -     0x7fff46132ff3  com.apple.AppleJPEG (1.0 - 1) <8DD410CB-76A1-3F22-9A9F-0491FA0CEB4A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff4616d000 -     0x7fff46195fff  com.apple.applesauce (1.0 - ???) <CCA8B094-1BCE-3AE3-A0A7-D544C818DE36> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff4625e000 -     0x7fff46261ff3  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <0E33401D-7B9C-378A-8EE8-0E3D40B63C8D> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff46262000 -     0x7fff462b2ff7  com.apple.AppleVAFramework (5.0.41 - 5.0.41) <8169ABC4-56F0-301E-B913-A762F7E40DBF> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff469b5000 -     0x7fff469bcff7  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <51A41CA3-DB1D-3380-993E-99C54AEE518E> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff469bd000 -     0x7fff46a44ff7  com.apple.backup.framework (1.9.5 - 1.9.5) <BC020BDD-7C93-37E5-A762-4FDCBD2056A8> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff46a4d000 -     0x7fff46a53ff3  com.apple.BezelServicesFW (305 - 305) <FEED193D-3363-3C8A-9815-4A6128E640E3> /System/Library/PrivateFrameworks/BezelServices.framework/Versions/A/BezelServices
    0x7fff47822000 -     0x7fff47871ff3  com.apple.ChunkingLibrary (189 - 189) <C021A0EB-82E7-3A1E-A772-96B0E7E038D9> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff483fa000 -     0x7fff48403ff3  com.apple.CommonAuth (4.0 - 2.0) <4D237B25-27E5-3577-948B-073659F6D3C0> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff4873f000 -     0x7fff48b47fff  com.apple.CoreAUC (259.0.0 - 259.0.0) <1E0FB2C7-109E-3924-8E7F-8C6ACD78AF26> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff48b48000 -     0x7fff48b78ff7  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) <E9FF9574-122A-3966-AA2B-546E512ACD06> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff48c0e000 -     0x7fff48c50ff3  com.apple.corebrightness (1.0 - 1) <F40FFDF3-5DF4-308A-8F46-C7A9BED5D8BB> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff48f06000 -     0x7fff48f16ff7  com.apple.CoreEmoji (1.0 - 69.3) <A4357F5C-0C38-3A61-B456-D7321EB2CEE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff497d1000 -     0x7fff497e7ff7  com.apple.CoreMediaAuthoring (2.2 - 956) <FBA28A76-97E2-3023-A3F6-D03280AE2889> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff49b1c000 -     0x7fff49bc1fff  com.apple.CorePDF (4.0 - 414) <D64D17C3-9AD0-3A29-89DE-36BEF0156381> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff49df4000 -     0x7fff49e25ff3  com.apple.CoreServicesInternal (309.1 - 309.1) <EB09CAFC-AE9B-3257-BE45-5471D9F64AAD> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff4a161000 -     0x7fff4a1f2fff  com.apple.CoreSymbolication (9.3 - 64026) <BAF3CE6E-8140-3159-BF1B-B953816459A0> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff4a275000 -     0x7fff4a3a9fff  com.apple.coreui (2.1 - 494.1) <19624CAA-74DE-3DD3-9585-E64BE866EBFF> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff4a3aa000 -     0x7fff4a4daff7  com.apple.CoreUtils (5.5 - 550.44) <DFC364C3-0812-31B5-9C79-C81C2DFDDB8B> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff4a52f000 -     0x7fff4a593fff  com.apple.framework.CoreWiFi (13.0 - 1350.1) <6EC5DEB3-6E2F-3DC2-BE59-1FD05175FB0C> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff4a594000 -     0x7fff4a5a4ff7  com.apple.CrashReporterSupport (10.13 - 1) <42451386-F745-38B9-896F-49996B26D066> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff4a622000 -     0x7fff4a631ff7  com.apple.framework.DFRFoundation (1.0 - 191.7) <3B8ED6F7-5DFF-34C3-BA90-DDB85679684C> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff4a634000 -     0x7fff4a638ffb  com.apple.DSExternalDisplay (3.1 - 380) <8D03D346-887A-3CE7-9483-4AD7804D1FBB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff4a6ba000 -     0x7fff4a730fff  com.apple.datadetectorscore (7.0 - 590.3) <83E85A62-44A8-33F8-AD79-AC4C807184C4> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff4a77e000 -     0x7fff4a7beff7  com.apple.DebugSymbols (181.0 - 181.0) <299A0238-ED78-3676-B131-274D972824AA> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff4a7bf000 -     0x7fff4a8eefff  com.apple.desktopservices (1.12.4 - 1.12.4) <47C3FBF3-5E75-3821-B003-2A4DC3657D8D> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff4abb9000 -     0x7fff4abbdff7  com.apple.DisplayServicesFW (3.1 - 380) <79C5F9B5-D95F-3B86-BF98-C103B862EFE3> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff4b705000 -     0x7fff4bb33fff  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <B574FE33-4A41-3611-9738-388EBAF03E37> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff4ede3000 -     0x7fff4edeefff  libGPUSupport.dylib (16.5.10) <C69DADE2-9F5F-3F58-9E6C-C3893999A5EA> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupport.dylib
    0x7fff4edef000 -     0x7fff4edfaff7  libGPUSupportMercury.dylib (16.5.10) <CEAE2714-7D6F-3B26-9F1E-501E79C979A2> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib
    0x7fff4edfb000 -     0x7fff4ee00ff7  com.apple.GPUWrangler (3.18.48 - 3.18.48) <D2BA4CFA-ED0A-3FEC-B5FF-2D6C0557334E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff4f1b4000 -     0x7fff4f1d9ff3  com.apple.GenerationalStorage (2.0 - 285.3) <13B96400-FF70-376B-B20E-FB7D61064800> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff4fb76000 -     0x7fff4fb85fff  com.apple.GraphVisualizer (1.0 - 5) <B993B8A2-5700-3DFC-9EB7-4CCEE8F959F1> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff4fc08000 -     0x7fff4fc7cfff  com.apple.Heimdal (4.0 - 2.0) <18607D75-DB78-3CC7-947E-AC769195164C> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff4fc7d000 -     0x7fff4fcabfff  com.apple.HelpData (2.3 - 167) <4D9B89EB-2FE8-3ABD-8C22-54E6FE208E71> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData
    0x7fff50578000 -     0x7fff5057fff7  com.apple.IOAccelerator (378.18.1 - 378.18.1) <E47DDE66-1B2B-310F-A060-638CA5D86F9C> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff50583000 -     0x7fff5059bfff  com.apple.IOPresentment (1.0 - 35.1) <214AD582-466F-3844-A0A4-DE0742A8B899> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff50966000 -     0x7fff5098cffb  com.apple.IconServices (97.6 - 97.6) <A56D826D-20D2-34BE-AACC-A80CFCB4E915> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff50a98000 -     0x7fff50a9bff3  com.apple.InternationalSupport (1.0 - 1) <5AB382FD-BF81-36A1-9565-61F1FD398ECA> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff50b09000 -     0x7fff50b19ffb  com.apple.IntlPreferences (2.0 - 227.5.2) <436BBE9B-595B-37EB-8B54-B332B6AE3E57> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences
    0x7fff50c24000 -     0x7fff50d19ff7  com.apple.LanguageModeling (1.0 - 159.5.3) <7F0AC200-E3DD-39FB-8A95-00DD70B66A9F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff50d1a000 -     0x7fff50d5cfff  com.apple.Lexicon-framework (1.0 - 33.5) <DC94CF9E-1EB4-3C0E-B298-CA1190885276> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff50d60000 -     0x7fff50d67ff7  com.apple.LinguisticData (1.0 - 238.3) <49A54649-1021-3DBD-99B8-1B2EDFFA5378> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff51566000 -     0x7fff51569fff  com.apple.Mangrove (1.0 - 1) <27D6DF76-B5F8-3443-8826-D25B284331BF> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff51a46000 -     0x7fff51aafff7  com.apple.gpusw.MetalTools (1.0 - 1) <B5F66CF4-BE75-3A0B-A6A0-2F22C7C259D9> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff51c2b000 -     0x7fff51c44ff7  com.apple.MobileKeyBag (2.0 - 1.0) <88876B8D-A68A-3461-84F3-A1A8D5F3D497> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff51cd0000 -     0x7fff51cfaffb  com.apple.MultitouchSupport.framework (1404.4 - 1404.4) <45374A2A-C0BC-3A70-8183-37295205CDFA> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff51f61000 -     0x7fff51f6cfff  com.apple.NetAuth (6.2 - 6.2) <B3795F63-C14A-33E1-9EE6-02A2E7661321> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff537fe000 -     0x7fff5380effb  com.apple.PerformanceAnalysis (1.194 - 194) <D0211AD1-72B3-3493-92C9-B4F40ED581D5> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff555cc000 -     0x7fff555eafff  com.apple.ProtocolBuffer (1 - 260) <40704740-4A53-3010-A49B-08D1D69D1D5E> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff55757000 -     0x7fff5576dff7  com.apple.QuickLookThumbnailing (1.0 - 1) <8F0092E4-6494-349D-B4C9-494DF293D716> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff557b7000 -     0x7fff557c3fff  com.apple.xpc.RemoteServiceDiscovery (1.0 - 1205.50.76) <C735038A-BC7E-3DE3-B350-6449404FC259> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery
    0x7fff557c4000 -     0x7fff557e7ffb  com.apple.RemoteViewServices (2.0 - 125) <592323D1-CB44-35F1-9921-4C2AB8D920A0> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff557e8000 -     0x7fff557fcff7  com.apple.xpc.RemoteXPC (1.0 - 1205.50.76) <6E67A656-542A-34BD-B598-56B8D5A70814> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC
    0x7fff57104000 -     0x7fff57216fff  com.apple.Sharing (1019.46 - 1019.46) <1266C41E-3CA9-3EFC-8413-A37D52EA9FB2> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff57217000 -     0x7fff57236ff7  com.apple.shortcut (2.16 - 99) <201F92AE-F8E6-3A24-B9DE-26B88CD2EF18> /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut
    0x7fff57241000 -     0x7fff57242ff7  com.apple.performance.SignpostNotification (1.2.4 - 2.4) <9957B2C0-4D48-3337-8A4D-5E457CC7B542> /System/Library/PrivateFrameworks/SignpostNotification.framework/Versions/A/SignpostNotification
    0x7fff57f8a000 -     0x7fff58226fff  com.apple.SkyLight (1.600.0 - 312.50) <0CF4C608-8748-32BF-9586-A1601945F82C> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff589ec000 -     0x7fff589f9ff7  com.apple.SpeechRecognitionCore (4.0.13 - 4.0.13) <8B5418A4-CDC5-3200-AEF0-F109E0DF9019> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff5959d000 -     0x7fff59626fc7  com.apple.Symbolication (9.3 - 64033) <FAA17252-6378-34A4-BBBB-22DF54EC1626> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff59b96000 -     0x7fff59b9eff7  com.apple.TCC (1.0 - 1) <E1EB7272-FE6F-39AB-83CA-B2B5F2A88D9B> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff59dab000 -     0x7fff59e68ff7  com.apple.TextureIO (3.7 - 3.7) <F8BAC954-405D-3CC3-AB7B-048C866EF980> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff59f0e000 -     0x7fff59f0ffff  com.apple.TrustEvaluationAgent (2.0 - 31) <39F533B2-211E-3635-AF47-23F27749FF4A> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff59f15000 -     0x7fff5a0c4fff  com.apple.UIFoundation (1.0 - 547.3) <ACC12DF5-E528-33F3-A358-4E1BEA68239C> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff5ad99000 -     0x7fff5ae68ff7  com.apple.ViewBridge (343.2 - 343.2) <5519FCED-1F88-3BE6-9BE1-69992086B01B> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff5b7cd000 -     0x7fff5b7cfffb  com.apple.loginsupport (1.0 - 1) <D1232C1B-80EA-3DF8-9466-013695D0846E> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff5b936000 -     0x7fff5b969ff7  libclosured.dylib (551.3) <DC3DA678-9C40-339C-A9C6-32AB74FCC682> /usr/lib/closure/libclosured.dylib
    0x7fff5ba23000 -     0x7fff5ba5cff7  libCRFSuite.dylib (41) <FE5EDB68-2593-3C2E-BBAF-1C52D206F296> /usr/lib/libCRFSuite.dylib
    0x7fff5ba5d000 -     0x7fff5ba68fff  libChineseTokenizer.dylib (28) <53633C9B-A3A8-36F7-A53C-432D802F4BB8> /usr/lib/libChineseTokenizer.dylib
    0x7fff5bafa000 -     0x7fff5bafbff3  libDiagnosticMessagesClient.dylib (104) <9712E980-76EE-3A89-AEA6-DF4BAF5C0574> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff5bb32000 -     0x7fff5bcfcff3  libFosl_dynamic.dylib (17.8) <C58ED77A-4986-31C2-994C-34DDFB8106F0> /usr/lib/libFosl_dynamic.dylib
    0x7fff5bd1c000 -     0x7fff5bd23fff  libMatch.1.dylib (31) <74AB4815-11D1-3930-A559-BD6550CE5865> /usr/lib/libMatch.1.dylib
    0x7fff5bd34000 -     0x7fff5bd34fff  libOpenScriptingUtil.dylib (174) <610F0242-7CE5-3C86-951B-B646562694AF> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff5be6b000 -     0x7fff5be6fffb  libScreenReader.dylib (562.18.4) <E239923D-54C9-3BBF-852F-87C09DEF4091> /usr/lib/libScreenReader.dylib
    0x7fff5be70000 -     0x7fff5be71ffb  libSystem.B.dylib (1252.50.4) <F64430FD-30A6-328D-A476-0AED41D371C6> /usr/lib/libSystem.B.dylib
    0x7fff5bf04000 -     0x7fff5bf04fff  libapple_crypto.dylib (109.50.14) <48BA2E76-BF2F-3522-A54E-D7FB7EAF7A57> /usr/lib/libapple_crypto.dylib
    0x7fff5bf05000 -     0x7fff5bf1bff7  libapple_nghttp2.dylib (1.24) <01402BC4-4822-3676-9C80-50D83F816424> /usr/lib/libapple_nghttp2.dylib
    0x7fff5bf1c000 -     0x7fff5bf46ff3  libarchive.2.dylib (54) <8FC28DD8-E315-3C3E-95FE-D1D2CBE49888> /usr/lib/libarchive.2.dylib
    0x7fff5bf47000 -     0x7fff5c04afe7  libate.dylib (1.13.1) <DABEA1B1-806C-34C9-8AFF-DEB6AB2829E3> /usr/lib/libate.dylib
    0x7fff5c04e000 -     0x7fff5c04eff3  libauto.dylib (187) <A05C7900-F8C7-3E75-8D3F-909B40C19717> /usr/lib/libauto.dylib
    0x7fff5c04f000 -     0x7fff5c107ff3  libboringssl.dylib (109.50.14) <E6813F87-B5E4-3F7F-A725-E6A7F2BD02EC> /usr/lib/libboringssl.dylib
    0x7fff5c108000 -     0x7fff5c118ff3  libbsm.0.dylib (39) <6BC96A72-AFBE-34FD-91B1-748A530D8AE6> /usr/lib/libbsm.0.dylib
    0x7fff5c119000 -     0x7fff5c126ffb  libbz2.1.0.dylib (38) <0A5086BB-4724-3C14-979D-5AD4F26B5B45> /usr/lib/libbz2.1.0.dylib
    0x7fff5c127000 -     0x7fff5c17dfff  libc++.1.dylib (400.9) <7D3DACCC-3804-393C-ABC1-1A580FD00CB6> /usr/lib/libc++.1.dylib
    0x7fff5c17e000 -     0x7fff5c1a2ff7  libc++abi.dylib (400.8.2) <EF5E37D7-11D9-3530-BE45-B986612D13E2> /usr/lib/libc++abi.dylib
    0x7fff5c1a4000 -     0x7fff5c1b4fff  libcmph.dylib (6) <A5509EE8-7E00-3224-8814-015B077A3CF5> /usr/lib/libcmph.dylib
    0x7fff5c1b5000 -     0x7fff5c1cbffb  libcompression.dylib (47.50.1) <12DB91E4-E4EE-3AE9-A000-BCACE7749DB6> /usr/lib/libcompression.dylib
    0x7fff5c476000 -     0x7fff5c48eff7  libcoretls.dylib (155.50.1) <D350052E-DC4D-3185-ADBA-BA48EDCEE955> /usr/lib/libcoretls.dylib
    0x7fff5c48f000 -     0x7fff5c490ff3  libcoretls_cfhelpers.dylib (155.50.1) <B297F5D8-F2FE-3566-A752-E9D998B9C039> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff5c629000 -     0x7fff5c7bafff  libcrypto.35.dylib (22.50.2) <97828BFD-4675-35DF-BE2E-C6D1555BB71D> /usr/lib/libcrypto.35.dylib
    0x7fff5c961000 -     0x7fff5c9b7ff3  libcups.2.dylib (462.2) <64864CBE-03A3-34C7-9DBB-C93601F183FD> /usr/lib/libcups.2.dylib
    0x7fff5caf7000 -     0x7fff5caf7fff  libenergytrace.dylib (16) <A92AB8B8-B986-3CE6-980D-D55090FEF387> /usr/lib/libenergytrace.dylib
    0x7fff5caf8000 -     0x7fff5cb11ffb  libexpat.1.dylib (16.1.1) <5E1796FA-4041-3187-B5C2-8E6B03D1D72A> /usr/lib/libexpat.1.dylib
    0x7fff5cb2e000 -     0x7fff5cb33ff3  libheimdal-asn1.dylib (520.50.6) <E358445A-B84E-31B5-BCCD-7E1397519D96> /usr/lib/libheimdal-asn1.dylib
    0x7fff5cb5f000 -     0x7fff5cc50ff7  libiconv.2.dylib (51.50.1) <2FEC9707-3FAF-3828-A50D-8605086D060F> /usr/lib/libiconv.2.dylib
    0x7fff5cc51000 -     0x7fff5ce78ffb  libicucore.A.dylib (59173.0.1) <CECAD5E5-3EFD-3AAC-AD9B-E355B2DD5E9C> /usr/lib/libicucore.A.dylib
    0x7fff5cec5000 -     0x7fff5cec6fff  liblangid.dylib (128) <39C39393-0D05-301D-93B2-F224FC4949AA> /usr/lib/liblangid.dylib
    0x7fff5cec7000 -     0x7fff5cee0ffb  liblzma.5.dylib (10) <3D419A50-961F-37D2-8A01-3DC7AB7B8D18> /usr/lib/liblzma.5.dylib
    0x7fff5cee1000 -     0x7fff5cef7ff7  libmarisa.dylib (9) <D6D2D55D-1D2E-3442-B152-B18803C0ABB4> /usr/lib/libmarisa.dylib
    0x7fff5cfa8000 -     0x7fff5d1d0ff7  libmecabra.dylib (779.7.6) <F462F170-E872-3D09-B219-973D5E99C09F> /usr/lib/libmecabra.dylib
    0x7fff5d3a8000 -     0x7fff5d522fff  libnetwork.dylib (1229.51.2) <D64FE2A1-CBFD-3817-A701-9A0DDBD70DCF> /usr/lib/libnetwork.dylib
    0x7fff5d5a1000 -     0x7fff5d9923b7  libobjc.A.dylib (723) <BEEA51E2-1C4D-3672-87F6-F267B4AC6221> /usr/lib/libobjc.A.dylib
    0x7fff5d9a5000 -     0x7fff5d9a9fff  libpam.2.dylib (22) <7B4D2CE2-1438-387A-9802-5CEEFBF26F86> /usr/lib/libpam.2.dylib
    0x7fff5d9ac000 -     0x7fff5d9e0fff  libpcap.A.dylib (79.20.1) <FA13918B-A247-3181-B256-9B852C7BA316> /usr/lib/libpcap.A.dylib
    0x7fff5da5f000 -     0x7fff5da7bffb  libresolv.9.dylib (65) <E8F3415B-4472-3202-8901-41FD87981DB2> /usr/lib/libresolv.9.dylib
    0x7fff5da7d000 -     0x7fff5dab6ff3  libsandbox.1.dylib (765.50.51) <75B20FAF-0AED-3F18-9399-1BC75A916415> /usr/lib/libsandbox.1.dylib
    0x7fff5daca000 -     0x7fff5dacbff3  libspindump.dylib (252) <D8E27057-E3CC-3D7F-A010-4A87830F6A83> /usr/lib/libspindump.dylib
    0x7fff5dacc000 -     0x7fff5dc59ff7  libsqlite3.dylib (274.8.1) <B70A2908-E0F7-364E-952A-1D2D19787B89> /usr/lib/libsqlite3.dylib
    0x7fff5de2d000 -     0x7fff5de8dff3  libusrtcp.dylib (1229.51.2) <3D8806D9-4BA9-35EE-BC44-F58BC2A0962D> /usr/lib/libusrtcp.dylib
    0x7fff5de8e000 -     0x7fff5de91ffb  libutil.dylib (51.20.1) <216D18E5-0BAF-3EAF-A38E-F6AC37CBABD9> /usr/lib/libutil.dylib
    0x7fff5de92000 -     0x7fff5de9ffff  libxar.1.dylib (400) <0316128D-3B47-3052-995D-97B4FE5491DC> /usr/lib/libxar.1.dylib
    0x7fff5dea3000 -     0x7fff5df8afff  libxml2.2.dylib (31.10) <503721DB-0D8D-379E-B743-18CE59304155> /usr/lib/libxml2.2.dylib
    0x7fff5df8b000 -     0x7fff5dfb3fff  libxslt.1.dylib (15.12) <4A5E011D-8B29-3135-A52B-9A9070ABD752> /usr/lib/libxslt.1.dylib
    0x7fff5dfb4000 -     0x7fff5dfc6ffb  libz.1.dylib (70) <48C67CFC-940D-3857-8DAD-857774605352> /usr/lib/libz.1.dylib
    0x7fff5e062000 -     0x7fff5e066ff7  libcache.dylib (80) <092479CB-1008-3A83-BECF-E115F24D13C1> /usr/lib/system/libcache.dylib
    0x7fff5e067000 -     0x7fff5e071ff3  libcommonCrypto.dylib (60118.50.1) <029F5985-9B6E-3DCB-9B96-FD007678C6A7> /usr/lib/system/libcommonCrypto.dylib
    0x7fff5e072000 -     0x7fff5e079fff  libcompiler_rt.dylib (62) <968B8E3F-3681-3230-9D78-BB8732024F6E> /usr/lib/system/libcompiler_rt.dylib
    0x7fff5e07a000 -     0x7fff5e083ffb  libcopyfile.dylib (146.50.5) <3885083D-50D8-3EEC-B481-B2E605180D7F> /usr/lib/system/libcopyfile.dylib
    0x7fff5e084000 -     0x7fff5e109fff  libcorecrypto.dylib (562.50.17) <67007279-24E1-3F30-802D-A55CD5C27946> /usr/lib/system/libcorecrypto.dylib
    0x7fff5e191000 -     0x7fff5e1caff7  libdispatch.dylib (913.50.12) <848EEE57-4235-3A61-9A52-C0097DD2AB5E> /usr/lib/system/libdispatch.dylib
    0x7fff5e1cb000 -     0x7fff5e1e8ff7  libdyld.dylib (551.3) <CF59A5A5-288B-30E6-BD42-9056B4E4139A> /usr/lib/system/libdyld.dylib
    0x7fff5e1e9000 -     0x7fff5e1e9ffb  libkeymgr.dylib (28) <E34E283E-90FA-3C59-B48E-1277CDB9CDCE> /usr/lib/system/libkeymgr.dylib
    0x7fff5e1ea000 -     0x7fff5e1f6ff3  libkxld.dylib (4570.51.2) <A209B8A2-F5C3-35B1-A70B-1938F25B0ABE> /usr/lib/system/libkxld.dylib
    0x7fff5e1f7000 -     0x7fff5e1f7ff7  liblaunch.dylib (1205.50.76) <4D52BB64-C568-3A36-8935-2480427EE2A2> /usr/lib/system/liblaunch.dylib
    0x7fff5e1f8000 -     0x7fff5e1fcffb  libmacho.dylib (906) <1902A611-081A-3452-B11E-EBD1B166E831> /usr/lib/system/libmacho.dylib
    0x7fff5e1fd000 -     0x7fff5e1ffff3  libquarantine.dylib (86) <26C0BA22-8F93-3A07-9A4E-C8D53D2CE42E> /usr/lib/system/libquarantine.dylib
    0x7fff5e200000 -     0x7fff5e201ff3  libremovefile.dylib (45) <711E18B2-5BBE-3211-A916-56740C27D17A> /usr/lib/system/libremovefile.dylib
    0x7fff5e202000 -     0x7fff5e219fff  libsystem_asl.dylib (356.50.1) <3B24F2D1-B578-359D-ADB2-0ED19A364C38> /usr/lib/system/libsystem_asl.dylib
    0x7fff5e21a000 -     0x7fff5e21afff  libsystem_blocks.dylib (67) <17303FDF-0D2D-3963-B05E-B4DF63052D47> /usr/lib/system/libsystem_blocks.dylib
    0x7fff5e21b000 -     0x7fff5e2a4ff7  libsystem_c.dylib (1244.50.9) <1187BFE8-4576-3247-8177-481554E1F9E7> /usr/lib/system/libsystem_c.dylib
    0x7fff5e2a5000 -     0x7fff5e2a8ffb  libsystem_configuration.dylib (963.50.8) <DF6B5287-203E-30CB-9947-78DF446C72B8> /usr/lib/system/libsystem_configuration.dylib
    0x7fff5e2a9000 -     0x7fff5e2acffb  libsystem_coreservices.dylib (51) <486000D3-D8CB-3BE7-8EE5-8BF380DE6DF7> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff5e2ad000 -     0x7fff5e2aefff  libsystem_darwin.dylib (1244.50.9) <09C21A4A-9EE0-388B-A9D9-DFF8F6758791> /usr/lib/system/libsystem_darwin.dylib
    0x7fff5e2af000 -     0x7fff5e2b5ff7  libsystem_dnssd.dylib (878.50.17) <9033B909-BCF7-37EB-A040-ADE8081611D6> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff5e2b6000 -     0x7fff5e2ffff7  libsystem_info.dylib (517.30.1) <AB634A98-B8AA-3804-8436-38261FC8EC4D> /usr/lib/system/libsystem_info.dylib
    0x7fff5e300000 -     0x7fff5e326ff7  libsystem_kernel.dylib (4570.51.2) <7FF1E390-2FAC-33A7-A545-60D9BB6692D4> /usr/lib/system/libsystem_kernel.dylib
    0x7fff5e327000 -     0x7fff5e372fcb  libsystem_m.dylib (3147.50.1) <FC2E58BA-E6D5-3D2A-89CA-67F212294136> /usr/lib/system/libsystem_m.dylib
    0x7fff5e373000 -     0x7fff5e392fff  libsystem_malloc.dylib (140.50.6) <7FD43735-9DDD-300E-8C4A-F909A74BDF49> /usr/lib/system/libsystem_malloc.dylib
    0x7fff5e393000 -     0x7fff5e4c3ff3  libsystem_network.dylib (1229.51.2) <F65ED095-8ABA-3355-93F8-B9D0505932F4> /usr/lib/system/libsystem_network.dylib
    0x7fff5e4c4000 -     0x7fff5e4ceffb  libsystem_networkextension.dylib (767.50.25) <758F1414-796D-3422-83C9-92D2915A06CE> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff5e4cf000 -     0x7fff5e4d8ff3  libsystem_notify.dylib (172) <08012EC0-2CD2-34BE-BF93-E7F56491299A> /usr/lib/system/libsystem_notify.dylib
    0x7fff5e4d9000 -     0x7fff5e4e0ff7  libsystem_platform.dylib (161.50.1) <6355EE2D-5456-3CA8-A227-B96E8F1E2AF8> /usr/lib/system/libsystem_platform.dylib
    0x7fff5e4e1000 -     0x7fff5e4ecfff  libsystem_pthread.dylib (301.50.1) <0E51CCBA-91F2-34E1-BF2A-FEEFD3D321E4> /usr/lib/system/libsystem_pthread.dylib
    0x7fff5e4ed000 -     0x7fff5e4f0fff  libsystem_sandbox.dylib (765.50.51) <B48D256E-D7DB-3D4F-BC95-34557170C7AA> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff5e4f1000 -     0x7fff5e4f2ff3  libsystem_secinit.dylib (30) <DE8D14E8-A276-3FF8-AE13-77F7040F33C1> /usr/lib/system/libsystem_secinit.dylib
    0x7fff5e4f3000 -     0x7fff5e4faff7  libsystem_symptoms.dylib (820.50.37) <ED7350E0-B68B-374A-9AB7-DC1F195A8327> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff5e4fb000 -     0x7fff5e50efff  libsystem_trace.dylib (829.50.17) <6568D68B-1D4C-38EE-90A9-54821D6403C0> /usr/lib/system/libsystem_trace.dylib
    0x7fff5e510000 -     0x7fff5e515ff7  libunwind.dylib (35.3) <BEF3FB49-5604-3B5F-82B5-332B80023AC3> /usr/lib/system/libunwind.dylib
    0x7fff5e516000 -     0x7fff5e543fff  libxpc.dylib (1205.50.76) <25DB244E-217D-3CE0-A8F2-0C4255783B42> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 248790
    thread_create: 0
    thread_set_state: 0
```

</details>

Context menu crash:

<details>

```
Process:               Electron [2189]
Path:                  /Users/USER/*/Electron.app/Contents/MacOS/Electron
Identifier:            com.github.electron
Version:               1.8.4 (1.8.4)
Code Type:             X86-64 (Native)
Parent Process:        ??? [2187]
Responsible:           Electron [2189]
User ID:               501

Date/Time:             2018-05-08 10:55:59.655 -0400
OS Version:            Mac OS X 10.13.4 (17E202)
Report Version:        12
Anonymous UUID:        EB206DA2-6DE4-1263-B62D-BF9731D8EBC0

Sleep/Wake UUID:       AC7B1DF2-6688-4104-B317-C60FEEBF362A

Time Awake Since Boot: 370000 seconds
Time Since Wake:       1500 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x000000090000002c
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [0]

VM Regions Near 0x90000002c:
    VM_ALLOCATE            00000001187fc000-0000000118afc000 [ 3072K] rw-/rw- SM=PRV  
--> 
    Memory Tag 255         000000eeaab80000-000000eeaac00000 [  512K] rw-/rwx SM=PRV  

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework 	0x000000010aed3bfe atom::AtomMenuModel::MenuWillClose() + 94
1   com.github.electron.framework 	0x000000010aed62e7 0x10ae03000 + 864999
2   com.apple.AppKit              	0x00007fff33702cb9 -[NSCarbonMenuImpl _carbonCloseEvent:handlerCallRef:] + 95
3   com.apple.AppKit              	0x00007fff3351e3ff NSSLMMenuEventHandler + 1231
4   com.apple.HIToolbox           	0x00007fff350cb904 DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 1541
5   com.apple.HIToolbox           	0x00007fff350cac4d SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 374
6   com.apple.HIToolbox           	0x00007fff350caac3 SendEventToEventTargetWithOptions + 45
7   com.apple.HIToolbox           	0x00007fff3514c7e1 SendMenuClosed(MenuData*, unsigned int, unsigned char) + 198
8   com.apple.HIToolbox           	0x00007fff3514c545 HideMenus(MenuSelectData*, __CFArray*) + 118
9   com.apple.HIToolbox           	0x00007fff3526d38a SelectItemAndRestoreAllMenuBits(MenuSelectData&, SelectionData*, MenuResult*, MenuResult*) + 1335
10  com.apple.HIToolbox           	0x00007fff3526e4e0 TrackMenuCommon(MenuSelectData&, unsigned char*, SelectionData*, MenuResult*, MenuResult*) + 1782
11  com.apple.HIToolbox           	0x00007fff3526a7d0 PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, unsigned int, Rect const*, unsigned short, unsigned int, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 1490
12  com.apple.HIToolbox           	0x00007fff35269cf7 _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned int, Point, unsigned short, unsigned int, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 409
13  com.apple.HIToolbox           	0x00007fff3513240c _HandlePopUpMenuSelectionWithDictionary + 268
14  com.apple.AppKit              	0x00007fff3364e79a _NSSLMPopUpCarbonMenu3 + 5632
15  com.apple.AppKit              	0x00007fff3364d0f4 -[NSCarbonMenuImpl popUpMenu:atLocation:width:forView:withSelectedItem:withFont:withFlags:withOptions:] + 439
16  com.apple.AppKit              	0x00007fff33b28c6b +[NSStatusBarButtonCell popupStatusBarMenu:inRect:ofView:withEvent:] + 1003
17  com.apple.AppKit              	0x00007fff33b2cf82 -[NSStatusItem popUpStatusItemMenu:] + 183
18  com.github.electron.framework 	0x000000010aedf801 0x10ae03000 + 903169
19  com.apple.AppKit              	0x00007fff33cd9836 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 1961
20  com.apple.AppKit              	0x00007fff33cd8c70 -[NSWindow(NSEventRouting) sendEvent:] + 497
21  com.apple.AppKit              	0x00007fff33b2b885 -[NSStatusBarWindow sendEvent:] + 348
22  com.apple.AppKit              	0x00007fff33b3a236 -[NSApplication(NSEvent) sendEvent:] + 2462
23  com.github.electron.framework 	0x000000010aeaef7b 0x10ae03000 + 704379
24  com.apple.AppKit              	0x00007fff3339a8b5 -[NSApplication run] + 812
25  com.github.electron.framework 	0x000000010b05db0e 0x10ae03000 + 2468622
26  com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
27  com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
28  com.github.electron.framework 	0x000000010b2d970f 0x10ae03000 + 5072655
29  com.github.electron.framework 	0x000000010b2d9530 0x10ae03000 + 5072176
30  com.github.electron.framework 	0x000000010b2dbd42 0x10ae03000 + 5082434
31  com.github.electron.framework 	0x000000010b2d53dc 0x10ae03000 + 5055452
32  com.github.electron.framework 	0x000000010b22c55b 0x10ae03000 + 4363611
33  com.github.electron.framework 	0x000000010ccc53fc 0x10ae03000 + 32252924
34  com.github.electron.framework 	0x000000010b22b834 0x10ae03000 + 4360244
35  com.github.electron.framework 	0x000000010ae0590a AtomMain + 74
36  com.github.electron           	0x0000000108e80f26 main + 38
37  libdyld.dylib                 	0x00007fff5e1cc015 start + 1

Thread 1:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 2:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 3:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 4:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 5:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 6:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 7:: V8 WorkerThread
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x00000001091e58b7 v8::base::Semaphore::Wait() + 23
2   libnode.dylib                 	0x00000001091ea9e0 v8::platform::TaskQueue::GetNext() + 48
3   libnode.dylib                 	0x00000001091eef4b v8::platform::WorkerThread::Run() + 43
4   libnode.dylib                 	0x00000001091e5097 0x108fba000 + 2273431
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 8:
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010913bee0 uv_sem_wait + 16
2   libnode.dylib                 	0x00000001090f24fd 0x108fba000 + 1279229
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 9:
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   libnode.dylib                 	0x000000010914090a 0x108fba000 + 1599754
2   libnode.dylib                 	0x0000000109131e78 uv_run + 152
3   libnode.dylib                 	0x00000001090f3a43 0x108fba000 + 1284675
4   libnode.dylib                 	0x00000001090f3709 node::inspector::InspectorIo::ThreadMain(void*) + 9
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 10:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010913c039 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000109130003 0x108fba000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 11:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010913c039 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000109130003 0x108fba000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 12:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010913c039 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000109130003 0x108fba000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 13:
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   libnode.dylib                 	0x000000010913c039 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000109130003 0x108fba000 + 1531907
4   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
5   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
6   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 14:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.Foundation          	0x00007fff37f1ef26 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010b05d96e 0x10ae03000 + 2468206
7   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
8   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
9   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
10  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
11  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
12  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
13  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 15:: DnsConfigService
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x000000010b0c37e9 0x10ae03000 + 2885609
2   com.github.electron.framework 	0x000000010b0c297d 0x10ae03000 + 2881917
3   com.github.electron.framework 	0x000000010b05c73f 0x10ae03000 + 2463551
4   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
5   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
6   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 16:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fff5e31e14a read + 10
1   com.github.electron.framework 	0x000000010aea1b5f 0x10ae03000 + 650079
2   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 17:: TaskSchedulerServiceThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x000000010b0c37e9 0x10ae03000 + 2885609
2   com.github.electron.framework 	0x000000010b0c297d 0x10ae03000 + 2881917
3   com.github.electron.framework 	0x000000010b05c73f 0x10ae03000 + 2463551
4   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
5   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
6   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
7   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
8   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
9   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 18:: TaskSchedulerBackgroundWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0bbb30 0x10ae03000 + 2853680
4   com.github.electron.framework 	0x000000010b0bbc61 0x10ae03000 + 2853985
5   com.github.electron.framework 	0x000000010b0740e8 0x10ae03000 + 2560232
6   com.github.electron.framework 	0x000000010b0747ad 0x10ae03000 + 2561965
7   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 19:: TaskSchedulerBackgroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0bbb30 0x10ae03000 + 2853680
4   com.github.electron.framework 	0x000000010b0bbc61 0x10ae03000 + 2853985
5   com.github.electron.framework 	0x000000010b0740e8 0x10ae03000 + 2560232
6   com.github.electron.framework 	0x000000010b0747ad 0x10ae03000 + 2561965
7   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 20:: TaskSchedulerForegroundBlockingWorker0
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0bbb30 0x10ae03000 + 2853680
4   com.github.electron.framework 	0x000000010b0bbc61 0x10ae03000 + 2853985
5   com.github.electron.framework 	0x000000010b0740e8 0x10ae03000 + 2560232
6   com.github.electron.framework 	0x000000010b0747ad 0x10ae03000 + 2561965
7   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 21:: Chrome_DBThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b2e6684 0x10ae03000 + 5125764
9   com.github.electron.framework 	0x000000010b2e67fb 0x10ae03000 + 5126139
10  com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
11  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 22:: Chrome_FileThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x000000010b0c37e9 0x10ae03000 + 2885609
2   com.github.electron.framework 	0x000000010b0c297d 0x10ae03000 + 2881917
3   com.github.electron.framework 	0x000000010b05c73f 0x10ae03000 + 2463551
4   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
5   com.github.electron.framework 	0x000000010b2e66b4 0x10ae03000 + 5125812
6   com.github.electron.framework 	0x000000010b2e6808 0x10ae03000 + 5126152
7   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
8   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
9   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
10  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
11  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 23:: Chrome_FileUserBlockingThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b2e66e4 0x10ae03000 + 5125860
9   com.github.electron.framework 	0x000000010b2e6815 0x10ae03000 + 5126165
10  com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
11  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 24:: Chrome_ProcessLauncherThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b2e6714 0x10ae03000 + 5125908
9   com.github.electron.framework 	0x000000010b2e6822 0x10ae03000 + 5126178
10  com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
11  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 25:: Chrome_CacheThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b2e6744 0x10ae03000 + 5125956
9   com.github.electron.framework 	0x000000010b2e682f 0x10ae03000 + 5126191
10  com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
11  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
12  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
13  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
14  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 26:: Chrome_IOThread
0   libsystem_kernel.dylib        	0x00007fff5e31dbf2 kevent + 10
1   com.github.electron.framework 	0x000000010b0c37e9 0x10ae03000 + 2885609
2   com.github.electron.framework 	0x000000010b0c297d 0x10ae03000 + 2881917
3   com.github.electron.framework 	0x000000010b05c726 0x10ae03000 + 2463526
4   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
5   com.github.electron.framework 	0x000000010b2e6774 0x10ae03000 + 5126004
6   com.github.electron.framework 	0x000000010b2e683c 0x10ae03000 + 5126204
7   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
8   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
9   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
10  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
11  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 27:: IndexedDB
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
9   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
10  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
11  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
12  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 28:: CompositorTileWorker1/47875
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010b1bc908 0x10ae03000 + 3905800
3   com.github.electron.framework 	0x000000010b07e2ec 0x10ae03000 + 2601708
4   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
5   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
6   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
7   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 29:: AudioThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.github.electron.framework 	0x000000010b05d68f 0x10ae03000 + 2467471
6   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
7   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
8   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
9   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
10  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
11  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
12  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 30:
0   libsystem_kernel.dylib        	0x00007fff5e313246 semaphore_wait_trap + 10
1   libnode.dylib                 	0x000000010913bee0 uv_sem_wait + 16
2   com.github.electron.framework 	0x000000010af22400 atom::NodeBindings::EmbedThreadRunner(void*) + 48
3   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
4   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
5   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 31:: BrowserBlockingWorker1/77575
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010b079f71 0x10ae03000 + 2584433
3   com.github.electron.framework 	0x000000010b078f36 0x10ae03000 + 2580278
4   com.github.electron.framework 	0x000000010b07e2ec 0x10ae03000 + 2601708
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 32:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.Foundation          	0x00007fff37f1ef26 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010b05d96e 0x10ae03000 + 2468206
7   com.github.electron.framework 	0x000000010b05d12c 0x10ae03000 + 2466092
8   com.github.electron.framework 	0x000000010b072153 0x10ae03000 + 2552147
9   com.github.electron.framework 	0x000000010b0936d9 0x10ae03000 + 2688729
10  com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
11  libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
12  libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
13  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 33:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fff5e31320a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff5e312724 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff35e16045 __CFRunLoopServiceMachPort + 341
3   com.apple.CoreFoundation      	0x00007fff35e15397 __CFRunLoopRun + 1783
4   com.apple.CoreFoundation      	0x00007fff35e14a07 CFRunLoopRunSpecific + 487
5   com.apple.AppKit              	0x00007fff334e2fc4 _NSEventThread + 184
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 34:: TaskSchedulerForegroundWorker1
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0bbb30 0x10ae03000 + 2853680
4   com.github.electron.framework 	0x000000010b0bbc61 0x10ae03000 + 2853985
5   com.github.electron.framework 	0x000000010b0740e8 0x10ae03000 + 2560232
6   com.github.electron.framework 	0x000000010b0747ad 0x10ae03000 + 2561965
7   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
8   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
9   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
10  libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 35:: WorkerPool/12807
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0bead8 0x10ae03000 + 2865880
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 36:: WorkerPool/28423
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0bead8 0x10ae03000 + 2865880
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 37:: BrowserBlockingWorker2/36367
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010b079f71 0x10ae03000 + 2584433
3   com.github.electron.framework 	0x000000010b078f36 0x10ae03000 + 2580278
4   com.github.electron.framework 	0x000000010b07e2ec 0x10ae03000 + 2601708
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 38:: BrowserBlockingWorker3/6407
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010b079f71 0x10ae03000 + 2584433
3   com.github.electron.framework 	0x000000010b078f36 0x10ae03000 + 2580278
4   com.github.electron.framework 	0x000000010b07e2ec 0x10ae03000 + 2601708
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 39:: CachePoolWorker1/124971
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e5589 _pthread_cond_wait + 732
2   com.github.electron.framework 	0x000000010b079f71 0x10ae03000 + 2584433
3   com.github.electron.framework 	0x000000010b078f36 0x10ae03000 + 2580278
4   com.github.electron.framework 	0x000000010b07e2ec 0x10ae03000 + 2601708
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 40:: WorkerPool/12555
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0bead8 0x10ae03000 + 2865880
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 41:: WorkerPool/39947
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0bead8 0x10ae03000 + 2865880
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 42:: WorkerPool/40207
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0bead8 0x10ae03000 + 2865880
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 43:: WorkerPool/58399
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0be8ac 0x10ae03000 + 2865324
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 44:: WorkerPool/3855
0   libsystem_kernel.dylib        	0x00007fff5e31ca1e __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e55c2 _pthread_cond_wait + 789
2   com.github.electron.framework 	0x000000010b01241b 0x10ae03000 + 2159643
3   com.github.electron.framework 	0x000000010b0be646 0x10ae03000 + 2864710
4   com.github.electron.framework 	0x000000010b0be8ac 0x10ae03000 + 2865324
5   com.github.electron.framework 	0x000000010b0670b7 0x10ae03000 + 2506935
6   libsystem_pthread.dylib       	0x00007fff5e4e4661 _pthread_body + 340
7   libsystem_pthread.dylib       	0x00007fff5e4e450d _pthread_start + 377
8   libsystem_pthread.dylib       	0x00007fff5e4e3bf9 thread_start + 13

Thread 45:
0   libsystem_kernel.dylib        	0x00007fff5e31d292 __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e4009 _pthread_wqthread + 1035
2   libsystem_pthread.dylib       	0x00007fff5e4e3be9 start_wqthread + 13

Thread 46:
0   libsystem_kernel.dylib        	0x00007fff5e31d292 __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e420e _pthread_wqthread + 1552
2   libsystem_pthread.dylib       	0x00007fff5e4e3be9 start_wqthread + 13

Thread 47:
0   libsystem_kernel.dylib        	0x00007fff5e31d292 __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff5e4e420e _pthread_wqthread + 1552
2   libsystem_pthread.dylib       	0x00007fff5e4e3be9 start_wqthread + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x00007fc8e34c5980  rbx: 0x00007ffee6d798b8  rcx: 0x000000090000001c  rdx: 0x00007fc8e359d6d0
  rdi: 0x00007fc8e34c5980  rsi: 0x00007ffee6d798d8  rbp: 0x00007ffee6d79910  rsp: 0x00007ffee6d798b0
   r8: 0x0000000000000000   r9: 0x00007fc8e34cd920  r10: 0x000007fc8e341086  r11: 0x0000000000000001
  r12: 0x00007fff5d5a7e80  r13: 0x00007fc8e369dc60  r14: 0x00007ffee6d798d8  r15: 0x00007ffee6d798d8
  rip: 0x000000010aed3bfe  rfl: 0x0000000000010202  cr2: 0x000000090000002c
  
Logical CPU:     2
Error Code:      0x00000004
Trap Number:     14


Binary Images:
       0x108e80000 -        0x108e80ff7 +com.github.electron (1.8.4 - 1.8.4) <C11B8E11-EDD2-37B9-9AB5-5FE9E97FFFFB> /Users/USER/*/Electron.app/Contents/MacOS/Electron
       0x108e83000 -        0x108e9dfff +com.github.Squirrel (1.0 - 1) <0A9F60FF-F2D2-364A-962A-65137E68760E> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x108ebf000 -        0x108f22ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x108f94000 -        0x108fa8fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x108fba000 -        0x109e9aff3 +libnode.dylib (0) <D887239E-2626-3152-8FD6-5D25CF550A50> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib
       0x10a12e000 -        0x10a396fff +libffmpeg.dylib (0) <701E8887-223E-357E-8D44-272038AF555F> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x10a9a5000 -        0x10a9a5fff +desktopIdle.node (???) <ED041ACB-A428-3E3B-B20C-5DA3919DB699> /Users/USER/*/desktopIdle.node
       0x10a9a8000 -        0x10a9acfff +keytar.node (???) <5810D2F6-5D75-3F87-90F4-02CB8B4CB3DC> /Users/USER/*/keytar.node
       0x10ad65000 -        0x10adaf9df  dyld (551.3) <AFAB4EFA-7020-34B1-BBEF-0F26C6D3CA36> /usr/lib/dyld
       0x10ae03000 -        0x10ede5f03 +com.github.electron.framework (0) <954F1C6C-2AEA-30D2-BE41-84B5CFB95867> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x115ca5000 -        0x115f91fff  com.apple.driver.AppleIntelHD3000GraphicsGLDriver (10.4.14 - 10.0.4) <FE57B18A-B034-3FB9-ABA5-D6D96B463142> /System/Library/Extensions/AppleIntelHD3000GraphicsGLDriver.bundle/Contents/MacOS/AppleIntelHD3000GraphicsGLDriver
       0x11615e000 -        0x116216ffb  com.apple.AMDRadeonX3000GLDriver (1.66.31 - 1.6.6) <A21198BB-FFD8-3F1A-9DBE-0D179B5F5197> /System/Library/Extensions/AMDRadeonX3000GLDriver.bundle/Contents/MacOS/AMDRadeonX3000GLDriver
    0x7fff2e423000 -     0x7fff2e64bff3  ATIRadeonX3000SCLib.dylib (1.66.31) <83E4E3AA-493C-3F2E-9473-01ED87283B32> /System/Library/Extensions/AMDRadeonX3000GLDriver.bundle/Contents/MacOS/ATIRadeonX3000SCLib.dylib
    0x7fff31cd8000 -     0x7fff31eb7fff  com.apple.avfoundation (2.0 - 1535.42) <A4E74521-3C02-329A-BCB7-C2C4308DECD4> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff31eb8000 -     0x7fff31f71fff  com.apple.audio.AVFAudio (1.0 - ???) <ECE63BA3-4344-3522-904B-71F89677AC7D> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff32077000 -     0x7fff32077fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <2EF00EFE-06E8-3082-85C3-2988B422A19D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff32078000 -     0x7fff3208fff7  libCGInterfaces.dylib (417.2) <E3732720-0B2C-3FA6-9D05-5C71990102CE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff32090000 -     0x7fff327deffb  com.apple.vImage (8.1 - ???) <56C275C1-459F-37CD-BF29-2E6D81C29E53> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff327df000 -     0x7fff3297fff3  libBLAS.dylib (1211.50.2) <93259222-2D94-333D-A1EB-09C6FC4A64B4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff32980000 -     0x7fff329bafef  libBNNS.dylib (38.1) <0AAE0109-71D5-3B26-8401-3E62DDF97624> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff329bb000 -     0x7fff32d94ff7  libLAPACK.dylib (1211.50.2) <70781D0B-AEAD-33EB-9900-10DC30F37D61> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff32d95000 -     0x7fff32dabff7  libLinearAlgebra.dylib (1211.50.2) <FB5A35EA-D636-3D69-AB53-B67E1EB8134C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff32dac000 -     0x7fff32db1ff3  libQuadrature.dylib (3) <3D6BF66A-55B2-3692-BAC7-DEB0C676ED29> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff32db2000 -     0x7fff32e32fff  libSparse.dylib (79.50.2) <0DC25CDD-F8C1-3D6E-B472-8B060708424F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff32e33000 -     0x7fff32e45ff7  libSparseBLAS.dylib (1211.50.2) <994A7D7E-FA3B-3943-A59C-8150B9AF86BE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff32e46000 -     0x7fff32fb9fe7  libvDSP.dylib (622.50.5) <4BF310F4-31A3-3DA5-80E4-7F8014AD380B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff32fba000 -     0x7fff33070fef  libvMisc.dylib (622.50.5) <88143A88-4FDE-35A1-85FE-54FF0C2A9E43> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff33071000 -     0x7fff33071fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <880DEF40-389A-3F56-ACA1-B62A5BC57E59> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff33364000 -     0x7fff341c2fff  com.apple.AppKit (6.9 - 1561.40.112) <C839B0C1-F7EE-3056-985C-63CF1A030EC4> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff34214000 -     0x7fff34214fff  com.apple.ApplicationServices (48 - 50) <8DA47D38-B07B-3AE2-B343-4579864430C6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff34215000 -     0x7fff3427bfff  com.apple.ApplicationServices.ATS (377 - 445.3) <000C4E9F-E0D9-371D-B304-83BA37460724> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff34314000 -     0x7fff34436fff  libFontParser.dylib (222.1.4) <FF68FAF6-70BB-3E39-A263-E17B6F5E00D0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff34437000 -     0x7fff34481ff7  libFontRegistry.dylib (221.3) <C84F7112-4764-3F4B-9FBA-4A022CF6346B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff34526000 -     0x7fff34559ff7  libTrueTypeScaler.dylib (222.1.4) <4734ECD6-6F41-3A16-AE35-265BDC1572C5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff345c3000 -     0x7fff345c7ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <A5FB2694-1559-34A8-A3D3-2029F68A63CA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff34667000 -     0x7fff346b9ffb  com.apple.HIServices (1.22 - 624) <828E189A-62F9-3961-8A89-22F508870CC5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff346ba000 -     0x7fff346c8fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <B65FF7E6-E9B5-34D8-8CA7-63D415A8A9A6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff346c9000 -     0x7fff34715fff  com.apple.print.framework.PrintCore (13.4 - 503.2) <B90C67C1-0292-3CEC-885D-F1882CD104BE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff34716000 -     0x7fff34750fff  com.apple.QD (3.12 - 404.2) <38B20AFF-9D54-3B52-A6DC-C0D71380AA5F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff34751000 -     0x7fff3475dfff  com.apple.speech.synthesis.framework (7.5.1 - 7.5.1) <84ADDF38-36F1-3D3B-B28D-8865FA10FCD7> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff3475e000 -     0x7fff349ebff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <87D81714-F167-39F5-B5E7-A7A432EDAB5B> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff349ed000 -     0x7fff349edfff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <513C9A4B-4F6D-3A21-921F-2CA101B97830> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff34d0f000 -     0x7fff350a9ff7  com.apple.CFNetwork (897.15 - 897.15) <0C03AF39-3527-3E0D-8413-8E1B2A962F0D> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff350be000 -     0x7fff350befff  com.apple.Carbon (158 - 158) <F8B370D9-2103-3276-821D-ACC756167F86> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff350bf000 -     0x7fff350c2ffb  com.apple.CommonPanels (1.2.6 - 98) <2391761C-5CAA-3F68-86B7-50B37927B104> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff350c3000 -     0x7fff353c8fff  com.apple.HIToolbox (2.1.1 - 911.10) <BF7F9C0E-C732-3FB2-9BBC-362888BDA57B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff353c9000 -     0x7fff353ccffb  com.apple.help (1.3.8 - 66) <DEBADFA8-C189-3195-B0D6-A1F2DE95882A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff353cd000 -     0x7fff353d2fff  com.apple.ImageCapture (9.0 - 9.0) <23B4916F-3B43-3DFF-B956-FC390EECA284> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff353d3000 -     0x7fff35468ffb  com.apple.ink.framework (10.9 - 221) <5206C8B0-22DA-36C9-998E-846EDB626D5B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff35469000 -     0x7fff35483ff7  com.apple.openscripting (1.7 - 174) <1B2A1F9E-5534-3D61-83CA-9199B39E8708> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff354a4000 -     0x7fff354a5fff  com.apple.print.framework.Print (12 - 267) <3682ABFB-2561-3419-847D-02C247F4800D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff354a6000 -     0x7fff354a8ff7  com.apple.securityhi (9.0 - 55006) <C1406B8D-7D05-3959-808F-9C82189CF57F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff354a9000 -     0x7fff354affff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <2ED8643D-B0C3-3F17-82A2-BBF13E6CBABC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff355d0000 -     0x7fff355d0fff  com.apple.Cocoa (6.11 - 22) <4CF8E31C-B5C7-367B-B73D-1A8AC8E41B7F> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff355de000 -     0x7fff35697fff  com.apple.ColorSync (4.13.0 - 3325) <D283C285-447D-3258-A7E4-59532123B8FF> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff35824000 -     0x7fff358b7ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <6E3F958D-79BB-3658-99AD-59F16BF756F1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff3591e000 -     0x7fff35947ffb  com.apple.CoreBluetooth (1.0 - 1) <E1335074-9D07-370E-8440-61C4874BAC56> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff35948000 -     0x7fff35cacff3  com.apple.CoreData (120 - 851) <8D605466-8676-3D45-9A4B-8980971551C3> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff35cad000 -     0x7fff35d92ff7  com.apple.CoreDisplay (1.0 - 97.16) <FCFB2A8C-7A5E-314B-AA12-04D33656A0E6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff35d93000 -     0x7fff3622dff7  com.apple.CoreFoundation (6.9 - 1452.23) <358C547D-E227-3228-8218-62327F4605C8> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff3622f000 -     0x7fff3685dff7  com.apple.CoreGraphics (2.0 - 1161.10) <3B808DE4-D373-3E19-A3FD-99B4EB21AD01> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff3685f000 -     0x7fff36b4efff  com.apple.CoreImage (13.0.0 - 579.4.11) <702F8035-26FE-3C78-8587-4C9563E03CC4> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff36bbb000 -     0x7fff36c00fff  com.apple.audio.midi.CoreMIDI (1.10 - 88) <BC3E756C-A066-325C-9383-A78A4A66C7BF> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff36ddd000 -     0x7fff36ec6ff7  com.apple.CoreMedia (1.0 - 2275.61.1) <C440188D-BC13-3E1C-A322-5F1FF70BDB34> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff36ec7000 -     0x7fff36f15fff  com.apple.CoreMediaIO (812.0 - 4994) <2FDA2056-D26F-343D-AB91-488CF809FE63> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff36f16000 -     0x7fff36f16fff  com.apple.CoreServices (822.31 - 822.31) <615919A2-AE11-3F27-9A37-FB0CFF8D36B6> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff36f17000 -     0x7fff36f8bffb  com.apple.AE (735.1 - 735.1) <08EBA184-20F7-3725-AEA6-C314448161C6> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff36f8c000 -     0x7fff37263fff  com.apple.CoreServices.CarbonCore (1178.4 - 1178.4) <0D5E19BF-18CB-3FA4-8A5F-F6C787C5EE08> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff37264000 -     0x7fff37298fff  com.apple.DictionaryServices (1.2 - 284.2) <6505B075-41C3-3C62-A4C3-85CE3F6825CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff37299000 -     0x7fff372a1ffb  com.apple.CoreServices.FSEvents (1239.50.1 - 1239.50.1) <3637CEC7-DF0E-320E-9634-44A442925C65> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff372a2000 -     0x7fff3745fff7  com.apple.LaunchServices (822.31 - 822.31) <BDFAB0FF-C2C6-375B-9E84-E43E267E2F82> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff37460000 -     0x7fff37510ff7  com.apple.Metadata (10.7.0 - 1191.4.13) <B5C22E70-C265-3C9F-865F-B138994A418D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff37511000 -     0x7fff37571fff  com.apple.CoreServices.OSServices (822.31 - 822.31) <690E3C93-8799-39FF-8663-190A49B002E3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff37572000 -     0x7fff375e0fff  com.apple.SearchKit (1.4.0 - 1.4.0) <3662545A-B1CF-3079-BDCD-C83855CEFEEE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff375e1000 -     0x7fff37605ffb  com.apple.coreservices.SharedFileList (71.21 - 71.21) <7DB79D78-9925-33F8-96BA-35AB7AEB326A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff378a6000 -     0x7fff379f6fff  com.apple.CoreText (352.0 - 578.18) <B8454115-2A4B-3585-A7A1-B47A638F2EEB> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff379f7000 -     0x7fff37a31fff  com.apple.CoreVideo (1.8 - 0.0) <86CCC036-51BB-3DD1-9601-D93798BCCD0F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff37a32000 -     0x7fff37abdff3  com.apple.framework.CoreWLAN (13.0 - 1350.1) <E862CC02-69D2-3503-887B-B6E8223081E7> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff37d38000 -     0x7fff37d3dfff  com.apple.DiskArbitration (2.7 - 2.7) <A6450227-DD23-3100-ADBF-DB1C21E979F7> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff37efe000 -     0x7fff382c4fff  com.apple.Foundation (6.9 - 1452.23) <E64540AD-1755-3C16-8537-552A00E92541> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff38334000 -     0x7fff38364fff  com.apple.GSS (4.0 - 2.0) <41087278-74AE-3FA5-8C0E-9C78EB696299> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff38365000 -     0x7fff3837dff3  com.apple.GameController (1.0 - 1) <CE96F310-B3E5-3EAE-B1BC-334F8C224FA7> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff38476000 -     0x7fff3857affb  com.apple.Bluetooth (6.0.5 - 6.0.5f3) <85F1B5A6-03C5-3D5A-90B8-5FC86349E330> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff385da000 -     0x7fff38675ff7  com.apple.framework.IOKit (2.0.2 - 1445.50.26) <A63CAC8D-BF57-34FD-9A88-2F74546F2000> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff38677000 -     0x7fff3867effb  com.apple.IOSurface (211.12 - 211.12) <392CA7DE-B365-364E-AF4A-33EC2CC48E6F> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff3867f000 -     0x7fff386d4ff3  com.apple.ImageCaptureCore (7.0 - 7.0) <0DAB3D7E-8C3F-35DE-96DF-C370AD35EB65> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff386d5000 -     0x7fff38852fff  com.apple.ImageIO.framework (3.3.0 - 1739.1) <4D2F4CA2-3987-3A15-9149-952E461C6D11> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff38853000 -     0x7fff38857ffb  libGIF.dylib (1739.1) <6C6F294B-22AD-3FFE-B45E-3B08D30F2FD3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff38858000 -     0x7fff3893ffff  libJP2.dylib (1739.1) <7E584907-C856-3205-B1D2-E2E5B1D93BBE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff38940000 -     0x7fff38963fff  libJPEG.dylib (1739.1) <5DD38B10-4FDA-3BF8-AD6D-CF08AE2808D0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff38c40000 -     0x7fff38c66ff3  libPng.dylib (1739.1) <6D7994E2-B847-333A-9F03-C80E11AC9BB0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff38c67000 -     0x7fff38c69ff3  libRadiance.dylib (1739.1) <3320516C-A74A-323C-9BE9-C01D2E6A23EB> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff38c6a000 -     0x7fff38cb7ff3  libTIFF.dylib (1739.1) <F08B297E-6366-3DB6-A3B4-2B158D796EC9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff38e73000 -     0x7fff39b3bfff  com.apple.JavaScriptCore (13605 - 13605.1.33.1.4) <38CD7602-E3E1-3C57-B3E6-EF459AE25641> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff39b53000 -     0x7fff39b6cff7  com.apple.Kerberos (3.0 - 1) <F86DCCDF-93C1-38B3-82C2-477C12E8EE6D> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff39e2a000 -     0x7fff39e31fff  com.apple.MediaAccessibility (1.0 - 114) <9F72AACD-BAEB-3646-BD0F-12C47591C20D> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff39edd000 -     0x7fff3a544ff7  com.apple.MediaToolbox (1.0 - 2275.61.1) <E92B8487-AE1C-3EA9-A80B-99B43AD75FC0> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff3a546000 -     0x7fff3a5c7ff7  com.apple.Metal (125.25 - 125.25) <B2ECA050-4C13-3EAD-A1C8-AC21EFF122F1> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff3a5e4000 -     0x7fff3a5fffff  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <0B4455FE-5C97-345C-B416-325EC6D88A2A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff3a600000 -     0x7fff3a66ffef  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <87F14199-C445-34C2-90F8-57C29212483E> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff3a670000 -     0x7fff3a694fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <BD50FD9C-CE92-34AF-8663-968BF89202A0> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff3a695000 -     0x7fff3a77cff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <FBDDCAE6-EC6E-361F-B924-B3EBDEAC2D2F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff3a77d000 -     0x7fff3a77dff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <20ECB52B-B5C2-39EA-88E3-DFEC0C3CC9FF> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff3b77c000 -     0x7fff3b788ffb  com.apple.NetFS (6.0 - 4.0) <471DD96F-FA2E-3FE9-9746-2519A6780D1A> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff3e571000 -     0x7fff3e579fef  libcldcpuengine.dylib (2.8.7) <EF9A91AC-029C-300A-99E7-4952C15DA09F> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff3e57a000 -     0x7fff3e5c8fff  com.apple.opencl (2.8.15 - 2.8.15) <83ED39D0-1D39-3593-BA25-70A8A911DE71> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff3e5c9000 -     0x7fff3e5e5ffb  com.apple.CFOpenDirectory (10.13 - 207.50.1) <C2715A7A-2E5C-3A21-ADB4-726F707A1294> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff3e5e6000 -     0x7fff3e5f1fff  com.apple.OpenDirectory (10.13 - 207.50.1) <220FB6F2-4892-3A66-8838-C134CF657D3A> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff3f770000 -     0x7fff3f772fff  libCVMSPluginSupport.dylib (16.5.10) <BF5D065A-A38B-3446-9418-799F598072EF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff3f773000 -     0x7fff3f778ffb  libCoreFSCache.dylib (162.6.1) <879B2738-2E8A-3596-AFF8-9C3FB1B6828B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff3f779000 -     0x7fff3f77dfff  libCoreVMClient.dylib (162.6.1) <64ED0A84-225F-39BC-BE0D-C896ACF5B50A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff3f77e000 -     0x7fff3f787ff7  libGFXShared.dylib (16.5.10) <6024B1FE-ACD7-3314-B390-85972CB9B778> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff3f788000 -     0x7fff3f793fff  libGL.dylib (16.5.10) <AB8B6C73-8496-3784-83F6-27737ED03B09> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff3f794000 -     0x7fff3f7cffe7  libGLImage.dylib (16.5.10) <5B41D074-3132-3587-91B6-E441BA8C9F13> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff3f7d0000 -     0x7fff3f93cfff  libGLProgrammability.dylib (16.5.10) <3839266D-CA93-3B35-A6D0-CC851AE72367> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib
    0x7fff3f93d000 -     0x7fff3f97bffb  libGLU.dylib (16.5.10) <F6844912-1B86-34DF-9FB5-A428CC7B5B18> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff402f3000 -     0x7fff40302fff  com.apple.opengl (16.5.10 - 16.5.10) <BC4EEFE3-A09B-3998-B723-1415B995B0EE> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff40303000 -     0x7fff4049aff7  GLEngine (16.5.10) <FCC01BF5-735B-3275-910F-21803D3C57D8> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine
    0x7fff4049b000 -     0x7fff404c3ffb  GLRendererFloat (16.5.10) <7186EEF3-7B8F-376E-BD2E-C48BCD4067F9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat
    0x7fff4067c000 -     0x7fff407c8ff7  com.apple.QTKit (7.7.3 - 3014.8) <3F98E9C1-E9F0-33E8-902C-61194FC68883> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff407c9000 -     0x7fff40a2eff7  com.apple.imageKit (3.0 - 1043) <49A20EDB-F529-3E3F-BCF9-2624722F8A7B> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff40a2f000 -     0x7fff40b1effb  com.apple.PDFKit (1.0 - 677.67) <6BD11C23-1AEA-3078-8D0C-A7152BCF9031> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff40b1f000 -     0x7fff41031ff7  com.apple.QuartzComposer (5.1 - 364) <1369D6DA-8842-3878-B546-1D09828331F5> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff41032000 -     0x7fff41055fff  com.apple.quartzfilters (1.10.0 - 1.10.0) <C95CB89D-148D-341B-BC50-82D8C32BF767> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff41056000 -     0x7fff4114fff7  com.apple.QuickLookUIFramework (5.0 - 743.13) <09B296B3-4242-3224-9F44-5DFB4AB894CC> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff41150000 -     0x7fff41150fff  com.apple.quartzframework (1.5 - 21) <DCEB0FCC-2C32-3D02-8752-7B6FA009AB85> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff41151000 -     0x7fff4139cff7  com.apple.QuartzCore (1.11 - 584.40) <ABC7F8FA-5F5A-31F4-868B-FDC4175BAFAC> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff4139d000 -     0x7fff413f4ff7  com.apple.QuickLookFramework (5.0 - 743.13) <4FA54690-032B-3DE2-B088-6774034DEDB9> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff415b9000 -     0x7fff415d0ff7  com.apple.SafariServices.framework (13605 - 13605.1.33.1.4) <3DBCD702-E1FB-320F-B7B7-674D6167CF33> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff41bd0000 -     0x7fff41ef8fff  com.apple.security (7.0 - 58286.51.6) <7212D257-5324-3DBA-8C26-504D6B8F632A> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff41ef9000 -     0x7fff41f85ff7  com.apple.securityfoundation (6.0 - 55185.50.5) <087D601E-7813-3F9E-97EE-BC7081F520BD> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff41f86000 -     0x7fff41fb6fff  com.apple.securityinterface (10.0 - 55109.50.6) <343FFA91-89CF-3A3F-833A-D65A2647CCF1> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff41fb7000 -     0x7fff41fbbffb  com.apple.xpc.ServiceManagement (1.0 - 1) <5BFDB3ED-73A7-3035-A5BC-ADA6E4F74BFD> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff42360000 -     0x7fff423d0ff3  com.apple.SystemConfiguration (1.17 - 1.17) <8532B8E9-7E30-35A3-BC4A-DDE8E0614FDA> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff42585000 -     0x7fff42900fff  com.apple.VideoToolbox (1.0 - 2275.61.1) <B8E60F20-DEB7-38CA-B294-FD1DB3F233EC> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff452c1000 -     0x7fff45354ff7  com.apple.APFS (1.0 - 1) <D1CE52E0-45C0-30C4-B440-E2CF2F74CEE5> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff45f6f000 -     0x7fff45f97fff  com.apple.framework.Apple80211 (13.0 - 1361.7) <16627876-8CF5-3502-A1D6-35FCBDD5E79A> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff45f99000 -     0x7fff45fa8fef  com.apple.AppleFSCompression (96.30.2 - 1.0) <ABFF224B-22D6-35F6-A072-9548FD388EB7> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff460ea000 -     0x7fff46132ff3  com.apple.AppleJPEG (1.0 - 1) <8DD410CB-76A1-3F22-9A9F-0491FA0CEB4A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff4616d000 -     0x7fff46195fff  com.apple.applesauce (1.0 - ???) <CCA8B094-1BCE-3AE3-A0A7-D544C818DE36> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff4625e000 -     0x7fff46261ff3  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <0E33401D-7B9C-378A-8EE8-0E3D40B63C8D> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff46262000 -     0x7fff462b2ff7  com.apple.AppleVAFramework (5.0.41 - 5.0.41) <8169ABC4-56F0-301E-B913-A762F7E40DBF> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff469b5000 -     0x7fff469bcff7  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <51A41CA3-DB1D-3380-993E-99C54AEE518E> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff469bd000 -     0x7fff46a44ff7  com.apple.backup.framework (1.9.5 - 1.9.5) <BC020BDD-7C93-37E5-A762-4FDCBD2056A8> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff46a4d000 -     0x7fff46a53ff3  com.apple.BezelServicesFW (305 - 305) <FEED193D-3363-3C8A-9815-4A6128E640E3> /System/Library/PrivateFrameworks/BezelServices.framework/Versions/A/BezelServices
    0x7fff47822000 -     0x7fff47871ff3  com.apple.ChunkingLibrary (189 - 189) <C021A0EB-82E7-3A1E-A772-96B0E7E038D9> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff483fa000 -     0x7fff48403ff3  com.apple.CommonAuth (4.0 - 2.0) <4D237B25-27E5-3577-948B-073659F6D3C0> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff4873f000 -     0x7fff48b47fff  com.apple.CoreAUC (259.0.0 - 259.0.0) <1E0FB2C7-109E-3924-8E7F-8C6ACD78AF26> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff48b48000 -     0x7fff48b78ff7  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) <E9FF9574-122A-3966-AA2B-546E512ACD06> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff48c0e000 -     0x7fff48c50ff3  com.apple.corebrightness (1.0 - 1) <F40FFDF3-5DF4-308A-8F46-C7A9BED5D8BB> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff48f06000 -     0x7fff48f16ff7  com.apple.CoreEmoji (1.0 - 69.3) <A4357F5C-0C38-3A61-B456-D7321EB2CEE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff497d1000 -     0x7fff497e7ff7  com.apple.CoreMediaAuthoring (2.2 - 956) <FBA28A76-97E2-3023-A3F6-D03280AE2889> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff49b1c000 -     0x7fff49bc1fff  com.apple.CorePDF (4.0 - 414) <D64D17C3-9AD0-3A29-89DE-36BEF0156381> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff49df4000 -     0x7fff49e25ff3  com.apple.CoreServicesInternal (309.1 - 309.1) <EB09CAFC-AE9B-3257-BE45-5471D9F64AAD> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff4a161000 -     0x7fff4a1f2fff  com.apple.CoreSymbolication (9.3 - 64026) <BAF3CE6E-8140-3159-BF1B-B953816459A0> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff4a275000 -     0x7fff4a3a9fff  com.apple.coreui (2.1 - 494.1) <19624CAA-74DE-3DD3-9585-E64BE866EBFF> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff4a3aa000 -     0x7fff4a4daff7  com.apple.CoreUtils (5.5 - 550.44) <DFC364C3-0812-31B5-9C79-C81C2DFDDB8B> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff4a52f000 -     0x7fff4a593fff  com.apple.framework.CoreWiFi (13.0 - 1350.1) <6EC5DEB3-6E2F-3DC2-BE59-1FD05175FB0C> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff4a594000 -     0x7fff4a5a4ff7  com.apple.CrashReporterSupport (10.13 - 1) <42451386-F745-38B9-896F-49996B26D066> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff4a622000 -     0x7fff4a631ff7  com.apple.framework.DFRFoundation (1.0 - 191.7) <3B8ED6F7-5DFF-34C3-BA90-DDB85679684C> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff4a634000 -     0x7fff4a638ffb  com.apple.DSExternalDisplay (3.1 - 380) <8D03D346-887A-3CE7-9483-4AD7804D1FBB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff4a6ba000 -     0x7fff4a730fff  com.apple.datadetectorscore (7.0 - 590.3) <83E85A62-44A8-33F8-AD79-AC4C807184C4> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff4a77e000 -     0x7fff4a7beff7  com.apple.DebugSymbols (181.0 - 181.0) <299A0238-ED78-3676-B131-274D972824AA> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff4a7bf000 -     0x7fff4a8eefff  com.apple.desktopservices (1.12.4 - 1.12.4) <47C3FBF3-5E75-3821-B003-2A4DC3657D8D> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff4abb9000 -     0x7fff4abbdff7  com.apple.DisplayServicesFW (3.1 - 380) <79C5F9B5-D95F-3B86-BF98-C103B862EFE3> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff4b705000 -     0x7fff4bb33fff  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <B574FE33-4A41-3611-9738-388EBAF03E37> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff4ede3000 -     0x7fff4edeefff  libGPUSupport.dylib (16.5.10) <C69DADE2-9F5F-3F58-9E6C-C3893999A5EA> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupport.dylib
    0x7fff4edef000 -     0x7fff4edfaff7  libGPUSupportMercury.dylib (16.5.10) <CEAE2714-7D6F-3B26-9F1E-501E79C979A2> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib
    0x7fff4edfb000 -     0x7fff4ee00ff7  com.apple.GPUWrangler (3.18.48 - 3.18.48) <D2BA4CFA-ED0A-3FEC-B5FF-2D6C0557334E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff4f1b4000 -     0x7fff4f1d9ff3  com.apple.GenerationalStorage (2.0 - 285.3) <13B96400-FF70-376B-B20E-FB7D61064800> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff4fb76000 -     0x7fff4fb85fff  com.apple.GraphVisualizer (1.0 - 5) <B993B8A2-5700-3DFC-9EB7-4CCEE8F959F1> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff4fc08000 -     0x7fff4fc7cfff  com.apple.Heimdal (4.0 - 2.0) <18607D75-DB78-3CC7-947E-AC769195164C> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff4fc7d000 -     0x7fff4fcabfff  com.apple.HelpData (2.3 - 167) <4D9B89EB-2FE8-3ABD-8C22-54E6FE208E71> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData
    0x7fff50578000 -     0x7fff5057fff7  com.apple.IOAccelerator (378.18.1 - 378.18.1) <E47DDE66-1B2B-310F-A060-638CA5D86F9C> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff50583000 -     0x7fff5059bfff  com.apple.IOPresentment (1.0 - 35.1) <214AD582-466F-3844-A0A4-DE0742A8B899> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff50966000 -     0x7fff5098cffb  com.apple.IconServices (97.6 - 97.6) <A56D826D-20D2-34BE-AACC-A80CFCB4E915> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff50a98000 -     0x7fff50a9bff3  com.apple.InternationalSupport (1.0 - 1) <5AB382FD-BF81-36A1-9565-61F1FD398ECA> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff50b09000 -     0x7fff50b19ffb  com.apple.IntlPreferences (2.0 - 227.5.2) <436BBE9B-595B-37EB-8B54-B332B6AE3E57> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences
    0x7fff50c24000 -     0x7fff50d19ff7  com.apple.LanguageModeling (1.0 - 159.5.3) <7F0AC200-E3DD-39FB-8A95-00DD70B66A9F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff50d1a000 -     0x7fff50d5cfff  com.apple.Lexicon-framework (1.0 - 33.5) <DC94CF9E-1EB4-3C0E-B298-CA1190885276> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff50d60000 -     0x7fff50d67ff7  com.apple.LinguisticData (1.0 - 238.3) <49A54649-1021-3DBD-99B8-1B2EDFFA5378> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff51566000 -     0x7fff51569fff  com.apple.Mangrove (1.0 - 1) <27D6DF76-B5F8-3443-8826-D25B284331BF> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff51a46000 -     0x7fff51aafff7  com.apple.gpusw.MetalTools (1.0 - 1) <B5F66CF4-BE75-3A0B-A6A0-2F22C7C259D9> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff51c2b000 -     0x7fff51c44ff7  com.apple.MobileKeyBag (2.0 - 1.0) <88876B8D-A68A-3461-84F3-A1A8D5F3D497> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff51cd0000 -     0x7fff51cfaffb  com.apple.MultitouchSupport.framework (1404.4 - 1404.4) <45374A2A-C0BC-3A70-8183-37295205CDFA> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff51f61000 -     0x7fff51f6cfff  com.apple.NetAuth (6.2 - 6.2) <B3795F63-C14A-33E1-9EE6-02A2E7661321> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff537fe000 -     0x7fff5380effb  com.apple.PerformanceAnalysis (1.194 - 194) <D0211AD1-72B3-3493-92C9-B4F40ED581D5> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff555cc000 -     0x7fff555eafff  com.apple.ProtocolBuffer (1 - 260) <40704740-4A53-3010-A49B-08D1D69D1D5E> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff55757000 -     0x7fff5576dff7  com.apple.QuickLookThumbnailing (1.0 - 1) <8F0092E4-6494-349D-B4C9-494DF293D716> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff557b7000 -     0x7fff557c3fff  com.apple.xpc.RemoteServiceDiscovery (1.0 - 1205.50.76) <C735038A-BC7E-3DE3-B350-6449404FC259> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery
    0x7fff557c4000 -     0x7fff557e7ffb  com.apple.RemoteViewServices (2.0 - 125) <592323D1-CB44-35F1-9921-4C2AB8D920A0> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff557e8000 -     0x7fff557fcff7  com.apple.xpc.RemoteXPC (1.0 - 1205.50.76) <6E67A656-542A-34BD-B598-56B8D5A70814> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC
    0x7fff57104000 -     0x7fff57216fff  com.apple.Sharing (1019.46 - 1019.46) <1266C41E-3CA9-3EFC-8413-A37D52EA9FB2> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff57217000 -     0x7fff57236ff7  com.apple.shortcut (2.16 - 99) <201F92AE-F8E6-3A24-B9DE-26B88CD2EF18> /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut
    0x7fff57241000 -     0x7fff57242ff7  com.apple.performance.SignpostNotification (1.2.4 - 2.4) <9957B2C0-4D48-3337-8A4D-5E457CC7B542> /System/Library/PrivateFrameworks/SignpostNotification.framework/Versions/A/SignpostNotification
    0x7fff57f8a000 -     0x7fff58226fff  com.apple.SkyLight (1.600.0 - 312.50) <0CF4C608-8748-32BF-9586-A1601945F82C> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff589ec000 -     0x7fff589f9ff7  com.apple.SpeechRecognitionCore (4.0.13 - 4.0.13) <8B5418A4-CDC5-3200-AEF0-F109E0DF9019> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff5959d000 -     0x7fff59626fc7  com.apple.Symbolication (9.3 - 64033) <FAA17252-6378-34A4-BBBB-22DF54EC1626> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff59b96000 -     0x7fff59b9eff7  com.apple.TCC (1.0 - 1) <E1EB7272-FE6F-39AB-83CA-B2B5F2A88D9B> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff59dab000 -     0x7fff59e68ff7  com.apple.TextureIO (3.7 - 3.7) <F8BAC954-405D-3CC3-AB7B-048C866EF980> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff59f0e000 -     0x7fff59f0ffff  com.apple.TrustEvaluationAgent (2.0 - 31) <39F533B2-211E-3635-AF47-23F27749FF4A> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff59f15000 -     0x7fff5a0c4fff  com.apple.UIFoundation (1.0 - 547.3) <ACC12DF5-E528-33F3-A358-4E1BEA68239C> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff5ad99000 -     0x7fff5ae68ff7  com.apple.ViewBridge (343.2 - 343.2) <5519FCED-1F88-3BE6-9BE1-69992086B01B> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff5b7cd000 -     0x7fff5b7cfffb  com.apple.loginsupport (1.0 - 1) <D1232C1B-80EA-3DF8-9466-013695D0846E> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff5b936000 -     0x7fff5b969ff7  libclosured.dylib (551.3) <DC3DA678-9C40-339C-A9C6-32AB74FCC682> /usr/lib/closure/libclosured.dylib
    0x7fff5ba23000 -     0x7fff5ba5cff7  libCRFSuite.dylib (41) <FE5EDB68-2593-3C2E-BBAF-1C52D206F296> /usr/lib/libCRFSuite.dylib
    0x7fff5ba5d000 -     0x7fff5ba68fff  libChineseTokenizer.dylib (28) <53633C9B-A3A8-36F7-A53C-432D802F4BB8> /usr/lib/libChineseTokenizer.dylib
    0x7fff5bafa000 -     0x7fff5bafbff3  libDiagnosticMessagesClient.dylib (104) <9712E980-76EE-3A89-AEA6-DF4BAF5C0574> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff5bb32000 -     0x7fff5bcfcff3  libFosl_dynamic.dylib (17.8) <C58ED77A-4986-31C2-994C-34DDFB8106F0> /usr/lib/libFosl_dynamic.dylib
    0x7fff5bd1c000 -     0x7fff5bd23fff  libMatch.1.dylib (31) <74AB4815-11D1-3930-A559-BD6550CE5865> /usr/lib/libMatch.1.dylib
    0x7fff5bd34000 -     0x7fff5bd34fff  libOpenScriptingUtil.dylib (174) <610F0242-7CE5-3C86-951B-B646562694AF> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff5be6b000 -     0x7fff5be6fffb  libScreenReader.dylib (562.18.4) <E239923D-54C9-3BBF-852F-87C09DEF4091> /usr/lib/libScreenReader.dylib
    0x7fff5be70000 -     0x7fff5be71ffb  libSystem.B.dylib (1252.50.4) <F64430FD-30A6-328D-A476-0AED41D371C6> /usr/lib/libSystem.B.dylib
    0x7fff5bf04000 -     0x7fff5bf04fff  libapple_crypto.dylib (109.50.14) <48BA2E76-BF2F-3522-A54E-D7FB7EAF7A57> /usr/lib/libapple_crypto.dylib
    0x7fff5bf05000 -     0x7fff5bf1bff7  libapple_nghttp2.dylib (1.24) <01402BC4-4822-3676-9C80-50D83F816424> /usr/lib/libapple_nghttp2.dylib
    0x7fff5bf1c000 -     0x7fff5bf46ff3  libarchive.2.dylib (54) <8FC28DD8-E315-3C3E-95FE-D1D2CBE49888> /usr/lib/libarchive.2.dylib
    0x7fff5bf47000 -     0x7fff5c04afe7  libate.dylib (1.13.1) <DABEA1B1-806C-34C9-8AFF-DEB6AB2829E3> /usr/lib/libate.dylib
    0x7fff5c04e000 -     0x7fff5c04eff3  libauto.dylib (187) <A05C7900-F8C7-3E75-8D3F-909B40C19717> /usr/lib/libauto.dylib
    0x7fff5c04f000 -     0x7fff5c107ff3  libboringssl.dylib (109.50.14) <E6813F87-B5E4-3F7F-A725-E6A7F2BD02EC> /usr/lib/libboringssl.dylib
    0x7fff5c108000 -     0x7fff5c118ff3  libbsm.0.dylib (39) <6BC96A72-AFBE-34FD-91B1-748A530D8AE6> /usr/lib/libbsm.0.dylib
    0x7fff5c119000 -     0x7fff5c126ffb  libbz2.1.0.dylib (38) <0A5086BB-4724-3C14-979D-5AD4F26B5B45> /usr/lib/libbz2.1.0.dylib
    0x7fff5c127000 -     0x7fff5c17dfff  libc++.1.dylib (400.9) <7D3DACCC-3804-393C-ABC1-1A580FD00CB6> /usr/lib/libc++.1.dylib
    0x7fff5c17e000 -     0x7fff5c1a2ff7  libc++abi.dylib (400.8.2) <EF5E37D7-11D9-3530-BE45-B986612D13E2> /usr/lib/libc++abi.dylib
    0x7fff5c1a4000 -     0x7fff5c1b4fff  libcmph.dylib (6) <A5509EE8-7E00-3224-8814-015B077A3CF5> /usr/lib/libcmph.dylib
    0x7fff5c1b5000 -     0x7fff5c1cbffb  libcompression.dylib (47.50.1) <12DB91E4-E4EE-3AE9-A000-BCACE7749DB6> /usr/lib/libcompression.dylib
    0x7fff5c476000 -     0x7fff5c48eff7  libcoretls.dylib (155.50.1) <D350052E-DC4D-3185-ADBA-BA48EDCEE955> /usr/lib/libcoretls.dylib
    0x7fff5c48f000 -     0x7fff5c490ff3  libcoretls_cfhelpers.dylib (155.50.1) <B297F5D8-F2FE-3566-A752-E9D998B9C039> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff5c629000 -     0x7fff5c7bafff  libcrypto.35.dylib (22.50.2) <97828BFD-4675-35DF-BE2E-C6D1555BB71D> /usr/lib/libcrypto.35.dylib
    0x7fff5c961000 -     0x7fff5c9b7ff3  libcups.2.dylib (462.2) <64864CBE-03A3-34C7-9DBB-C93601F183FD> /usr/lib/libcups.2.dylib
    0x7fff5caf7000 -     0x7fff5caf7fff  libenergytrace.dylib (16) <A92AB8B8-B986-3CE6-980D-D55090FEF387> /usr/lib/libenergytrace.dylib
    0x7fff5caf8000 -     0x7fff5cb11ffb  libexpat.1.dylib (16.1.1) <5E1796FA-4041-3187-B5C2-8E6B03D1D72A> /usr/lib/libexpat.1.dylib
    0x7fff5cb2e000 -     0x7fff5cb33ff3  libheimdal-asn1.dylib (520.50.6) <E358445A-B84E-31B5-BCCD-7E1397519D96> /usr/lib/libheimdal-asn1.dylib
    0x7fff5cb5f000 -     0x7fff5cc50ff7  libiconv.2.dylib (51.50.1) <2FEC9707-3FAF-3828-A50D-8605086D060F> /usr/lib/libiconv.2.dylib
    0x7fff5cc51000 -     0x7fff5ce78ffb  libicucore.A.dylib (59173.0.1) <CECAD5E5-3EFD-3AAC-AD9B-E355B2DD5E9C> /usr/lib/libicucore.A.dylib
    0x7fff5cec5000 -     0x7fff5cec6fff  liblangid.dylib (128) <39C39393-0D05-301D-93B2-F224FC4949AA> /usr/lib/liblangid.dylib
    0x7fff5cec7000 -     0x7fff5cee0ffb  liblzma.5.dylib (10) <3D419A50-961F-37D2-8A01-3DC7AB7B8D18> /usr/lib/liblzma.5.dylib
    0x7fff5cee1000 -     0x7fff5cef7ff7  libmarisa.dylib (9) <D6D2D55D-1D2E-3442-B152-B18803C0ABB4> /usr/lib/libmarisa.dylib
    0x7fff5cfa8000 -     0x7fff5d1d0ff7  libmecabra.dylib (779.7.6) <F462F170-E872-3D09-B219-973D5E99C09F> /usr/lib/libmecabra.dylib
    0x7fff5d3a8000 -     0x7fff5d522fff  libnetwork.dylib (1229.51.2) <D64FE2A1-CBFD-3817-A701-9A0DDBD70DCF> /usr/lib/libnetwork.dylib
    0x7fff5d5a1000 -     0x7fff5d9923b7  libobjc.A.dylib (723) <BEEA51E2-1C4D-3672-87F6-F267B4AC6221> /usr/lib/libobjc.A.dylib
    0x7fff5d9a5000 -     0x7fff5d9a9fff  libpam.2.dylib (22) <7B4D2CE2-1438-387A-9802-5CEEFBF26F86> /usr/lib/libpam.2.dylib
    0x7fff5d9ac000 -     0x7fff5d9e0fff  libpcap.A.dylib (79.20.1) <FA13918B-A247-3181-B256-9B852C7BA316> /usr/lib/libpcap.A.dylib
    0x7fff5da5f000 -     0x7fff5da7bffb  libresolv.9.dylib (65) <E8F3415B-4472-3202-8901-41FD87981DB2> /usr/lib/libresolv.9.dylib
    0x7fff5da7d000 -     0x7fff5dab6ff3  libsandbox.1.dylib (765.50.51) <75B20FAF-0AED-3F18-9399-1BC75A916415> /usr/lib/libsandbox.1.dylib
    0x7fff5daca000 -     0x7fff5dacbff3  libspindump.dylib (252) <D8E27057-E3CC-3D7F-A010-4A87830F6A83> /usr/lib/libspindump.dylib
    0x7fff5dacc000 -     0x7fff5dc59ff7  libsqlite3.dylib (274.8.1) <B70A2908-E0F7-364E-952A-1D2D19787B89> /usr/lib/libsqlite3.dylib
    0x7fff5de2d000 -     0x7fff5de8dff3  libusrtcp.dylib (1229.51.2) <3D8806D9-4BA9-35EE-BC44-F58BC2A0962D> /usr/lib/libusrtcp.dylib
    0x7fff5de8e000 -     0x7fff5de91ffb  libutil.dylib (51.20.1) <216D18E5-0BAF-3EAF-A38E-F6AC37CBABD9> /usr/lib/libutil.dylib
    0x7fff5de92000 -     0x7fff5de9ffff  libxar.1.dylib (400) <0316128D-3B47-3052-995D-97B4FE5491DC> /usr/lib/libxar.1.dylib
    0x7fff5dea3000 -     0x7fff5df8afff  libxml2.2.dylib (31.10) <503721DB-0D8D-379E-B743-18CE59304155> /usr/lib/libxml2.2.dylib
    0x7fff5df8b000 -     0x7fff5dfb3fff  libxslt.1.dylib (15.12) <4A5E011D-8B29-3135-A52B-9A9070ABD752> /usr/lib/libxslt.1.dylib
    0x7fff5dfb4000 -     0x7fff5dfc6ffb  libz.1.dylib (70) <48C67CFC-940D-3857-8DAD-857774605352> /usr/lib/libz.1.dylib
    0x7fff5e062000 -     0x7fff5e066ff7  libcache.dylib (80) <092479CB-1008-3A83-BECF-E115F24D13C1> /usr/lib/system/libcache.dylib
    0x7fff5e067000 -     0x7fff5e071ff3  libcommonCrypto.dylib (60118.50.1) <029F5985-9B6E-3DCB-9B96-FD007678C6A7> /usr/lib/system/libcommonCrypto.dylib
    0x7fff5e072000 -     0x7fff5e079fff  libcompiler_rt.dylib (62) <968B8E3F-3681-3230-9D78-BB8732024F6E> /usr/lib/system/libcompiler_rt.dylib
    0x7fff5e07a000 -     0x7fff5e083ffb  libcopyfile.dylib (146.50.5) <3885083D-50D8-3EEC-B481-B2E605180D7F> /usr/lib/system/libcopyfile.dylib
    0x7fff5e084000 -     0x7fff5e109fff  libcorecrypto.dylib (562.50.17) <67007279-24E1-3F30-802D-A55CD5C27946> /usr/lib/system/libcorecrypto.dylib
    0x7fff5e191000 -     0x7fff5e1caff7  libdispatch.dylib (913.50.12) <848EEE57-4235-3A61-9A52-C0097DD2AB5E> /usr/lib/system/libdispatch.dylib
    0x7fff5e1cb000 -     0x7fff5e1e8ff7  libdyld.dylib (551.3) <CF59A5A5-288B-30E6-BD42-9056B4E4139A> /usr/lib/system/libdyld.dylib
    0x7fff5e1e9000 -     0x7fff5e1e9ffb  libkeymgr.dylib (28) <E34E283E-90FA-3C59-B48E-1277CDB9CDCE> /usr/lib/system/libkeymgr.dylib
    0x7fff5e1ea000 -     0x7fff5e1f6ff3  libkxld.dylib (4570.51.2) <A209B8A2-F5C3-35B1-A70B-1938F25B0ABE> /usr/lib/system/libkxld.dylib
    0x7fff5e1f7000 -     0x7fff5e1f7ff7  liblaunch.dylib (1205.50.76) <4D52BB64-C568-3A36-8935-2480427EE2A2> /usr/lib/system/liblaunch.dylib
    0x7fff5e1f8000 -     0x7fff5e1fcffb  libmacho.dylib (906) <1902A611-081A-3452-B11E-EBD1B166E831> /usr/lib/system/libmacho.dylib
    0x7fff5e1fd000 -     0x7fff5e1ffff3  libquarantine.dylib (86) <26C0BA22-8F93-3A07-9A4E-C8D53D2CE42E> /usr/lib/system/libquarantine.dylib
    0x7fff5e200000 -     0x7fff5e201ff3  libremovefile.dylib (45) <711E18B2-5BBE-3211-A916-56740C27D17A> /usr/lib/system/libremovefile.dylib
    0x7fff5e202000 -     0x7fff5e219fff  libsystem_asl.dylib (356.50.1) <3B24F2D1-B578-359D-ADB2-0ED19A364C38> /usr/lib/system/libsystem_asl.dylib
    0x7fff5e21a000 -     0x7fff5e21afff  libsystem_blocks.dylib (67) <17303FDF-0D2D-3963-B05E-B4DF63052D47> /usr/lib/system/libsystem_blocks.dylib
    0x7fff5e21b000 -     0x7fff5e2a4ff7  libsystem_c.dylib (1244.50.9) <1187BFE8-4576-3247-8177-481554E1F9E7> /usr/lib/system/libsystem_c.dylib
    0x7fff5e2a5000 -     0x7fff5e2a8ffb  libsystem_configuration.dylib (963.50.8) <DF6B5287-203E-30CB-9947-78DF446C72B8> /usr/lib/system/libsystem_configuration.dylib
    0x7fff5e2a9000 -     0x7fff5e2acffb  libsystem_coreservices.dylib (51) <486000D3-D8CB-3BE7-8EE5-8BF380DE6DF7> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff5e2ad000 -     0x7fff5e2aefff  libsystem_darwin.dylib (1244.50.9) <09C21A4A-9EE0-388B-A9D9-DFF8F6758791> /usr/lib/system/libsystem_darwin.dylib
    0x7fff5e2af000 -     0x7fff5e2b5ff7  libsystem_dnssd.dylib (878.50.17) <9033B909-BCF7-37EB-A040-ADE8081611D6> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff5e2b6000 -     0x7fff5e2ffff7  libsystem_info.dylib (517.30.1) <AB634A98-B8AA-3804-8436-38261FC8EC4D> /usr/lib/system/libsystem_info.dylib
    0x7fff5e300000 -     0x7fff5e326ff7  libsystem_kernel.dylib (4570.51.2) <7FF1E390-2FAC-33A7-A545-60D9BB6692D4> /usr/lib/system/libsystem_kernel.dylib
    0x7fff5e327000 -     0x7fff5e372fcb  libsystem_m.dylib (3147.50.1) <FC2E58BA-E6D5-3D2A-89CA-67F212294136> /usr/lib/system/libsystem_m.dylib
    0x7fff5e373000 -     0x7fff5e392fff  libsystem_malloc.dylib (140.50.6) <7FD43735-9DDD-300E-8C4A-F909A74BDF49> /usr/lib/system/libsystem_malloc.dylib
    0x7fff5e393000 -     0x7fff5e4c3ff3  libsystem_network.dylib (1229.51.2) <F65ED095-8ABA-3355-93F8-B9D0505932F4> /usr/lib/system/libsystem_network.dylib
    0x7fff5e4c4000 -     0x7fff5e4ceffb  libsystem_networkextension.dylib (767.50.25) <758F1414-796D-3422-83C9-92D2915A06CE> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff5e4cf000 -     0x7fff5e4d8ff3  libsystem_notify.dylib (172) <08012EC0-2CD2-34BE-BF93-E7F56491299A> /usr/lib/system/libsystem_notify.dylib
    0x7fff5e4d9000 -     0x7fff5e4e0ff7  libsystem_platform.dylib (161.50.1) <6355EE2D-5456-3CA8-A227-B96E8F1E2AF8> /usr/lib/system/libsystem_platform.dylib
    0x7fff5e4e1000 -     0x7fff5e4ecfff  libsystem_pthread.dylib (301.50.1) <0E51CCBA-91F2-34E1-BF2A-FEEFD3D321E4> /usr/lib/system/libsystem_pthread.dylib
    0x7fff5e4ed000 -     0x7fff5e4f0fff  libsystem_sandbox.dylib (765.50.51) <B48D256E-D7DB-3D4F-BC95-34557170C7AA> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff5e4f1000 -     0x7fff5e4f2ff3  libsystem_secinit.dylib (30) <DE8D14E8-A276-3FF8-AE13-77F7040F33C1> /usr/lib/system/libsystem_secinit.dylib
    0x7fff5e4f3000 -     0x7fff5e4faff7  libsystem_symptoms.dylib (820.50.37) <ED7350E0-B68B-374A-9AB7-DC1F195A8327> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff5e4fb000 -     0x7fff5e50efff  libsystem_trace.dylib (829.50.17) <6568D68B-1D4C-38EE-90A9-54821D6403C0> /usr/lib/system/libsystem_trace.dylib
    0x7fff5e510000 -     0x7fff5e515ff7  libunwind.dylib (35.3) <BEF3FB49-5604-3B5F-82B5-332B80023AC3> /usr/lib/system/libunwind.dylib
    0x7fff5e516000 -     0x7fff5e543fff  libxpc.dylib (1205.50.76) <25DB244E-217D-3CE0-A8F2-0C4255783B42> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 248790
    thread_create: 0
    thread_set_state: 0

```
</details>",codebytere,platform/macOS;blocked/need-info 閴;component/tray;bug :beetle:;version/1.8.x;2-0-x,2018-05-08T15:20:15Z,2019-08-19T21:05:13Z,kspearrin,think2011;ghost;jjustin3;sofianguy,codebytere;sofianguy,,codebytere,,sofianguy,
electron/electron,12875,"Windows 10 browser window size < ~70 * Electron Version: 2.0.0 & 1.8.6
* Operating System (Platform and Version): Windows 10 Pro, build: 1803
* Last known working Electron version: /

**Expected Behavior**
I expect the value set for a browser window width to be respected across all platforms.

**Actual behavior**
When browser window width is set to 60, it's actually using 48, when it's 55, it's using 28, and when it's 50, it's using 8 as width. Somewhere around ~70+ it starts respecting the value that's set. For some reason, its scalling it.

**To Reproduce**
set browser window options to the following:
```
{
      width: 50,
      height: 665,
      alwaysOnTop: true,
      frame: false,
      show: false,
      transparent: true,
      hasShadow: false,
      resizable: false,
      movable: false,
    }
```

I dont know if it will reproduce with `npm start` on windows, so I have included electron-build.

```
git clone git@github.com:alexa026/electron-demo.git
npm install
npm start      or     npm run build-win
```


**Screenshots**
This is how it looks with width: 50:
<img width=""494"" alt=""screen shot 2018-05-10 at 17 00 38"" src=""https://user-images.githubusercontent.com/139744/39876833-84eefa2a-5474-11e8-9724-b320df9392ad.png"">

This is with width: 70px, although its a litle too big for us, because it is adding additional transparent space that we dont want.
<img width=""415"" alt=""screen shot 2018-05-10 at 17 13 12"" src=""https://user-images.githubusercontent.com/139744/39877183-84947c66-5475-11e8-9ff6-0364507aa798.png"">

**Additional Information**
Not sure if it matters, but the resolution of windows machine is 1680x1050.
Height is respected (as its 665px I guess).
On macOS (retina) it works fine even with 50 width.
When I set `transparent: false`, it's adding the background we don't want, but the width is right how its supposed to be.",brenca,platform/windows;bug :beetle:;version/1.8.x;2-0-x,2018-05-10T15:15:47Z,2018-05-14T14:46:41Z,alexa026,brenca;alexa026;M1cr0M1nd,sofianguy,,brenca,,jkleinsc,
electron/electron,12919,"Browser windows have an extra tab focus which can not be disabled and is not visible * Electron Version: 2.0.0
* Operating System (Platform and Version): Windows 10
* Last known working Electron version:  N/A

**Expected Behavior**
If the last focusable HTML element is focused and I press 'tab', then the next thing that is focused should either be the first focusable HTML element, or if not, then whatever is focused should have a visible focus.

**Actual behavior**
Something is being focused (I think it is the entire HTML document?) and there is no visual indication as to what it is. It is fine that this other thing is being focused, what is not fine is that I/a user does not know where the keyboard focus has gone.

**To Reproduce**
- Checkout the [electron-quick-start](https://github.com/electron/electron-quick-start)- Put an `<input type=""text""/>` before the `renderer.js` script
- Launch quick start
- Set focus in the input
- Press 'tab'

",ppontes,bug :beetle:;platform/all;2-0-x,2018-05-14T17:45:05Z,2018-12-19T06:44:52Z,MRayermannMSFT,craxal;bpasero;MRayermannMSFT,sofianguy;ppontes,ppontes,ppontes,,codebytere,
electron/electron,12960,"Tray title no longer inverts when highlighted * Electron Version: 2.0.0
* Operating System (Platform and Version): MacOS 10.13.4
* Last known working Electron version: ^1.8.2-beta.5

**Expected Behavior**
Tray title should invert colour when highlighted

**Actual behavior**
Tray title text color remains dark when highlighted

**To Reproduce**
Add the following to the `createWindow` function of the electron-quick-start repo

```
tray = new Tray('./tray-dark.png')
const contextMenu = Menu.buildFromTemplate([
  {label: 'Item1', type: 'radio'}
])
tray.setContextMenu(contextMenu)
tray.setTitle('Test')
```

**Screenshots**
![ss](https://cl.ly/rbua/Screen%20Recording%202018-05-16%20at%2010.12%20am.gif)
",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-05-16T09:13:25Z,2018-06-16T06:24:27Z,alexcroox,MarshallOfSound;alexcroox;codebytere,sofianguy,,codebytere,,MarshallOfSound,
electron/electron,13043,"Window size changes when being moved if resizable is false * Electron Version: 2.0.0
* Operating System (Platform and Version): Windows 10
* Last known working Electron version: before commit bb5eecc16cff8053c7b04e0b9396803fbbb8c4df

**Expected Behavior**
Width and height of a window should not change while being dragged 

**Actual behavior**
Width and height become smaller.

**To Reproduce**
Create a window with:
  var mainWindow = new BrowserWindow({width: 1024, height: 880, x: 30, y: 30,
            resizable: false })

Then drag the window.  Width and height become smaller than specified (1024, 880)

**Additional Information**
NativeWindowViews::SetBounds calls SetMin/MaxSize(bounds) when resizable_ is false.  bounds get adjusted to smaller  numbers by WindowBoundsToContentBounds.
",brenca,platform/windows;bug :beetle:;2-0-x;5-0-x;12-x-y;stale,2018-05-22T21:06:10Z,2022-11-08T02:17:20Z,wenjunche,brenca;sc3w;fcastilloec;benjaminadk;SayakMukhopadhyay;AnthonyCouval;barnabasbartha;HaulinOats;sataqi;sofianguy;wenjunche;islalobo;colludium;sgd2z;joaomlemos;turdiyev;cnmade;MarkMinerov;th3jesta;hgalocy;incomingstick;jahraphael;ianshade,ckerr,,brenca,,,
electron/electron,13077,"Opening multiple windows with `fullscreen: true` does not work correctly * Electron Version: 2.0.2
* Operating System (Platform and Version): macOS 10.13.4
* Last known working Electron version: 

**Expected Behavior**
If N windows are created with the `fullscreen: true` option, all N will open in fullscreen.

**Actual behavior**
Only the first of N windows is fullscreen while the others remain windowed.

**To Reproduce**

```js
const { app, BrowserWindow } = require('electron');

app.on('ready', () => {
  const win1 = new BrowserWindow({ fullscreen: true });
  const win2 = new BrowserWindow({ fullscreen: true });
});
```

Notice that `win1` will successfully fullscreen while `win2` stays windowed. Additionally, there is an audible system error beep.

**Additional Information**
We are currently working around this issue in our product by queueing fullscreen calls so they happen serially, but it would be much nicer if this concern was handled in electron itself.
",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-05-25T21:47:02Z,2018-12-05T17:19:15Z,caseywebdev,codebytere;bpasero;ariofrio,sofianguy,,codebytere,,codebytere,
electron/electron,13113,"Electron throwing an error when changing webview partition attribute before its first navigation * Electron Version: 2.0.0 - 2.0.2
* Operating System (Platform and Version): tested on Mac OS X 10.13.4
* Last known working Electron version: 1.8.7

**Expected Behavior**
Setting Webview tag ""partition"" attribute should not trigger error before its first navigation and load the session partition.

**Actual behavior**
In 2.0.0 - 2.0.2 versions, when setting ""partition"" attribute before the first navigation, it throws 

> ""The object has already navigated, so its partition cannot be changed.""

 and doesn't load the partition. When attribute is set directly in HTML, it works but if it is done via code after some time even before first navigation, it doesn't. It seems something changed in Electron Webview initialisation in versions after 1.8.7.

**To Reproduce**
- Git clone https://github.com/Evoks/electron-webview-bug
- launch commands `npm install ; npm start`

1.8.7 version throws 1 error, 2.0.x versions throws 2 errors.

See file `renderer.js` for code and `package.json` to change Electron version. I added timeouts to simulate execution delay in big application.
",zcbenz,platform/macOS;bug :beetle:;status/reviewed;2-0-x,2018-05-30T10:32:34Z,2018-07-12T02:10:23Z,Evoks,Evoks,sofianguy;zcbenz,,zcbenz,,zcbenz,
electron/electron,13135,"Can't app.quit() or CMD+Q when using simple full screen on MacOS * Electron Version: 2.0
* Operating System (Platform and Version): MacOS 10.13.4
* Last known working Electron version: N/A

**Expected Behavior**
App quits.

**Actual behavior**
App does not quit.

**To Reproduce**
1. Run commands below.
2. Try pressing app.quit() button.
3. Try CMD+Q to quit.
4. Try pressing app.exit() button.

```sh
$ git clone https://github.com/zhaoterryy/electron-quick-start
$ npm install
$ npm start || electron .
```

",codebytere,platform/macOS;bug :beetle:;2-0-x;status/confirmed;3-0-x,2018-06-01T18:02:42Z,2018-09-17T05:22:10Z,zhaoterryy,SergeKauzunovich;sethlu;bpasero,sofianguy;ckerr,,codebytere,,codebytere,
electron/electron,13190,"printToPDF does not allow pageRanges? * Electron Version: 2.0.2
* Operating System MacOS High Sierra:

**Expected Behavior**
Perhaps it's not documented but this does not work at all as
`webContents.printToPDF({pageRanges:1}, callback);`

**Actual behavior**
To print a PDF with only the pages specified



**To Reproduce**
Test it on any operating system in any version of electron


In this file
https://github.com/electron/electron/blob/b89fe86fa1f7c935046b5bbdd82ae645c01838a4/lib/browser/api/web-contents.js

there is what i believe a typo also on Line 62 it says 'pageRage':[] Should this not be pageRange? and if so, is there a way for us to override these defaultPrintSettings? Currently in the printToPDF function there is no way to change some of these settings, only the specific ones that the electron function overwrites
",codebytere,platform/macOS;documentation :notebook:;bug :beetle:;2-0-x,2018-06-08T01:48:07Z,2020-01-28T20:47:25Z,Hyperblaster,loilo;Hyperblaster;sofianguy;anderklander;codebytere,sofianguy,sofianguy,codebytere,,codebytere,
electron/electron,13278,"webview: resizing webview triggers resize event on window * Electron Version: 1.7.x and 2.0.x
* Operating System (Platform and Version): macoS 10.13
* Last known working Electron version: unknown

**Expected Behavior**
The resize event should only be triggered when the window size changes.

**Actual behavior**
The resize event fires when the webview size is changed.

**To Reproduce**

**renderer.js**

```js
window.addEventListener('resize', () => {
    console.log(""RESIZE"");
});

setTimeout(() => {
    document.getElementById(""foo"").style.width = ""100%"";
}, 2000);
```

**HTML**
```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
  </head>
  <body>
    <h1>Hello World!</h1>
    <!-- All of the Node.js APIs are available in this renderer process. -->
    We are using Node.js <script>document.write(process.versions.node)</script>,
    Chromium <script>document.write(process.versions.chrome)</script>,
    and Electron <script>document.write(process.versions.electron)</script>.

  <webview id=""foo"" style=""width: 50%; height: 50%; border: 1px solid red;""></webview>

    <script>
      // You can also require other files to run in this process
      require('./renderer.js')
    </script>
  </body>
</html>
```

After 2 seconds there is a resize event on the Window once the webview resizes.

/cc @joaomoreno ",zcbenz,platform/macOS;bug :beetle:;version/1.7.x;2-0-x;3-0-x;app-feedback-program,2018-06-18T09:43:23Z,2018-08-23T06:42:36Z,bpasero,bpasero;sofianguy;joaomoreno,sofianguy,sofianguy,zcbenz,,zcbenz,
electron/electron,13289,"Wrong state of event object properties in MenuItem callback * Electron Version: 2.0.0
* Operating System (Platform and Version): Fedora 25
* Last known working Electron version:
Didn't tested all previous versions, however the bug is already present in 1.7.8

**Expected Behavior**
I'm currently trying to figure out if a `MenuItem` was triggered through the accelerator. This is possible to achieve through the information available in the `event` object of the `click` callback.

The structure seems to be the following but isn't currently [documented](https://electronjs.org/docs/api/menu-item).

```js
{
  shiftKey: boolean;
  ctrlKey: boolean;
  altKey: boolean;
  metaKey: boolean;
}
```

When a menu item is triggered through the accelerator, the corresponding flags should normally be set to `true`.

**Actual behavior**
This seems to work fine on MacOS. However, on both Windows (10) and Linux (Fedora 25) all this flags are always `false`.

**To Reproduce**
I quickly setup a [repository](https://github.com/njakob/electron-menuitem-bug) to test the current behavior and how to reproduce it.

```sh
$ git clone https://github.com/njakob/electron-menuitem-bug
$ npm install
$ npm start
```
On Fedora 25:
```js
{ shiftKey: false, ctrlKey: false, altKey: false, metaKey: false }
```
While on MacOS:
```js
{ shiftKey: false, ctrlKey: true, altKey: false, metaKey: false }
```",Kthulu120,platform/linux;bug :beetle:;2-0-x;status/confirmed;3-0-x,2018-06-19T07:41:26Z,2018-09-28T11:59:01Z,njakob,XieJiSS,sofianguy;Kthulu120,,groundwater,,ckerr,
electron/electron,13358,"[Bug] 3.0.0-beta1 CSS3 `-webkit-app-region: drag` not working * Electron Version: 3.0.0-beta1
* Operating System (Platform and Version): macOS
* Last known working Electron version: 2.0.2

**Expected Behavior**
```css
html, body, * {
    -webkit-app-region: drag;
    -webkit-user-select: none;
    cursor: default;
}
```
should allow users to move the position of the window by dragging it directly.

**Actual behavior**
The window is not draggable.
The `cursor` and `-webkit-user-select` properties work well.

**To Reproduce**
copy the CSS above, paste it into a frameless app's `<style>` tag, and run the app.

**Screenshots**

**Additional Information**
",zcbenz;MarshallOfSound,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x,2018-06-21T07:22:13Z,2018-07-10T01:43:42Z,XieJiSS,gnattu;setpixel;MarshallOfSound,timfish;MarshallOfSound,,MarshallOfSound;zcbenz,,MarshallOfSound,
electron/electron,13375,"[3.0.0-beta.1] SSL content all fails to load in windows with error ""net::ERR_SSL_PROTOCOL_ERROR"" * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): Windows 10 Enterprise Edition
* Last known working Electron version: 2.0.2

**Expected Behavior**
I should be able to load `https` content in the BrowserWindow.

**Actual behavior**
All https requests fail regardless of host. The error in the inspector is `net::ERR_SSL_PROTOCOL_ERROR`. 

**To Reproduce**
Clone the electron quick start on Windows 10. Update the package to use 3.0.0-beta.1 and try to navigate to any https url. I've tried this on two separate systems and it gives the same error.

**Screenshots**
- The environment: https://d.pr/i/staLUG
- The error in the dev console: https://d.pr/i/1B7kO1
",deepak1556,platform/windows;bug :beetle:;3-0-x;app-feedback-program,2018-06-21T23:26:04Z,2018-07-11T00:46:36Z,levinunnink,levinunnink;IAmPicard;mediaslav;burningTyger;MarshallOfSound;ghost;technicallyty,sofianguy,,deepak1556,,MarshallOfSound,
electron/electron,13378,"[3.0.0-beta.1] White background appears when .hide() and .show() called again * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): OS X High Sierra
* Last known working Electron version: 2.0.3

**Expected Behavior**

Using a transparent window, then calling .hide() and .show(). It should stay transparent.

**Actual behavior**

In 3.0.0-beta.1, it seems to turn the background white. If I trigger the DOM to change afterwards, the white background goes away. I am attached to it using devtools debugging, I will verify if that affects it as I had seen that bug before.

**To Reproduce**

I'll attempt to setup a repo here soon.

You can fork [electron-quick-start](https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
",codebytere,platform/macOS;bug :beetle:;3-0-x,2018-06-22T00:32:16Z,2018-07-22T04:54:53Z,natew,codebytere;ckerr;natew,sofianguy,codebytere,codebytere,,codebytere,
electron/electron,13392,"[v3.0.0-beta.1] command line switches not sent to window. * Electron Version: v3.0.0-beta.1
* Operating System (Platform and Version): Windows 10 x64
* Last known working Electron version:  v2.0.3

**Expected Behavior**
`app.commandLine.appendSwitch('enable-experimental-canvas-features');` should allow me to use `canvas.transferControlToOffscreen()`

**Actual behavior**
I'm getting an error stating that `transferControlToOffscreen` is not a function. This works by enabling the `--enable-experimental-canvas-features` flag, but the flag isn't sent to the ""chromium process"" I think?

**To Reproduce**
In your main process:
```js
app.commandLine.appendSwitch('enable-experimental-canvas-features');
```

In the renderer process:
```js
let canvas = document.createElement('canvas'),
    offscreen = canvas.transferControlToOffscreen();
```
The above code works fine on previous versions of Electron, but fails to run on 3.0.0-beta.1.
Also, I have enabled `experimentalFeatures` in the `BrowserWindow` options.
",codebytere,platform/windows;platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/reviewed;3-0-x,2018-06-22T23:15:54Z,2018-07-16T04:07:48Z,haroldiedema,codebytere;haroldiedema;deepak1556;mnesarco,MarshallOfSound;codebytere,,codebytere,,codebytere,
electron/electron,13404,"v2.0.3 Electron doesn't run: dyld: Symbol not found: _CIDetectorTypeText * Electron Version: 2.0.3
* Operating System (Platform and Version): macOS 10.10.5 (Yosemite)
* Last known working Electron version: 2.0.0

**Expected Behavior**
Electron App should start after running the command: npm run start

**Actual behavior**
App doesn't start and the following message appears on console:

```
dyld: Symbol not found: _CIDetectorTypeText
  Referenced from: /Users/renato/Projects/smart-press/node_modules/electron/dist/Electron.app/Contents/MacOS/../Frameworks/Electron Framework.framework/Electron Framework
  Expected in: /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
 in /Users/renato/Projects/smart-press/node_modules/electron/dist/Electron.app/Contents/MacOS/../Frameworks/Electron Framework.framework/Electron Framework
```

**To Reproduce**
https://github.com/renatop7/electron-quick-start

```sh
$ git clone https://github.com/renatop7/electron-quick-start
$ npm install
$ npm start
```
",jkleinsc;zcbenz,platform/macOS;crash :boom:;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;2-0-x;status/confirmed,2018-06-24T02:11:13Z,2018-07-03T20:26:22Z,renatop7,daviwil;MarshallOfSound;jasonrudolph;pineapplemachine;jkleinsc;renatop7;benlancaster,MarshallOfSound;alexeykuzmin,,,,jkleinsc,
electron/electron,13408,"Dev tools extension tabs don't appear in 3.0.0-beta.1 * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): macOS 10.13.5
* Last known working Electron version: 2.0.3

**Expected Behavior**
Dev tools extension tabs should appear after being added with the `BrowserWindow.addDevToolsExtension` API. I specifically tested the React and Redux extensions. I can tell the React extension is getting installed but not being shown because the usual
> Download the React DevTools for a better development experience

warning is absent.

**Actual behavior**
Dev tools extension tabs do not appear.

**To Reproduce**
Manually obtain the extension paths following the instructions here:
https://electronjs.org/docs/tutorial/devtools-extension
and supply them to `addDevToolsExtensions`.

Alternately, use [electron-devtools-installer](https://github.com/MarshallOfSound/electron-devtools-installer), which I have a repro case for using just Redux here:
https://github.com/ajmacd/electron-quick-start-typescript

Working with 2.0.3:
```sh
$ git clone https://github.com/ajmacd/electron-quick-start-typescript -b 2.0.3-devtools-working 
$ cd electron-quick-start-typescript
$ npm install
$ npm start
```

Not working with 3.0.0-beta.1:
```sh
$ git checkout 3.0.0-beta.1-devtools-not-working
$ npm install
$ npm start
```",zcbenz,platform/macOS;component/devtools;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x,2018-06-25T00:27:44Z,2018-07-06T01:11:44Z,ajmacd,DannyFeliz;Nimelrian;zcbenz,ajmacd;sofianguy;zcbenz,,zcbenz,,zcbenz,
electron/electron,13410,"MAS Build rejected: App uses non-public APIs * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): macOS High Sierra 10.13.5

**Actual behavior**
Correctly packaged and signed app got rejected on the Mac AppStore. The current version 3.0.0-beta.1 didn't pass the review with the following message:

Your app uses or references the following non-public API(s):

'/System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth'
閳ユキOBluetoothPreferenceSetControllerPowerState閳

'/usr/lib/libSystem.B.dylib'
閳ユアPP_SANDBOX_READ閳
閳ユ檡ld_dynamic_interpose閳
閳ユΞandbox_extension_consume閳
閳ユΞandbox_extension_issue_file閳
閳ユΞandbox_extension_release閳


The use of non-public APIs is not permitted on the App Store as it can lead to a poor user experience should these APIs change.
",zcbenz,platform/macOS;bug :beetle:;status/reviewed;3-0-x,2018-06-25T08:18:59Z,2018-07-03T02:24:44Z,devank,MarshallOfSound,sofianguy;zcbenz,,zcbenz,,zcbenz,
electron/electron,13426,"[3.0.0-beta.1] desktopCapturer API is broken on Windows 7 * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): Windows 7 SP1
* Last known working Electron version: 2.0.3

**Expected Behavior**
Desktop Capturer should work as expected on Windows 7.

**Actual behavior**
Desktop Capturer crashes Electron with the following debug output

```bash
[4180:0625/110943.169:WARNING:d3d_device.cc(48)] D3D11CreateDevice returns an in
stance without DirectX 11 support, level 40960. Following initialization may fai
l.
[4180:0625/110943.169:WARNING:dxgi_output_duplicator.cc(106)] Failed to duplicat
e output from IDXGIOutput1, error 000000000924BFB0, with code -2005270524
[4180:0625/110943.184:WARNING:dxgi_adapter_duplicator.cc(85)] Failed to initiali
ze DxgiOutputDuplicator on output 0
[4180:0625/110943.184:WARNING:dxgi_adapter_duplicator.cc(108)] Cannot initialize
 any DxgiOutputDuplicator instance.
[4180:0625/110943.184:WARNING:dxgi_duplicator_controller.cc(259)] Failed to init
ialize DxgiAdapterDuplicator on adapter 0
[4180:0625/110943.184:WARNING:dxgi_duplicator_controller.cc(281)] Cannot initial
ize any DxgiAdapterDuplicator instance.
[4180:0625/110943.200:WARNING:dxgi_duplicator_controller.cc(82)] Count of refere
nces reaches zero, DxgiDuplicatorController will be unloaded.
[4180:0625/110943.356:WARNING:d3d_device.cc(48)] D3D11CreateDevice returns an in
stance without DirectX 11 support, level 40960. Following initialization may fai
l.
[4180:0625/110943.356:WARNING:dxgi_output_duplicator.cc(106)] Failed to duplicat
e output from IDXGIOutput1, error 000000000924B920, with code -2005270524
[4180:0625/110943.356:WARNING:dxgi_adapter_duplicator.cc(85)] Failed to initiali
ze DxgiOutputDuplicator on output 0
[4180:0625/110943.371:WARNING:dxgi_adapter_duplicator.cc(108)] Cannot initialize
 any DxgiOutputDuplicator instance.
[4180:0625/110943.371:WARNING:dxgi_duplicator_controller.cc(259)] Failed to init
ialize DxgiAdapterDuplicator on adapter 0
[4180:0625/110943.371:WARNING:dxgi_duplicator_controller.cc(281)] Cannot initial
ize any DxgiAdapterDuplicator instance.
[4180:0625/110943.387:WARNING:dxgi_duplicator_controller.cc(82)] Count of refere
nces reaches zero, DxgiDuplicatorController will be unloaded.
[4180:0625/110943.621:WARNING:d3d_device.cc(48)] D3D11CreateDevice returns an in
stance without DirectX 11 support, level 40960. Following initialization may fai
l.
[4180:0625/110943.621:WARNING:dxgi_output_duplicator.cc(106)] Failed to duplicat
e output from IDXGIOutput1, error 000000000924B7E0, with code -2005270524
[4180:0625/110943.621:WARNING:dxgi_adapter_duplicator.cc(85)] Failed to initiali
ze DxgiOutputDuplicator on output 0
[4180:0625/110943.621:WARNING:dxgi_adapter_duplicator.cc(108)] Cannot initialize
 any DxgiOutputDuplicator instance.
[4180:0625/110943.637:WARNING:dxgi_duplicator_controller.cc(259)] Failed to init
ialize DxgiAdapterDuplicator on adapter 0
[4180:0625/110943.637:WARNING:dxgi_duplicator_controller.cc(281)] Cannot initial
ize any DxgiAdapterDuplicator instance.
[4180:0625/110943.652:WARNING:dxgi_duplicator_controller.cc(82)] Count of refere
nces reaches zero, DxgiDuplicatorController will be unloaded.
Received fatal exception EXCEPTION_ACCESS_VIOLATION
Backtrace:
        (No symbol) [0x000000013FA4FDA8]
        (No symbol) [0x000000013FB5C011]
        (No symbol) [0x000000013FB8F55C]
        (No symbol) [0x000000013FB8EA59]
        (No symbol) [0x000000013FB87F94]
        (No symbol) [0x000000013FB959D2]
        BaseThreadInitThunk [0x00000000779059CD+13]
        RtlUserThreadStart [0x0000000077A6383D+29]
error Command failed with exit code 3221225477.
```

**To Reproduce**

Clone this repo on Windows 7 and run it. It will instantly crash and print a stack trace: 

```sh
# Clone this repository
git clone https://github.com/levinunnink/electron-quick-start.git
# Go into the repository
cd electron-quick-start
# Install dependencies
npm install
# Run the app
npm start
```

**Additional Information**
It looks like this commit is the culprit: https://github.com/electron/electron/pull/12417",ajmacd,platform/windows;bug :beetle:;status/confirmed;3-0-x,2018-06-25T18:17:19Z,2018-07-19T19:11:44Z,levinunnink,MarshallOfSound;ajmacd,sofianguy;MarshallOfSound,,ajmacd,,jkleinsc,
electron/electron,13441,"disableguestresize attribute doesn't work * Electron Version: 3.0.0
* Operating System (Platform and Version): Mac at least
* Last known working Electron version: 2.0.x

**Expected Behavior**
When [`disableguestresize`](https://github.com/electron/electron/blob/master/docs/api/webview-tag.md#disableguestresize) attribute is present the webview contents should be prevented from resizing when the webview element itself is resized.

**Actual behavior**
`disableguestresize` doesn't affect resize behaviour, a webview's contents it gets resized every time the webview is resized.

**To Reproduce**
Run (now disabled) ""disableguestresize attribute does not resize guest when attribute is present"" test.

",zcbenz,bug :beetle:;3-0-x,2018-06-26T08:44:15Z,2018-08-16T17:23:55Z,alexeykuzmin,alexeykuzmin;poiru;deepak1556;zcbenz,alexeykuzmin,,deepak1556,deepak1556,zcbenz,
electron/electron,13459,"Version 2.0.3 does not run on Mac OS 10.9 as it requires Core Bluetooth <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 2.0.3
* Operating system: Mac OS X 10.9.5 (13F1911)

<!-- If this used to work -->
* Last known working Electron version: 2.0.2

### Expected behavior
Run.

<!-- What do you think should happen? -->

### Actual behavior
When started through GUI the dialog box pops up 

> Electron cannot be opened because of a problem. Check with the developer to make sure Electron works with this version of OS X. You may need to reinstall the application. Be sure to install any available updates for the application and OS X. Click Report to see more detailed information and send a report to Apple. Ignore Report

The Report is

```
Process:         Electron [2301]
Path:            /Users/USER/Downloads/*/Electron.app/Contents/MacOS/Electron
Identifier:      com.github.electron
Version:         ???
Code Type:       X86-64 (Native)
Parent Process:  launchd [159]
Responsible:     Electron [2301]
User ID:         501

Date/Time:       2018-06-27 12:28:25.062 +0200
OS Version:      Mac OS X 10.9.5 (13F1911)
Report Version:  11
Anonymous UUID:  A6E70C18-FE1F-C23F-ABC4-D1921E72B274

Sleep/Wake UUID: 62C17DEF-E4BD-4767-BA04-4192D9EC1103

Crashed Thread:  0

Exception Type:  EXC_BREAKPOINT (SIGTRAP)
Exception Codes: 0x0000000000000002, 0x0000000000000000

Application Specific Information:
dyld: launch, loading dependent libraries

Dyld Error Message:
  Library not loaded: /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
  Referenced from: /Users/rednaz/Downloads/electron-v2.0.3-darwin-x64/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
  Reason: image not found

Binary Images:
    0x7fff63650000 -     0x7fff63683887  dyld (239.5) <1D3130FE-FE7E-3C4C-8E74-EB51895B6BA5> /usr/lib/dyld
    0x7fff81d4b000 -     0x7fff81e8cfff  com.apple.QTKit (7.7.3 - 2826.34) <3BB88D64-71FA-3824-A52A-D51C761E6EE0> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff81e8d000 -     0x7fff81ea9fff  libresolv.9.dylib (54) <11C2C826-F1C6-39C6-B4E8-6E0C41D4FA95> /usr/lib/libresolv.9.dylib
    0x7fff82bf1000 -     0x7fff82c38ff7  libcups.2.dylib (372.6) <CBD2F0CF-FA10-36E1-A1D5-1B946B45B3B3> /usr/lib/libcups.2.dylib
    0x7fff82c43000 -     0x7fff82e28fff  com.apple.CoreFoundation (6.9 - 855.17) <729BD6DA-1F63-3E72-A148-26F21EBF52BB> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff82e31000 -     0x7fff82e31ffd  com.apple.audio.units.AudioUnit (1.10 - 1.10) <68B21135-55A6-3563-A3D6-3E692A7DEB7F> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff839b6000 -     0x7fff839c0ff7  com.apple.bsd.ServiceManagement (2.0 - 2.0) <2D27B498-BB9C-3D88-B05A-76908A8A26F3> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff84076000 -     0x7fff84becff7  com.apple.AppKit (6.9 - 1265.21) <9DC13B27-841D-3839-93B2-3EDE66157BDE> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff84c35000 -     0x7fff84cc9ff7  com.apple.Bluetooth (4.2.7 - 4.2.7f5) <A7F0360A-DBDA-32EA-AA37-6937B94E6A72> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff84e12000 -     0x7fff84e13ff7  libSystem.B.dylib (1197.1.1) <72A98ACC-7606-3AD5-82AF-02D4EBBD4F02> /usr/lib/libSystem.B.dylib
    0x7fff853f3000 -     0x7fff85418ff7  com.apple.CoreVideo (1.8 - 117.2) <4674339E-26D0-35FA-9958-422832B39B12> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff85897000 -     0x7fff85897fff  com.apple.ApplicationServices (48 - 48) <3E3F01A8-314D-378F-835E-9CC4F8820031> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff86e8f000 -     0x7fff86ed8fff  com.apple.CoreMedia (1.0 - 1273.57) <74FA3D80-A6DB-331A-B32A-683C8E0CC0A6> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff86f49000 -     0x7fff86f59fff  libbsm.0.dylib (33) <2CAC00A2-1352-302A-88FA-C567D4D69179> /usr/lib/libbsm.0.dylib
    0x7fff87453000 -     0x7fff874a5fff  libc++.1.dylib (120) <4F68DFC5-2077-39A8-A449-CAC5FDEE7BDE> /usr/lib/libc++.1.dylib
    0x7fff874ab000 -     0x7fff874abfff  com.apple.Carbon (154 - 157) <45A9A40A-78FF-3EA0-8FAB-A4F81052FA55> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff874d6000 -     0x7fff877d6ff7  com.apple.Foundation (6.9 - 1056.17) <E0B0FAF6-5CA8-3EEB-8BF2-104C0AEEF925> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff8987c000 -     0x7fff89a17ff8  com.apple.CFNetwork (673.6 - 673.6) <CAA196FE-BF5A-384F-975E-E0F81359805B> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff8b1bf000 -     0x7fff8b1bffff  com.apple.Accelerate (1.9 - Accelerate 1.9) <509BB27A-AE62-366D-86D8-0B06D217CF56> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff8b5d7000 -     0x7fff8b63affb  com.apple.SystemConfiguration (1.13.1 - 1.13.1) <339A2A90-DA25-33AF-88E5-2FB38A758FEE> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff8c1a9000 -     0x7fff8c1b7fff  com.apple.opengl (9.6.5 - 9.6.5) <4FAEADD8-EEB3-3FD9-ADC6-BA65806228CC> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff8c40c000 -     0x7fff8c478fff  com.apple.framework.IOKit (2.0.1 - 907.100.14) <10932113-9F7E-38A0-A158-A019A555CAC3> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff8d115000 -     0x7fff8d2b1ff3  com.apple.QuartzCore (1.8 - 332.4) <CFB972D1-FA37-380C-9A47-2A67A84B7442> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff8d5fd000 -     0x7fff8d60eff7  libz.1.dylib (53) <42E0C8C6-CA38-3CA4-8619-D24ED5DD492E> /usr/lib/libz.1.dylib
    0x7fff8d641000 -     0x7fff8d6a0fff  com.apple.framework.CoreWLAN (4.3.3 - 433.48) <1F17FA12-6E84-309D-9808-C536D445FA6E> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff8d769000 -     0x7fff8d88bfff  com.apple.avfoundation (2.0 - 651.12.1) <FDCF1F41-E0BD-3F8C-974A-3F48A0A85B00> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff8d8d8000 -     0x7fff8db48ffd  com.apple.security (7.0 - 55471.14.40) <58F50B4A-FC1E-3AE0-A5DB-DD737E50AC17> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff8db49000 -     0x7fff8db4cffc  com.apple.IOSurface (91.3 - 91.3) <E93485CC-12B1-318E-BAE3-AB532B264935> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff8dc31000 -     0x7fff8dc82ff7  com.apple.audio.CoreAudio (4.2.1 - 4.2.1) <07F2B103-AE29-3118-BBC4-9A72E13B013B> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff8dc88000 -     0x7fff8dc88fff  com.apple.quartzframework (1.5 - 1.5) <3B2A72DB-39FC-3C5B-98BE-605F37777F37> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff8ddc5000 -     0x7fff8e213fef  com.apple.VideoToolbox (1.0 - 1273.57) <AA4D613A-1066-3E85-8BE0-7806566652B4> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff8e214000 -     0x7fff8e368ff3  com.apple.audio.toolbox.AudioToolbox (1.10 - 1.10) <69B273E8-5A8E-3FC7-B807-C16B657662FE> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff8e827000 -     0x7fff8e855ff7  com.apple.securityinterface (9.0 - 55047) <0346D8A9-2CAA-38F3-A741-5FBA5E9F1E7C> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff8f6f4000 -     0x7fff8f71eff7  libsandbox.1.dylib (278.11.2) <5C750008-A22B-35E8-8B11-D84F82E08680> /usr/lib/libsandbox.1.dylib

Model: MacBookPro5,5, BootROM MBP55.00AC.B03, 2 processors, Intel Core 2 Duo, 2.53 GHz, 4 GB, SMC 1.47f2
Graphics: NVIDIA GeForce 9400M, NVIDIA GeForce 9400M, PCI, 256 MB
Memory Module: BANK 0/DIMM0, 2 GB, DDR3, 1067 MHz, 0x802C, 0x31364A53463235363634485A2D3147314631
Memory Module: BANK 1/DIMM0, 2 GB, DDR3, 1067 MHz, 0x802C, 0x31364A53463235363634485A2D3147314631
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x8D), Broadcom BCM43xx 1.0 (5.106.98.100.22)
Bluetooth: Version 5.2.7f4 15858, 3 services, 15 devices, 1 incoming serial ports
Network Service: Felsennelkenanger, Ethernet, en0
Network Service: Wi-Fi, AirPort, en1
Serial ATA Device: ST9250315ASG, 250.06 GB
Serial ATA Device: HL-DT-ST DVDRW  GS23N
USB Device: Built-in iSight
USB Device: Internal Memory Card Reader
USB Device: Apple Internal Keyboard / Trackpad
USB Device: IR Receiver
USB Device: BRCM2046 Hub
USB Device: Bluetooth USB Host Controller
Thunderbolt Bus: 

```
<!-- What actually happens? -->

### How to reproduce
Run.",zcbenz,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/reviewed;2-0-x,2018-06-27T10:38:12Z,2018-07-04T01:27:54Z,prednaz,zcbenz;RJVB,alexeykuzmin;zcbenz,,zcbenz,,zcbenz,
electron/electron,13502,"""inspectable web contents"" ShowDevTools should checks resource before call it **Is your feature request related to a problem? Please describe.**
It is possible that resources which called from [InspectableWebContentsImpl::ShowDevTools](https://github.com/electron/electron/blob/e42c6d3eb72b28b95bd9f9cbf4010834262d15f4/brightray/browser/inspectable_web_contents_impl.cc#L295) are not available.

**Describe the solution you'd like**
Is it possible that [InspectableWebContentsImpl::ShowDevTools](https://github.com/electron/electron/blob/e42c6d3eb72b28b95bd9f9cbf4010834262d15f4/brightray/browser/inspectable_web_contents_impl.cc#L295) will check with [InspectableWebContentsImpl::LoadNetworkResource](https://github.com/electron/electron/blob/e42c6d3eb72b28b95bd9f9cbf4010834262d15f4/brightray/browser/inspectable_web_contents_impl.cc#L451) resuorce avialability (should not be 404) before send request on line [317](https://github.com/electron/electron/blob/e42c6d3eb72b28b95bd9f9cbf4010834262d15f4/brightray/browser/inspectable_web_contents_impl.cc#L317) and if it falls then load internal ```kChromeUIDevToolsURL```?",zcbenz,component/devtools;bug :beetle:;3-0-x;6-0-x;6-1-x,2018-06-29T10:55:17Z,2021-03-08T18:38:35Z,mdogadailo,mdogadailo;zcbenz;sofianguy;electron-triage,sofianguy;zcbenz,zcbenz;sofianguy,zcbenz,,electron-triage,
electron/electron,13504,"BrowserWindow.webContents.executeJavaScript does not work in 3.0.0-beta.1 * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): Arch Linux x64
* Last known working Electron version:  2.0.3

on `did-finish-load` the following code is not executed at all:
```javascript
mainWindow.webContents.executeJavaScript(`console.log(""hello world"");`);
```

It was working with version 2.0.x
",MarshallOfSound,platform/linux;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;3-0-x,2018-06-29T12:06:41Z,2018-07-17T03:32:29Z,luca-viggiani,MarshallOfSound;luca-viggiani;alexeykuzmin,sofianguy;MarshallOfSound,MarshallOfSound,MarshallOfSound,,MarshallOfSound,
electron/electron,13525,"Electron 3 audio not allowed before user interaction with the page (Chrome 66 autoplay policy) * Electron Version:
`3.0.0-beta.1`

* Operating System (Platform and Version):
`Arch Linux`

* Last known working Electron version: 
`2.0.3`

**Expected Behavior**
```js
(new Audio('foobar')).play()
```
plays the sound even before user interaction

**Actual behavior**

Getting the following error in the JavaScript console:
```
Uncaught (in promise) DOMException: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD
```

**Additional Information**

https://www.chromium.org/audio-video/autoplay
https://developers.google.com/web/updates/2017/09/autoplay-policy-changes",codebytere,platform/linux;bug :beetle:;3-0-x,2018-07-01T18:21:42Z,2018-07-16T17:15:50Z,sonnyp,codebytere;bcomnes;pulkit110;psulek;tanvir23;mountainash;ionut-tanasa;lionep,sofianguy,,codebytere,,codebytere,
electron/electron,13549,"Temporary OS freeze and flickering when opening BrowserWindows simultaneously. * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): Windows 8/10 x64 
* Last known working Electron version: 2.0.3

**Expected Behavior**
BrowserWindows should open and be functional. OS should react normally.

**Actual behavior**
BrowserWindows flicker (content and non-client area), the whole operating system seems to hang.
Problem can be resolved by opening the task manager, in this case the OS reacts normally and the faulty windows can be closed.

**To Reproduce**
Simply create and display two BrowserWindows. May require several attempts.

Alternatively, one can click the ""Show Desktop"" button (the rightmost button in the taskbar, right of the notifications icon) multiple times, the result is similar and does not even need that the windows are opened simultaneously.

Chance of effect increases when more BrowserWindows are open.",jkleinsc;MarshallOfSound,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;3-0-x;app-feedback-program,2018-07-03T13:29:00Z,2018-09-07T18:21:59Z,markleutloff,MarshallOfSound;markleutloff;bpasero;jkleinsc;ckerr;AmarBouchibane;gribunin;nitsakh,sofianguy;MarshallOfSound,MarshallOfSound,sofianguy,,ckerr,
electron/electron,13554,"Cannot disable MenuItem when specifying `role` * Electron Version: 2.0.4
* Operating System (Platform and Version): macOS 10.13.5
* Last known working Electron version: Unknown

**Expected Behavior**
A `MenuItem` instance will be disabled when specifying `enabled: false`

**Actual behavior**
A `MenuItem` instance is still enabled when specifying `enabled: false` if it has a `role` specified.

**To Reproduce**
Clone this repo https://github.com/pdesantis/electron-api-demos/tree/menu-item-disable
The demo was forked from the official electron-api-demos repo. The only changes made are visible in this commit https://github.com/pdesantis/electron-api-demos/commit/c97c8762de24b4e9683ccc76c5fc2ab16b1f1c45

```sh
$ git clone https://github.com/pdesantis/electron-api-demos -b menu-item-disable
$ npm install
$ npm start
```

**Screenshots**
![screen shot 2018-07-03 at 1 52 49 pm](https://user-images.githubusercontent.com/1420364/42244098-73b98904-7ec8-11e8-9362-4c49c10a3e3a.png)

**Additional Information**
Removing the `role` from the `MenuItem` object correctly disables the item.
",codebytere,platform/macOS;status/wontfix 棣冩瘒;bug :beetle:;2-0-x,2018-07-03T20:54:10Z,2018-10-03T02:57:09Z,pdesantis,Kthulu120;pdesantis;samiskin;codebytere,sofianguy;nornagon;codebytere,codebytere,codebytere,Kthulu120,codebytere,
electron/electron,13596,"Segmentation fault on color picker close * Electron Version: 1.8.7
* Operating System (Platform and Version): macOS High Sierra (10.13.5)
* Last known working Electron version: Unsure

**Expected Behavior**

Electron application should not crash when a user closes the color picker in macOS.

**Actual behavior**

Occasionally (not every time) when the end user closes a native color picker (from `<input type=""color"" />`), the browser process crashes.

Sometimes the termination signal is a `Bus error: 10`:

```
Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGBUS)
Exception Codes:       KERN_PROTECTION_FAILURE at 0x00007fff8b4060f0
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Bus error: 10
Termination Reason:    Namespace SIGNAL, Code 0xa
Terminating Process:   exc handler [0]

VM Regions Near 0x7fff8b4060f0:
    unused shlib __DATA    00007fff8b3d4000-00007fff8b404000 [  192K] rw-/rwx SM=COW  system shared lib __DATA not used by this process
--> __DATA                 00007fff8b404000-00007fff8b591000 [ 1588K] rw-/rwx SM=COW  /usr/lib/libobjc.A.dylib
    unused shlib __DATA    00007fff8b591000-00007fff8b59a000 [   36K] rw-/rwx SM=COW  system shared lib __DATA not used by this process

Application Specific Information:
Performing @selector(didChooseColor:) from sender NSColorPanel 0x7f90a462a5d0

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   ???                           	0x00007fff8b4060f0 OBJC_METACLASS_$_NSObject + 0
1   com.github.electron.framework 	0x0000000106c029f4 0x106ab3000 + 1374708
2   com.apple.AppKit              	0x00007fff28ab1a43 -[NSApplication(NSResponder) sendAction:to:from:] + 312
3   com.apple.AppKit              	0x00007fff287defab __61-[NSColorPanel _forceSendAction:notification:firstResponder:]_block_invoke + 100
4   com.apple.AppKit              	0x00007fff287dee15 -[NSColorPanel _withColorSettingDisabled:] + 37
5   com.apple.AppKit              	0x00007fff287def41 -[NSColorPanel _forceSendAction:notification:firstResponder:] + 88
6   com.apple.AppKit              	0x00007fff287df136 -[NSColorPanel setColor:] + 182
...
```

Other times it's a `Segmentation fault: 11`:

```
Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       EXC_I386_GPFLT
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [0]

Application Specific Information:
Performing @selector(didChooseColor:) from sender NSColorPanel 0x7fd8d6f2ce60

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework 	0x000000010d9cd760 ColorChooserMac::DidChooseColorInColorPanel(unsigned int) + 16
1   com.github.electron.framework 	0x000000010d9cd9f4 0x10d87e000 + 1374708
2   com.apple.AppKit              	0x00007fff28ab1a43 -[NSApplication(NSResponder) sendAction:to:from:] + 312
3   com.apple.AppKit              	0x00007fff287defab __61-[NSColorPanel _forceSendAction:notification:firstResponder:]_block_invoke + 100
4   com.apple.AppKit              	0x00007fff287dee15 -[NSColorPanel _withColorSettingDisabled:] + 37
5   com.apple.AppKit              	0x00007fff287def41 -[NSColorPanel _forceSendAction:notification:firstResponder:] + 88
6   com.apple.AppKit              	0x00007fff287df136 -[NSColorPanel setColor:] + 182
...
```

**To Reproduce**

The easiest way to reproduce is with the packaged application, which can be downloaded from the [GitHub releases page](https://github.com/mjswensen/themer-gui/releases/tag/v0.18.0).

I have not been able to reproduce the problem in development mode, but here is the information if it's helpful:

```sh
$ git clone git@github.com:mjswensen/themer-gui.git
$ npm install
$ npm start
```

1. Hover over a label to reveal the droplet icon.
  - <img width=""310"" alt=""screen shot 2018-07-09 at 4 42 29 pm"" src=""https://user-images.githubusercontent.com/1591879/42479676-37cf45ea-8397-11e8-93ca-db32b4706cfd.png"">
2. Click the droplet icon to open the color picker.
3. Use the eyedropper tool to select a color from elsewhere on the screen.
  - ![image](https://user-images.githubusercontent.com/1591879/42479787-af919286-8397-11e8-9e3e-63d8b5a5a5d7.png)
4. Click the red dot to close the color picker.
  - ![image](https://user-images.githubusercontent.com/1591879/42479806-c7912054-8397-11e8-83b3-1e1964cd709f.png)

This is the point the application crashes. (Try a few times if it doesn't happen the first time.)

**Screenshots**

![crash report](https://user-images.githubusercontent.com/1591879/42479509-745870f0-8396-11e8-858e-e673a2ad4db0.png)

**Additional Information**

The issue _appears_ to only manifest when the eyedropper is used, specifically when selecting colors from a different application. (I haven't seen a crash when the color picker sliders are used to select a color, for example.)",brenca,platform/macOS;bug :beetle:;version/1.8.x;2-0-x,2018-07-09T22:52:41Z,2019-03-07T01:55:16Z,mjswensen,groundwater;ericmandel;brenca;KeziahMoselle;mjswensen;jpweeks;swampthang;Mubramaj;MarshallOfSound,sofianguy,,,,groundwater,
electron/electron,13608,"Spellcheck-provider never called, spellchecking thus broken * Electron Version: 3.0.0-beta.1
* Operating System (Platform and Version): macOS 10.13 (but all others seem affected, too)
* Last known working Electron version: 2.0.x

**Expected Behavior**
Spellchecking should work: After calling `webFrame.setSpellCheckProvider` with a given provider, that provider's `spellCheck()` method should be called.

**Actual behavior**
Calling `webFrame.setSpellCheckProvider` seems to have no effect - the provider is simply never called.

**To Reproduce**
Clone the repo below and start the app. The spellcheck provider is configured to log each input word. However, it appears that `spellCheck` is never called.

```sh
git clone https://github.com/felixrieseberg/electron-3-spellcheck
cd electron-3-spellcheck
npm install
npm start || electron .
```

",nornagon,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x;app-feedback-program,2018-07-10T14:29:05Z,2018-07-11T17:27:58Z,felixrieseberg,ckerr,felixrieseberg;sofianguy,,nornagon,,nornagon,
electron/electron,13617,"desktopCapture return only Entire screen and an invalid window (3.0.0-beta.2) * Electron Version: 3.0.0-beta.2
* Operating System (Platform and Version): Current Windows 10, 64bit
* Last known working Electron version: 2.0.4

**Expected Behavior**
Full screen and all opened windows to be returned.

**Actual behavior**
Only full screen and a seemingly identical item are returned. Independent of the number of opened windows. 

**To Reproduce**
Call
```
desktopCapturer.getSources({
    types: ['window', 'screen'],
    thumbnailSize: {
          width: 250,
          height: 250
    }
}, function (err, sources) {

});
```
The `sources` contains only two items, the first one, which is the entire desktop screen is valid, the other one is not.

",MarshallOfSound,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x;app-feedback-program,2018-07-10T22:29:31Z,2018-07-17T04:20:51Z,webarchymeta,VishwasShashidhar,VishwasShashidhar;sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,13620,"HTML5 Notifications broken in 3.0.0-beta * Electron Version: 3.0.0-beta.1 or 3.0.0-beta.2
* Operating System (Platform and Version): macOS 10.13 (High Sierra)
* Last known working Electron version: 2.0.4

**Expected Behavior**
When a html5 notification is triggered from the renderer, a toast alert should appear

**Actual behavior**
No toast alert is appearing when a html5 notification is triggered from the renderer

**To Reproduce**
```sh
$ git clone https://github.com/VishwasShashidhar/electron-quick-start -b notifications-3beta
$ npm install
$ npm start || electron .
```
Click on the ""send notification"" button in the renderer.

**Screenshots**

***Working (2.0.4)***
![electron 2 0 4 notifications](https://user-images.githubusercontent.com/5968790/42554031-ea56866e-8500-11e8-91fe-36f87b4180f9.gif)

***Not Working (3.0.0-beta.2)***
![electron 3 0 0 beta 2 notifications](https://user-images.githubusercontent.com/5968790/42554088-22da29fa-8501-11e8-8ba6-22aa765c5eac.gif)

**Additional Information**
N/A",MarshallOfSound,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;3-0-x;app-feedback-program,2018-07-11T06:26:39Z,2018-07-13T02:51:07Z,VishwasShashidhar,VishwasShashidhar;ckerr;MarshallOfSound;jakobvogel,VishwasShashidhar;MarshallOfSound;sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,13717,"OCSP requests not traversing configured proxy * Electron Versions: 2.x.x and 3.x.x
* Operating System (Platform and Version): Debian 9 Linux
* Last known working Electron version: 1.8.7

**Expected Behavior**
When connecting to an HTTPS server, while having a proxy configured with `session.setProxy()`, an OCSP request is performed automatically by Chromium in order to check certificate validity of the server, based on the CRL list found at the revocation URL found in the certificate. The OCSP request must traverse the proxy as well (as the payload does).

**Actual behavior**
The configured proxy is only used for the payload, but not for the OCSP requests. The OCSP requests are sent directly to the revocation URL (checked with Wireshark), which of course does not work in an enterprise environment where using a proxy is required.

**To Reproduce**
Here are the steps to reproduce. Remember that the issue is only reproducible on Linux (not on Windows ... didn't test on Mac):
- git clone https://github.com/berkon/electron-quick-start.git
- npm install
- Enter proxy server in main.js!!!
- Start Wireshark
- npm start
- On Windows you would now see the github.com page loading in the window. On Linux nothing happens. When looking at Wireshark (see screenshot below), you can see a request going out to 93.184.220.29 which is crl3.digicert.com (server for certificate revocation list). This does not work, because it must not directly connect to the IP but instead use the proxy IP 172.28.12.5 via port 8080 (like the normal https connection handshake does ... a few lines above):

![img_3168](https://user-images.githubusercontent.com/28842661/42874063-77c3b934-8a80-11e8-82b6-e0a31e279ce5.JPG)

**Additional Information**
Maybe this commit: https://github.com/electron/electron/commit/d6d2a46821098299aee46cdd34c9b0b024dbd80f could be related to the issue.
I have tried the following in addition:

- set the proxy via `app.commandLine.appendSwitch('proxy-server', '<proxy>:<port>')` in main.js
- set the `https_proxy` environment variable

but nothing worked.
",deepak1556,platform/linux;bug :beetle:;2-0-x;status/confirmed;3-0-x,2018-07-18T09:54:44Z,2018-11-19T02:25:35Z,berkon,berkon;deepak1556,sofianguy;deepak1556,,deepak1556,,zcbenz,
electron/electron,13751,"macOS Mojave BrowserWindow.setProgressBar hard crash * Electron Version: 2.0.5
* Operating System (Platform and Version): macOS Mojave beta4

**Expected Behavior**
Call `browserWindow.setProgressBar(0.5)`, the app hard crashes citing an unrecognized selector. Doesn't happen on High Sierra

```
[_NSImageViewSimpleImageView setDoubleValue:]: unrecognized selector sent to instance 0x7fa6b7472040
```

**Actual behavior**
Don't  crash, set the progress bar

**To Reproduce**

Clone the repo and press the crash button...

```sh
git clone https://github.com/wavebox/electron-quick-start.git -b mojave_set_progressbar_crash
cd electron-quick-start
npm install
npm start
```
",MarshallOfSound,platform/macOS;bug :beetle:;bug/os-regression;2-0-x,2018-07-20T10:52:54Z,2018-09-18T09:51:31Z,Thomas101,fasterthanlime;deermichel;ravibpatel;frank0r;ckerr;MarshallOfSound;keybeejeebee;Thomas101,sofianguy;MarshallOfSound,,MarshallOfSound,,Thomas101,
electron/electron,13764,"No subpixel AA fonts rendered on Ubuntu Linux * Electron Version: 3.0.0-beta.3
* Operating System Ubuntu 18.04
* Last known working Electron version: none  ... still fails on 2.0.5

**Expected Behavior**

Font Subpixel AA should work... only works when rendering a .HTML file, not via BrowserWindow.

**Actual behavior**

Subpixel AA only works when I load a .html file.. not a .js file.

**To Reproduce**

https://github.com/burtonator/electron3-fuzzy-text

Here is a repo.

This works:

```
./node_modules/.bin/electron test.html
```

This will fail:

```
./node_modules/.bin/electron index.js
```
The only way to actually see that it's failing is to use a zoom tool like ```kmag```

**Screenshots**

Here's loading the .html file on the command line. Notice the AA is working by the orange color on the outside of the text:

![image](https://user-images.githubusercontent.com/45447/43037663-8731acd2-8cc4-11e8-99bf-f2adfbfdecc4.png)

Here is the SAME text and same test.html file but I loaded it via BrowserWindow in my index.js script.

![image](https://user-images.githubusercontent.com/45447/43037676-a22fa30e-8cc4-11e8-8bee-4d20bdfde57f.png)

Electron fails to use AA text rendering in the new window.  

Hopefully this might help track down the bug.  

",zcbenz,platform/linux;bug :beetle:;status/reviewed;3-0-x,2018-07-21T16:02:14Z,2018-10-03T03:09:19Z,burtonator,burtonator;MarshallOfSound;zcbenz,sofianguy;MarshallOfSound;zcbenz,zcbenz,zcbenz,,codebytere,
electron/electron,13770,"Re-enable mixed-sandbox tests for Windows CI As described in https://github.com/electron/electron/pull/13769, we had to disable mixed sandbox related tests for Windows CI. We should re-enable them back after finding out the root reason.",jkleinsc,bug :beetle:;component/build;3-0-x,2018-07-23T09:04:51Z,2018-08-13T15:48:20Z,zcbenz,nornagon;jkleinsc,zcbenz;nornagon,,codebytere,,jkleinsc,
electron/electron,13820,"tray.popUpContextMenu blocks javascript main thread on mac * Electron Version: latest
* Operating System (Platform and Version): mac
* Last known working Electron version: n/a

**Expected Behavior**
When the tray icon menu is popped up manually (but on a tray click event callback), I expect the menu to open up but not necessarily block the main process.

**Actual behavior**
It blocks the main process until the menu is closed. This is creating issues with other timers etc that I have running on the main process.


",ckerr,platform/macOS;bug :beetle:;2-0-x;status/confirmed,2018-07-26T13:54:55Z,2019-06-25T02:30:27Z,pjebs,pjebs;codebytere;zhenchaoli;ckerr,sofianguy;codebytere;ckerr,codebytere,codebytere,,codebytere,
electron/electron,13826,"asarStatsToFsStats returns a plain object instead of inheriting from Stats.prototype. In Electron 3, 2, and possibly earlier the `asarStatsToFsStats` [produces a plain object](https://github.com/electron/electron/blob/8d9775b0b124453ab99d9f79ec65996e6d439212/lib/common/asar.js#L74-L110) instead of one that inherits from `Stats.prototype`. 

This causes problems for code that cherry-picks the `Stats#isFile` method and then tries to run it on the returned stats object since the one returned from `asarStatsToFsStats` lacks the [inherited `_checkModeProperty` method](https://github.com/electron/node/blob/18aeda2077e7fe1ef9d7557692dda2e4d6a61860/lib/internal/fs/utils.js#L177-L179).

",codebytere,bug :beetle:;2-0-x;3-0-x,2018-07-26T23:41:06Z,2018-08-12T06:20:34Z,jdalton,,sofianguy,,codebytere,,codebytere,
electron/electron,13829,"Slow/weird network requests * Electron Version: 3.0.0 beta 3
* Operating System (Platform and Version): Windows 7 64 bit
* Last known working Electron version: 2.0.5

I'm doing HTTP requests using [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) from my application to a server running on the same machine, and starting with 3.0.0 beta 1 these take several seconds to complete. For testing I've just typed in the following in the console:
`fetch('http://192.168.0.202:32155/api/panels').then(console.log)`
When I do one at a time it seems to consistently take 2.5 seconds. When I queue up several requests without waiting for a response they seem to get processed one after another or something. Looks like this in the console:

![bild](https://user-images.githubusercontent.com/8340020/43296683-16fc467e-914d-11e8-8109-f1e6062ca05f.png)
All the time seems to be alotted to stalling and proxy negotiation.
![bild](https://user-images.githubusercontent.com/8340020/43296721-4b0dc744-914d-11e8-88a6-c133f3189eb2.png)
I don't know what to make of that. I don't have any special proxy configuration.

In contrast, on version 2.0.5 it looks like this:
![bild](https://user-images.githubusercontent.com/8340020/43296740-6b1cb39c-914d-11e8-87c0-e78bceadd088.png)

Requests using XMLHttpRequest and `net.request` from the main process seems to behave in the same way. As far as the server is concerned all the requests finish in <1 ms.

I'm developing my application on Electron 1.7.6 currently, where I've never experienced this issue either. Planning to upgrade to 3.0.

I'm not passing any command line arguments, nor does it seem to be affected by any of my code. I had the same both in my application and a barebones one I made for testing with an empty `index.html`.
```
const electron = require('electron')
electron.app.on('ready', () => {
	let win = new electron.BrowserWindow()
	win.loadFile(""index.html"")
})
```",deepak1556,platform/windows;bug :beetle:;status/confirmed;3-0-x,2018-07-27T01:39:12Z,2018-12-03T08:12:39Z,Lombra,MarshallOfSound;Lombra;deepak1556;happypoulp;lauracpierre;Darxide23;jakubzitny;oopets;GhostlyDark;petrbrzek;DBnR1;mvdicarlo;GlassGruber;IAmPicard,sofianguy;deepak1556,,sofianguy,,Lombra,
electron/electron,13913,"[3.0.x] Wrong focus when minimizing main window **Electron Version:** v3.0.x
**OS:** Windows 10 (1803) x64
**Last known working Electron version:** v2.0.x

**Expected Behavior**
Minimizing the main window while child window is focused should minimize the main window and do nothing else.

**Actual behavior**
Minimizing the main window while a child window is focused changes focus to main window and brings the main window back up. Electron also tries to change the focus back to the child window afterwards and either fails to do so (Windows 10 focus bug?) or starts to constantly change the focus back and forth between the child and main window. The latter is happening with a singleInstance lock (happens with both the new and old syntax).

**To Reproduce**
Open Electron twice. Focus child (2.) window and minimize the main (1.) window.
Cannot reproduce on Linux. Works fine in v2.0.x.

**Additional Information**
App example for singleInstance lock. Opening the App a second time creates a new window without creating a second instance. Reproducing this way constantly changes the focus back and forth between the two windows.
```
const {app, BrowserWindow} = require('electron')
const path = require('path')

app.on('second-instance', (commandLine, workingDirectory) => {
let child = new BrowserWindow({
    width: 1280,
    height: 800,
	title: ""Child Window"",
	show: false,
	autoHideMenuBar: true,
    webPreferences: {plugins: true, sandbox: true}})
child.loadURL(`file://${__dirname}/index.html`);
child.once('ready-to-show', () => {child.show()})
child.on('page-title-updated', (e) => {e.preventDefault()})
child.on('closed', () => {child = null})
child.webContents.on('new-window', (event, url, frameName, disposition, options) => {
event.defaultPrevented = true;})})
if (!app.requestSingleInstanceLock()) {return app.quit()}

if(process.platform != 'linux') {app.enableMixedSandbox()}

app.on('ready', () => {
  let win = new BrowserWindow({
    width: 1280,
    height: 800,
	title: ""Main Window"",
	show: false,
	autoHideMenuBar: true,
    webPreferences: {plugins: true, sandbox: true}
})

win.on('page-title-updated', (e) => {e.preventDefault()})
win.loadURL(`file://${__dirname}/index.html`);
win.once('ready-to-show', () => {win.show();win.maximize()})
win.on('closed', () => {win = null; app.quit()})

})
```
",nitsakh,platform/windows;bug :beetle:;3-0-x;app-feedback-program,2018-08-02T14:26:53Z,2018-09-07T18:21:59Z,GhostlyDark,MarshallOfSound,sofianguy,,nitsakh,,ckerr,
electron/electron,13932,"BrowserWindow Height Not Working Properly on Windows 10 * Electron Version: 3.0.0-beta.4
* Operating System (Platform and Version): Windows 10

My screen height is 1440 with a scale factor or 1.5 (4K monitor). When I create a new BrowserWindow with the height option anything greater than 1,410 the height is always set to 1,403 pixels and will not go any bigger. This leaves a little gap at the bottom of the screen between the task bar and the window.

Calling `setBounds` and setting the height does fix it after the BrowserWindow has been created.

**To Reproduce**

`var electronBrowserWindow = new electron.BrowserWindow({height: 1410});`

**Screenshots**

![windows-10-sadness](https://user-images.githubusercontent.com/62191/43662783-4ae88704-9724-11e8-9b42-911aae82f58b.png)",zcbenz,platform/windows;blocked/need-info 閴;bug :beetle:;3-0-x,2018-08-03T19:51:27Z,2019-08-19T19:38:07Z,kirkouimet,sofianguy,sofianguy,,zcbenz,,sofianguy,
electron/electron,13938,"Private API in MAS build [3.0.0-beta.4] * Electron Version: 3.0.0-beta.4
* Operating System (Platform and Version): Mac 10.13.6
* Last known working Electron version: 2.0.5

**Expected Behavior**
MAS build does not contain private API

**Actual behavior**
MAS build is rejected. Please see below error

```
Your app uses or references the following non-public APIs:

Symbol: _CGDisplayUsesForceToGray
From framework: /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
Symbol: __LSSetApplicationLaunchServicesServerConnectionStatus
From framework: /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
Symbol: _AudioDeviceDuck
From framework: /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
Symbol: __CFIsObjC
From framework: /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
In binary: Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
```
",nornagon,platform/macOS;bug :beetle:;app-store;version/1.8.x;2-0-x;3-0-x,2018-08-05T00:17:01Z,2018-08-10T16:26:29Z,thomasdao,kamalkalra;thomasdao;zinne;nickfujita;DimitarNestorov;nornagon;vanejung;asjad-m;omar10594;ivandroid;ckerr,zeke;sofianguy;nornagon,,nornagon,,nornagon,
electron/electron,13947,"Electron 3-beta - BrowserWindow crashing when setting guestinstance id * Electron Version: any 3.beta version
* Operating System (Platform and Version): Linux/Windows
* Last known working Electron version: 2.0.4

**Expected Behavior**
By setting the guestinstance you can move the webview content from one webview to another

**Actual behavior**
Everything crashes

**To Reproduce**
https://github.com/t57ser/electron-webview-focus-issue (repo from another issue but works for this showcase as well)
You can switch the electron version in the package.json to 3.0.0-beta.4
- install
- start
- open the devtools of the BrowserWindow and change the guestinstance of one of the webviews
",zcbenz,platform/windows;platform/linux;bug :beetle:;3-0-x,2018-08-06T07:34:49Z,2018-08-16T17:20:45Z,t57ser,ckerr;zcbenz,sofianguy,,codebytere;ckerr,codebytere,zcbenz,
electron/electron,13952,"[Regression][3.0.0-beta.4] Shared Workers are not Shared * Electron Version: 3.0.0-beta.4
* Operating System : Windows 10 & Mac OS 10.13
* Last known working Electron version:  2.0.6

**Expected Behavior**
Shared Workers instances are shared across Electron Windows

**Actual behavior**
Shared Workers are re-instanciated for each Electron Window

**To Reproduce**

[Repostiory](https://github.com/kuashe/electron3-shared-worker-broken)

**Working version in latest 2.X (Electron 2.0.6)**

```sh
$ git clone https://github.com/kuashe/electron3-shared-worker-broken

$ npm install

$ npm start
```
Select the 'Console' tab in the Chrome DevTools

The Shared Worker variable named 'increment' is incremented alternatively across windows, thus the worker being shared. 

**Regression in current 3.X  (Electron 3.0.0-beta.4)**

```sh
$ npm install electron@beta

$ npm start
```
Select the 'Console' tab in the Chrome DevTools

The Shared Worker variable named 'increment' is duplicated across windows, thus the worker not being shared.",nitsakh,platform/windows;platform/macOS;bug :beetle:;3-0-x,2018-08-06T11:36:23Z,2018-08-16T19:38:13Z,kuashe,nitsakh;kuashe,sofianguy,,nitsakh,,nitsakh,
electron/electron,13953,"New Window Multi Click Problem * Electron Version: 3.0.0 beta.4
* Operating System (Platform and Version): Windows 10 64 bit
* Last known working Electron version: 2.0.5

**Expected Behavior**
On https://www.garanti.com.tr/en A new windows opens every time when user clicks on ""Personal"" button

**Actual behavior**
A new windows opens when user clicks on the button first time but when user closes the window and click on the button again no event fires.


",MarshallOfSound,platform/windows;bug :beetle:;3-0-x,2018-08-06T12:59:32Z,2018-08-08T01:20:54Z,srdrymn,MarshallOfSound,sofianguy,,sofianguy,,MarshallOfSound,
electron/electron,13994,"BrowserWindow minHeight can be less than BrowserWindow height * Electron Version: 2.0.0
* Operating System (Platform and Version): Windows 10
* Last known working Electron version: ?

**Expected Behavior**

We can not set manually a browserWindow height less than the minimum.

**Actual behavior**

We can set manually a browserWindow height less than the minimum.

**To Reproduce**

In Main Process:
```js
mainWindow = new BrowserWindow({width: 800, height: 600})
```
In Renderer Process:
```js
const remote = require('electron').remote;
const window = remote.getCurrentWindow();

window.setMinimumSize(800, 600);
debugger;
```
Now let's set manually (by resizing) window height to minimum and check in devtools:
```js
window.getSize()
```
and
```js
window.getMinimumSize()
```

**Screenshots**

![screenshot](https://user-images.githubusercontent.com/24976771/43882498-7ef50250-9bb8-11e8-9696-fdb53dafc038.png)

**Additional Information**

Also there is a difference between setting minHeight in constructor and in renderer process.
If we set it in constructor and our window has menu bar, window minHeight increases by menu bar height, but if we do it in renderer minHeight will not increase
```js
mainWindow = new BrowserWindow({width: 800, height: 600, minHeight: 600})
```
![screenshot1](https://user-images.githubusercontent.com/24976771/43883093-b032da48-9bba-11e8-8c75-7cdcc1af64ae.png)

Also if we set menu to null:
```js
mainWindow.setMenu(null);
```
we have the expected behavior

![screenshot2](https://user-images.githubusercontent.com/24976771/43883441-cc7d69d8-9bbb-11e8-98ec-a03d14a13902.png)

**P.S.**
In all cases I resize BrowserWindow height to minimum manually 


",Kthulu120,platform/windows;bug :beetle:;status/reviewed;2-0-x,2018-08-09T07:10:17Z,2018-10-09T17:08:16Z,marinovich,ckerr,ckerr,,Kthulu120,,ckerr,
electron/electron,14054,"Missing remote object should never be missing * Electron Version: 3.0.0-beta.4
* Operating System (Platform and Version): All 
* Last known working Electron version: < 3.0.0

Remote objects assigned in a preload script can go missing in 3.0, causing errors at very unexpected times:

```
Cannot call function 'bounce' on missing remote object 12
    at throwRPCError (/Applications/Slack.app/Contents/Resources/electron.asar/browser/rpc-server.js:145:17)
    at EventEmitter.<anonymous> (/Applications/Slack.app/Contents/Resources/electron.asar/browser/rpc-server.js:357:7)
    at EventEmitter.emit (events.js:182:13)
    at EventEmitter.emit (domain.js:442:20)
    at WebContents.<anonymous> (/Applications/Slack.app/Contents/Resources/electron.asar/browser/api/web-contents.js:287:13)
    at WebContents.emit (events.js:182:13)
    at WebContents.EventEmitter.emit (domain.js:442:20)
    at WebContents.topLevelDomainCallback (domain.js:121:23)
```

This is an error we'd never expect to see, since our preload script assigns a remote object at the import level:

``` js
import { remote } from 'electron';

const { app } = remote;
const dock = app.dock;

bounce(type: 'critical' | 'informational') {
  const id = dock.bounce(type);
}
```

@paulcbetts reported this in the [electronhq](https://electronhq.slack.com/archives/C3DQJHAQ3/p1532018231000066) Slack; it looks like all he did was receive a notification on the Electron 3 build of Slack posted there.

Since `remote` relies on `ipc.sendSync`, I wonder if it's fixed by https://github.com/electron/electron/pull/13941?
",deepak1556,bug :beetle:;platform/all;3-0-x;app/Slack;app-feedback-program,2018-08-13T19:19:51Z,2018-08-28T18:32:47Z,CharlieHess,javer;eric8810;SwiTool;VishwasShashidhar;sidneys;dsabanin,mgc;sofianguy,,groundwater,groundwater,ckerr,
electron/electron,14234,"Dialog box message not read out by screen reader * Electron Version: 2.0.7 and 3.0.0-beta.6
* Operating System (Platform and Version): Mac OS High Sierra 10.13.6
* Last known working Electron version: none

**Expected Behavior**
Dialog box message should be read out by Voice Over

**Actual behavior**
Dialog box message is not  read out by Voice Over

**To Reproduce**
Turn on Voice Over and start this starter electron app. Notice how the message 'hello there' in the dialog box is not read out by voice over. 
https://gist.github.com/isidorn/326fd5a14ccb7eec19f7e5a820327143

Original issue in vscode https://github.com/Microsoft/vscode/issues/55585",codebytere,platform/macOS;bug :beetle:,2018-08-21T09:44:14Z,2021-03-09T16:50:00Z,isidorn,Loiyyacoub;sofianguy;isidorn;kastwey;electron-triage;christopherpross;deepak1556,sofianguy;deepak1556,sofianguy;deepak1556,deepak1556,,electron-triage,
electron/electron,14252,"MenuItem Accelerators Not Working in Ubuntu 16.04.2 LTS for 3.0.0-beta.1~6 * Electron Version: 3.0.0-beta.1 ~ 3.0.0-beta.6
* Operating System (Platform and Version): Ubuntu 16.04.2 LTS
* Last known working Electron version: versions before 3.0.0-beta.1

**Expected Behavior**
Console prints out `time to print stuff` when `Ctrl+P` is pressed.
```
const {Menu, MenuItem} = require('electron')
const menu = new Menu()
  
app.on('ready', () => {
  createWindow()
  menu.append(new MenuItem({
    label: 'Print',
    accelerator: 'CmdOrCtrl+P',
    click: () => { console.log('time to print stuff') }
  }))
  Menu.setApplicationMenu(menu)
})
```
https://github.com/hackjutsu/electron-quick-start/commit/6ceb5d7dcd2d946c071b43a3fdd1b0434ddebff5
**Actual behavior**
No output. The accelerator event is not triggered.

**To Reproduce**
```sh
git clone https://github.com/hackjutsu/electron-quick-start
cd electron-quick-start
npm install
npm run start
```
Try pressing `Ctrl+P`, and observe the output. (nothing happen...)
Change the electron version back to 2.0.0 in `pakcage.json`
```sh
npm install
npm run start
```
Try pressing `Ctrl+P`, and observe the output. (the log `time to print stuff` will show up in console)
",nitsakh,bug :beetle:;3-0-x,2018-08-22T04:59:57Z,2018-11-09T21:54:17Z,hackjutsu,ckerr;hackjutsu;TGWKE,sofianguy;ckerr,ckerr,nitsakh,,nitsakh,
electron/electron,14276,"Windows: ""logs"" folder is being created before being able to set userdata path * Output of `node_modules/.bin/electron --version`: 2.0.x and 3.0.x
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 1.7.x

**Expected Behavior**
An application is able to change the userData folder according to https://github.com/electron/electron/blob/master/docs/api/app.md#appsetpathname-path

**Actual behavior**
A folder called ""logs"" is created in the default location of Electron.

**To Reproduce**
* fiddle: https://gist.github.com/bpasero/3b84dcac354218bf3d483599ff84ab48
* delete any `%APPDATA%\Electron` folder first
* start and notice that a `%APPDATA%\Electron\logs` folder is created even though we change `userData` as one of the first things. 

This blocks VSCodes portable feature where no data should be left on the hard disk (https://github.com/Microsoft/vscode/issues/56651).",deepak1556;codebytere,bug :beetle:;version/1.8.x;platform/all;2-0-x;status/confirmed;3-0-x,2018-08-23T09:52:14Z,2019-05-21T15:47:40Z,bpasero,faizalMo;joernroeder;codebytere,ckerr;deepak1556;codebytere,deepak1556;codebytere,deepak1556;codebytere,,codebytere,
electron/electron,14320,"fs.copyFile (and possibly other operations) Fails Once Built With ASAR <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Output of `node_modules/.bin/electron --version`: v2.0.8
* Operating System (Platform and Version): Ubuntu 18.04 / macOS High Sierra

### Expected behavior

<!-- What do you think should happen? -->
When calling fs.copyFile, the source file should be copied to the destination.

### Actual behavior

<!-- What actually happens? -->
The file doesn't get copied and the following error gets thrown:
```
Error: ENOTDIR: not a directory, copyfile '/home/amxmln/cpy-tst/dist/linux-unpacked/resources/app.asar/test.txt' -> '/home/amxmln/test.txt'
```

The file exists in the source location, and the error only happens when the application is packaged in an ASAR archive.

### How to reproduce

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->

I've prepared a minimal sample project to illustrate the issue [here](https://github.com/amxmln/electron-copy-file-bug.git).

So:

```
$ git clone https://github.com/amxmln/electron-copy-file-bug.git
$ cd electron-copy-file-bug
$ npm i
$ npm run build
$ ./dist/linux-unpacked/copy-test
```

Click on the button and check the console. It displays the copy destination (your home folder), the error, and the files fs.readdir sees at the source location (including test.txt, which is the one that was attempted to be copied).

Note that if you run the example without building it with ASAR, by running `npm start` the copying works without issue.",zcbenz;codebytere,bug :beetle:;2-0-x;3-0-x,2018-08-26T22:25:39Z,2018-10-03T16:36:21Z,amxmln,haroldiedema;surmistry,sofianguy;codebytere,zcbenz,MarshallOfSound;codebytere;zcbenz,MarshallOfSound,codebytere,
electron/electron,14360,"Hidden window causes flicker when maximizing foreground window * Output of `node_modules/.bin/electron --version`: 3.0.0-beta.6
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.x

**Expected Behavior**
A hidden window background color should not be visible.

**Actual behavior**
A hidden window background color causes flicker.

**To Reproduce**
* run a fiddle where the main.js creates 2 window, where the second window is hidden with a red background color
* run the fiddle
* maximize the window
* restore the window
* repeat until you sometimes see the red color of the hidden window flashing through

**main.js**
```javascript
// Modules to control application life and create native browser window
const {app, BrowserWindow} = require('electron')

// Keep a global reference of the window object, if you don't, the window will
// be closed automatically when the JavaScript object is garbage collected.
let mainWindow

function createWindow (hidden) {
  // Create the browser window.
  mainWindow = new BrowserWindow({width: 800, height: 600, show: !hidden, backgroundColor: hidden ? ""#0000ff"" : ""#FFFFFF""})

  // and load the index.html of the app.
  mainWindow.loadFile('index.html')

  // Open the DevTools.
  // mainWindow.webContents.openDevTools()

  // Emitted when the window is closed.
  mainWindow.on('closed', function () {
    // Dereference the window object, usually you would store windows
    // in an array if your app supports multi windows, this is the time
    // when you should delete the corresponding element.
    mainWindow = null
  })
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', () => {
  createWindow();
  createWindow(true);
})

// Quit when all windows are closed.
app.on('window-all-closed', function () {
  // On OS X it is common for applications and their menu bar
  // to stay active until the user quits explicitly with Cmd + Q
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', function () {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (mainWindow === null) {
    createWindow()
  }
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and require them here.
```

![before](https://user-images.githubusercontent.com/900690/44746014-9228c180-ab09-11e8-886d-40a26bb6e3b2.gif)
",nitsakh,platform/windows;blocked/need-info 閴;bug :beetle:;3-0-x;app-feedback-program,2018-08-28T19:29:18Z,2019-08-10T06:16:02Z,bpasero,nitsakh;pronebird;jjustin3;sofianguy;bpasero,sofianguy,,sofianguy,,bpasero,
electron/electron,14383,"Windows 10 webview DevTools open in a too small window * Output of `node_modules/.bin/electron --version`: v3.0.0-beta.8
* Operating System (Platform and Version): Windows 10 10.0.16299 Build 16299
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): v2.0.8

**Expected Behavior**
Webview DevTools should open in a window that is properly sized.

**Actual behavior**
Webview DevTools open in window with minimal size and are therefore not visible.

**To Reproduce**
**Edit** Works in BrowserWindow.webContents.openDevTools() Works **not** in webView.openDevTools()

**Screenshots**
![too_small_devtools_window](https://user-images.githubusercontent.com/6893212/44841398-850fed80-ac43-11e8-8bed-849d45473683.png)

**Additional Information**
Only reproducible on Windows 10 10.0.16299 Build 16299. Works correctly on MacOS High Sierra 10.13.4
",zcbenz,platform/windows;bug :beetle:;3-0-x,2018-08-30T09:01:49Z,2018-10-02T14:56:34Z,christophpre,t57ser;SaschaA1982;christophpre,sofianguy,,zcbenz,,ckerr,
electron/electron,14412,"customButtonsOnHover - buttons do not function on click * Output of `node_modules/.bin/electron --version`: `electron@3.0.0-beta.7`
* Operating System (Platform and Version): macOS 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): Unknown

**Expected Behavior**
Buttons maximize, minimize, close window

**Actual behavior**
Nothing happens.
http://recordit.co/mhd54NzzMz

**To Reproduce**
Unknown. Having this issue even with a nearly empty DOM

**Screenshots**
![image](https://user-images.githubusercontent.com/6835891/44940340-289ff180-ad5b-11e8-8c43-bc39a2da62d2.png)

**Additional Information**
None so far

",codebytere,platform/macOS;bug :beetle:;status/confirmed;3-0-x;4-2-x,2018-09-01T00:20:51Z,2018-12-10T19:05:31Z,Slapbox,Slapbox;codebytere,codebytere,,codebytere,,BinaryMuse,
electron/electron,14441,"pacScript config for session.setProxy() method doesn't work in electron v3.0.0-beta.3   * Electron version: v3.0.0-beta.3
  * Operating system: Windows 10 Enterprise 10.0.15063 (x64) 
  * Last known working Electron version: v1.4.16

**Expected Behavior**
  Electron app should either detect *Use automatic configuration script* mentioned in the *Internet Options > Connection > LAN Settings > Automatic Configuration*
  OR 
  by passing the pacScript to the .setProxy() method of session object. 
https://electronjs.org/docs/api/session#sessetproxyconfig-callback
  ```
  // in main.js
  var electron = require('electron');
  var path = require('path');
  var BrowserWindow = electron.BrowserWindow;

  mainWindow = new BrowserWindow({
      webPreferences: {webSecurity: false},
      width: 1024,
      height: 728,
      kiosk: true,
      backgroundColor: ""#000000"",
      show: false,
      acceptFirstMouse: true
    }); 

 mainWindow.webContents.session.setProxy({pacScript:""http://proxy.xyz.com:9001/production.pac""}, 
      function() {
            mainWindow.loadURL(`file://${path.join(__dirname, ""/dist/app.html"")}`);
  });
  ```

**Actual behavior**
Electron app does not detect proxy settings. 

**To Reproduce**
Setup proxy using a pac script

**Additional Information**
 It does identify the proxy when we pass proxyRules to the ses.setProxy(config, callback) 
  ```
  {proxyRules: ""proxy.xyz.com:3128"", proxyBypassRules: ""localhost""}
  ```
  OR 
  when we use *Internet Options > Connection > LAN Settings > Proxy Server* setting on the windows 
  ![screenshot](https://i.imgur.com/I4TTRjz.png)
",deepak1556,platform/windows;bug :beetle:;status/confirmed;3-0-x,2018-09-04T06:24:18Z,2018-10-04T18:08:57Z,dhammikamare,sofianguy,sofianguy;deepak1556,deepak1556,deepak1556,,ckerr,
electron/electron,14470,"Inconsistent ""appData"" and ""logs"" path names Electron v2.0.8
Mac and Windows

As package.json does not allow spaces in the name field, my app is named ""MyApp"". In my build settings my productName is set to ""My App"" so that the user sees the name with spaces.

Using app.getPath('appData') the app data path clearly uses the ""name"" and saves all data in a folder named ""MyApp"" in my library.
Using app.getPath('logs') the log path uses the ""productName"" field and saves all logs in a folder named ""My App"". This is inconsistent, and results in multiple folders being created instead of just 1.

Using third-party log apps such as ""electron-store"" saves logs to the folder ""MyApp"" along with the appData, so it seems it is just Electron's logs path that is wrong.

```
{
  ""name"": ""MyApp"",
  ""version"": ""0.0.1"",
  ""main"": ""./js/app.js"",
  ""scripts"": {
    ""start"": ""electron ."",
    ""build"": ""electron-builder --dir -mw --ia32 --x64"",
    ""ship"": ""electron-builder -mw --ia32 --x64 -p always"",
    ""postinstall"": ""electron-builder install-app-deps""
  },
  ""build"": {
    ""appId"": ""com.my.app"",
    ""productName"": ""My App""
```",codebytere,platform/windows;platform/macOS;bug :beetle:;2-0-x,2018-09-05T20:00:39Z,2019-04-19T05:05:00Z,primalanomaly,bpasero;joernroeder,sofianguy,,codebytere,,codebytere,electron/electron#14276;
electron/electron,14490,"getDisplayNearestPoint throws an error with not rounded numbers * Output of `node_modules/.bin/electron --version`: 2.0.8
* Operating System (Platform and Version): macOS (reproducible on all platforms)

**Expected Behavior**
When using `electron.screen.getDisplayNearestPoint()` with a not rounded value (like 0.5), electron should round it properly, or at least not crash. (or it should be documented, with a clearer error)

**Actual behavior**
<img width=""532"" alt=""screen shot 2018-09-07 at 14 43 42"" src=""https://user-images.githubusercontent.com/1311607/45219858-84fb9780-b2ac-11e8-8e7e-75ba8312f20b.png"">

TypeScript did not catch this error because the value is still a number and there is no concept of ""integer-only"" variables in JS

**To Reproduce**
Anywhere on `app.ready`

``` javascript 
const display = electron.screen.getDisplayNearestPoint({
  x: 100.5, // HERE -> x_x
  y: 100
});
```
",MarshallOfSound,bug :beetle:;platform/all;2-0-x,2018-09-07T12:48:07Z,2018-09-13T13:28:56Z,martpie,martpie;MarshallOfSound,sofianguy,,MarshallOfSound,,ckerr,
electron/electron,14501,"Shift modifier in accelerator is not displayed in menu in 3.0.x * Output of `node_modules/.bin/electron --version`: v3.0.0-beta.8
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version: v2.0.x

**Expected Behavior**
App menu should correctly display accelerators with the Shift modifier.

**Actual behavior**
Accelerators display without the Shift modifier in the app menu. For example, the accelerator `CmdOrCtrl+Shift+N` will show up as `Ctrl+N` on Windows, although pressing Ctrl+Shift+N functions as expected.

**How to reproduce**
```
const menu = Menu.buildFromTemplate([
    {
      label: 'Test',
      submenu: [
        {
          label: 'Missing shift',
          accelerator: 'CmdOrCtrl+Shift+N',
          click: () => {
            console.log('clicked');
          }
        }
      ]
    }
  ]);

Menu.setApplicationMenu(menu);
```
Menu item will display the accelerator as `Ctrl+N`. Another example of a combination that doesn't display correctly is `Shift+f3`.

**Additional Information**
This is the same bug that was reported in https://github.com/electron/electron/issues/11429, which was previously fixed in https://github.com/electron/electron/pull/11589.
",MarshallOfSound,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x;app-feedback-program,2018-09-08T04:01:26Z,2018-10-04T17:05:36Z,katrinalui,,sofianguy;MarshallOfSound,,MarshallOfSound,,ckerr,electron/electron#11429;
electron/electron,14513,"3.0.x regression: Object has been destroyed upon quit with multiple windows open * Output of `node_modules/.bin/electron --version`: 3.0.0-beta.10
* Operating System (Platform and Version): macOS 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.x

**Expected Behavior**
Quitting should not throw a runtime exception.

**Actual behavior**
Quit and observe the following exception:

```
A JavaScript error occurred in the main process

Uncaught Exception:
Error: Object has been destroyed
    at App.app.on (/private/var/folders/w_/xgfzkgq14jv_ykk2lm0k_h5c0000gn/T/tmp-62270YFNEZpiSIoql/main.js:39:38)
    at App.emit (events.js:182:13)
    at BrowserWindow.on (/Users/bpasero/Library/Application Support/Electron Fiddle/electron-bin/3.0.0-beta.10/Electron.app/Contents/Resources/electron.asar/browser/api/browser-window.js:103:9)
    at BrowserWindow.emit (events.js:182:13)
```

**To Reproduce**
Fiddle: https://gist.github.com/a02a645e11f4946dcca1331d0299149d

Key is to open multiple windows and install a `app.on('browser-window-focus')` listener that accesses the `window.id` property. 

Maybe related to https://github.com/electron/electron/pull/14453 (@nitsakh)",deepak1556,platform/windows;platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;3-0-x;app-feedback-program,2018-09-09T14:52:04Z,2018-09-12T18:58:05Z,bpasero,Slapbox;deepak1556;bpasero,MarshallOfSound;deepak1556;sofianguy,,deepak1556,,ckerr,
electron/electron,14540,"Multi-client remote debugging support **Describe the solution you'd like**
Since version 63, Chrome supports multi-client remote debugging, which means it can handle multiple debugger clients (such as webContents.debugger and devTools) at the same time.

In Electron current version, v3.0 Beta, this functionality is not working properly. Once the user set the debbuger in a webContent, if the same webContent request to open the devTools, the previous debugger attached to the webContent is detached and all configurations are lost.

I think many Electron users will find this functionality very useful, since it can give the full support of chrome devTool in app background while the app users can access the devTools of the same webContent.

My application for example, which is a browser, really needs that functionality in order to analyze the page and it's content, while it can't / shouldn't block the user to access the devTools of that same page.

**Additional context**

https://developers.google.com/web/updates/2017/10/devtools-release-notes#multi-client
https://crbug.com/129539
",deepak1556,bug :beetle:;platform/all;status/confirmed;3-0-x,2018-09-11T04:27:37Z,2018-09-13T17:33:28Z,4eveRS,MarshallOfSound;4eveRS;deepak1556;praneetrohida,sofianguy;deepak1556,deepak1556,deepak1556,,deepak1556,
electron/electron,14674,"Electron@3-beta.13 / Accelerator combination doesn't work on windows 10  * Output of `node_modules/.bin/electron --version`: Electron 3.0.0-beta.13
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): Electron 2.0.9

**Expected Behavior**
accelerator combination `ctrl-alt-i` triggers menu action on windows 10.

**Actual behavior**
accelerator combination `ctrl-alt-i` does not trigger menu action on windows 10.

**To Reproduce**
On windows 10, clone https://github.com/kwonoj/electron-quick-start/pull/1

`npm run start`: try ctrl-alt-i, check output `test output` is printed out into console.
`npm run start3`: try ctrl-alt-i, check no console output printed.

**Additional Information**
Add any other context about the problem here.
",brenca,platform/windows;bug :beetle:;3-0-x;app/Slack;app-feedback-program,2018-09-18T18:28:50Z,2018-10-29T15:45:08Z,kwonoj,brenca,mgc;sofianguy,,brenca,,brenca,
electron/electron,14685,"Paste shortcut doesn't work in DevTools in 3.0.0 * Output of `node_modules/.bin/electron --version`: 3.0.0
* Operating System (Platform and Version): macOS High Sierra 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.0

**Expected Behavior**
Hitting `Cmd+V` should paste the contents of the clipboard in the DevTools Console tab. 

**Actual behavior**
Nothing happens as if I haven't pressed anything.

**To Reproduce**
You can run any Electron app running 3.0.0 and the issue will be reproduced. I tried it with our own project and also a boilerplate project that contained nothing but the setup code to run the app.",MarshallOfSound,platform/macOS;bug :beetle:;3-0-x;app-feedback-program,2018-09-19T09:23:09Z,2018-10-12T17:19:40Z,astoilkov,bpasero;pfrazee;MarshallOfSound,sofianguy,,MarshallOfSound,,pfrazee,
electron/electron,14710,"getAppMetrics() in 3.0.0 has broken Electron Version: 3.0.0
OS: Windows 10 x86_64

**Expected Behavior**
getAppMetrics should return a valid array recording the metrics of my application.

**Actual behavior**
getAppMetrics returns undefined.

**To Reproduce**
```
const { app } = require('electron');

console.log(app.getAppMetrics());
```
or:
https://github.com/computerquip-streamlabs/electron-quick-start

Each time getAppMetrics is called, it also provides a warning about the use of the `memory` field claiming that its deprecated, even though the above isn't using the memory field. 
",MarshallOfSound,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed,2018-09-19T21:15:22Z,2018-09-21T15:46:50Z,computerquip-streamlabs,Thomas101;codebytere;computerquip-streamlabs,ckerr,,ckerr,,codebytere,
electron/electron,14716,"Bugs on webview/webContents since 3.0.0-beta.6 (Introduction of OOPIF) * Output of `node_modules/.bin/electron --version`: 3.0.0
* Operating System (Platform and Version): macOS Sierra 10.12.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 3.0.0-beta.5

**Expected Behavior**
webviews should work like it used to, before the OOPIF.

**Actual behavior**
Since the update to use OOPIF in webviews, all my webviews are not working properly. This still happens in the version released today 3.0.0.

By debugging i've found out that:

- all commands that require a webview.getWebcontents() don't execute properly.
(Ex: have webview and try to capture page through webview.getWebContents().capturePage(), it used to work on 3.0.0-beta.5, now it simply doesn't do anything)

- all events in page doesn't work properly. (Ex: I have a webview preload script that log user actions like: click on elements, input data on forms, etc. It used to work on 3.0.0-beta.5, now it doesn't do anything).

- events in webviews are firing twice (Ex: did-start-loading firing twice when webview start loading).

- webview is sometimes having two webContents (Each webContent have a id) attached to it ???
It fires a event in each webContents, leading it to failure. (Ex: having a permissionRequestHandler, access google.com, see it fires twice, one time for a 'ghost' webContents, and one time for the actual webContent.)

-webview navigate / redraw its page, only when the user do navigation in-page, refresh, navigate back or forward.

If the user tries to do a webview.loadURL, the webview get mixed content, because it fires twice each event, leading to a webview incorrect behavior. 

In older versions of the beta, it used to freeze the webview frame (not redrawing the page content), now in version 3.0.0, it doesn't freeze, but doesn't navigate properly to the new page, making the webview stay in the older page. (The user can still interact with the older page, clicking on links, buttons, etc.)

I think that is occurring a bug, that is making two webContents to be attached to one webview and making so that the webview still renders the older webContent while it navigated to the new page, keeping both webpages ""status"", while instead, it should update the webContent of the webview to the page that the user navigated using webview.loadURL.


So resuming, I think that there's a issue with the relation webview and webContents, causing all those bugs.",zcbenz,platform/macOS;blocked/need-info 閴;bug :beetle:;3-0-x,2018-09-20T01:46:36Z,2019-08-19T19:25:11Z,4eveRS,Evoks;psicounterman;sbeatz;4eveRS;sofianguy,sofianguy,,codebytere,,sofianguy,
electron/electron,14739,"3.0 regression: offscreen window `paint` event returns empty `image` Since upgrading to 3.0 (from 2.0.10), offscreen image works in a different way. 

In 2.0.10, creating an offscreen window, loading a webpage that changes about every 2 seconds, resulting in empty file (tried `toDataUrl` and `toPNG`).
Some pages, that has animations in it and more, displays an partial-rendered page.

My logic is simple: subscribe to `paint` event, take the image (with `toPNG` or `toDataUrl`) and the use `fs.writeFile` to save the image to file.

* Output of `node_modules/.bin/electron --version`:
v3.0.0

* Operating System (Platform and Version): 
Tested on Mac OS X High Sierra and Windows 10.

* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):
v2.0.10

**Expected Behavior**
Offscreen should be rendered correctly.

**Actual behavior**
invalid rendering.

**To Reproduce**
```javascript
  const outputWindow = new BrowserWindow({
    width: 1920,
    height: 1080,
    enableLargerThanScreen: true,
    resizable: false,
    frame: false,
    show: false,
    skipTaskbar: true,
    webPreferences: {
      offscreen: true,
    }
  });

   outputWindow.loadUrl('https://daneden.github.io/animate.css/')

    outputWindow.webContents.on('paint', (event, dirty, image) => {
      fs.writeFileSync('myfile.png', image.toPNG());
    });;
```

**Screenshots**

## My Static Page (just canvas with some drawings)

#### With 2.0.10 (some canvas drawings)
![2 0 0-static](https://user-images.githubusercontent.com/3680083/45839419-9a44dd00-bd14-11e8-99e4-c8f627ce55b0.png)

#### With 3.0.0 (empty png?)
![3 0 0-static](https://user-images.githubusercontent.com/3680083/45839292-3de1bd80-bd14-11e8-841b-a50edd416ed1.png)

## Dynamic page (tested https://daneden.github.io/animate.css/)

#### With 2.0.10 (looks good)
![2 0 0-dynamic](https://user-images.githubusercontent.com/3680083/45839428-a03abe00-bd14-11e8-9885-7f177568b70d.png)

#### With 3.0.0 (incorrect rendering)
![3 0 0-dynamic](https://user-images.githubusercontent.com/3680083/45839287-3ae6cd00-bd14-11e8-9918-f0f0d11a2b62.png)


",brenca,platform/windows;platform/macOS;bug :beetle:;3-0-x,2018-09-20T18:38:59Z,2019-01-03T10:44:35Z,dotansimha,countravioli;brenca;dotansimha,sofianguy,,brenca,,dotansimha,
electron/electron,14742,"Regression in v3 with `CmdOrCtrl+Plus` accelerator in MenuItem * Output of `node_modules/.bin/electron --version`: 3.0.0
* Operating System (Platform and Version): MacOS 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.10

**Expected Behavior**
When using `'CmdOrCtrl+Plus'` as an accelerator for a menu, should trigger command when keyboard command is pressed. Other accelerators work as expected.

**Actual behavior**
In v3, this particular accelerator no longer works. The menu item can be clicked manually, but shortcut doesn't work.

**To Reproduce**
https://github.com/bigtimebuddy/electron-plus-bug

```sh
$ git clone https://github.com/bigtimebuddy/electron-plus-bug
$ npm install
$ npm test
```
When running the app trigger using key-command: Command + Plus (+). No alert appears, manually clicking the menu item trigger alert. Accelerator shows up in the menu item.",zcbenz,platform/macOS;blocked/need-info 閴;bug :beetle:;3-0-x,2018-09-20T22:51:50Z,2018-10-11T05:35:13Z,bigtimebuddy,zcbenz;doms;bigtimebuddy;javan;godza,sofianguy;zcbenz,,zcbenz,,zcbenz,
electron/electron,14763,"Electron@3 : BrowserWindow devtools doesn't record js perf profiling * Output of `node_modules/.bin/electron --version`:
* Operating System (Platform and Version):
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):

**Expected Behavior**
A clear and concise description of what you expected to happen.

**Actual behavior**
maybe related with https://github.com/electron/electron/issues/14687 .

**Electron@2**
![image](https://user-images.githubusercontent.com/1210596/45908644-71732500-bdb2-11e8-922b-9364e9d4c812.png)



**Electron@3**
![image](https://user-images.githubusercontent.com/1210596/45908665-82bc3180-bdb2-11e8-8999-dc46b1e860bc.png)


**To Reproduce**
clone https://github.com/kwonoj/electron-quick-start/pull/2

```
npm install
npm start : run devtools perf recording via 'start profiling and reload page'
npm start3 : same as above
```",deepak1556,bug :beetle:;3-0-x,2018-09-21T22:25:10Z,2019-08-09T22:55:20Z,kwonoj,MarshallOfSound;bpasero;nornagon;deepak1556;sofianguy,sofianguy,,deepak1556,,sofianguy,
electron/electron,14811,"Debugger.sendCommand callback passes an empty error object on success * Output of `node_modules/.bin/electron --version`: 3.0.0 x86
* Operating System (Platform and Version): win7 sp1 x64

**Expected Behavior**
to make it easy to differentiate success from failure, error should be null/undefined on success

**Actual behavior**
error is an empty object
```
[2018-09-26T02:17:14.805Z] sendCommand callback:
error: {}
result: {}
```

**To Reproduce**
run the following
```js
'use strict';

const {app, BrowserWindow} = require('electron'),
      OFFSCREEN = true;

let win;

if (OFFSCREEN)
  app.disableHardwareAcceleration();

app.on('ready', () => {

  win = new BrowserWindow({
    width: 1440,
    height: 900,
    useContentSize: true,
    show: !OFFSCREEN,
    webPreferences: {
      nodeIntegration: false,
      partition: 'memory_partition_1',
      offscreen: OFFSCREEN
    },
  });

  if (OFFSCREEN) {
    win.webContents.setFrameRate(1);
    win.webContents.stopPainting();
  }

  win.webContents.on('did-stop-loading', event => {
    log('did-stop-loading: %s', win.webContents.getURL());
    setTimeout(exit, 2000);
  });


  const dev = win.webContents.debugger;
  dev.attach();
  dev.on('message', (event, method, params) => {
    log('%s:\n%O', method, params);
  });

  log('before sendCommand');
  dev.sendCommand('Page.enable', {}, (error, result) => log('sendCommand callback:\nerror: %O\nresult: %O', error, result));
  log('after sendCommand');

  setTimeout(() => {
    log('before loadURL');
    win.loadURL('http://example.org/');
    log('after loadURL');
  });

});

function log(msg, ...args) {
  console.log(`[${new Date().toISOString()}] ${msg}\n`, ...args);
}

function exit() {
  log('exiting');
  app.exit();
}
```",MarshallOfSound,bug :beetle:,2018-09-26T02:31:03Z,2018-09-27T07:43:46Z,bughit,,MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,14838,"Checkboxes don't render in macOS mojave * Output of 3.0.1 & 2.0.10:
* Operating System (Platform and Version): macOS mojave 10.14

**Expected Behavior**
When using a webview with sandbox enabled in webpreferences and mixed sandboxing across the app enabled, checkboxes and radios should render

**Actual behavior**
Checkboxes are only rendered when not checked. When checked nothing is rendered:
![screen shot 2018-09-27 at 14 32 28](https://user-images.githubusercontent.com/103586/46149478-51d07680-c262-11e8-9923-96cba563fa51.png)

**To Reproduce**
**Key steps to reproduce are:**

Main.js
```js
app.enableMixedSandbox()
```

index.html
```js
<webview src=""wv.html"" webpreferences=""sandbox=yes""></webview>
```
wv.html
```
<input type=""checkbox"">
```

**Full working example:**
```
git clone https://github.com/wavebox/electron-quick-start.git
cd electron-quick-start
git checkout mojave_checkbox
npm install
npm start
```

**Additional Information**
Looks like Chrome had a similar issue with various hacks and workarounds:

[Upstream issue CR850021](https://bugs.chromium.org/p/chromium/issues/detail?id=850021)

[Google Product forum](https://productforums.google.com/forum/#!topic/chrome/d88Pp5hg35k)

[Workarounds](https://lifehacker.com/how-to-fix-chromes-checkboxes-and-buttons-in-macos-moja-1827398550)
",codebytere,platform/macOS;bug :beetle:;2-0-x;3-0-x,2018-09-27T13:39:49Z,2018-11-28T21:06:21Z,Thomas101,MarshallOfSound,sofianguy,,codebytere,,codebytere,
electron/electron,14883,"Menu accelerators not working sometimes (Electron 3) * Output of `node_modules/.bin/electron --version`: v3.0.2
* Operating System (Platform and Version): macOS High Sierra 10.13.3
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.9

**Expected Behavior**
When a menu item has accelerator key(s) associated with it, it **always** works as long as the app/window has focus.

**Actual behavior**
When a menu item has accelerator key(s) associated with it, it **sometimes** works as long as the app/window has focus.

**To Reproduce**
I'm having a hard time isolating this down to a specific subset of conditions, so I haven't created a boilerplate fork demo.  However, this is happening as a part of the [open-location-electron3](https://github.com/nos/client/compare/develop...feat/open-location-electron3) branch of our [nOS](https://github.com/nos/client) application.

```bash
git clone git@github.com:nos/client.git
# alternatively: git clone https://github.com/nos/client.git
git checkout open-location-electron3
yarn install && yarn start
```

1. Create an account
  a. Click the ""Create an account"" link
  b. Enter ""test"" for both the password and password confirmation fields
  c. Click the ""Register"" button
  d. Click the copy icon next to the ""Encrypted Key""
2. Login
  a. Paste the copied encrypted key value into the ""Encrypted WIF"" field
  b. Enter ""test"" into the ""Passphrase"" field
  c. Click the ""Login"" button
3. Press <kbd>Cmd</kbd>+<kbd>T</kbd> (mac) or <kbd>Ctrl</kbd>+<kbd>T</kbd> (win/linux) to open a new tab.
4. Repeat step 3, and eventually opening new tabs will stop working.  You may need to click the mouse into the webview prior to step 3 in order for the issue to reveal itself.

**Screenshots**
N/A

**Additional Information**
The issue seems to be some combination of:

* Electron 3
* Menu accelerator shortcuts
* Webview focus

If, while in that branch, you install `electron@2.0.9`, you will observe that the issue goes away.",codebytere,platform/macOS;bug :beetle:;3-0-x,2018-09-29T23:24:41Z,2018-10-02T15:33:07Z,mhuggins,codebytere;mhuggins;cprussin;asd281533890,codebytere,,codebytere,,codebytere,
electron/electron,14908,"BrowserWindow.loadURL does not resolve first request for page * Output of `node_modules/.bin/electron --version`:
* Operating System (Platform and Version): mac OS 
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):

**Expected Behavior**
When navigate url via `BrowserWindow::loadURL`, initial request sent to server doesn't resolve, while it actually seems resolved by having responses correctly. Maybe due to this reason, couldn't seem some of event is being triggered. We do use one page for triggering remove cookies and vice versa for teardown, and those page does not contain subsequent resource to load ends up with single request pending.

**Actual behavior**
Electron@2
![image](https://user-images.githubusercontent.com/1210596/46320100-a0974c80-c591-11e8-907b-6356303a1097.png)

Electron@3

![image](https://user-images.githubusercontent.com/1210596/46320125-b573e000-c591-11e8-95b3-c4053d0bb9fb.png)


**To Reproduce**
clone https://github.com/kwonoj/electron-quick-start/pull/3

```
npm install
npm start: check network tab
npm run start3: check network tab
```

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Additional Information**
Add any other context about the problem here.
",brenca,blocked/need-info 閴;bug :beetle:;platform/all;3-0-x;app/Slack;app-feedback-program;4-2-x,2018-10-01T22:55:04Z,2020-02-26T20:38:10Z,kwonoj,kwonoj;brenca;electron-triage,sofianguy;felixrieseberg;brenca;electron-triage,brenca,brenca,,electron-triage,
electron/electron,14915,"Call to `net.Socket.setTimeout(0)` has no effect in renderer in 3.0.0 - 3.0.2 * Output of `node_modules/.bin/electron --version`:
```
v3.0.2
```
* Operating System (Platform and Version):
```
Ubuntu 18.10
Ubuntu 18.04
Ubuntu 16.04
Mac OS 10.14
```
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):
```
v2.0.10
```

**Expected Behavior**
A call to `net.Socket.setTimeout(0)` should clear the socket timeout.

**Actual behavior**
It works as expected in the main process, however it doesn't work in the renderer process. The timeout is not cleared.

Stepping through it in a debugger, Line 418 in the [Node.js `net.js`](https://github.com/nodejs/node/blob/8c70b2084ce5f76ea1e3b3c4ccdeee4483fe338b/lib/net.js#L418) has no effect in the renderer.

**To Reproduce**
Minimal reproducer here: [https://github.com/jwulf/electron-3-socket-bug](https://github.com/jwulf/electron-3-socket-bug)

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone https://github.com/jwulf/electron-3-socket-bug.git -b master
$ npm install
$ npm start
```
",codebytere,platform/macOS;bug :beetle:;3-0-x;4-2-x;5-0-x,2018-10-02T03:03:06Z,2019-09-04T19:16:50Z,jwulf,jwulf;warpdesign;dsanders11;codebytere;luin,sofianguy,codebytere,codebytere,,codebytere,
electron/electron,14941,"tray click is not executed and it shows the context menu instead * Output of `node_modules/.bin/electron --version`: v3.0.2 and v4.0.0
* Operating System (Platform and Version): Linux bitang 4.15.0-36-generic #39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): v2

**Expected Behavior**

I used the toggle show/hide of the window on the tray click and in v2 it was working.

**Actual behavior**

When I click now on the tray, it opens the context menu - which was working on right click only.

**To Reproduce**

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone https://github.com/patrikx3/onenote
$ npm install
$ ./bin/p3x-onenote.js
```
**Screenshots**
not applicable

**Additional Information**
i suppose it is informative.",ckerr,platform/linux;component/tray;bug :beetle:;3-0-x;4-2-x;6-1-x,2018-10-03T06:42:10Z,2022-11-28T19:36:29Z,p3x-robot,p3x-robot;TGWKE;tawmoto;tassoevan;localguru;akontsevich;vladimiry;xuedi;mykhi;Rush;pronebird;akej74;raffis,sofianguy;TGWKE,,,,nornagon,
electron/electron,14948,"Overly thin font rendering in macOS 10.14 Mojave * Output of `node_modules/.bin/electron --version`: 2.0.7
* Operating System (Platform and Version): macOS 10.14 Mojave
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.7 on macOS 10.13 High Sierra

**Expected Behavior**

Font rendering weight should be on par with the rest of the OS.

**Actual behavior**

Fonts are rendered overly thin on Retina (High-DPI) screens.

**To Reproduce**

Download the [latest version of VS Code](https://github.com/Microsoft/vscode/releases/tag/1.27.2), which currently uses Electron 2.0.7. You need to be on macOS 10.14 Mojave and have a Retina screen (Macbook Pro, iMac, etc). Open any file and observe the thickness of fonts in the editor. See below for screenshots.

**Screenshots**

For comparison, I'm providing screenshots of two native macOS apps, Xcode and iTerm, and of VS Code which is using Electron 2.0.7.

Xcode:

<img width=""581"" alt=""rendering xcode"" src=""https://user-images.githubusercontent.com/206409/46404899-d01b9580-c706-11e8-8af5-52f444bab4dc.png"">

iTerm:

<img width=""581"" alt=""rendering iterm"" src=""https://user-images.githubusercontent.com/206409/46404955-f5100880-c706-11e8-9168-8e4dd563d98d.png"">

VS Code (Electron 2.0.7):

<img width=""581"" alt=""rendering vscode"" src=""https://user-images.githubusercontent.com/206409/46404965-fa6d5300-c706-11e8-8447-97d63979102d.png"">

Here's an animated version, for easy comparison:

![rendering animated](https://user-images.githubusercontent.com/206409/46405052-461ffc80-c707-11e8-971e-c8222eddd760.gif)

**Additional Information**

This is an upstream escalation of the issues in both VS Code https://github.com/Microsoft/vscode/issues/59887 and Atom https://github.com/atom/atom/issues/17486 which are both using Electron for font rendering.

The main problem is that Apple removed sub-pixel anti-aliasing in macOS 10.14 Mojave and all Electron apps now seem to be using the ""antialiased"" (grayscale) setting for font rendering, which is producing very thin and hard to read fonts. I think the ""antialiased"" setting should be changed to use the native font rendering in Mojave, but I'm not sure if this is something that is doable in Electron or if there's some further upstream repo this should be fixed in. If so, I'd be happy to do it if you point me in the right direction.",codebytere,platform/macOS;bug :beetle:;2-0-x,2018-10-03T14:29:43Z,2018-10-09T14:52:12Z,vl4dimir,vl4dimir;codebytere;bpasero;christianhans,sofianguy,,codebytere,,jkleinsc,
electron/electron,14958,"Crash on startup on Linux, probably dbus related * Output of `node_modules/.bin/electron --version`: **2.0.8**
* Operating System (Platform and Version): **Debian/Devuan stable**.
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): **2.0.6**

**Actual behavior**
Skype crashes on startup. But it looks like an Electron issue. See details on
https://answers.microsoft.com/en-us/skype/forum/skype_linux-skype_startms-skype_signms/skype-830-crashes-at-startup/bf8a3b10-4fb8-4a14-931a-5ae41ade4dbd

**Additional Information**

<details>
  <summary>Thread 1 ""skypeforlinux"" received signal SIGSEGV, Segmentation fault.</summary>
<pre>
Thread 1 ""skypeforlinux"" received signal SIGSEGV, Segmentation fault.
_dbus_header_get_byte_order (header=0x8) at ../../../dbus/dbus-marshal-header.c:178
178 ../../../dbus/dbus-marshal-header.c: No such file or directory.
(gdb) backtrace
#0  _dbus_header_get_byte_order (header=0x8) at ../../../dbus/dbus-marshal-header.c:178
#1  0x00007ffff49096d9 in _dbus_message_iter_check (iter=0x7fffffffde40) at ../../../dbus/dbus-message.c:768
#2  0x00007ffff490a369 in dbus_message_iter_get_arg_type (iter=0x7fffffffde40) at ../../../dbus/dbus-message.c:2185
#3  0x0000000002cbc4c9 in ?? ()
#4  0x0000000002cba5fc in ?? ()
#5  0x0000000004ea6495 in atom::PowerObserverLinux::OnInhibitResponse(base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>*, dbus::Response*) ()
#6  0x0000000002cbda10 in ?? ()
#7  0x0000000002cc0480 in ?? ()
#8  0x0000000002cbde96 in ?? ()
#9  0x0000000002cc085f in ?? ()
#10 0x000000000491a8eb in ?? ()
#11 0x000000000493a089 in ?? ()
#12 0x000000000493a3a8 in ?? ()
#13 0x000000000493a781 in ?? ()
#14 0x00000000048dd759 in ?? ()
#15 0x0000000004950570 in ?? ()
#16 0x0000000002a4e68e in ?? ()
#17 0x0000000002a4e48e in ?? ()
#18 0x0000000002ab441d in ?? ()
#19 0x0000000002900cc3 in ?? ()
#20 0x0000000002ca7bbc in ?? ()
#21 0x000000000430de4d in ?? ()
#22 0x0000000002ca6842 in ?? ()
#23 0x0000000004dbe43d in main ()
<pre>
</details>",ckerr,platform/linux;crash :boom:;bug :beetle:;component/powerMonitor;status/reviewed;2-0-x;3-0-x,2018-10-03T21:45:41Z,2018-10-09T05:32:20Z,alexeykuzmin,alexeykuzmin;ckerr,alexeykuzmin;ckerr,,ckerr,,ckerr,
electron/electron,14965,"Missing remote objects in 3.0 * Output of `node_modules/.bin/electron --version`: 3.0.0
* Operating System (Platform and Version): OSX
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 1.7.9

I have two electron windows. The first one lists a bunch of projects, and if you click on that it pops open a second pane. The second pane shows a preview of a local html file and refreshes if that webpage's local files change. I also have the ability to right click-> inspect element in that second pane. This works fine on both 1.7.9 and on the first time you open the second pane in 3.0.0. 

**Expected Behavior**
I expect the right click -> inspect element to work on subsequent refreshes of the second pane. 

**Actual behavior**
As soon as the second pane refreshes, the `remote.getCurrentWindow().inspectElement(x,y)` call throws a `Attempting to call a function in a renderer window that has been closed or released` error. 

**The code for the second pane**
*preview.js*
```
const {remote} = require('electron')
const {Menu, MenuItem, BrowserWindow} = remote

process.once('loaded', () => {

  // set up right click menu
  const menu = new Menu()
  const menuItem = new MenuItem({
    label: 'Inspect Element',
    click: () => {
      remote.getCurrentWindow().inspectElement(rightClickPosition.x, rightClickPosition.y)
    }
  })
  menu.append(menuItem)
  window.addEventListener('contextmenu', (e) => {
    e.preventDefault()
    rightClickPosition = {x: e.x, y: e.y}
    menu.popup(remote.getCurrentWindow())
  }, false)

  var cmd = false //cmd
  var alt = false //alt
  var i = false //i
  var r = false
  document.addEventListener('keydown', (e) => {
    if (e.keyCode == 91) cmd = true
    if (e.keyCode == 18) alt = true
    if (e.keyCode == 73) i = true
    if (e.keyCode == 82) r = true
    if (cmd && alt && i) {
      remote.getCurrentWindow().toggleDevTools();
    }
    if (cmd && r) {
      remote.getCurrentWindow().reload();
    }
  })
  document.addEventListener('keyup', (e) => {
    if (e.keyCode == 91) cmd = false
    if (e.keyCode == 18) alt = false
    if (e.keyCode == 73) i = false
    if (e.keyCode == 82) r = false
  })
})
```


**The code that triggers the second pane**
```
  viewDirectory: function(dir,dirId) {
    renderer.changeListener(dirId)
    if(renderer.selected) document.getElementById('directory').querySelector('.selected').classList.remove('selected')
    renderer.selected = dirId
    document.getElementById(dirId).classList.add('selected')
    if (!renderer.preview){
      renderer.preview = new BrowserWindow({
        title: 'Bowtie', 
        width: 1200, 
        height: 809, 
        webPreferences: {experimentalFeatures: true, preload: path.join(__dirname, ""preview.js"")}})
      renderer.preview.setMenu(null)
      renderer.preview.on('closed', () => {
        renderer.preview = null
        renderer.resetSelected()
      })
      renderer.preview.webContents.on('did-finish-load',() => {
        if(renderer.preview.getTitle()=='Bowtie'){
          renderer.preview.setTitle(dir)
        }
      })
    }
    renderer.preview.loadURL(""http://localhost:8900/"" + dir)
  },
```

**Additional Information**
I believe this is a bug, as I haven't changed anything except the electron version. 1.7.9 works fine. If I'm doing something wrong here though, I'd love some help :) 
",zcbenz,platform/macOS;bug :beetle:;3-0-x;app-feedback-program;4-2-x,2018-10-04T02:27:27Z,2018-10-31T15:26:58Z,jjcm,TheGoddessInari;MarshallOfSound;sofianguy;jjcm,sofianguy;MarshallOfSound,sofianguy,sofianguy,,sofianguy,
electron/electron,14971,"Segmentation fault when vibrancy is set with non default titleBarStyle on OSX * Output of `node_modules/.bin/electron --version`: 2.0.11
* Operating System (Platform and Version): OSX 10.14 and 10.13.6

**Expected Behavior**
A window with `titleBarStyle:""hidden""` should work with `vibrancy` parameter set.

**Actual behavior**
If `vibrancy` parameter is set with `titleBarStyle` with another value than `""default""`, it crashes when the window is closed.

**To Reproduce**
https://github.com/Evoks/electron-quick-start

```sh
$ git clone https://github.com/Evoks/electron-quick-start
$ npm install
$ npm start
```
And wait 2 seconds... Boom, segfault!

**Crash report**

```Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x000007f966bf4bb0
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [55409]

VM Regions Near 0x7f966bf4bb0:
    CoreAnimation          0000000120920000-00000001217c7000 [ 14.7M] rw-/rwx SM=PRV  
--> 
    Memory Tag 255         00002d32a7149000-00002d32a7180000 [  220K] ---/rwx SM=NUL  

Application Specific Information:
objc_msgSend() selector name: release


Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   libobjc.A.dylib               	0x00007fff5d47ca1d objc_msgSend + 29
1   com.apple.AppKit              	0x00007fff2ecb9ead -[NSWindow dealloc] + 2609
2   com.github.electron.framework 	0x0000000113d23509 0x113c6c000 + 750857
3   com.github.electron.framework 	0x0000000113d234f1 0x113c6c000 + 750833
4   com.github.electron.framework 	0x0000000113d234d9 0x113c6c000 + 750809
5   com.github.electron.framework 	0x0000000113d234c9 0x113c6c000 + 750793
6   com.github.electron.framework 	0x0000000113d22b39 0x113c6c000 + 748345
7   com.github.electron.framework 	0x0000000113d2fdef atom::NativeWindowMac::~NativeWindowMac() + 175
8   com.github.electron.framework 	0x0000000113d2fe79 atom::NativeWindowMac::~NativeWindowMac() + 9
9   com.github.electron.framework 	0x0000000113d2fece atom::NativeWindowMac::~NativeWindowMac() + 14
10  com.github.electron.framework 	0x0000000113cfdbdf base::DeleteHelper<atom::NativeWindow>::DoDelete(void const*) + 15
11  com.github.electron.framework 	0x0000000113f35482 0x113c6c000 + 2921602
12  com.github.electron.framework 	0x0000000113efa92b 0x113c6c000 + 2681131
13  com.github.electron.framework 	0x0000000113efad15 0x113c6c000 + 2682133
14  com.github.electron.framework 	0x0000000113efafe9 0x113c6c000 + 2682857
15  com.github.electron.framework 	0x0000000113efe58a 0x113c6c000 + 2696586
16  com.github.electron.framework 	0x0000000113eb25da 0x113c6c000 + 2385370
17  com.github.electron.framework 	0x0000000113efdeaf 0x113c6c000 + 2694831
18  com.apple.CoreFoundation      	0x00007fff314e1405 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
19  com.apple.CoreFoundation      	0x00007fff314e13ab __CFRunLoopDoSource0 + 108
20  com.apple.CoreFoundation      	0x00007fff314c4e51 __CFRunLoopDoSources0 + 195
21  com.apple.CoreFoundation      	0x00007fff314c43fa __CFRunLoopRun + 1219
22  com.apple.CoreFoundation      	0x00007fff314c3ce4 CFRunLoopRunSpecific + 463
23  com.apple.HIToolbox           	0x00007fff3075d895 RunCurrentEventLoopInMode + 293
24  com.apple.HIToolbox           	0x00007fff3075d5cb ReceiveNextEventCommon + 618
25  com.apple.HIToolbox           	0x00007fff3075d348 _BlockUntilNextEventMatchingListInModeWithFilter + 64
26  com.apple.AppKit              	0x00007fff2ea1a95b _DPSNextEvent + 997
27  com.apple.AppKit              	0x00007fff2ea196fa -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1362
28  com.apple.AppKit              	0x00007fff2ea1375d -[NSApplication run] + 699
29  com.github.electron.framework 	0x0000000113efedbe 0x113c6c000 + 2698686
30  com.github.electron.framework 	0x0000000113efd7bc 0x113c6c000 + 2693052
31  com.github.electron.framework 	0x0000000113f13b73 0x113c6c000 + 2784115
32  com.github.electron.framework 	0x000000011417fddf 0x113c6c000 + 5324255
33  com.github.electron.framework 	0x000000011417fc00 0x113c6c000 + 5323776
34  com.github.electron.framework 	0x0000000114182272 0x113c6c000 + 5333618
35  com.github.electron.framework 	0x000000011417bc5c 0x113c6c000 + 5307484
36  com.github.electron.framework 	0x00000001140c5050 0x113c6c000 + 4558928
37  com.github.electron.framework 	0x0000000115cd6104 0x113c6c000 + 33988868
38  com.github.electron.framework 	0x00000001140c3e64 0x113c6c000 + 4554340
39  com.github.electron.framework 	0x0000000113c6dd44 AtomMain + 68
40  com.github.electron           	0x000000010f9e7f26 main + 38
41  libdyld.dylib                 	0x00007fff5e559085 start + 1```",codebytere,platform/macOS;bug :beetle:;2-0-x;3-0-x,2018-10-04T14:55:22Z,2018-12-14T23:44:38Z,Evoks,codebytere;Evoks,sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,15036,"window.print() causes print-related files to be created in working dir * Version: v3.0.3 (reproduced on all 3.x builds for windows)
* Windows 10
* Last working version: v2.0.10

**Expected Behavior**
Additional files shouldn't be created when printing

**Actual behavior**
When calling window.print(), after sending the print job, .pdf, .emf, .json and .prn files are created 

**To Reproduce**

1. Download a prebuilt  version of electron 3.X for windows.
2. Run electron.exe (will run the default_app)
3. Ctrl+Shift+I to open debugger
4. Call window.print() from the console
5. Select a printer
6. pdf and emf file will be created in the working folder
7. Repeat steps 4 and 5, then additional pdf and emf, as well as json and prn files will be created

**Additional Information**
* This of course happens not only on the default app. So this can be reproduced with a simple electron app with electron running from node_modules, with the loaded html just calls window.print().
* Filenames are created in the following format: `<MM>_<D>_<YY>, <h>_<mm>_<ss>_<page-title>.<extension>` (e.g. `10_9_18, 2_18_10 PM_Hello World!.pdf`)
",brenca,platform/windows;bug :beetle:;3-0-x,2018-10-09T11:38:26Z,2018-10-29T16:04:13Z,idobh2,baconbrad;sadiqawos;ivandroid;kishangandhi92,sofianguy,,brenca,,brenca,
electron/electron,15119,"menu.getMenuItemById() doesn't work for separators * Output of `node_modules/.bin/electron --version`: 3.0.4, 4.0.0-beta.1
* Operating System (Platform and Version): All
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.10

**Expected Behavior**
[`menu.getMenuItemById`](https://electronjs.org/docs/api/menu#menugetmenuitembyidid) should return a `MenuItem` with a given `id`.

**Actual behavior**
`menu.getMenuItemById` returns `null` if a requested menu item is a separator (`type: 'separator'`).

**To Reproduce**
I added a test for this in [`fix-15119`](https://github.com/electron/electron/tree/fix-15119) branch. Here are test results for that branch
https://circleci.com/workflow-run/fb7d93a0-b0fb-4b9b-bcf5-cf566aa862cc

/cc @codebytere ",codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;3-0-x;4-2-x,2018-10-12T15:03:15Z,2018-10-19T20:09:41Z,alexeykuzmin,codebytere;alexeykuzmin,alexeykuzmin;sofianguy,,codebytere,,codebytere,
electron/electron,15140,"inAppPurchase.getReceiptURL() should be filesystem path * Output of `node_modules/.bin/electron --version`: v3.0.4
* Operating System (Platform and Version): macOS 10.13.6

My current app is accepted by Apple and ""pending developer release."" However, before I release it I wanted to add and test IAP (in app purchases).

**Expected Behavior**
release/mas-dev/MyApp.app, lacking a receipt, launches and exits immediately with code 173 that triggers login for MAS sandbox test user, receipt is generated, and app should re-launch OK.

**Actual behavior**
Everything related to the first-launch, exit 173, login with test account, and receipt generation works fine. It fails on relaunch with console.app reporting a kernel message: `load code signature error 4 for file ""MyApp Helper""`.

**To Reproduce**
I do not have a good reproduction because of the complexity of entitlements, provisioning profiles, certificates, etc.

**Screenshots**
Receigen says that the app has a valid receipt.
![2018-10-13 at 12 14 am](https://user-images.githubusercontent.com/1819762/46901641-f6ff6780-ce7c-11e8-95d0-a4549ca90d76.png)

Entitlements look good, and the app is functioning fine in the sandbox...
![2018-10-13 at 12 15 am](https://user-images.githubusercontent.com/1819762/46901651-1d250780-ce7d-11e8-9103-088e7276e99c.png)

**Additional Information**
The only other file I see that looks like ""MyApp Helper"" is in MyApp.app/Contents/Frameworks/MyApp Helper.app. If I drag this into Receigen for analysis... it is signed, and has these entitlements. It doesn't have a receipt... which I wouldn't expect.

![2018-10-13 at 12 17 am](https://user-images.githubusercontent.com/1819762/46901666-6412fd00-ce7d-11e8-8dc9-3cfc2acb8aeb.png)

I don't think I need LoginItems or helpers... what do they do, exactly? Also, what are the EH/NP versions of these helpers?

Thanks!
",codebytere,platform/macOS;bug :beetle:;3-0-x,2018-10-13T05:18:31Z,2018-11-05T17:49:52Z,semireg,MarshallOfSound;semireg,MarshallOfSound;sofianguy,sofianguy,codebytere,,codebytere,
electron/electron,15212,"Out-of-date Chromedriver packaged in electron 3 and 4beta * Output of `node_modules/.bin/electron --version`: v3.0.4
* Operating System (Platform and Version): macOS High Sierra 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): N/A

**Expected Behavior**
*electron 3.0.4:*
The version of Chromedriver packaged in electron 3.0.4 should be the most up-to-date supporting Chrome 66: Chromedriver v2.38 (version 2.39 and 2.40 are supposed to support Chrome 66 too but they don't seems to play out well with spectron from what I've tried).
*electron 4beta:*
The version of Chromedriver packaged in electron 4beta should be the most up-to-date supporting Chrome 69: Chromedriver v2.42.

**Actual behavior**
The version of Chromedriver packaged in electron 3.0.4 is Chromedriver v2.36 and this version creates lots of failures when testing an electron application using Spectron: the issues I am reproducing are related to ""unknown session ID"" and ""cannot determine loading status"". Those issues are fixed in Chromedriver v2.38 (see http://chromedriver.chromium.org/downloads).
The version of Chromedriver packaged in electron 4beta is Chromedriver v69.0.3497.106 which is a non-existing version of Chromedriver, the more up-to-date being v2.42.

**To Reproduce**
Not steps to reproduce appart from installing Spectron and seeing that the chromedriver version used is not the most up-to-date one that can be used for the Chromium version electron is using.

**Additional Information**
For the records, even though this might seems like a Spectron issue, I am opening the issue in electron because Spectron uses electron-chromedriver (to download Chromedriver) which is itself using electron-download which is itself downloading chromedriver from **electron repository**.
",codebytere,platform/macOS;bug :beetle:;3-0-x;4-2-x,2018-10-17T08:15:49Z,2018-10-24T17:06:19Z,happypoulp,computerquip-streamlabs;happypoulp;jkleinsc;codebytere,sofianguy,,codebytere,,happypoulp,
electron/electron,15312,"`mksnapshot` binary for `armv7l` now works natively on `armv7l` machines, but still doesn't generate proper shapshots If you try to launch any application (Atom, for example) with `snapshot_blob.bin` which is generated by `mksnapshot` binary for `armv7l` architecture natively on `armv7l` machine it will throw an error and immediately exit:
```
#
# Fatal error in ../../v8/src/snapshot/deserializer.cc, line 79
# Check failed: magic_number_ == SerializedData::ComputeMagicNumber(external_reference_table_).
#
Illegal instruction
```
However, if you try to launch any application with `snapshot_blob.bin` which is generated by `mksnapshot` binary for `armv7l` architecture but on `amd64` machine it will be successfully launched.

I've also tried to play with arguments like `--no-use_ic` and `--arm_arch` but it still doesn't generate proper snapshots natively on `armv7l` machine.

Tested only with `mksnapshot` binary which is provided with `Electron 2.0.11`.",jkleinsc,bug :beetle:;2-0-x,2018-10-21T12:26:53Z,2019-08-08T23:36:04Z,ghost,ghost;jkleinsc,sofianguy,,jkleinsc,,sofianguy,
electron/electron,15314,"fs.stat - should work with options parameter * Output of `node_modules/.bin/electron --version`: v4.0.0-nightly.20181010
* Operating System (Platform and Version): Windows 64

process.versions: 
```
{
  http_parser: '2.8.0',
  node: '10.11.0',
  v8: '6.9.427.24',
  uv: '1.23.0',
  zlib: '1.2.11',
  ares: '1.14.0',
  modules: '64',
  nghttp2: '1.33.0',
  napi: '3',
  openssl: '1.1.0',
  electron: '4.0.0-nightly.20181010',
  chrome: '69.0.3497.106',
  icu: '62.1',
  unicode: '11.0',
  cldr: '33.1',
  tz: '2018e' 
}
```

**Expected Behavior**

fs.stat should work with options parameter.

As of node.js version 10.5.0 fs.stat should support 3 parameters (new options parameter for bigint)
like so:  fs.stat(path[, options], callback)

you can see the docs here: 
https://nodejs.org/docs/latest-v10.x/api/fs.html#fs_fs_stat_path_options_callback

Im using electron v4.0.0.beta-4 with node 10.11.0 (as you can see above in versions)



**Actual behavior**

 Calling fs.stat with options parameter fails with error:
```
TypeError [ERR_INVALID_CALLBACK]: Callback must be a function
    at makeStatsCallback (fs.js:150:11)
    at stat (fs.js:797:14)
    at Object.fs.stat (ELECTRON_ASAR.js:289:27)
    at App.createWindow (C:\projects\electron-quick-start\main.js:11:6)
    at App.emit (events.js:187:15)
```



**To Reproduce**

1. clone the electron-quick-start repo
2. update electron to latest beta version
3. paste this code in main.js inside the function createWindow():

```javascript
fs.stat(""pathToSomeFile"", {bigint: true}, (err, stats) => {
    if (err) {
      console.log(err);
    } else {
      console.log(stats);
    }
});
```

4. run the app

",codebytere,platform/windows;bug :beetle:;4-2-x,2018-10-21T14:41:53Z,2018-10-23T22:14:06Z,rotemgrim,MarshallOfSound;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,15317,"Alert Box showing broken icon image * Output of `node_modules/.bin/electron --version`: v2.0.5
* Operating System (Platform and Version): Ubuntu 18.04LTS

### Expected behavior

alert box should show the app Icon.

### Actual behavior

alert box is showing no icon even though an app icon is set.
![screenshot from 2018-10-22 18-46-46](https://user-images.githubusercontent.com/15051871/47294523-f5773180-d62a-11e8-9a47-6a62bebd4a1d.png)


### How to reproduce
* Open any electron app in debug mode (or run the app directly from the source).
* in the developer console, type `alert('some_string')`
* A dialog box appears with 'some_string' in it and a placeholder for the icon instead of the icon itself.
Refer the image above.
",ckerr,platform/linux;bug :beetle:;2-0-x;status/confirmed;3-0-x;4-2-x,2018-10-22T13:21:42Z,2018-10-23T17:44:48Z,stagefright5,stagefright5;MarshallOfSound,sofianguy;ckerr,ckerr,ckerr,,ckerr,
electron/electron,15339,"electron ignores the --ignore-gpu-blacklist flag in versions above 1.6.16 I have an app that is backwards compatible to some older GPU's, both linux and windows, and I usually can get webgl to run in my electron apps with the command line flag --ignore-gpu-blacklist. This is fine because my apps do not connect to the internet so there is no security risk. With the newest version it seems as if electron is ignoring that flag. When I launch my apps they all throw the 'webgl cannot find extension' error which is generally associated with not being able to read the GPU info. WebGL works in the browsers on these machines. I don't know the linux GPU off the top of my head but the windows one is some integrated intel gpu.
",nornagon,bug :beetle:;3-0-x;app-feedback-program;4-2-x,2018-10-23T16:15:51Z,2019-07-08T16:44:36Z,DandroidDeveloper,nornagon;DandroidDeveloper;VishwasShashidhar,nornagon;sofianguy,nornagon,,,nornagon,
electron/electron,15347,"Linux builds include ""pyproto"" folder with scripts * Output of `node_modules/.bin/electron --version`: 4.0.0-beta1 through 4.0.0-beta.5
* Operating System (Platform and Version): Linux
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 0.x through 3.x

**Expected Behavior**
Electron releases only contain required files

**Actual behavior**
https://github.com/electron/electron/releases/download/v4.0.0-beta.5/electron-v4.0.0-beta.5-linux-x64.zip (and other Linux targets) contains a folder `pyproto` with a bunch of Python scripts in them.

**To Reproduce**
Download and extract the release build.

**Additional Information**
This looks like a tiny issue, but various security protocols will keep us from using Electron with these scripts packaged.
",nornagon,platform/linux;bug :beetle:;component/build;app/Slack;app-feedback-program;4-2-x,2018-10-23T20:53:22Z,2018-10-24T00:19:04Z,felixrieseberg,,felixrieseberg;sofianguy,,felixrieseberg,,nornagon,
electron/electron,15360,"""Open folder"" in dev tools does not work * Output of `node_modules/.bin/electron --version`: 3.0.5
* Operating System (Platform and Version): macOS Mojave
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.x

**Expected Behavior**

""Open folder"" should work in dev tools

**Actual behavior**

""Open folder"" option does not work.

<img width=""278"" alt=""screenshot 2018-10-24 at 12 45 38"" src=""https://user-images.githubusercontent.com/704044/47425686-69c8e680-d78b-11e8-9630-3d64d43a41ab.png"">


**To Reproduce**
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork [electron-quick-start](https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
**Screenshots**
If applicable, add screenshots to help explain your problem.

**Additional Information**
Add any other context about the problem here.
",codebytere,platform/macOS;platform/linux;bug :beetle:;status/confirmed;3-0-x;4-2-x,2018-10-24T10:51:42Z,2018-10-25T15:36:49Z,pronebird,codebytere;ckerr;pronebird,ckerr,,codebytere,,codebytere,
electron/electron,15392,"Accelerator ""Shift+Backspace"" show as ""Shift+Shift+Backspace"" in menu * Output of `node_modules/.bin/electron --version`: v3.0.6
* Operating System (Platform and Version): Windows 10 (October Update)

**Expected Behavior**
When using the accelerator ""Shift+Backspace"" in a `Menu`, the accelerator should be displayed as ""Shift+Backspace""

**Actual behavior**
""Shift+Shift+Backspace"" is displayed as accelerator in the menu.

**To Reproduce**
See: https://github.com/torjusb/electron-accelerator-bug

**Screenshots**
<img width=""385"" alt=""accelerator"" src=""https://user-images.githubusercontent.com/53583/47494149-49635f80-d851-11e8-8178-eed38f22e0e2.png"">

**Additional info**
This only appears to affect ""Shift+Backspace"" from limited testing. Accelerators such as ""Alt+Backspace"", ""Shift+M"" etc. appears to work fine.",brenca,platform/windows;bug :beetle:;3-0-x;4-2-x,2018-10-25T10:28:35Z,2018-10-31T14:13:45Z,torjusb,,sofianguy;brenca,,brenca,,jkleinsc,
electron/electron,15436,"Unable to use native module vscode-nsfw  with Electron 4.0.0-beta.5 * Output of `node_modules/.bin/electron --version`: 4.0.5-beta.5
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 3.0.6

**Expected Behavior**
A native module works when compiled against Electron.

**Actual behavior**
A native module `vscode-nsfw` when required throws the following error:

```
Error: The specified module could not be found.
\\?\C:\Users\bpasero\Desktop\vscode-nsfw\node_modules\vscode-nsfw\build\Release\nsfw.node
```

**To Reproduce**
* setup a `.yarnrc` file with belows contents
```ini
disturl ""https://atom.io/download/electron""
target ""4.0.0-beta.5""
runtime ""electron""
```
* add a dependency to `package.json`: `""vscode-nsfw"": ""*""`
* run `yarn`
* require `vscode-nsfw` in the electron app
* get the error

When I follow the same steps by compiling this module against a globally installed `node.js 10.11.0` (the same as `Electron 4.0.0-beta.5`) I can successfully load the module. As such I assume that it is not the modules fault here.",nornagon,platform/windows;bug :beetle:;4-2-x,2018-10-28T07:23:04Z,2018-11-18T11:05:27Z,bpasero,MarshallOfSound;bpasero;deepak1556;nornagon;rhwu,,,nornagon,,bpasero,
electron/electron,15459,"Memory leak with use sandbox true and webFrame.setSpellCheckProvider * Output of `node_modules/.bin/electron --version`: v3.0.5
* Operating System (Platform and Version): macOS 10.14

**Expected Behavior**
When webPreferences.sandbox is set to true and webFrame is using a provider for spell checking, the memory must be released after page reload.

**Actual behavior**
The memory isn't released and caused memory leak

**To Reproduce**

- Clone https://github.com/vrbsm/example-memory-leak-electron
- Run npm run start
Memory usage of electron process will be increasing in task manager after reloading the page several times

**Screenshots**
![test-memory-leak-01](https://user-images.githubusercontent.com/9887288/47675838-c2d4b800-db99-11e8-97e8-b5b27bcab929.gif)


",nitsakh,platform/macOS;platform/linux;bug :beetle:;status/confirmed;3-0-x;app-feedback-program;4-2-x;memory leak,2018-10-29T19:44:33Z,2019-02-08T21:38:32Z,vrbsm,richardlopes-daitangroup;vrbsm;ckerr;MarshallOfSound,codebytere;ckerr;sofianguy,codebytere,nitsakh,,MarshallOfSound,
electron/electron,15489,"BrowserWindow.getNativeWindowHandle() always returns a null NSView* on macOS * Output of `node_modules/.bin/electron --version`:
v3.0.6
v4.0.0-beta.5

* Operating System (Platform and Version):
macOS High Siearra 10.13.6

* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):
v2.0.11

**Expected Behavior**
BrowserWindow.getNativeWindowHandle() must return non-nullable result.

**Actual behavior**
BrowserWindow.getNativeWindowHandle() returns null.

**To Reproduce**

***Sample code***
```
const { app, BrowserWindow } = require('electron');

let win

app
	.on('ready', () => {
		win = new BrowserWindow({width: 800, height: 600})
		win.loadURL('https://www.google.com')
		
		win.on('closed', () => win = null);

		const handle = win.getNativeWindowHandle();
		console.log('Current window: ' + handle.toString('hex'));
	})
	.on('window-all-closed', () => app.quit());
```

***Expected output***
Something different than `Current window: 0000000000000000`

***Actual output***
`Current window: 0000000000000000`",MarshallOfSound,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed,2018-10-31T07:49:44Z,2018-11-08T17:03:20Z,pnpetrov,MarshallOfSound;Jun90925;pnpetrov,MarshallOfSound,,MarshallOfSound,,codebytere,
electron/electron,15494,"Simple fullscreen: is not properly sizing the window when display metrics change * Output of `node_modules/.bin/electron --version`: 2.0.12
* Operating System (Platform and Version): macOS 10.14

**Expected Behavior**
When having a window in simple fullscreen and you change display metrics or change from 1 monitor to 2 the window should size according to the new dimensions.

**Actual behavior**
The window size does not change when display metrics change.

**To Reproduce**
* Run Fiddle: https://gist.github.com/bpasero/e4013ea83033a8c231f58f94c0df57c3
* Change display metrics or change monitor count

=> the window is wrongly sized now and needs a transition from normal back to fullscreen to recover.",codebytere,platform/macOS;bug :beetle:;2-0-x;6-0-x;6-1-x;11-x-y,2018-10-31T10:26:51Z,2021-03-16T09:41:59Z,bpasero,sofianguy;bpasero;electron-triage;codebytere,codebytere;sofianguy;nornagon,sofianguy,,,electron-triage,
electron/electron,15496,"The ""Zoom In"" shortcut doesn't work * Output of `node_modules/.bin/electron --version`: **3.0.6**, **4.0.0-beta.4**
* Operating System (Platform and Version): **Mac** at least
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): **2.0.11**

**Expected Behavior**
Behaviour in Electron 2:
1) ""View > Zoom In"" menu item shows ""閳+"" as a shortcut.
2) Pressing ""閳+"" increases a page's zoom.

**Actual behavior**
1) For Electron 3 the app ""View"" menu shows ""閳+"" as a shortcut for the ""Zoom In"" item.
For Electron 4 it shows ""閳褉瀵+"".
2) The ""閳 and +"" shortcut  doesn't work but ""Shift and 閳 and +"" does the job in both Electron 3 and 4.

The other zoom shortcuts ""閳 and -"" and ""閳 and 0"" work as expected.

**To Reproduce**
Open any webpage in Electron, e.g. `$ ...Electron.app/Contents/MacOS/Electron https://youtube.com`, try to Zoom in and Zoom out with a keyboard.
Can be reproduced even with the default app.",codebytere,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;3-0-x;4-2-x;8-x-y;7-1-x,2018-10-31T10:51:02Z,2021-03-08T18:35:43Z,alexeykuzmin,alexeykuzmin;alexstrat;KiranNiranjan;clavin;electron-triage;nikhilmishra11;tr3ysmith;Paxxous;javan;aaronraimist;mx2323;dsteinman;bigshahan;codebytere;danutzcodrescu,alexeykuzmin;electron-triage,electron-triage,codebytere,,codebytere,
electron/electron,15539,"webview devTools not inspect * Output of `node_modules/.bin/electron --`: 3.0.7
* Operating System (Platform and Version): win10 64bit
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 1.8.8

**Expected Behavior**
When active the insect button, and the mouse hover the webview inside html element it should highlight the elemrnt.

**Actual behavior**
Noting happen.

**To Reproduce**
Add a webview tag and open it's devTools.

**Screenshots**
[](url)
![qq 20181102132017](https://user-images.githubusercontent.com/14836112/47895264-53fda480-dea2-11e8-84ba-a23d811d2283.png)


**Additional Information**

",codebytere,platform/windows;blocked/need-info 閴;bug :beetle:;3-0-x,2018-11-02T05:23:23Z,2019-08-19T19:13:53Z,zhaobingss,sofianguy,sofianguy,,codebytere,,sofianguy,
electron/electron,15543,"`createWriteStream` in `original-fs` is broken * Output of `node_modules/.bin/electron --version`: v4.0.0-beta.6
* Operating System (Platform and Version): Windows 10 x64 Build 17134
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): v3.0.7

**Expected Behavior**
`require('original-fs').createWriteStream('some/asar/file.asar')` should not error.

**Actual behavior**
The write stream fails with error: `Error: Invalid package some/asar/file.asar`

**To Reproduce**
I've forked `electron-quick-start` with the most trivial repro: https://github.com/adill/electron-quick-start/tree/demo-create-write-stream
",ckerr,platform/windows;bug :beetle:;app-feedback-program;4-2-x,2018-11-02T06:09:05Z,2018-12-12T21:32:54Z,adill,codebytere;SEAPUNK;ckerr,sofianguy,,sofianguy;ckerr,ckerr,ckerr,
electron/electron,15603,"Electron bluetooth errors * Output of `node_modules/.bin/electron --version`: 4.0.0-beta.7
* Operating System (Platform and Version): OS X Mojave 10.14.1
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): Never seen it work in any version available

**Expected Behavior**

webContents select-bluetooth-device should allow to select a device from the list and pair it.

**Actual behavior**

- When you try to pair a device in a webview, electron throws an error and force exit.
- The deviceList only contains/shows 1 device, even when there's multiple BLE devices (Chrome shows all of them).

**To Reproduce**
https://gist.github.com/4eveRS/9ade679271cc536da97b692492e048af

**Additional Information**
If there's no easy fix for this issue, is it possible to disable bluetooth support at all ?
Tried with 

```
app.commandLine.appendSwitch('enable-web-bluetooth', false);
app.commandLine.appendSwitch(""enable-experimental-web-platform-features"", false);
```

and it didn't work.",codebytere,platform/macOS;blocked/need-info 閴;bug :beetle:;4-2-x,2018-11-06T19:52:25Z,2018-11-28T16:36:01Z,4eveRS,4eveRS;codebytere;ckerr,sofianguy;ckerr,,sofianguy,,codebytere,
electron/electron,15653,"The `services` MenuItem role should not require a `submenu` **Is your feature request related to a problem? Please describe.**

The `role` property of `MenuItem` is meant to make it easier to do the correct thing. For the `services` role, it's easy to forget to add the `submenu` property, and if you don't add it, there's just not a menu. I remember seeing multiple Electron apps where this was the case. The `submenu` property is also useless boilerplate as it's just supposed to be an empty array.

**Describe the solution you'd like**

The `submenu` property should be added automatically for the `services` role.

Before:

```js
// 閳
{
	type: 'separator'
},
{
	role: 'services',
	submenu: []
},
{
	type: 'separator'
},
{
	role: 'hide'
},
// 閳
```

After:

```js
// 閳
{
	type: 'separator'
},
{
	role: 'services'
},
{
	type: 'separator'
},
{
	role: 'hide'
},
// 閳
```

**Describe alternatives you've considered**

None.

**Additional context**

No.",codebytere,bug :beetle:;4-2-x,2018-11-09T08:25:50Z,2018-11-10T17:47:56Z,sindresorhus,,alexeykuzmin,,codebytere,,codebytere,
electron/electron,15666,"window.open with nativeWindowOpen option always enables nodeIntegration even set it to false * Output of `node_modules/.bin/electron --version`: 4.0.0-beta.7
* Operating System (Platform and Version): Windows 10 1803 x64
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): no

**Expected Behavior**
A window opened with `nativeWindowOpen` option should disables `nodeIntegration` if it's set to false

**Actual behavior**
`nodeIntegration` is still enabled

**To Reproduce**
* Open a `BrowserWindow` with `nativeWindowOpen` option
* Run `open('', '', 'nodeIntegration=no')`
* There will be a deprecated warning about memory leak of `nodeIntegration`, and `window.require` is still available in the window opened.

**Screenshots**
![image](https://user-images.githubusercontent.com/8194131/48298468-6fe7f280-e501-11e8-9fd2-0c56a8379978.png)

**Additional Information**
The `nodeIntegration` option of parent window is set to true
",zcbenz,platform/windows;bug :beetle:;4-2-x,2018-11-10T06:59:13Z,2018-11-19T14:48:30Z,KochiyaOcean,zcbenz;jkleinsc;pushkin-;mehrshadFarzaneh,sofianguy,,sofianguy,,jkleinsc,
electron/electron,15774,"MediaDeviceInfo.deviceId changes a few seconds after startup * Electron version: v3.0.8 and  v4.0.0 beta.7
* Operating System (Platform and Version): macOS High Sierra Version 10.13.6 (17G65)

**Expected Behavior**
deviceId property of MediaDevicesInfo instances obtained via `navigator.mediaDevices.enumerateDevices()` should have a static deviceId during the session.

**Actual behavior**
deviceId of MediaDevicesInfo instances changes a few seconds after Electron is launched.

**To Reproduce**
Run enumerateDevices on startup and a few seconds after, then compare the deviceIds returned.

```
const listDeviceIds = () => navigator.mediaDevices.enumerateDevices()
    .then(devices => devices.map(device => device.deviceId))
    .then(console.debug);

listDeviceIds();

setTimeout(() => listDeviceIds(), 5000);
```
",BinaryMuse,platform/macOS;bug :beetle:;3-0-x;4-2-x,2018-11-20T12:44:41Z,2018-12-17T13:55:16Z,enjikaka,BinaryMuse;enjikaka,sofianguy;BinaryMuse,,sofianguy,,enjikaka,
electron/electron,15789,"Notifications posted by systemPreferences.postNotification are not delivered immediately * Output of `node_modules/.bin/electron --version`: Affects all Electron versions
* Operating System (Platform and Version): macOS 10.13.6
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): Affects all Electron versions

**Expected Behavior**

Notifications posted by [systemPreferences.postNotification](https://electronjs.org/docs/api/system-preferences#systempreferencespostnotificationevent-userinfo-macos) should be delivered to subscribers immediately no matter whether subscriber app is active or not.

**Actual behavior**

Notifications are suspended until the receiving app gets activated.

**To Reproduce**

Fiddle:
- https://gist.github.com/turbobabr/e4021ab39126e3afc8ea1cc01e99b5d0

(can be opened by [Electron Fiddle](https://github.com/electron/fiddle))

**Screenshots**

A tiny screencast explaining the problem (using the same electron app as a notification subscriber and emulating issue by deactivating the app and posting notification using global shortcut) :
![screen recording 2018-11-21 12 38 23 copy](https://user-images.githubusercontent.com/6356526/48819835-f4056a00-ed8c-11e8-922f-d9679e7c4296.gif)

**Additional Information**

[systemPreferences.postNotification](https://electronjs.org/docs/api/system-preferences#systempreferencespostnotificationevent-userinfo-macos) method uses [NSDistributedNotificationCenter](https://developer.apple.com/documentation/foundation/nsdistributednotificationcenter#1651293?language=objc) behind the scene, but it uses a wrong selector to post notifications to it.

Instead of using this selector (閴):
- [-NSDistributedNotificationCenter.postNotificationName:object:userInfo:deliverImmediately:](https://developer.apple.com/documentation/foundation/nsdistributednotificationcenter/1418360-postnotificationname?language=objc), where `deliverImmediately` is set to `TRUE`

It uses an inherited selected from a parent class (棣冩瘒):
- [-NSNotificationCenter.postNotificationName:object:userInfo:](https://developer.apple.com/documentation/foundation/nsnotificationcenter/1410608-postnotificationname?language=objc)

All this makes the powerful tool called `NSDistributedNotificationCenter`, widely used for inter-process communications - completely useless, since all the posted notifications are suspended by default and can reach external applications only in case they are active. 

**Possible solution**

I suggest that this method should use a correct `NSDistributedNotificationCenter`'s selected by default:
- https://github.com/electron/electron/blob/ec38561254c22f18166558be9737e558ad5382a0/atom/browser/api/atom_api_system_preferences_mac.mm#L86

Alternatively, it's a good idea to add additional parameter to `postNotification` method to avoid breaking changes in the behavior:
```js
systemPreferences.postNotification(event,userInfo,deliverImmediately)
// deliverImmediately: Bool - defaults to false
``` 
",codebytere,platform/macOS;bug :beetle:,2018-11-21T05:14:45Z,2018-12-14T21:46:47Z,turbobabr,,sofianguy,,codebytere,,codebytere,
electron/electron,15792,"Ubuntu file picker doesn't show file preview * Output of `node_modules/.bin/electron --version`: 3.0.10, 4.0.0-beta.7
* Operating System (Platform and Version): Ubuntu 18.04
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): N/A

**Expected Behavior**
When picking a file to upload, the file picker should show a preview of the file when applicable

**Actual behavior**
It does not show a preview...

Chrome shows a preview of the image (tested with 70 and 69).
![chrome](https://user-images.githubusercontent.com/103586/48838688-01b4f280-ed81-11e8-8b38-16d7cbab1f22.png)

Electron shows no preview
![electron](https://user-images.githubusercontent.com/103586/48838699-08dc0080-ed81-11e8-8611-6a199fba23f8.png)


**To Reproduce**
Nothing special, click on a file upload form element...
```html
<input type=""file"" />
```
Example here: https://cgi-lib.berkeley.edu/ex/fup.html",jkleinsc,beginner friendly;bug :beetle:;status/confirmed;3-0-x;4-2-x,2018-11-21T11:34:02Z,2019-02-13T16:52:15Z,Thomas101,MarshallOfSound,sofianguy;ckerr,,jkleinsc,,jkleinsc,
electron/electron,15815,"Remote debugging not working with Electron 4.x * Output of `node_modules/.bin/electron --version`:  v4.0.0-beta.7
* Operating System (Platform and Version): Windows 7/10 x64, Linux
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 3.0.10

**Expected Behavior**
Remote debugging from Chromium is available for the render processes of applications started with _**--remote-debugging-port=<_port>**_ and Chromium Dev Tools are available and work correctly.

**Actual behavior**
The remote debugger is probably connected to the render process, but no debug tools are available. Chromium shows a blank page.

**To Reproduce**
Start Electron with the remote debuging option (**electron . --remote-debugging-port=<_port>**) and connect to it from Chromium by navigating to 127.0.0.1:<_port>.
With Electron 4.x you will see a blank page. With version 3.x you will see the Chromium Dev Tools UI.

**Additional Information**
Part of the remote debugging functionality still works, e.g. with JetBrains IDEs you can connect to the render process add get console output, variables, and set breakpoints (sometimes 棣冦亙  ).",nornagon,platform/windows;platform/linux;bug :beetle:;4-2-x,2018-11-23T12:52:06Z,2018-11-27T19:18:19Z,gorunovanton,nornagon,nornagon;sofianguy,,nornagon,,nornagon,
electron/electron,15816,"BrowserWindow size changed on its own * Output of `node_modules/.bin/electron --version`: v3.0.10
* Operating System (Platform and Version): Windows 10 x64 (1803  17134.345)
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable):
v3.0.10
**Expected Behavior**
I would like to see the window move across the screen.

**Actual behavior**
The window moves around the screen. But first, the height of the window decreases.

**To Reproduce**
Write simple program that contains code:
`
mainWindow = new BrowserWindow({ width: 370,
		height: 270,
		x: 100,
		y: 100,
		resizable: false,
	 });
`
Start app. Grab the window with the mouse for its title and drag across the screen.

**Additional Information**
This error occurs when explicitly specifying the x, y coordinates of the window and the option ""resizable: false"".
",brenca,platform/windows;bug :beetle:;status/confirmed;3-0-x;4-2-x,2018-11-23T13:00:11Z,2019-01-31T02:19:48Z,heretic13,heretic13;roblade,sofianguy;brenca,,brenca,,zcbenz,
electron/electron,15911,"BrowserWindow.getNativeWindowHandle() returns same value in different BrowserWindow * Output of `node_modules/.bin/electron --version`: 4.0.0-beta.8
* Operating System (Platform and Version): Windows 10 1803
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 4.0.0-beta.7

**Expected Behavior**
`BrowserWindow.getNativeWindowHandle()` should return different value for different window

**Actual behavior**
`BrowserWindow.getNativeWindowHandle()` returns same value for different window, which is not true nativeWindowHandle for any of them.

**To Reproduce**
Open two `BrowserWindow`, and run `getNativeWindowHandle` on both `BrowserWindow`
```js
const { remote } = require('electron')
w1 = new remote.BrowserWindow()
w2 = new remote.BrowserWindow()
console.log(w1.getNativeWindowHandle(), w2.getNativeWindowHandle())
```
![image](https://user-images.githubusercontent.com/8194131/49328509-7411a800-f5b5-11e8-9a24-827aa589d937.png)

",zcbenz,platform/windows;bug :beetle:;4-2-x;3-1-x,2018-12-01T13:10:27Z,2018-12-11T17:45:56Z,KochiyaOcean,estoykov;pnpetrov;alexeykuzmin,sofianguy;alexeykuzmin,,ckerr,,jkleinsc,
electron/electron,16015,"macOS: Window size is not respected * Output of `node_modules/.bin/electron --version`: 3.0.11
* Operating System (Platform and Version): macOS 10.14.2
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 2.0.x

**Expected Behavior**
The size of a window is applied.

**Actual behavior**
The size of the window is not applied.

**To Reproduce**
* Use a fiddle and simply configure the window like this: `new BrowserWindow({x: 0, y: 23, width: 1680, height: 1328})`
* 棣冩偘 the window opens ~20px smaller than that (both in width and height)

This does not reproduce with 2.0.x
This does not reproduce when a `titlebarStyle:hidden`.
This does not reproduce with `useContentSize: true`",zcbenz,platform/macOS;bug :beetle:;3-0-x;3-1-x,2018-12-11T06:31:10Z,2019-01-24T01:42:34Z,bpasero,bpasero;zcbenz,sofianguy;zcbenz,,zcbenz,,zcbenz,
electron/electron,16029,"Inconsistent reporting of offline storage quota **Expected Behavior**
According to all documentation I can find, including Issue #4550, Electron should have 1/3 of free space available for offline storage.  In addition, our apps should only be able to use 20% of that, per https://developer.chrome.com/apps/offline_storage#table.  

**Actual behavior**
I run the following code inside my Electron app:
```
const estimation = await navigator.storage.estimate();
console.log(`Quota: ${estimation.quota}`);
console.log(`Usage: ${estimation.usage}`);
``` 
and it reports that I actually have 100% of my free disk space available (i.e my 200GB drive has 105 GB free, and the code reports 105 GB available for use).  I've tried this on multiple machines with 3 different Electron apps and it is consistent.  

If it matters, I'm specifically interested in IndexedDb.

**To Reproduce**
Run the above code inside any Electron app (either in the app or just in the console inside the renderer process).  Compare the results to the actual free space on your drive.

**Additional Information**
Primarily, I'm just looking for a clarification on whether what I'm seeing in the code is correct, that we have 100% of free disk space, or whether the documentation is correct and the code incorrect.  Secondarily, I'd like to know if Electron will ever evict my data (specifically IndexedDb).

Thanks.
",zcbenz,bug :beetle:,2018-12-12T02:53:45Z,2020-12-10T07:34:31Z,mann-david,BitPhoenix;lvkins;mann-david;elrDevelopment;jacobq;zcbenz;ccorcos,,,,,zcbenz,
electron/electron,16241,"Electron 4.0.0 - webview.capturePage returns empty object. * Output of `node_modules/.bin/electron --version`: 4.0.0
* Operating System (Platform and Version): Windows 10
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 3.0.13

**Expected Behavior**
[`webview.capturePage(callback)`](https://electronjs.org/docs/api/webview-tag#webviewcapturepagerect-callback) should invoke the callback with a NativeImage.

**Actual behavior**
`webview.capturePage(callback)` invokes the callback with an empty/plain object.

**To Reproduce**
See [this gist](https://gist.github.com/wjhir/c8cb4497c9c2ce2ec4d0262b285584eb#file-renderer-js).

**Additional Information**
`webview.getWebContents().capturePage(callback)` still works as expected.
",miniak,platform/windows;bug :beetle:;5-0-x;7-0-x;8-x-y;6-1-x;7-1-x,2019-01-02T22:26:00Z,2019-11-12T20:56:18Z,wjharney,Tinysymphony;vsanse,sofianguy;miniak,miniak,miniak,,alexeykuzmin,
electron/electron,16417,"Vibrancy should not default to active state * Output of `node_modules/.bin/electron --version`: v4.0.1
* Operating System (Platform and Version): macOS 10.14.2

**Expected Behavior**

The default behavior of native macOS apps with vibrancy is to disable the vibrancy when the window is inactive. This makes it easier for the user to see the active app.

**Actual behavior**

Electron apps have the vibrancy forced to always be active since Electron manually sets the state to [`NSVisualEffectStateActive`](https://developer.apple.com/documentation/appkit/nsvisualeffectstate/nsvisualeffectstateactive?language=objc): https://github.com/electron/electron/blob/52fe92d02ef94712fc7b19b3f03d3363cfa71a4d/atom/browser/native_window_mac.mm#L1272

Electron should instead default to `NSVisualEffectStateFollowsWindowActiveState`, which is the default.

Electron could let the user optionally override this behavior through `BrowserWindow({vibrancyState: 'active'})` and `win.setVibrancy('sidebar', {state: 'active'})`.

**To Reproduce**

Nothing to reproduce. The docs are clear on this one.

**Additional Information**

More info here: https://github.com/sindresorhus/caprine/issues/701",codebytere,platform/macOS;bug :beetle:;4-2-x;10-x-y,2019-01-16T08:36:13Z,2020-07-13T19:40:38Z,sindresorhus,electron-triage;sindresorhus,sofianguy;electron-triage,electron-triage,codebytere,,codebytere,
electron/electron,16418,"Top of window with ""hiddenInset"" title bar becomes unresponsive after exiting fullscreen * Output of `node_modules/.bin/electron --version`: v4.0.1
* Operating System (Platform and Version): macOS 10.14.2

**Expected Behavior**
The top of the window should continue responding to clicks after exiting from fullscreen.

**Actual behavior**
The top ~40px stops responding to clicks after exiting from fullscreen. 

**To Reproduce**
1. Clone and run https://github.com/javan/electron-quick-start/tree/hidden-inset-mojave
1. Click the black bar at the top of the window. It should turn purple while the mouse is down.
1. Enter and exit fullscreen.
1. Click the top of the window and note that it no longer turns purple.

```
$ git clone https://github.com/javan/electron-quick-start.git -b hidden-inset-mojave
$ npm install
$ npm start
```

**Screenshots**
![electron-fullscreen-clicks](https://user-images.githubusercontent.com/5355/51252742-93e50b80-196a-11e9-977d-13da6324bf1a.gif)

**Additional Information**
This issue is quite similar to https://github.com/electron/electron/issues/14529.",codebytere,platform/macOS;bug :beetle:;app-feedback-program;4-2-x,2019-01-16T13:46:11Z,2019-03-21T19:27:38Z,javan,olafuria;littlecold233;nathanlesage;issacgerges;circleapps;codebytere;knopp,javan;sofianguy,,codebytere,,codebytere,
electron/electron,16428,"electron v4 webview h5 requestFullscreen not work * Output of `node_modules/.bin/electron --version`: v4.0.1
* Operating System (Platform and Version): Mac OS 10.14.2
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): v3.0.13

**Expected Behavior**
H5 requestFullscreen trigger this webview fullscreen.

**Actual behavior**
````
let webview = document.querySelectorAll('webview')[0]
webview.addEventListener('enter-html-full-screen', (e)=>{
    console.log(e)
})
````
'enter-html-full-screen' will triggered, but fullscreen not work

**To Reproduce**
I made a repository with multiple examples to the described behavior.

```sh
$ git clone https://github.com/yangfan1018/electron-webview-fullscreen-test.git
$ npm install
$ npm start || electron .
```
**Screenshots**
![image](https://user-images.githubusercontent.com/26080517/51304793-07267480-1a74-11e9-8f2e-9ce408d0b983.png)


**Additional Information**
Add any other context about the problem here.
",miniak,bug :beetle:;4-2-x,2019-01-17T08:25:54Z,2019-10-08T18:07:13Z,yangfan1018,littlecold233;maxosprojects;guilhermewaess;zikosichi;torycl;miniak,sofianguy,miniak,miniak,,miniak,
electron/electron,16521,"""win.setMenu(null)"" did not hide the window menu bar * Output of `node_modules/.bin/electron --version`: **v4.0.1**
* Operating System (Platform and Version):
  * OS: **Linux, Xubuntu (Ubuntu)**.
  * Version: **18.04.1 LTS (Bionic Beaver)**.
  * Kernel version: **4.15.0-43-generic**
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): **v5.0.1**

**Procedure**
I put `win.setMenu(null)` directly under the browser window creation/declaration:
```
// Create the browser window.
win = new BrowserWindow({ width: 800, height: 600 })

// Hide the menu bar
win.setMenu(null)

...
```

**Expected Behavior**
I expected the menu bar to be hidden at window creation.

**Actual behavior**
The menu was still showing.
",zcbenz,platform/linux;bug :beetle:,2019-01-23T21:45:56Z,2020-11-19T07:25:20Z,ghoomfrog,algernon;codebytere;hhyyrylainen;vasyl-shumskyi;TheBoneJarmer;Naphier;whyboris;cmgcomsol;andmm;benjhess;johannesjo;Ajeey;joehonton;zcbenz;ruinb0w;fxha;ghoomfrog;josephpei,sofianguy,codebytere,,,zcbenz,
electron/electron,16631,"electron@5.0.0-beta.1 fails with error: No usable sandbox! electron: 5.0.0-beta.1
platform: linux x64

**Actual behavior**

https://github.com/electron/electron-quick-start app fails to start with the following error:
```
[3937:0131/003107.790938:FATAL:zygote_host_impl_linux.cc(116)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.
```

**To Reproduce**

- `git clone https://github.com/electron/electron-quick-start.git`
- `cd electron-quick-start`
- `npm install`
- `npm add --only=dev electron@5.0.0-beta.1`
- any of the following commands fail:
  - `npm start`
  - `node_modules/.bin/electron --version`

**Additional Information**

Worth to mention that event just `node_modules/.bin/electron --version` execution fails with the same error.

CC @nornagon",nornagon,platform/linux;bug :beetle:;5-0-x,2019-01-30T21:44:02Z,2019-03-08T21:10:27Z,vladimiry,nornagon;vladimiry;sebakerckhof;MarshallOfSound,sofianguy,,,,nornagon,
electron/electron,16712,"Issues with process.getProcessMemoryInfo(): Return type is a Promise * Output of `node_modules/.bin/electron --version`: 4.0.4
* Operating System (Platform and Version): macOS 10.14.1
* Output of `node_modules/.bin/electron --version` on last known working Electron version (if applicable): 3.0.x

**Expected Behavior**
`process.getProcessMemoryInfo()` should work as documented

**Actual Behavior**
`process.getProcessMemoryInfo()` seems to be returning a `Promise` (and not a type directly as documented in `electron.d.ts`).

Also, `residenSet` should be made optional as it does not seem to be implemented for macOS.

//cc @alexeykuzmin 
",MarshallOfSound,platform/macOS;bug :beetle:;4-2-x,2019-02-04T07:52:26Z,2019-03-28T22:03:44Z,bpasero,MarshallOfSound,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,16747,"Setting a MenuItem to visible: false also disables it * **Electron Version** (output of `node_modules/.bin/electron --version`):
  * 4.0.4
* **Operating System** (Platform and Version):
  * macOS 10.14.3
* **Last known working Electron version** (if applicable):
  * unknown

### Expected Behavior
Setting a MenuItem to `visible: false` will hide it from the menu but **not** disable it.

See documentation https://electronjs.org/docs/api/menu-item

### Actual behavior
MenuItem is hidden AND disabled

### To Reproduce
https://github.com/aaronraimist/electron-quick-start/tree/visible-false

There should be one menu item visible (zoomin) and zoom out should also work but it doesn't.
(my issue is with zoomin but since that is kind of broken I did the demo with zoomout)

Menu code looks like
```
const template = [
  {
    label: 'View',
    submenu: [
	  { role: 'zoomin' },
      { role: 'zoomout', visible: false },
    ],
  }
]
```

```sh
# Clone this repository
git clone https://github.com/electron/electron-quick-start
# Go into the repository
cd electron-quick-start
# Checkout branch
git checkout visible-false
# Install dependencies
npm install
# Run the app
npm start
```

### Additional Information

I'm trying to work around https://github.com/electron/electron/issues/15496 by creating two menu items, one visible and one invisible but it doesn't work. See https://github.com/vector-im/riot-web/pull/8381",codebytere,platform/macOS;bug :beetle:;4-2-x,2019-02-05T19:15:31Z,2019-02-28T17:00:56Z,aaronraimist,codebytere;aaronraimist,sofianguy,,codebytere,,codebytere,electron/electron#15496;
electron/electron,17007,"Fetching google.com through the node.js request module crashes randomly on Electron 5 * **Electron Version**:
  * 5.0.0-beta (all)
* **Operating System**:
  * Ubuntu 18.10, Linux 4.18, x64
* **Last known working Electron version** (if applicable):
  * 4.0.5

### Expected Behavior
Google API should work as it they are meant to.

### Actual behavior
Any Google API calls may crash renderer process (even if they are run on Worker thread).
The request may be done and the answer given, but immediately or after several seconds the renderer process may crash.

### To Reproduce
```sh
$ git clone https://github.com/ruslang02/youtube-electron-crash-example
$ npm install electron@beta
$ npm start || electron .
```
Version 5 will randomly crash, version 4: doesn't

### Additional Information
May be a Node.JS bug, but not sure
",zcbenz,bug :beetle:;5-0-x,2019-02-16T17:46:26Z,2019-04-08T08:11:03Z,ruslang02,ghost;ruslang02;zcbenz,sofianguy,zcbenz,nornagon,,zcbenz,
electron/electron,17034,"[Bug] Linux Flash Plugin not loading * **Electron Version**: 
  * v5.0.x
* **Operating System** 
  * Linux (Ubuntu 18.10 x64)
* **Last known working Electron version**: 
  * v4.0.x

### Expected Behavior
Flash Plugin should load.

### Actual behavior
Flash Plugin does not load.

### Additional info
The Flash Player under Linux never worked in a mixed-sandbox or (full-)sandbox environment. As of v5.0.x, mixed-sandbox is forced. This prevents the plugin from loading.

### To Reproduce
[app.zip](https://github.com/electron/electron/files/2877526/app.zip)

",nornagon,platform/linux;bug :beetle:;5-0-x,2019-02-18T22:03:35Z,2019-04-16T22:32:38Z,GhostlyDark,nornagon;GhostlyDark,nornagon;sofianguy,,sofianguy,,nornagon,
electron/electron,17064,"[mac] The `close` MenuItem role is incorrect when tabbingIdentifier is present * **Electron Version** (output of `node_modules/.bin/electron --version`):
  * 5.0.0-beta.3 and 4.0.5
* **Operating System** (Platform and Version):
  * macOS 10.14.3
* **Last known working Electron version** (if applicable):
  * None

### Expected Behavior

I expected the label for `{role: 'close'}` to be `Close   閳辨僠 by default and `Close Window   閳辨僠 if the active window has native tabs enabled (Meaning `tabbingIdentifier` set in BrowserWindow).

You can confirm this behavior in system apps. Notes.app has no tabs and it's `Close`, while Maps.app has tabs and it's `Close Window`.

### Actual behavior

The label is always `Close Window   閳辨僠.",codebytere,platform/macOS;bug :beetle:;4-2-x;5-0-x;8-x-y;blocked/need-repro;12-x-y,2019-02-20T11:15:20Z,2022-03-09T21:15:33Z,sindresorhus,electron-triage;sindresorhus;nornagon,sofianguy;electron-triage;nornagon,electron-triage,codebytere,,nornagon,
electron/electron,17069,"Set url after window.open does not works with nativeWindowOpen in isolated context * **Electron Version**:
4.0.4
* **Operating System**:
macOS 10.14.3
* **Last known working Electron version**:
3.1.4

### Expected Behavior

Setting an URL for the opened window in an isolated world context with `nativeWindowOpen` flag should trigger navigation to the given URL like in the top context.

<img width=""559"" alt=""screenshot 2019-02-20 at 16 13 52"" src=""https://user-images.githubusercontent.com/823630/53101753-abe01a00-352a-11e9-91aa-cc49cdb87dfb.png"">

### Actual behavior

Setting the URL trigger a type error.

<img width=""548"" alt=""screenshot 2019-02-20 at 16 14 37"" src=""https://user-images.githubusercontent.com/823630/53101768-b0a4ce00-352a-11e9-8093-6a64f02eb940.png"">

### To Reproduce

```sh
$ git clone https://github.com/getstation/electron-chrome-extension
$ npm install
$ npm start
```

Webview dev tool console in top context
```js
const newWin = window.open('')
newWin.location = 'https://google.com' // it works
```

Webview dev tool console in extension context
```js
const newWin = window.open('')
newWin.location = 'https://google.com' // it does not works
```
",nitsakh,platform/macOS;bug :beetle:;4-2-x,2019-02-20T15:16:44Z,2020-02-19T20:56:57Z,hugomano,nitsakh;electron-triage,sofianguy,,nitsakh,,electron-triage,
electron/electron,17132,"Clicking link with target=_blank does not fire 'new-window' event with Sandbox Enabled * **Electron Version** (output of `node_modules/.bin/electron --version`):
  * 3.0.6
* **Operating System** (Platform and Version):
  * macOS 10.14

### Expected Behavior
a `new-window` event fires

### Actual behavior
a `did-fail-load` fires with errorCode -3

### To Reproduce
```sh
$ git clone git@github.com:chrismohr/no-new-window.git -b master
$ cd no-new-window/
$ npm i && npm start
```
",miniak,platform/macOS;bug :beetle:;3-0-x,2019-02-26T02:06:35Z,2019-05-27T00:44:55Z,chrismohr,chrismohr,sofianguy,,miniak,,alexeykuzmin,
electron/electron,17140,"Using offscreen on some websites makes app to crash * **Electron Version:**
  `4.0.4`
* **Operating System:**
  `macOS 10.14.3`

### Actual Behavior
App crash when using `offscreen: true` on some websites.

### To Reproduce
```js
const win = new BrowserWindow({
  visible: true,
  webPreferences: {
    offscreen: true
  }
});
win.webContents.loadURL(""http://www.4dreplay.com"");
```

I don't have right now more websites to report, but I saw that this happens not only navigating to `http://www.4dreplay.com`",brenca,platform/macOS;blocked/need-info 閴;bug :beetle:;4-2-x,2019-02-26T16:45:03Z,2020-02-26T20:33:52Z,btzsoft,btzsoft;brenca;electron-triage,sofianguy;electron-triage,,brenca,,electron-triage,
electron/electron,17189,"session.getCacheSize dose not work * **Electron Version:**
  * 3.1.4 and 4.0.6
* **Operating System:**
  * Arch Linux 4.20.13-arch1-1-ARCH x86_64
* **Last Known Working Electron version:**
  * 2.0.17

### Expected Behavior

get cache size using

```js
const {BrowserWindow} = require('electron')
const w = new BrowserWindow
w.loadURL('https://electronjs.org')
w.webContents.session.getCacheSize(size => {
  console.log(size) // -> output some random cache size, eg. 669451
})
```

### Actual Behavior

Can't get cache size, the callback never invoked.

### To Reproduce

make a temp test directory and do as follows:

```console
npm init -y
npm i electron@3 # or npm i electron@4
npx electron -i
> const {BrowserWindow} = require('electron')
undefined
> const w = new BrowserWindow
undefined
> w.loadURL('https://electronjs.org')
true
> w.webContents.session.getCacheSize(consloe.log)
undefined
# no cache size output here ...
```

### Additional Information

this problem may exist since 3.0
",codebytere,platform/linux;bug :beetle:;4-2-x;5-0-x;3-1-x,2019-03-01T17:55:11Z,2019-07-15T16:40:57Z,rocka,codebytere;simongregory,sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,17195,"Float64Array is converted to Uint8Array when sent over IPC * **Electron Version:**
v1.8.8, v3.1.4, v4.0.6
* **Operating System:**
  *  Windows 10 (1803)

### Expected Behavior
Float64Array and other Typed Arrays should preserve their type and correct values.

### Actual Behavior
Main process sends an object with multiple `Float64Array` instances, Renderer gets all of them converted byte-wise to `Uint8Array`.

P.S. With electron 1.7.16 it was converted to `Array` with correct values.

May be related to #13055 or #6572",miniak,bug :beetle:;4-2-x;3-1-x,2019-03-02T01:08:01Z,2019-10-29T23:19:53Z,vshymanskyy,miniak;MrNovado,sofianguy,miniak,miniak,,miniak,
electron/electron,17207,"Accessibility: VoiceOver Can't Find Web Content If you Stop Interact * **Electron Version:** 4.0.6
* **Operating System:** macOS 10.14.3

### Expected Behavior
If you stop interact with everything and go to the top level, VoiceOver should be able to find the main web content area and be able to interact with it again.

### Actual Behavior
VoiceOver only sees close, minimize, full screen buttons.

### To Reproduce
Just run the electron-quick-start example.

$ git clone https://github.com/electron/electron-quick-start

$ npm start

### Additional Information
Upon launching the app, VoiceOver will say Hello World Web Content.

From that point, you can immediately interact with the web content with vo(control+option)+shift+down, and then review the content with vo+left/right.

However, if you stop interact with the web content with vo+shift+up, you cannot get back into the web content area. VoiceOver only sees close, minimize, full screen buttons.

Only way is to restart the app.",felixrieseberg,platform/macOS;bug :beetle:;4-2-x;a11y;8-x-y;7-1-x;9-x-y,2019-03-03T16:39:13Z,2020-03-02T02:25:41Z,chigkim,kloots;felixrieseberg,sofianguy;felixrieseberg,,felixrieseberg,,zcbenz,
electron/electron,17225,"Calling menu.insert with invalid position causes crash * **Electron Version:** `3.0.15`, `4.0.6`
* **Operating System:** Windows 10

### Expected Behavior
Calling `menu.insert(pos, item)` should not cause electron to crash, even if the passed values are invalid.

### Actual Behavior
Calling `menu.insert(pos, item)` with an integer outside the range `[0, menu.items.length]` (for `insert*` methods) or `[0, menu.items.length)` (for `get*At` and `is*At` methods) causes electron to crash. Non-integer values throw as expected. Large integers `>= 2**31` also throw, rather than crashing.

### To Reproduce
```javascript
const electron = require('electron')
const { Menu, MenuItem } = electron.remote || electron
const menu = new Menu()
const item = new MenuItem({})
const pos = -1 // or any pos != 0
menu.insert(pos, item)
// The following undocumented methods also cause a crash:
menu.insertCheckItem(pos, item.commandId, item.label)
menu.insertItem(pos, item.commandId, item.label)
menu.insertRadioItem(pos, item.commandId, item.label, item.groupId)
menu.insertSeparator(pos)
menu.insertSubMenu(pos, item.commandId, item.label, item.submenu)
menu.getAcceleratorTextAt(pos)
menu.getCommandIdAt(pos)
menu.getLabelAt(pos)
menu.getSublabelAt(pos)
menu.isEnabledAt(pos)
menu.isItemCheckedAt(pos)
menu.isVisibleAt(pos)
```
",codebytere,platform/windows;bug :beetle:;3-0-x;4-2-x,2019-03-05T00:02:14Z,2019-03-18T14:58:43Z,wjharney,,sofianguy,,codebytere,,codebytere,
electron/electron,17246,"Registering global shortcuts not working from v5.0.0-beta.3 * **Electron Version:**
  * v5.0.0-beta.3 - v5.0.0-beta.5
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**:
  * v5.0.0-beta.2

### Expected Behavior
This should work, and registered must be assigned true:

    registered = globalShortcut.register(""Super+Alt+Up"", function () { console.log(""hotkey!!"")})

### Actual Behavior
Shortcut is not registered, for no key combinations as far as I can tell. Return value is always false.

### To Reproduce
Just run the code line above.",codebytere,platform/windows;bug :beetle:;5-0-x,2019-03-06T15:13:04Z,2019-03-28T18:15:24Z,ErnestoGarciaGenesys,brenca,sofianguy,,codebytere,,MarshallOfSound,
electron/electron,17260,"webContents.print() doesn't work under Windows when 'deviceName' is provided * **Electron Version** 4.0.7
* **Operating System** Windows 10 32 bit
* **Last known working Electron version** 3.1.3

### Expected Behavior
`webContents.print()` should send print a job to the specified printer

### Actual behavior
Nothing happens. Callback gets called much latter, for example on program exit.

`printToPDF` works though.

### To Reproduce
```
let deviceName = 'HP LaserJet 1020'
let options = {deviceName, silent: true}
win.webContents.print(options, (err) => {
  if (!err)
    console.error('printing failed')
})
```

Related to #16792
",codebytere,platform/windows;bug :beetle:;4-2-x,2019-03-07T09:15:09Z,2019-06-24T21:40:44Z,gozzoo,popod;gozzoo;shabeer-mdy;Infinita740;azh117;codebytere;AkifB37,sofianguy,,codebytere,,codebytere,
electron/electron,17265,"webContents.print() callback always return false * **Electron Version:**
  * 4.0.7
* **Operating System:**
  * macOS Mojave
* **Last Known Working Electron version:**:
  * 3.0.14

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

When calling

```js
webContents.print({}, function (success) {
  console.log(success)
})
```

`success` always return `false`, even when the page is printing correctly !

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

The `webContents.print({}, callback)`, should return `true` when the print is successful !

### To Reproduce

```sh
$ git clone https://github.com/popod/electron-quick-start.git
$ cd electron-quick-start
$ git checkout print-bug-1
$ npm install
$ npm start
```

When the application is run, the print window is displayed and pressing the print button launch the printer, but the callback always return `false` (this is displayed in the devTools console)",codebytere,platform/macOS;bug :beetle:;4-2-x,2019-03-07T15:47:51Z,2019-06-12T19:34:08Z,popod,popod;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,17341,"Context menu closes without callback * **Electron Version:**
4.0.7, 4.0.8

* **Operating System:**
Linux, macOS 10.14.13

### Expected Behavior
I would expect a context menu opened via `.popup()` to stay open when there is no further user interaction. When it does close, it should always fire the respective event / callback.

### Actual Behavior
The context menu often closes, seemingly randomly. When disappearing this way, neither the callback not the `menu-will-close` event is triggered. In one Electron app I've noticed this reliably on both Linux and macOS after about 10 seconds of inactivity; sometimes (typically right after start-up) even quicker. In the minimal repro below it takes longer, but still less than a minute.

### To Reproduce
This might be tricky to reproduce. Use this [minimal test case](https://github.com/electron/electron-quick-start/compare/master...inukshuk:menu-close-issue) based on electron-quick-start. This pops up a menu at start-up. On macOS / 4.0.7 the menu disappears for me in under one minute, without triggering the respective event/callback. (If I close the menu via clicking, Escape, or switching focus to a different window the event/callback fire reliably.) If I switch the application after the menu has disappeared and then return to the quick start window, sometimes the event/callback will be triggered at that point.

### Additional Information

Might be related to #13934 and #17292",codebytere;MarshallOfSound,platform/macOS;platform/linux;bug :beetle:;4-2-x,2019-03-11T20:41:04Z,2019-05-14T15:40:56Z,inukshuk,MarshallOfSound;inukshuk,sofianguy,,MarshallOfSound,,inukshuk,
electron/electron,17348,"[5.0.0-beta5] Inspect port argument ignored * **Electron Version:**
  * 5.0.0-beta5
* **Operating System:**
  * Windows 10 (1803) x64, Raspberry Pi Debian Stretch
* **Last Known Working Electron version:**:
  * 3.0.3

### Expected Behavior
Starting electron with --inspect=XXXX or --inspect-brk=XXXX should open the port XXXX for connecting with a debugger that supports the inspect protocol (e.g. VS Code).

### Actual Behavior
If --inspect=XXXX or --inspect-brk=XXXX is supplied the opened port is always 9229 regardless of the supplied port XXXX. Depending on --inspect or inspect-brk the application starts or waits. Without supplying either no port is opened

### To Reproduce
Start electron with the arguments stated above.",MarshallOfSound,platform/windows;platform/linux;bug :beetle:;5-0-x,2019-03-12T08:31:27Z,2019-03-18T16:19:33Z,PaulFreund,,sofianguy,,sofianguy,,MarshallOfSound,
electron/electron,17354,"Chromedriver for electron 5.0.0-beta.5 not connecting * **Electron Version:**
  * 5.0.0.beta-5
* **Electron Chromedriver-Version:**
  * 5.0.0.beta-5 (""2.45 (00a4da87a0fd24ec00619a53266498ff75ea033d)"")
* **Operating System:**
  * macOS 10.12.6, same issues on win64 and linux64

### Expected Behavior
The electron-app should start and the the chromedriverdriver should connect

### Actual Behavior
The electron-app starts and the driver does not connect but fails with the general error ""DevToolsActivePort file doesn't exist""

### To Reproduce
Using Java and current Selenium bindings:
```java
System.setProperty(""webdriver.chrome.driver"",""/Users/pascal/Downloads/chromedriver-v5.0.0-beta.5-darwin-x64/chromedriver"");

ChromeOptions options = new ChromeOptions();
options.setBinary(""/data/common/electron/CarConfig 5.0.0-beta.5.app/Contents/MacOS/CarConfig"");
WebDriver driver = new ChromeDriver(options);
System.out.println(""I'm fine""); // Never reaches that point
driver.quit();
```

### Additional Information
Verbose Chromedriver log:
```
[1552406650.692][INFO]: [d79dce940eda52287dc2c3688c4f1556] COMMAND InitSession {
   ""capabilities"": {
      ""firstMatch"": [ {
         ""browserName"": ""chrome"",
         ""goog:chromeOptions"": {
            ""args"": [  ],
            ""binary"": ""/data/common/electron/CarConfig 5.0.0-beta.5.app/Contents/MacOS/CarConfig"",
            ""extensions"": [  ]
         }
      } ]
   },
   ""desiredCapabilities"": {
      ""browserName"": ""chrome"",
      ""goog:chromeOptions"": {
         ""args"": [  ],
         ""binary"": ""/data/common/electron/CarConfig 5.0.0-beta.5.app/Contents/MacOS/CarConfig"",
         ""extensions"": [  ]
      }
   }
}
[1552406650.693][INFO]: Populating Preferences file: {
   ""alternate_error_pages"": {
      ""enabled"": false
   },
   ""autofill"": {
      ""enabled"": false
   },
   ""browser"": {
      ""check_default_browser"": false
   },
   ""distribution"": {
      ""import_bookmarks"": false,
      ""import_history"": false,
      ""import_search_engine"": false,
      ""make_chrome_default_for_user"": false,
      ""skip_first_run_ui"": true
   },
   ""dns_prefetching"": {
      ""enabled"": false
   },
   ""profile"": {
      ""content_settings"": {
         ""pattern_pairs"": {
            ""https://*,*"": {
               ""media-stream"": {
                  ""audio"": ""Default"",
                  ""video"": ""Default""
               }
            }
         }
      },
      ""default_content_setting_values"": {
         ""geolocation"": 1
      },
      ""default_content_settings"": {
         ""geolocation"": 1,
         ""mouselock"": 1,
         ""notifications"": 1,
         ""popups"": 1,
         ""ppapi-broker"": 1
      },
      ""password_manager_enabled"": false
   },
   ""safebrowsing"": {
      ""enabled"": false
   },
   ""search"": {
      ""suggest_enabled"": false
   },
   ""translate"": {
      ""enabled"": false
   }
}
[1552406650.693][INFO]: Populating Local State file: {
   ""background_mode"": {
      ""enabled"": false
   },
   ""ssl"": {
      ""rev_checking"": {
         ""enabled"": false
      }
   }
}
[1552406650.695][INFO]: Launching chrome: /data/common/electron/CarConfig 5.0.0-beta.5.app/Contents/MacOS/CarConfig --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --force-fieldtrials=SiteIsolationExtensions/Control --ignore-certificate-errors --load-extension=/var/folders/j3/glwdgbj17jl3l1k1ps2tb34m000172/T/.org.chromium.Chromium.hDJyng/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=/var/folders/j3/glwdgbj17jl3l1k1ps2tb34m000172/T/.org.chromium.Chromium.Xxy1Ub data:,

DevTools listening on ws://127.0.0.1:52569/devtools/browser/bc197ed7-3033-40fb-8a28-67cb2107dd58
[1552406710.734][INFO]: Failed to connect to Chrome. Attempting to kill it.
[1552406710.903][INFO]: [d79dce940eda52287dc2c3688c4f1556] RESPONSE InitSession ERROR unknown error: DevToolsActivePort file doesn't exist
[1552406710.903][DEBUG]: Log type 'driver' lost 0 entries on destruction
[1552406710.903][DEBUG]: Log type 'browser' lost 0 entries on destruction
```",MarshallOfSound,platform/macOS;bug :beetle:;5-0-x,2019-03-12T16:07:20Z,2019-04-16T18:22:52Z,pbi-qfs,tvainio;MarshallOfSound;pbi-qfs,sofianguy;MarshallOfSound,MarshallOfSound,sofianguy,,MarshallOfSound,
electron/electron,17369,"PiP Window is not created - v5.0.X * **Electron Version:**
  5.0.5-beta.5
* **Operating System:**
  MacOS Mojave 10.14.3
* **Last Known Working Electron version:**:
 Never worked I guess...

### Expected Behavior
PiP was introduced in Chromium at version 70, and should create a new window detached to the current window, with the video playing on it.

### Actual Behavior
The video is detached to be played in a PiP, and a window is created with dimensions of 0x0px.
You can play it, and the audio will work, but the video is not presented to the user.

### To Reproduce
Simply load this URL on any electron v5.0.X

https://googlechrome.github.io/samples/picture-in-picture/

It will show it is supported and the output in the page shows that a window is created.

![Captura de Tela 2019-03-13 a铏乻 11 26 22](https://user-images.githubusercontent.com/4212200/54286575-dac63a80-4582-11e9-9ed2-b424771c6f7a.png)
",brenca,platform/macOS;bug :beetle:;5-0-x,2019-03-13T14:28:18Z,2019-08-22T10:17:52Z,4eveRS,,sofianguy,,brenca,,zcbenz,
electron/electron,17388,"Menu role ""recentDocuments"" doesn't work * **Electron Version:**
  * 4.0.0 - 4.1.0
* **Operating System:**
  * macOS 10.14.2
* **Last Known Working Electron version:**:
  * 3.1.6

### Expected Behavior
The ""Open Recent"" menu should work just like any other application.

### Actual Behavior
The ""Open Recent"" menu is greyed out and unable to click.

### To Reproduce
Just add a `recentDocuments` menu item to the menu bar

### Screenshots
3.1.5:
![9AB36EF4-6274-4F61-9C29-82924F4BC513](https://user-images.githubusercontent.com/567110/54403492-27d51880-470b-11e9-9674-93c3bbd57686.jpg)

After 4.0:
![7FD96935-796F-4947-A0AC-8ED2243D3B75](https://user-images.githubusercontent.com/567110/54403504-31f71700-470b-11e9-89d5-93c37d2691a1.jpg)

### Additional Information
The `recentDocuments` menuItem simply fails to work after an upgrade to 4.0, without any code modification. 

The `Clear Menu` item shown in the v3.1.5 screenshot is a custom submenu of `recentDocuments`. The issue still exists even if I leave the submenu of `recentDocuments` empty.",codebytere,platform/macOS;bug :beetle:;4-2-x,2019-03-15T02:19:25Z,2019-03-21T15:00:19Z,WarWithinMe,codebytere;WarWithinMe,sofianguy;MarshallOfSound,,codebytere,,codebytere,
electron/electron,17502,"Pressing escape confirms `window.confirm` dialog * **Electron Version:**
  * v4.0.1
* **Operating System:**
  * macOS 10.13.6

### Expected Behavior
When you press the escape key on a confirm dialog, it should be the same as pressing cancel.

### Actual Behavior
When you press escape, it presses ""OK"". This has the potential to be pretty dangerous, as it may continue with a destructive action the user had not intended.

### To Reproduce

Open a window.confirm, then press escape.

### Additional Information

This seems to be due to [this line](https://github.com/electron/electron/blob/master/atom/browser/atom_javascript_dialog_manager.cc#L79), where `cancelId`([5th argument](https://github.com/electron/electron/blob/master/atom/browser/ui/message_box_mac.mm#L97)) is hardcoded to `0`.

For a confirm dialog, we [`push_back`](https://github.com/electron/electron/blob/master/atom/browser/atom_javascript_dialog_manager.cc#L57) the `Cancel` button, so this should be `1`.
",MarshallOfSound,platform/macOS;bug :beetle:;4-2-x,2019-03-21T14:26:58Z,2019-03-27T18:15:59Z,jsteiner,,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,17519,"netlog properties are not properties The properties `currentlyLogging` and `currentlyLoggingPath` do not return values when the netlog module is referenced via `electron.remote.netlog` or `electron.netlog`. Meanwhile `electron.session.currentSession.netlog` works as expected. 

* **Electron Version:**
 3.1.0  and later
* **Operating System:**
Observed on Windows 10, likely all platforms are affected
* **Last Known Working Electron version:**:
3.0.16

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
`currentlyLogging` should return a boolean
`currentlyLoggingPath` should return a string
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
`currentlyLogging` returns `(...args) => netLog[property](...args)`
`currentlyLoggingPath` returns `(...args) => netLog[property](...args)`
### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork [electron-quick-start](https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone https://github.com/bitdisaster/electron-quick-start.git -b bug_netlog_properties
$ npm install
$ npm run start
```
See console.log
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/windows;bug :beetle:;3-1-x,2019-03-22T22:13:39Z,2019-03-26T02:40:39Z,bitdisaster,codebytere;deepak1556,sofianguy,,codebytere,,codebytere,
electron/electron,17523,"Please, make printing work with Electron ! ### Problem Description

There are many printing problems since Electron 3 and this prevents people who need a working print solution to use Electron 3, 4 or 5 !

So please, can you take a look at all this **printings issues** and trying to fix it ? We are a lot of developers waiting for this since a long time..

Thanks a lot for your work ! And I hope you could give us some feedback about this.

cc: @codebytere @MarshallOfSound @nornagon 

### Related issues

All this issues seems related to `webContents.print()` which seems to be buggy:

- ~~#17265 `webContents.print()` callback always return `false`~~ :heavy_check_mark:
  - **Fixed since v5.0.5**
- ~~#16085 Fix callback for `webContents.print()` cancel event~~ :heavy_check_mark:
  - **Fixed since v5.0.5**
- ~~#18123 `'silent: true'` for printing not working in version 5~~
  - ~~#18858 `webContents.print()` doesn't respond when adding parameters~~
  - ~~#17670 Don't ask user for print settings.~~
  - ~~#16362 Silent print not working in mac/osX~~
  - **Fixed since v5.0.7**
- ~~#18980 Better callback value for `webContents.print()`~~
  - **Available since v7**
- ~~#18917 print blurring~~
  - **Fixed since v7** (by #18984 feat: add a series of new printing options)
- ~~`webContents.print()` doesn't work when `deviceName` is provided and `silent: true`~~
   - #17077, #17260, #18123,  #17077 

Other printing issues:

- #16813 Unable to print large documents in Electron 4, 5
- ~~#16534 `webview.print()` not working properly in 4.0.X~~
  - **Seems to be fixed since v5.0.5**
- #15847 `webContents.print()` random missing letters
- ~~#7849 Printing needs more options~~
  - ~~#15568 Add error information to `webContents.print()` callback~~
  - **Available since v7**
- ~#19056 Add an option to choose the paper format (size) on `webContents.print()`~
- #18093 `webContents.printToPDF()` regression in v5
- ~~#19108 Electron crashed after print~~
   - **Fixed by https://github.com/electron/electron/pull/19598**
   - Will be released in `v6.0.2` and `v5.0.10`

(Non-exhaustive list)",codebytere,component/printing;bug :beetle:,2019-03-23T14:07:56Z,2020-11-17T17:23:40Z,popod,mojason-81;baconbrad;ebmbook;gozzoo;misbeliever;codebytere;JonaMX;barbalex;cxyao;seksitha;Hedwig188;popod;craftzdog,sofianguy,,brenca;codebytere,,ckerr,
electron/electron,17526,"loadURL / loadFile calls throw ""ERR_ABORTED (-3) error"" if location.hash or history.pushState called on the page before page loaded Electron v5.0.0-beta.6 will likely break every single page application / SPA that uses routing as it's uncommon to trigger the routing only after the page loading event has been fired. See workaround in additional Information section below.

<!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 5.0.0-beta.6 +
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> any (tested on linux)
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> 4.1.1

### Expected Behavior
Page loading completes without errors even if that's a SPA.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
- `window.location.hash = '123'` called on page:
```
{ Error: ERR_ABORTED (-3) loading 'file:////dev/temp/electron-loadurl-issue/page.html#123'
    at rejectAndCleanup (//dev/temp/electron-loadurl-issue/node_modules/electron/dist/resources/electron.asar/browser/navigation-controller.js:72:21)
    at WebContents.navigationListener (//dev/temp/electron-loadurl-issue/node_modules/electron/dist/resources/electron.asar/browser/navigation-controller.js:93:20)
    at WebContents.emit (events.js:193:15)
  errno: -3,
  code: 'ERR_ABORTED',
  url:
   'file:////dev/temp/electron-loadurl-issue/page.html#123' }
```
- `history.pushState({}, ""title"", ""url"")` called on page:
```
{ Error: ERR_ABORTED (-3) loading 'file:////dev/temp/electron-loadurl-issue/url'
    at rejectAndCleanup (//dev/temp/electron-loadurl-issue/node_modules/electron/dist/resources/electron.asar/browser/navigation-controller.js:72:21)
    at WebContents.navigationListener (//dev/temp/electron-loadurl-issue/node_modules/electron/dist/resources/electron.asar/browser/navigation-controller.js:93:20)
    at WebContents.emit (events.js:193:15)
  errno: -3,
  code: 'ERR_ABORTED',
  url: 'file:////dev/temp/electron-loadurl-issue/url' }
```

### To Reproduce
-  main.js:
```javascript
const path = require(""path"");
const url = require(""url"");
const {app, BrowserWindow} = require(""electron"");

app.on(""ready"", async () => {
    const browserWindow = new BrowserWindow();

    browserWindow.webContents.on(""did-start-navigation"", (event, url) => {
        console.log(""did-start-navigation"", {url});
    });

    try {
        await browserWindow.loadURL(
            url.format({
                protocol: ""file"",
                slashes: true,
                pathname: path.join(__dirname, ""page.html"")
            })
        );
    } catch (e) {
        console.error(e);
    }

    // ""loadFile"" gives the same result
    // try {
    //     await browserWindow.loadFile(
    //         path.join(__dirname, ""page.html""),
    //     );
    // } catch (e) {
    //     console.error(e);
    // }
});
```
- page.html:
```html
<!DOCTYPE html>
<html>
<body>
<script>
    window.location.hash = '123';
    // history.pushState({}, ""title"", ""url""); // second case
</script>
</body>
</html>
```

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
N/A

### Additional Information
The workaround is changing the hash / history state afte page got loaded:
```html
<!DOCTYPE html>
<html>
<script>
    function onload() {
        window.location.hash = '123';
        // history.pushState({}, ""title"", ""url""); // second case
    }
</script>
<body onload=""onload"">
</body>
</html>
```

See relater PR https://github.com/electron/electron/pull/15855 and code line https://github.com/electron/electron/pull/15855/files#diff-fc5b6704bed639bfab5927de1eccbcc3R85

CC @nornagon",MarshallOfSound,platform/linux;bug :beetle:;5-0-x,2019-03-24T12:35:26Z,2019-03-28T22:03:18Z,vladimiry,MarshallOfSound;vladimiry;cyphercodes;preslavsh,sofianguy,,sofianguy,,MarshallOfSound,electron/electron#16631;
electron/electron,17540,"BrowserWindow isVisibile not returning accurate state in Windows 10 for minimize <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.


### Issue Details
The issue is similar to this Mac specific issue [https://github.com/electron/electron/issues/16776](https://github.com/electron/electron/issues/16776).  I thought I'd open this in case the fix for that issue does not cover Windows.

I've noticed that on Windows, Electron's `isVisible` method always returns true when minimizing the window.

* **Electron Version:**
  * 4.1.1
* **Operating System:**
  * Windows 10 (10240) VM
* **Last Known Working Electron version:**:
  * Not sure

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
 The [BrowserWindow.isVisible](https://electronjs.org/docs/api/browser-window#winisvisible) documentation specifies that the `isVisible` method should return whether the window is currently visible to the user.  When minimizing the window on Mac, I can see that the visibility is false.  I would expect the same behaviour on Windows.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
I noticed when running the [electron quick start](https://github.com/electron/electron-quick-start) that `isVisible` returned true when minimizing the window.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->
Fork
https://github.com/Miker87/electron-quick-start
```sh
$ git clone git@github.com:Miker87/electron-quick-start.git
$ npm install
$ npm start.
```

The actual modifications in `main.js`
```javascript
const events = ['blur', 'focus', 'hide', 'maximize', 'minimize', 'restore', 'show']

events.forEach(_event => {
  mainWindow.on(_event, () => console.log(_event, mainWindow.isVisible()));
});
```
- Ran the project with `npm start`
- Minimized the window and observed the cmd window's output

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![screen_shot_2019-03-22_at_1 07 56_pm](https://user-images.githubusercontent.com/4311414/54947038-c3d30100-4f0f-11e9-8970-4ca1609c6217.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",erickzhao,platform/windows;bug :beetle:;4-2-x;11-x-y,2019-03-25T19:42:48Z,2021-01-19T19:54:58Z,michael-rochette,electron-triage;erickzhao,sofianguy;electron-triage;erickzhao,erickzhao,erickzhao,,erickzhao,
electron/electron,17543,"safeDialogs option doesn't work <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.0-beta.6
* **Operating System:** macOS 10.13.6
* **Last Known Working Electron version:**: unknown

### To Reproduce

```
git clone https://github.com/PalmerAL/electron-quick-start.git
cd electron-quick-start
git checkout safe-dialogs
electron .
```

When running the example app, the ""prevent this app from creating additional dialogs"" option will appear after the second popup, but checking it doesn't actually do anything. Instead, dialogs will continue to appear forever until you force-quit the app.",ckerr,platform/macOS;bug :beetle:;5-0-x,2019-03-26T01:46:50Z,2019-04-15T17:16:06Z,PalmerAL,jkleinsc,MarshallOfSound;sofianguy,,MarshallOfSound;sofianguy,sofianguy,jkleinsc,
electron/electron,17617,"""pointer being freed was not allocated"" when loading specific URLs over interceptStreamProtocol <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->5.0.0-beta.7
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS Mojave 10.14.4
* **Last Known Working Electron version:**:
  * <!-- (if applicable) e.g. 3.1.0 -->4.X, bug is likely due to the PR of another bug that has been fixed: #17264

### Expected Behavior

It should load the video properly.

### Actual Behavior

The application crash with the following:

Electron(1492,0x700004426000) malloc: *** error for object 0x7fc38f8570a8: pointer being freed was not allocated
Electron(1492,0x700004426000) malloc: *** set a breakpoint in malloc_error_break to debug

### To Reproduce

Run the following Electron Fiddle: https://gist.github.com/639ca7f541ccd229483d8655c0c0f5a4

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->",jkleinsc;codebytere,platform/macOS;bug :beetle:;5-0-x,2019-03-30T02:45:32Z,2019-04-16T23:21:54Z,ghost,ghost;codebytere;jkleinsc,sofianguy,,sofianguy;codebytere,,jkleinsc,
electron/electron,17635,"Mouseup/mousemove does not fire outside of webview after mousedown in webview <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 4.1.2
  * Latest 5.0 beta

* **Operating System:**
  * All
* **Last Known Working Electron version:**:
  * 3.x

### Expected Behavior
When dragging inside of a webview and releasing the mouse button outside, the mouseup event should fire on the `window` object inside of the webview.

### Actual Behavior
The webview's window never receives the mouseup event. This breaks any library that relies on receiving the mouseup (such as D3) if the user accidentally overshoots the edge of the webview before releasing the mouse.

This behavior does not occur with an OOPIF as far as I can tell using Chrome,
and it did not happen with Electron 3 and before.

### To Reproduce
https://github.com/krisdages/electron-issue-webview-mouseevents

```
# From terminal:
git clone https://github.com/krisdages/electron-issue-webview-mouseevents
cd electron-issue-webview-mouseevents
npm install 
# Run the app
npm start
```
### Additional Information
The demo uses Electron 4, but the issue persists with the 5.0 beta.
",deepak1556,component/webview;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;4-2-x;5-0-x;6-0-x;6-1-x;10-x-y;stale,2019-03-31T20:45:50Z,2022-11-08T02:17:06Z,krisdages,krisdages;lslzl3000;yuer0608;huyinghuan;HyperClockUp;Rabbitzzc,sofianguy;deepak1556;electron-triage,deepak1556,deepak1556,,,
electron/electron,17725,"Shortcuts not working in Developer Tools ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [ x ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ x ] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [ x ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v5.0.0-beta.8
* **Operating System:**
  * OSX 10.13.6

### Expected Behavior
Developer Tools keyboard shortcuts (Copy/Paste/Select All/etc) to work

### Actual Behavior
Developer Tools keyboard shortcuts are hijacked by Electron app

### To Reproduce
Here's the situation: I have custom keyboard shortcuts used in my app, not global shortcuts, but ""local-global"" shortcuts (related to: https://github.com/electron/electron/issues/17530)

Problem is that Developer Tools, for some reason, adheres to the same shortcut definitions as the main window :/

To recreate the issue, create a Menu template and remove Copy & Paste commands, assign the menu to the window, and open developer tools:
```
    const menu = Menu.buildFromTemplate(menuTemplate);
    Menu.setApplicationMenu(menu);

    // Create the browser window.
    win = new BrowserWindow(windowOptions);
    win.setMenu(null);
    win.webContents.openDevTools({ mode: 'detach' });
```",MarshallOfSound,platform/macOS;blocked/need-info 閴;bug :beetle:;5-0-x,2019-04-08T12:44:02Z,2020-02-26T20:21:44Z,Stoyvo,sil3nthill;sofianguy;electron-triage,sofianguy;electron-triage,,sofianguy,,electron-triage,
electron/electron,17746,"Documentation on the crash reporter seems wrong for extra parameter lenght <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 4.1.4
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> macOS and Windows 10
* **Last Known Working Electron version:**:
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. --> According to documentation, I was expecting to have extra parameters limited to 63 characters. 

### Actual Behavior
<!-- A clear and concise description of what actually happened. --> When adding extra parameters to crash reporter, the corresponding values are limited to 63 characters only on windows and seem to have no limit on MAC

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

On Mac extra parameters are stored like this:

```
extra_history_1:
   '{""eventType"":""CRASH_REPORTER"",""eventData"":""started"",""date"":""2019-04-10T16:45:35.963Z""}',
  extra_history_2:
   '{""eventType"":""WINDOW_WEB_CONTENTS"",""eventData"":""unresponsive"",""date"":""2019-04-10T16:48:13.267Z""}'
```

On Window they are stored like this:

```
extra_history_1:
   '{""eventType"":""CRASH_REPORTER"",""eventData"":""started"",""date"":""201',
  extra_history_2:
   '{""eventType"":""WINDOW_WEB_CONTENTS"",""eventData"":""unresponsive"",""d'
```

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/windows;platform/macOS;bug :beetle:;4-2-x,2019-04-10T17:04:16Z,2019-05-28T17:17:02Z,ramaralo,,sofianguy,,codebytere,,codebytere,
electron/electron,17754,"File name not shown in save dialog in Electron 5 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.0-beta.8
* **Operating System:** macOS 10.13.6
* **Last Known Working Electron version:**: 4.1.4

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

The file name should be shown in the save dialog, as it is in Electron 4:

<img width=""798"" src=""https://user-images.githubusercontent.com/10314059/55932619-0f63fb00-5bf0-11e9-852e-7c9ecf22ed70.png"">

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

No file name is shown:

<img width=""797"" src=""https://user-images.githubusercontent.com/10314059/55932632-1985f980-5bf0-11e9-99f7-bb058a0a0134.png"">

(Also, the dialog is attached to the window in Electron 5 but not 4, I'm not sure whether that's expected or not).

### To Reproduce

Create a link to a download in `index.html`:

```
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
  </head>
  <body>
    <a href=""https://github.com/electron/electron/releases/download/v5.0.0-beta.8/electron-v5.0.0-beta.8-win32-x64.zip"">download link</a>
  </body>
</html>
```",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-04-11T05:26:02Z,2019-04-15T18:11:21Z,PalmerAL,codebytere,codebytere,,codebytere,,MarshallOfSound,
electron/electron,17767,"GetSources is not showing open full screen apps in Mac <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
4.1.3
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
* **Operating System:**
macOS 10.14.3
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:**:
1.3.0
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
When using desktopCapturer.getSources() I expect to have a complete list of the applications that are open. Including if they are in full screen mode or not.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
desktopCapturer.getSources() only show the windows and screens that are windowed but not the full screen ones.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->
Clone this repository 
```
git clone https://github.com/hokein/electron-screen-recorder
npm init
npm start
```
This app is running under electron 1.3.0, select the screen sharing and all the applications will show. Then, we update to the last electron version 4.1.3 changing the package.json requirement.

```
npm init
npm start
```

The app is not showing the full screen applications anymore.
<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

<!-- If applicable, add screenshots to help explain your problem. -->

<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;4-2-x,2019-04-11T22:58:43Z,2019-05-24T01:10:54Z,steff456,islalobo;steff456;codebytere;ramaralo;alectrocute,sofianguy,,codebytere,,codebytere,
electron/electron,17881,"clipboard.readText('selection') doesn't work on MacOs. I've been working on an electron project which I need to get - when the user hits shortcut - selected text in any window's system (browser, notepad, etc). I've first tried in Linux (and it worked perfectly), but when I tried it in MacOs, the readText('selection') function only returns what there is in my clipboard. Does anybody know any other way to get this information with electron or nodejs?",codebytere,platform/macOS;bug :beetle:;4-2-x;5-0-x,2019-04-19T16:24:08Z,2019-05-01T22:02:48Z,CarlosEduR,nornagon;CarlosEduR;codebytere;arvinxx;linonetwo,nornagon;codebytere,codebytere,codebytere,,codebytere,
electron/electron,17890,"App freeze when iframe is deleted from a webview <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->5.0.0-beta.9
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS Mojave
* **Last Known Working Electron version:**:
  * <!-- (if applicable) e.g. 3.1.0 -->4.1.4

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
The iframe is removed without causing any issue

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
The webview content will freeze (the gif will stop working) once the iframe is removed from it and in some cases, you will be unable to close the app.

### To Reproduce

Run the following Electron Fiddle: https://gist.github.com/ae270063bc98401e6f6cbfeb1fddfa5d

It will remove the iframe after 6 seconds. The gif should then freeze on the latest beta (9) and in some cases, closing the app is impossible unless force exiting.

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->

After further testing, I noticed that if the iframe is restored then the app start acting normally again.",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-04-20T11:23:08Z,2019-07-16T18:59:00Z,ghost,r0stig;codebytere;sofianguy,sofianguy,,codebytere,,sofianguy,
electron/electron,17893,"v5.0.0-beta.9: Error: Cannot find module (""main"" entry point deinfed in package.json is being ignored) ### Issue Details

* **Electron Version:** v5.0.0-beta.9
* **Operating System:** linux x64
* **Last Known Working Electron version:**: v5.0.0-beta.8

### Expected Behavior
The app is able to use node modules.

### Actual Behavior
The app is not able to use node modules. See stacktrace:
```
A JavaScript error occurred in the main process
Uncaught Exception:
Error: Cannot find module 'some-module'
Require stack:
- /home/user/dev/_github/electron-packagejson-main/node_modules/electron/dist/resources/app.asar/main.js
- 
    at Module._resolveFilename (internal/modules/cjs/loader.js:664:15)
    at Function.Module._resolveFilename (/home/user/dev/_github/electron-packagejson-main/node_modules/electron/dist/resources/electron.asar/common/reset-search-paths.js:43:12)
    at Function.Module._load (internal/modules/cjs/loader.js:582:27)
    at Module.require (internal/modules/cjs/loader.js:720:19)
    at require (internal/modules/cjs/helpers.js:14:16)
    at Object.<anonymous> (/home/user/dev/_github/electron-packagejson-main/node_modules/electron/dist/resources/app.asar/main.js:1:20)
    at Module._compile (internal/modules/cjs/loader.js:813:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:825:10)
    at Module.load (internal/modules/cjs/loader.js:682:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:614:12)
```

### To Reproduce
- `git clone https://github.com/vladimiry-forks/electron-packagejson-main.git`
- `cd electron-packagejson-main`
- `npm install` or `yarn --pure-lockfile` (yarn is preferred)
- `npx asar p app ./node_modules/electron/dist/resources/app.asar`
- `./node_modules/electron/dist/electron`

### Additional Information
Renaming `./app/node_modules/some-module/lib.js` to `index.js` makes it work which means v5.0.0-beta.9 ignores the `main` property defined in `package.json` file. So v5.0.0-beta.9 fails to load any dependency that relies on custom `main` entry point defined in `package.json`.",MarshallOfSound,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;5-0-x,2019-04-20T19:49:55Z,2019-04-24T20:24:15Z,vladimiry,nathanlesage;vladimiry;ckerr,MarshallOfSound,,MarshallOfSound,,ckerr,
electron/electron,18034,"BrowserWindow.show() always doesn't focus. <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 4.1.4
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> Windows 10 (1903)
* **Last Known Working Electron version:**:
  * <!-- (if applicable) e.g. 3.1.0 --> N/A

### Expected Behavior
BrowserWindow.show(), as documented, shows **and** focuses the window.

### Actual Behavior
BrowserWindow.show() doesn't get focus, as noted in https://github.com/TheGoddessInari/rambox/issues/92.
I'm now having to explicitly call .focus() after .show(), even though the documentation explicitly states that .show() also focuses.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
I checked the code, and I don't see NativeWindow call anything like Focus. Maybe I'm looking in the wrong part of the code, but NativeWindowViews::Show() doesn't look to directly or indirectly call NativeWindowViews::Focus(), which is what you would expect from the documentation.

This is possibly specific to Linux? As ShowWindow on Windows **should** activate the window same as Focus does.

Many other applications use .show() and then .focus() on browserwindow, even though the focus is specifically documented as redundant in that case. But either way, the documentation doesn't match the behavior.

It's hard for me to search the code online since GitHub search doesn't seem to support literal searches within ""quotes"", so I might've missed something.",codebytere,platform/windows;bug :beetle:;4-2-x,2019-04-29T16:19:12Z,2019-04-30T23:43:46Z,TheGoddessInari,,codebytere,,codebytere,,codebytere,
electron/electron,18066,"Electron 5.0 renderer crashes when launching signed OSX release ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v5.0.0
* **Operating System:**
  * Mac OSX 10.14.1
* **Last Known Working Electron version:**:
  * 4.1.13

### Expected Behavior
The renderer starts.

### Actual Behavior
The renderer crashes on start.

```bash
/Volumes/MQTT\ Explorer\ 0.2.5/MQTT\ Explorer.app/Contents/MacOS/MQTT\ Explorer 
subscribing app/update/check
[19:02:08.080] [info] App starting...
subscribing connection/add/mqtt
subscribing connection/remove
subscribing storage/store
subscribing storage/load
subscribing storage/clear
icon path /Volumes/MQTT Explorer 0.2.5/MQTT Explorer.app/Contents/Resources/app.asar/dist/src/icon.png
[24951:0430/190211.166344:FATAL:gpu_data_manager_impl_private.cc(892)] The display compositor is frequently crashing. Goodbye.
[1]    24951 trace trap
```

### Notes
- During development the issue cannot be observed. (Electron installed via npm)
- After codesigning and packaging the BrowserWindow cannot be opened.
- Codesigning works
- Electron builder should download the same Electron executable. (should!)
- launching with `--no-sandbox` solves the issue.
- Related to https://github.com/electron/electron/issues/16631
- Looked in the electron-builder issue tracker to if it is a known issue with electron-builder

### To Reproduce
May be hard to reproduce since the app needs to be packaged. (signed ?!)
https://github.com/thomasnordquist/MQTT-Explorer

On mac:
```
git checkout 9e71c3132eda90f855746059413eae8c67cc8366
yarn
yarn prepare-release
yarn package mac
./build/clean/build/mac/MQTT\ Explorer.app/Contents/MacOS/MQTT\ Explorer
```

Workaround: https://github.com/thomasnordquist/MQTT-Explorer/commit/86544c13340573906335bc828a67d72a647c8f54
",nornagon,platform/macOS;blocked/need-info 閴;bug :beetle:;5-0-x,2019-04-30T17:20:35Z,2019-06-07T18:19:22Z,thomasnordquist,nornagon;thomasnordquist;codebytere;jack-arms;ahmadwaliesipick,nornagon;sofianguy,,nornagon,,codebytere,electron/electron#16631;
electron/electron,18123,"'silent: true' for printing not working in version 5. Hey there

I have upgraded an app to version 5 as in the list of fixes was the silent printing bug, but the issue is still the same.

My code:
`printWindow.webContents.print({silent: true});`

Results in nothing happening at all. No errors thrown or anything. Changing it back to false, brings up the window to select the printer and then it prints perfectly fine. It's just the silent mode that doesn't work.

I am running this on Windows 10, with Node version 10.15.3. I can not try with a different OS as the printer only has drivers for Windows.

Many thanks,
Michael
",codebytere,bug :beetle:;platform/all;status/confirmed;5-0-x,2019-05-02T17:29:57Z,2019-06-27T03:53:18Z,MichaelW-Dev,Naowut;flaticols;hiteshambaliya;popod;codebytere;agomezb;EmadFani;misbeliever;silibdev;vgribdev;gclooi;maikonmatheus;ibalaji777;CoWayger;elAgala;LucasHang;StvBB8;cxyao;nornagon,sofianguy;codebytere,,,,codebytere,
electron/electron,18161,"process.windowsStore returns undefined even in AppX packages in Electron 5.0.x, 7.x, 8.x ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * Tested on electron 5.0.0, through 5.0.6
* **Operating System:**
  * Windows 10 (Tested on both 1803 and 1809)

### Expected Behavior
`process.windowsStore` should return true if running inside of an appx package, as described in https://electronjs.org/docs/api/process#processwindowsstore

### Actual Behavior
`process.windowsStore` returns undefined, even when running in an appx package

### To Reproduce
I forked electron-quick-start to demonstrate the issue I found.
[https://github.com/dangeredwolf/electron-quick-start](https://github.com/dangeredwolf/electron-quick-start)

You can then use `npm run buildWindows` to create the appx.

If you're unfamiliar with appx deployment, appx files need to be signed to be installed, even in developer mode. [This is basically how to do that (from Microsoft's docs)](https://docs.microsoft.com/en-gb/windows/uwp/packaging/sign-app-package-using-signtool)

`process.windowsStore` is undefined in both the main and renderer processes when installed as an AppX

### Screenshots

I set it up to throw a dialog box of whatever process.windowsStore is

![image](https://user-images.githubusercontent.com/2636265/57185775-bb230280-6e9f-11e9-901b-0bb384de9fe8.png)

It's obvious from electron itself that it's running from C:\Program Files\WindowsApps

![image](https://user-images.githubusercontent.com/2636265/57185783-d726a400-6e9f-11e9-8d05-bfc38a959897.png)

### Additional Information

After further testing, I confirmed that this is an issue introduced in Electron 5.0.0. You can test this by cloning [the electron-quick-start fork with process.windowsStore checks](https://github.com/dangeredwolf/electron-quick-start) and changing `package.json`'s `""devDependencies""`>`""electron""` from `""^5.0.0""` to `""^4.2.0""`

![image](https://user-images.githubusercontent.com/2636265/57185900-e9561180-6ea2-11e9-84b7-75a4e3ef7a48.png)",zcbenz,platform/windows;bug :beetle:;5-0-x;7-1-x,2019-05-04T23:20:50Z,2020-05-27T17:50:02Z,dangeredwolf,codebytere;dangeredwolf;steffanhalv;gaodeng;bitdisaster;danutzcodrescu;koenoe;mifi;erpy;mahnunchik;semireg;miniak,sofianguy;codebytere,codebytere,,,deepak1556,
electron/electron,18177,"<webview> not rendering content after reload or redirect (Electron 5.x, 6.x) ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.x & 6.0.0-beta.1
* **Operating System:**
  *  Windows 10 (1803)
* **Last Known Working Electron version:**:
  * 4.x

### Expected Behavior
When creating a webview with `src=""http://mail.google.com`"", I expect it to load and show the google login page.  When reloading the webview (or if the webview redirects e.g., when logging in) I expect it to also properly render the page.

### Actual Behavior
Sometimes when loading the above URL, nothing is visible.  Always when reloading the webview with the above URL, the webview will no longer render the page.  E.g., signing into things like gmail, isn't really working because it signs you in, but you end up with a non-rendering webview.

### To Reproduce
Replace the renderer process script in electron quickstart / electron fiddle with the following, and click the refresh button (with `webviewTag: true` in webPreferences).
```javascript
document.addEventListener('DOMContentLoaded', () => {
    const wv = document.createElement('webview');
    wv.src = 'https://mail.google.com';
    wv.style.height = '400px';

    const a = document.createElement('a');
    a.innerText = 'REFRESH';
    a.addEventListener('click', () => wv.reload());

    document.body.append(wv, a);
});
```

### Screenshots
What it renders (usually) when first loaded (and what should be rendered):
![what_should_render](https://user-images.githubusercontent.com/11395871/57236898-e100f200-6fda-11e9-9fe6-d99bc4b482b5.png)

What renders after the ""REFRESH"" button is clicked:
![after_refresh](https://user-images.githubusercontent.com/11395871/57236940-f249fe80-6fda-11e9-8b1d-75963bf79f92.png)

### Additional Information
The webview (and iframe within it) still have their proper sizes.  The page within the webview is actually loading correctly, if you inspect it you can see all the page is there.

If you change CSS properties in the dev tools that cause the webview to be re-rendered, the page then renders correctly.  (e.g., after reloading and getting the blank page, if you toggle the `display: flex;` CSS property on the webview, the page will render.  Just resizing the window that the webview is in does not cause the page to render.

It seems to be affecting all Electron versions from 5.0.0-beta.1 and onward.
",codebytere,platform/windows;bug :beetle:;5-0-x;6-0-x;6-1-x,2019-05-06T15:55:32Z,2020-12-08T23:04:10Z,Catlinz,4eveRS;littlecold233;shockthetoast;javan;codebytere;Catlinz;gapsong,sofianguy,,codebytere,,Catlinz,electron/electron#17890;
electron/electron,18188,"Exiting Fullscreen mode for Embedded Content does not work. ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
5.0.0
* **Operating System:**
MacOS 10.13.6 / Windows 10
* **Last Known Working Electron version:**:
Electron v2.0.8

### Expected Behavior
Exiting fullscreen content ( ie. A Youtube Video displayed in a iframe ) should return the to app.
### Actual Behavior
Video size shrinks, but screen stays black , see https://cl.ly/f7af08d44619

### To Reproduce
main.js

```
const {app, BrowserWindow} = require('electron')
const path = require('path')
const url = require('url')

let window = null

// Wait until the app is ready
app.once('ready', () => {
  // Create a new window
  window = new BrowserWindow({
    // Set the initial width to 500px
    width: 600,
    // Set the initial height to 400px
    height: 600,
    // Don't show the window until it's ready, this prevents any white flickering
    show: false,
    webPreferences: {
      webSecurity: false,
      nodeIntegration: true,
      allowRunningInsecureContent: true,
    },
  })

  window.loadURL(url.format({
    pathname: path.join(__dirname, 'index.html'),
    protocol: 'file:',
    slashes: true
  }))

  window.once('ready-to-show', () => {
    window.show()
  })
})

```

index.html

```
<!DOCTYPE html>
<html>
</head>
<body>
  <div>
    <iframe width=""560"" height=""315"" src=""https://www.youtube.com/embed/eBpxovL0zng"" frameborder=""0"" allow=""accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen>
    </iframe>
  </div>
  </body>
</html>
```

### Screenshots
Screen recording https://cl.ly/f7af08d44619

",deepak1556,platform/windows;platform/macOS;bug :beetle:;app-feedback-program;5-0-x,2019-05-07T10:42:41Z,2019-06-13T21:02:57Z,smithalan92,adill;btzr-io,sofianguy,,sofianguy,,codebytere,
electron/electron,18213,"WebContents no longer emits `cursor-changed` ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.2
* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**:
  * 4.2.0

### Expected Behavior
When hovering over text, links, etc. WebContents should be emitting `cursor-changed` events.

### Actual Behavior
`cursor-changed` are not emitted.

### To Reproduce
```sh
$ git clone https://github.com/adill/electron-quick-start -b no-cursor-changed
$ npm install
$ npm start || electron .
```

### Additional Information
",ckerr;codebytere,platform/windows;platform/macOS;platform/linux;bug :beetle:;app-feedback-program;6-0-x;6-1-x,2019-05-08T17:33:50Z,2020-06-16T19:49:05Z,adill,ckerr;codebytere,sofianguy;ckerr;codebytere,,ckerr;codebytere;brenca,sofianguy,codebytere,
electron/electron,18220,"Cookie support broken in Electron 5.0.x? ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** `5.0.1`
* **Operating System:** `mac OSX 10.14.4`
* **Last Known Working Electron version:**: `4.x`

### Expected Behavior

I should be able to set/remove a cookie.

### Actual Behavior

I cannot set or remove a cookie

### To Reproduce

```js
import { session } from 'electron'

async function testCookies() {
  if (!session || !session.defaultSession)
    throw new Error('Could not get default user session')

  const cookies = session.defaultSession.cookies
  const name = 'foo'
  const url = '/'

  await cookies.set({
    url,
    name,
    value: 'Hello World!',
    expirationDate: 99999999.0,
  })

  console.log('COOKIES BEFORE:', await cookies.get({}))

  await cookies.remove(url, name)

  console.log('COOKIES AFTER:', await cookies.get({}))
}

//....
app.on('ready', () => {
  testCookies()
})

```



### Additional Information

Running this on a Mac and have tried many permutations of the above but can't get anything to work. Things seemed to work in 4.x
",deermichel;erickzhao,platform/macOS;beginner friendly;bug :beetle:;5-0-x,2019-05-09T00:31:28Z,2019-06-17T04:40:17Z,danawoodman,grantcv1;thesuperhomie;erickzhao;codebytere,sofianguy;codebytere,,deermichel;erickzhao,,codebytere,
electron/electron,18226,"drag DOM event not fired when element is above a webview <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 5.0.1, 6.0.0-beta.2
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> MacOS 10.14.3
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> 4.2.0

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
When dragging a DOM item, DOM events should always fire as expected, even if the drag element is above a webview.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
When dragging a DOM element who is above a webview, [`dragstart` event](https://developer.mozilla.org/en-US/docs/Web/API/Document/dragstart_event) is fired but not [`drag` event](https://developer.mozilla.org/en-US/docs/Web/API/Document/drag_event).

This breaks libraries like [`react-dnd`](https://github.com/react-dnd/react-dnd/).

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->
Gist to test with Fiddle: https://gist.github.com/MathieuDebit/fb2841d67c7b9b30831c154686f7183a.
- Drag element in the list outside the webview: `drag` event is fired
- Drag element in the list inside the webview: `drag` event is not fired

Works with Electron 4.
<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
Issues that might be related:
- https://github.com/electron/electron/issues/17635
- https://github.com/electron/electron/issues/14258#issuecomment-416794070
",MarshallOfSound,platform/macOS;bug :beetle:;5-0-x;6-0-x;6-1-x,2019-05-09T12:20:01Z,2021-03-08T23:19:40Z,MathieuDebit,MathieuDebit;electron-triage,sofianguy,,sofianguy,,electron-triage,electron/electron#17635;
electron/electron,18230,"Tray icon behaving weird on Mac on light theme <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X ] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  5.0.1
* **Operating System:**
  macOS 10.14.3
* **Last Known Working Electron version:**:
  none

### Expected Behavior
All parts of the icon should keep their opacity when switching light and dark mode.

### Actual Behavior
The parts of the icon that are colored in white disappear in light mode, and the other colors lose some of their opacity.

### To Reproduce
[Demo](https://github.com/vkolova/electron-mac-os-tray-icons)

```sh
$ git clone https://github.com/vkolova/electron-mac-os-tray-icons
$ npm install
$ npm start || electron .
```

### Screenshots
This is the icon (note the white in the middle).
![icon](https://raw.githubusercontent.com/vkolova/electron-mac-os-tray-icons/master/icon%404x.png)

It looks correct in dark mode.
![dark mode](https://raw.githubusercontent.com/vkolova/electron-mac-os-tray-icons/master/screenshots/Screen%20Shot%202019-05-09%20at%203.36.16%20PM.png)

Looks like it lost some opacity in light mode.
![light mode](https://raw.githubusercontent.com/vkolova/electron-mac-os-tray-icons/master/screenshots/Screen%20Shot%202019-05-09%20at%203.36.31%20PM.png)

",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-05-09T13:27:08Z,2019-05-24T18:11:40Z,vkolova,codebytere;donkooijman,codebytere,,codebytere,,codebytere,
electron/electron,18236,"showMessageBox BrowserWindow is not optional ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.2
* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**:
  * 5.0.0

### Expected Behavior
`dialog.showMessageBox({options...})` should display a message box matching the options passed in

### Actual Behavior
A message box complaining about parsing argument at index 11 displays

### To Reproduce
```sh
$ git clone https://github.com/adill/electron-quick-start -b show-message-box
$ npm install
$ npm start || electron .
```

### Screenshots

### Additional Information
",codebytere,bug :beetle:;component/dialog;platform/all;app-feedback-program;6-0-x,2019-05-09T18:16:11Z,2019-05-21T14:08:23Z,adill,codebytere,codebytere,codebytere,codebytere,,ckerr,
electron/electron,18242,"app.setPath() does not create directories ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.1
* **Operating System:**
  * macOS 10.14

### Expected Behavior
According to the [API documentation](https://github.com/electron/electron/blob/master/docs/api/app.md#appsetpathname-path) `app.setPath()` should create the directory passed, if it does not exist.

### Actual Behavior
It does not.

### To Reproduce
In particular, I was calling `app.setPath('logs', path)` and `app.setPath('userCache', path)` with non-existent directories; they were not created.

### Additional Information
The creation [seems to be delegated to `base::PathService::OverrideAndCreateIfNeeded`](https://github.com/electron/electron/blob/master/atom/browser/api/atom_api_app.cc#L879), so I think this may just be a simple bug (the last parameter should be `true` not `false`).",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-05-09T22:28:09Z,2019-05-28T17:37:55Z,inukshuk,,sofianguy,,codebytere,,codebytere,
electron/electron,18295,"MenuItem registerAccelerator does not work ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.1
* **Operating System:**
  * macOS 10.14.4

### Expected Behavior
Hello,

For some reasons, I have to use the window.keydown method instead of the MenuItem accelerator, but I still want to display the shortcut to the right of the MenuItem. So I used 'registerAccelerator: false'. But the click() function is always called when I hit ""B"".

### To Reproduce
```
{
  label: ""Blade"",
  id: ""blade"",
  accelerator: ""B"",
  registerAccelerator: false,
  click(a, b, e) {
    console.log(e);
  }
}
```",deermichel;erickzhao,platform/macOS;status/wontfix 棣冩瘒;beginner friendly;bug :beetle:;5-0-x,2019-05-14T12:29:14Z,2019-06-24T15:33:15Z,Maxime117,codebytere;Maxime117;deermichel;ronen,sofianguy;codebytere,,deermichel,,codebytere,
electron/electron,18310,"Frameless window prevents taskbar unhide ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.3
* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**:
  * 5.0.1

### Expected Behavior
Dragging your mouse to the bottom of the screen with a maximized frameless window and a hidden Windows taskbar should make the taskbar appear.

### Actual Behavior
The taskbar does not appear.

### To Reproduce

* Ensure you have Taskbar hiding enabled
![image](https://user-images.githubusercontent.com/144914/57793291-d12d9000-76f5-11e9-8c63-178e928a5358.png)

```sh
$ git clone https://github.com/adill/electron-quick-start -b no-taskbar-unhide
$ npm install
$ npm start || electron .
```

* Move your mouse to the bottom of the screen

### Screenshots

### Additional Information
",zcbenz,platform/windows;bug :beetle:;app-feedback-program;6-0-x,2019-05-15T16:46:41Z,2019-05-21T00:50:04Z,adill,,sofianguy,,sofianguy,,ckerr,
electron/electron,18329,"crashReporter freezes the application <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v6.0.0-beta.3
* **Operating System:**
  * Windows 10.0.17763 (17763)
* **Last Known Working Electron version:**
  * v5.0.1

### Expected Behavior
Start `crashReporter` process and continue the execution of the application.

### Actual Behavior
The `crashReporter` process is started (according to the Windows task manager) but the application doesn't continue running, like if call the `crashReporter.start` method blocked the main execution thread (after call `crashReporter.start` method, the crashReporter process continues running and the main electron process too).

### To Reproduce
* Create base electron app.
* Call `crashReporter.start` method.
* Put a `console.log` with any message after method call (or a window, too). This `console.log` never prints the message (or the window created open).

[EDIT] Repository: https://github.com/cristiammercado/test-electron-quickstar

### Screenshots

![Screenshot_1](https://user-images.githubusercontent.com/4806666/57901323-2cf93580-782a-11e9-81ec-5f945746cb30.png)


![Screenshot_2](https://user-images.githubusercontent.com/4806666/57901324-2cf93580-782a-11e9-8e60-3a70839cd5f1.png)
",zcbenz,platform/windows;bug :beetle:;app/Slack;app-feedback-program;6-0-x,2019-05-17T03:31:25Z,2019-06-17T18:39:02Z,cristiammercado,miniak;cristiammercado;felixrieseberg;nornagon;sofianguy,nornagon;sofianguy;felixrieseberg,,sofianguy,,sofianguy,
electron/electron,18364,"customButtonsOnHover does not respect minimizable nor maximizable options <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 4.1.4
* **Operating System:** 
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS
* **Last Known Working Electron version:**:
  * <!-- (if applicable) e.g. 3.1.0 --> Never

### Expected Behavior
When `titleBarStyle` is set to `customButtonsOnHover`, the semaphore buttons *should not* appear on hover if the `maximizable` and `minimizable` options are set to `false`.

### Actual Behavior
When `titleBarStyle` is set to `customButtonsOnHover`, the semaphore buttons appear on hover regardless if the `maximizable` and `minimizable` options are set to `false`.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
The reason for this issue is to be able to get rid of the gray line at the top of the `BrowserWindow` described here https://github.com/electron/electron/issues/18364
",codebytere,platform/macOS;bug :beetle:;4-1-x,2019-05-20T13:08:16Z,2019-05-28T17:23:17Z,pronebird,,sofianguy,,codebytere,,codebytere,
electron/electron,18410,"Main window flickers with maximizing and fullscreen <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> Electron 4.1.3, 4.2.1, 5.0.0-beta6 and 6.0.0-beta2
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> macOS 10.14.4
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> 3.1.7

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Maximizing/restoring and toggling/exiting fullscreen shouldn't cause the main window to flicker.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Main window flickers when the app is maximized/restored or if fullscreen is toggled/exited.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->
1. Launch an Electron app
2. Maximize and restore the main window
3. Toggle and exit fullscreen

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![ezgif com-video-to-gif](https://user-images.githubusercontent.com/20443967/58202821-6ba94880-7c8d-11e9-8950-fd7491feee57.gif)

### Additional Information
<!-- Add any other context about the problem here. -->
",MarshallOfSound,platform/macOS;bug :beetle:;4-2-x;5-0-x;6-0-x,2019-05-22T19:31:23Z,2019-06-19T19:51:40Z,katiamoklokova,codebytere;MarshallOfSound,sofianguy,,sofianguy,,MarshallOfSound,
electron/electron,18438,"Enabling touch emulation on webview also affects the BrowserWindow host Using `webContents.debugger.sendCommand` to enable touch emulation on webview would also affect the BrowserWindow that hosts it.

```js
webContents.debugger.sendCommand('Emulation.setEmitTouchEventsForMouse', { enabled: true });
webContents.debugger.sendCommand('Emulation.setTouchEmulationEnabled', {
  enabled: true,
  configuration: 'mobile',
});
```

### Issue Details

* Electron Version: 4.x and later
* Operating System:macOS 10.14
* Last Known Working Electron version:3.1.9

### Expected Behavior

When `sendCommand` is executed, touch emulation should be enabled for webview, while the host page stays in desktop mode.

### Actual Behavior

BrowserWindow's cursor also becomes the touch version.

### To Reproduce

Clone https://github.com/AglaiaWang/electron-quick-start and click the ""click"" button.


",zcbenz,component/webview;bug :beetle:;4-2-x;5-0-x;6-0-x;6-1-x;10-x-y;stale,2019-05-24T10:05:01Z,2022-11-08T02:17:04Z,AglaiaWang,jacklovepdf;iwiedenm;flashyu;LeoMartinDev;christlee1989;JenniferSui;gpetrov;oluul;billypon,zcbenz;Kilian;electron-triage,,zcbenz,,,
electron/electron,18461,"Disabled submenus' MenuItems can still be accessed via shortcuts <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.0, 5.0.1, 5.0.2
* **Operating System:**
  * Windows 10 (1809) / Ubuntu 18.10 x64
* **Last Known Working Electron version:**
  * <!-- not tested actually -->-

### Expected Behavior
macOS produces the expected behavior, as it won't allow triggering any code that is assigned to the click event of the MenuItem. After all if someone can't click it, why would one be able to use the shortcut for it.

### Actual Behavior
When a shortcut is pressed for a MenuItem that belongs to a disabled submenu, the code get's executed, but only in Windows and Linux.

### To Reproduce
```sh
$ git clone https://github.com/Woofthecat/electron-disabled-menus
$ cd electron-disabled-menus
$ npm install
$ npm start
```

The menu bar has a 'Test' menu which contains a disabled submenu. The disabled submenu has 2 other (enabled) MenuItems, with the Shift+H and Shift+J accelerators assigned. Inspect the terminal for console logs when the shortcuts are pressed. On macOS nothing will happen while there will be console logging for Windows and Linux.",codebytere,platform/windows;platform/linux;blocked/need-info 閴;bug :beetle:;5-0-x,2019-05-27T09:21:25Z,2020-02-26T20:15:40Z,Woofthecat,electron-triage,sofianguy;electron-triage,,codebytere,,electron-triage,
electron/electron,18462,"Calling `getWebContent` immediately after creating webview would crash webview When calling `webview.getWebContent` immediately after creating webview, the `createGuestSync` would be called automatically to create WebContent, however Electron also calls `createGuest` asynchronously and another WebContents would be created later, resulting in webview not working. 

### Issue Details

* Electron Version: 4.x and later
* Operating System:macOS 10.14
* Last Known Working Electron version:3.1.9

### To Reproduce

https://github.com/xinnian88/electron-webview-webcontent-bug
",zcbenz,component/webview;bug :beetle:;4-2-x;5-0-x;6-0-x;6-1-x,2019-05-27T11:22:24Z,2021-03-08T21:05:06Z,xinnian88,miniak;electron-triage,zcbenz;sofianguy,,zcbenz,,electron-triage,
electron/electron,18463,"Load failure in iframe does not emit did-fail-load event in webview ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.1
* **Operating System:**
  * mac 14.0
* **Last Known Working Electron version:**
  * 4.2

### Expected Behavior

A load failure in iframe should be emitting events in the outside webview.

![image](https://user-images.githubusercontent.com/8652036/58528507-555d3880-8209-11e9-8054-b57cdc8e6817.png)

### Actual Behavior

The `did-fail-load` event is not emitted.

![image](https://user-images.githubusercontent.com/8652036/58528553-8178b980-8209-11e9-8935-a6d1bcd92b3c.png)

### demo
https://github.com/AglaiaWang/electron-quick-start/tree/webview-nesting


",zcbenz,component/webview;bug :beetle:;5-0-x;6-0-x;6-1-x,2019-05-27T11:34:30Z,2021-03-08T23:19:06Z,AglaiaWang,electron-triage,zcbenz;sofianguy,,zcbenz,,electron-triage,
electron/electron,18466,"Background color ignored on scriptable BrowserWindow `BrowserWindow` parameter `backgroundColor` is ignored (the background stays white) if it is created with native chrome `window.open`.

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
3.1.6
* **Operating System:**
Windows 
* **Last Known Working Electron version:**
Never

### Expected Behavior
The window should start-up with defined color

### Actual Behavior
The window start with white color

### To Reproduce
Create a child window with native Chrome window.open (scriptable window) as shown here https://electronjs.org/docs/api/window-open , then set backgroundColor constructor property of BrowserWindow to some color. The result is that it is ignored. The color is set just fine if I do not use the window.open.
",miniak,bug :beetle:,2019-05-27T14:15:17Z,2021-08-09T01:46:02Z,zarubond,miniak;zarubond;iMoses,sofianguy,miniak,miniak,,miniak,
electron/electron,18476,"The `services` MenuItem role displays incorrectly in context menus <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.2
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * none

### Expected Behavior
When used in a context menu (or anywhere other than the main Application menu), a submenu with `role: services` should look like a normal menu, without icons or headings, like in native Mac apps.

Screenshot from Safari  (expected behaviour):
<img width=""537"" alt=""Screenshot 2019-05-26 at 20 44 02"" src=""https://user-images.githubusercontent.com/1566516/58491915-ca783180-8167-11e9-94be-82c0efa12a3e.png"">

### Actual Behavior
A MenuItem with `role: services` always  displays a menu like that used in the main Application menu, with icons and  headings.

Screenshot from Electron (actual behaviour):
<img width=""636"" alt=""Screenshot 2019-05-26 at 21 16 28"" src=""https://user-images.githubusercontent.com/1566516/58491986-ee3b7780-8167-11e9-9771-612e84753420.png"">

### To Reproduce
Create a MenuItem with `role: service`  in a context menu (or anywhere other than in the main menubar).
",codebytere,platform/macOS;blocked/need-info 閴;bug :beetle:;5-0-x,2019-05-28T15:50:58Z,2020-02-26T20:15:46Z,caesar,codebytere;caesar;electron-triage;sindresorhus,sofianguy;electron-triage,,codebytere,,electron-triage,
electron/electron,18502,"MacOS modal focus On MacOS (Windows/Linux work fine) I am opening a modal window. The modal window opens up fine but focus behavior is broken. When I click on the main window (outside of modal) it gains the focus (which should not happen) and then the modal window gains focus (which is correct), but right after that the modal gains blur (which is wrong). Now if I try to focus the modal with mouse it does not do anything as the main window is focused. 

Here I have created a demo which prints out to console which window is focused. 
[https://github.com/zarubond/electron-quick-start/tree/modal_focus](https://github.com/zarubond/electron-quick-start/tree/modal_focus)


### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
Tested on Electron 3, 5, 6-beta4
* **Operating System:**
MacOS 10.13 (Windows 10 and Ubuntu 18.04 work fine)
* **Last Known Working Electron version:**
None

### Expected Behavior
Main window should never get focused if the modal window is opened

### Actual Behavior
Main window gains focused event if the modal window is opened.

### To Reproduce
Open up the console to see which windows are getting focused and the open the modal with open button.

[https://github.com/zarubond/electron-quick-start/tree/modal_focus](https://github.com/zarubond/electron-quick-start/tree/modal_focus)

### Screenshots
![image](https://user-images.githubusercontent.com/6961047/58539950-b3cdeb00-81f8-11e9-8678-da33f1b09b46.png)
(ignore the last line, I had to switch to screen-short program)
",codebytere,platform/macOS;bug :beetle:;5-0-x;3-1-x;6-0-x;6-1-x,2019-05-29T08:03:49Z,2020-06-29T20:15:29Z,zarubond,,sofianguy,,codebytere,codebytere,codebytere,
electron/electron,18503,"GPU information page renders garbage <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.4
* **Operating System:**
  * Windows 10 (17763)
* **Last Known Working Electron version:**
  * 5.0.1

### Expected Behavior
Loading `chrome://gpu` in a `BrowserWindow` shows the page as it does in the [equivalent](https://www.googleapis.com/download/storage/v1/b/chromium-browser-snapshots/o/Win_x64%2F655764%2Fchrome-win.zip?generation=1556747765859143&alt=media) Chromium version (76.0.3783.1).

### Actual Behavior
Garbage text is rendered in the window.

### To Reproduce
1. Use electron-quick-start
2. Edit the line to `mainWindow.loadURL('chrome://gpu')`

### Screenshots
![image](https://user-images.githubusercontent.com/3041926/58550511-c7cc1980-8205-11e9-99dd-1905edb7ac77.png)

### Additional Information
I want to use this page to view the GPU log at the bottom to diagnose crashes and canvas elements going blank. Unlike the GPU information, the log doesn't seem to be accessible via any electron API.",MarshallOfSound,platform/windows;bug :beetle:;6-0-x,2019-05-29T10:37:26Z,2019-05-31T20:05:36Z,robatwilliams,,sofianguy,,sofianguy,,MarshallOfSound,
electron/electron,18516,"Sandbox inside ppapi don't inherit sanbox property from BrowserWindow Hello. I run BrowserWindow with sandbox false and when run ppapi plugin inside, it runing inside sandbox.

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.2
* **Operating System:**
  * Windows 10 (1903)
* **Last Known Working Electron version:**
  * 4.2.2

### Expected Behavior
ppapi process must inheret --no-sandbox switch

### Actual Behavior
ppapi process don't inheret --no-sandbox switch when BrowserWindow have sandbox: false property.

### To Reproduce
Create window and run any ppapi plugin inside
```
new BrowserWindow({
      ...
      webPreferences: {
         sandbox: false
      }
    });
```

### Additional Information
I can fix it with this switch, but is disable sandbox globally.
```
      electron.app.commandLine.appendSwitch('no-sandbox');
```
",miniak,platform/windows;bug :beetle:;5-0-x,2019-05-30T04:53:33Z,2020-02-19T19:14:49Z,Feverqwe,miniak;Feverqwe;electron-triage,sofianguy,,miniak,,electron-triage,
electron/electron,18585,"Calling clearStorageData on a session with caching disabled kills the whole app without any error message/status <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v5.0.2
* **Operating System:**
  * Ubuntu 16.04 x64
  * Ubuntu 18.04 x64

### Expected Behavior
The callback provided to `clearStorageData` should be called. Or an error should be thrown that clearing the storage isn't possible if `cache: false` is set on the session.

### Actual Behavior
The whole Electron app crashes, without any error message at all. The exit code is `0`.

### To Reproduce
This example crashes the process on my machine every time:
```javascript
const {app, BrowserWindow, session, Session} = require('electron');

app.on('ready', () => {
	const sess = session.fromPartition('some-new-partition', {
		cache: false,
	});
	sess.clearCache(() => logger.info('Cleared cache'));
	sess.clearStorageData({}, () => console.log('Storage cleared'));
	const window = new BrowserWindow({
		webPreferences: {
			session: sess
		}
	});
	window.loadURL('https://electronjs.org');
	window.show();
});
```
If `clearCache` is omitted, the app works as expected, i.e. the window is shown. But if `clearCache` isn't omitted, the app crashes at `clearStorageData` without emitting any error or faulty exit code. In the project this bug occurred in, a crash reporter was present, but it failed to create any crash report for this error (might have other reasons, though).
",MarshallOfSound,platform/linux;bug :beetle:;5-0-x,2019-06-03T08:08:40Z,2020-02-19T19:07:48Z,misternerd,MarshallOfSound;electron-triage,sofianguy,,MarshallOfSound,,electron-triage,
electron/electron,18638,"Setting new src in webview is slow in v6 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.6
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * 5.0.2

### Expected Behavior
Setting new src in previous version of electron would take only 1閳2ms.

### Actual Behavior
Setting new src in electron v6 takes ~600閳700ms.

### To Reproduce
1. Clone this repo: https://github.com/steverandy/electron-quick-start/
2. Checkout branch `slow-webview`
3. Run `npm install` and `npm start`
4. Open devtool to see the time took to set new src

### Screenshots

<img width=""1136"" alt=""Screenshot 2019-06-05 at 10 23 12 AM"" src=""https://user-images.githubusercontent.com/525332/58925938-f1dc8900-877b-11e9-84ee-5ae555936117.png"">
",zcbenz,platform/macOS;component/webview;bug :beetle:;6-0-x,2019-06-05T02:23:44Z,2019-07-10T13:20:29Z,steverandy,zcbenz,sofianguy;zcbenz,,sofianguy,,jkleinsc,
electron/electron,18663,"Tray icon becomes invisible when selecting ""Auto"" appearance in System Preferences on macOS 10.15 beta1 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->2.0.7
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS 10.15 beta1
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->N/A

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
The tray icon can display clearly when selecting ""Auto"" appearance in System Preferences on macOS 10.15 beta1

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
The tray icon is invisible when selecting ""Auto"" appearance in System Preferences on macOS 10.15 beta1

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->
1. Install WD Discovery or VMware Fusion
2. Switch macOS 10.15 beta1 Appearance setting to ""Auto""
3. Check the tray icon in the system menu bar
4. The tray icon is invisible

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
Click on the tray icon, if you specify highlight/selected tray image, it displays well
",MarshallOfSound,platform/macOS;bug :beetle:;status/confirmed,2019-06-06T05:35:08Z,2019-06-07T19:01:06Z,yeahdongcn,yeahdongcn;MarshallOfSound,MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,18699,"macOS systemPreferences.getColor values dont match when appearance theme is changed <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.3
* **Operating System:** macOS 10.14.5


### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Update `systemPreferences.getColor` when the theme in Mojave is updated 
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
the values `systemPreferences.getColor` returns are the values of the theme in which the browserwindow was created

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

```js
const {app, BrowserWindow, systemPreferences} = require(""electron"");

let mainWindow;

function updateAppearanceTheme() {
	if (systemPreferences.isDarkMode()) {
		systemPreferences.setAppLevelAppearance(""dark"");
	} else {
		systemPreferences.setAppLevelAppearance(""light"");
	}
	
	console.log(systemPreferences.getColor(""window-background""));
}

systemPreferences.subscribeNotification(""AppleInterfaceThemeChangedNotification"", updateAppearanceTheme);

updateAppearanceTheme();


function createWindow() {
	mainWindow = new BrowserWindow({
		width: 800,
		height: 600,
		backgroundColor: systemPreferences.getColor(""window-background"")
	});
}

app.on(""ready"", createWindow);
```

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->",codebytere,platform/macOS;blocked/need-info 閴;bug :beetle:;5-0-x,2019-06-09T09:56:29Z,2019-08-08T23:18:33Z,crowlKats,codebytere;sofianguy;crowlKats;Tundon;will-stone;jcarpenter,codebytere,,codebytere,,sofianguy,
electron/electron,18745,"Undo/Redo/Cut/Copy/Paste & more Not work using Menubar in Windows <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.3
* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**
  * 4.2.4

### Expected Behavior
Selecting Undo/Redo/Cut/Copy/Paste/ZoomIn/ZoomOut/ResetZoom from menu bar with mouse performs those various functions.

### Actual Behavior
Selecting these options from the menubar using the mouse seems to have no effect.
Using keyboard shortcuts does work ok.

Both mouse & keyboard works ok for all functions in MacOS 10.14.5.

### To Reproduce

https://github.com/electron/fiddle/releases/tag/v0.8.1
Download and run, then try Edit and View menus.
This uses 5.0.1

I have same problem in my own app using 5.0.3. Problem eliminated by downgrading to 4.2.4.

### Additional Information

My app uses standard MenuItem roles:
```
        { role: 'resetzoom' },
        { role: 'zoomin' },
        { role: 'zoomout' },

```

Electron Fiddle does the same:
https://github.com/electron/fiddle/blob/88ce4a76e97c4c93821306b59b3de9a147378058/src/main/menu.ts
```
     item.submenu.push({ type: 'separator' }, { role: 'resetzoom' }, { role: 'zoomin' }, { role: 'zoomout' }); // Add zooming actions
```",erickzhao,platform/windows;platform/linux;bug :beetle:;5-0-x;6-0-x;7-0-x,2019-06-12T15:09:41Z,2019-09-04T17:44:29Z,damianaiamad,codebytere;damianaiamad;javan;erickzhao;leonardocfor;johnosbb;vladimiry;nicodorn;bpasero,sofianguy;Kilian;erickzhao,erickzhao,erickzhao,,codebytere,
electron/electron,18758,"Support for BigBuffer in IPC broken in 6.x and nightly ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
7.0.0-nightly.20190611
* **Operating System:**
MacOS 10.14.5
* **Last Known Working Electron version:**
v5.0.3

### Expected Behavior
With the merge of https://chromium.googlesource.com/chromium/src/+/4c5bd80e, legacy `ipc` internally uses BigBuffer and should support large messages.

### Actual Behavior
Electron crashes when `ipc.send` is called with a large arg (~134mb)

### To Reproduce
The following can be opened in electron-fiddle to reproduce the issue

https://gist.github.com/issacgerges/370a76335fd699930c43bde5cbeb41b7",codebytere,platform/macOS;bug :beetle:;app-feedback-program;6-0-x,2019-06-12T22:27:19Z,2019-10-25T03:59:47Z,issacgerges,issacgerges;coreh;nornagon;codebytere,sofianguy,,sofianguy;MarshallOfSound;codebytere,nornagon,codebytere,
electron/electron,18808,"bug: triggeredByAccelerator logic should not be tied to modifier key logic <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v7.0.0-nightly.20190614
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * none

### Expected Behavior
* Using an accelerator without a modifier to activate a menu item (e.g. pressing key 'B') should result in `triggeredByAccelerator: true`.
* Clicking on a menu item with a menu item (e.g. Shift+Click) should result in `triggeredByAccelerator:false`.

### Actual Behavior
* Using an accelerator without a modifier to activate a menu item (e.g. pressing key 'B') results in `triggeredByAccelerator: false`.
* Clicking on a menu item while holding down a modifier key (e.g. Shift+Click) results in `triggeredByAccelerator:true`.

### To Reproduce
Electron Fiddle gist: https://gist.github.com/19163d031cf3e35bb7b163bd2c39305c
```
{
    label: ""Blade"",
    id: ""blade"",
    accelerator: ""B"",
    click(a, b, e) {
        console.log(e);
    }
}
```
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
![image](https://user-images.githubusercontent.com/8472721/59542262-c5321b00-8eb9-11e9-9e8b-c891b20cfe77.png)

<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
The property is currently derived from some event modifier flags (on Mac: `NSEvent.modifierFlags`). When using an accelerator with a modifier key, these flags are set and the property works as expected.

See:
```cpp
v8::Local<v8::Object> CreateEventFromFlags(v8::Isolate* isolate, int flags) {
  mate::Dictionary obj = mate::Dictionary::CreateEmpty(isolate);
  obj.Set(""shiftKey"", static_cast<bool>(flags & ui::EF_SHIFT_DOWN));
  obj.Set(""ctrlKey"", static_cast<bool>(flags & ui::EF_CONTROL_DOWN));
  obj.Set(""altKey"", static_cast<bool>(flags & ui::EF_ALT_DOWN));
  obj.Set(""metaKey"", static_cast<bool>(flags & ui::EF_COMMAND_DOWN));
  obj.Set(""triggeredByAccelerator"", static_cast<bool>(flags));
  return obj.GetHandle();
}
```
https://github.com/electron/electron/blob/master/atom/browser/api/event_emitter.cc#L85 

However, either triggering an accelerator without a modifier key (or clicking an accelerator with a modifier key) will give an invalid result. The `triggeredByAccelerator` logic should be decoupled from the modifier flags.

A better approach covering the edge case of not using a modifier is to use `NSEvent.type` to distinguish between a click or a keydown. Fix should go [here](https://github.com/electron/electron/blob/6f91af93433df4e9c0e7fb592e5b2dcb0b1c7888/atom/browser/ui/cocoa/atom_menu_controller.mm#L307).

cc @codebytere @erickzhao ",erickzhao,platform/macOS;bug :beetle:;semver/major;7-0-x,2019-06-14T22:43:28Z,2019-06-28T21:38:18Z,deermichel,erickzhao;deermichel;ckerr,sofianguy;ckerr,,codebytere,,codebytere,
electron/electron,18817,"http2 code in Electron 5/6 suffers from a known memory leak ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for a feature request that matches the one I want to file, without success.

### Problem Description
The current version of node (12.0.0) that is embedded in Electron suffers from a memory leak in the http2 code that makes it impossible to use grpc without fatal memory overflow errors.

See https://github.com/nodejs/node/issues/27416

The issues has been resolved in https://github.com/nodejs/node/pull/27914 and the fix is included in [node v12.4.0](https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V12.md#12.4.0)

### Proposed Solution
Update node to 12.4.0

### Alternatives Considered
Without this upgrade, the only way to use grpc is to downgrade Electron to v4.

",MarshallOfSound,bug :beetle:;component/node-integration;5-0-x;6-0-x,2019-06-15T11:31:30Z,2019-06-19T17:47:24Z,mrfelton,MarshallOfSound;mrfelton,MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,18858,"webContents.print() doesn't respond when adding parameters ### Issue Details

* **Electron Version:**
  * 5.0.4
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * None

### Expected Behavior
webContents.print(option, callback) can work with parameters.

### Actual Behavior
webContents.print() will work without parameters.
But it doesn't respond when adding parameters, no errors, and no callback. If the window is closed at this time, a ""false"" callback will be made.

`printPage.webContents.print() // may work`

`printPage.webContents.print({silent: true}, (e) => console.log(e)) // no respond`

I'm not sure if this is a BUG, and I still want to find a solution. Thank!!!",codebytere,platform/windows;bug :beetle:;5-0-x,2019-06-18T09:56:30Z,2019-06-24T21:58:06Z,vivien8261,popod;mapleby;codebytere,sofianguy,,codebytere,,codebytere,electron/electron#18123;
electron/electron,18913,"systemPreferences.isDarkMode doesn't return a value on macOS 10.15 Catalina ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.4
* **Operating System:**
  * MacOS 10.15 Catalina (Developer Beta 2, 19A487l)
* **Last Known Working Electron version:**
  * n/a

### Expected Behavior
When using the auto mode in macOS Catalina, the `systemPreferences.isDarkMode()` should reflect it based on the current mode set during that time of day. For instance, if Auto Mode is turned on and it's 2:00 PM, it should return that dark mode is false.

### Actual Behavior
This value doesn't return any value, meaning that the window retains its current state and thus doesn't comply with the rest of the system.

### To Reproduce
Noticed in https://github.com/hyperspacedev/hyperspace when running the desktop version. The code that makes it happen:

```js
// Watch for a change in macOS's dark mode and reload the window to apply changes
    systemPreferences.subscribeNotification('AppleInterfaceThemeChangedNotification', () => {
        if (mainWindow != null) {
            mainWindow.setVibrancy(systemPreferences.isDarkMode()? ""ultra-dark"": ""light"");
            mainWindow.webContents.reload();
        }
    })
```

```sh
$ git clone https://github.com/hyperspacedev/hyperspace -b beta6
$ npm install
$ npm start || npm run electrify
```

In System Preferences, change the Appearance mode from its current setting to Dark Mode. Wait for the change to take effect on the window, then change it to Auto Mode.

### Screenshots
<img width=""1440"" alt=""image"" src=""https://user-images.githubusercontent.com/13445064/59887306-d8992680-9390-11e9-9f99-1774177267c3.png"">

> Because `isDarkMode` doesn't return a boolean value, it remains in dark mode even though this isn't supposed to be the case in Auto Mode.",MarshallOfSound,platform/macOS;bug :beetle:;5-0-x,2019-06-20T23:26:08Z,2019-06-24T17:17:39Z,alicerunsonfedora,,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,18938,"timers Module Doesn't Work in Renderer <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.8
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

Timeouts and intervals created with the `timers` module should work.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

Timers never fire.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

Reproduce repo: https://github.com/dsanders11/electron-quick-start/tree/timers-module-in-renderer

### Additional Information
<!-- Add any other context about the problem here. -->

Can be 'fixed' by calling `process.nextTick(() => {})` immediately after `timers.setTimeout` to trigger the UV event loop.

Root cause is the `wrapWithActivateUvLoop` wrapper which fixes this issue is not applied to the `timers` module itself, so any direct requires of the module will not use the wrapped version.

https://github.com/electron/electron/blob/792f6b246cbc385fd5db8b6ed4ad017c75d1643f/lib/common/init.ts#L16-L23",MarshallOfSound,bug :beetle:;component/node-integration;4-2-x;5-0-x;6-0-x,2019-06-22T10:48:17Z,2019-06-24T17:18:30Z,dsanders11,,MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,18980,"Better callback value for webContents.print() <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.5
* **Operating System:** macOS Mojave 10.14.5 / Windows too ?
* **Last Known Working Electron version:** not known

### Expected Behavior

When using `webContents.print()`, if the user click the **cancel button** on the print dialog (or on the **""PDF"" button**) this should: return a callback value of ""false"" (error) or ""true"" (success), but with more details that only ""true"" or ""false"". Something like an error/success message that tell that the cancel button has been clicked..

This could be:

- `success` when the document is sent to the printer
- `cancelled` when the cancel button is clicked
- `pdf` / `other-action`? when the PDF button is clicked
- `failed` when an error occurs

### Actual Behavior

In my application, I only want to display a success notification to the user when the print process is successfully launched and an error message when they is an error. For now, false-positive notifications are display when :

- the cancel button is clicked on the print dialog (return is `false`), we do not know if it is an `error` or a `cancel` event and when an error occurs (return is `false` too), we do not know if it is an `error` or a `cancel` event.
- the ""PDF"" button (only on macOS?) is clicked (return is `true`) and we would know if this is a print `success` or something else to display a ""successfully print"" notification to the user.

Not tested, but Windows should have the same problem !

---

Perhaps linked with #15568 but more specific ?
@codebytere perhaps something that is linked with #17400",codebytere,platform/windows;platform/macOS;bug :beetle:;5-0-x,2019-06-25T20:24:47Z,2019-07-01T21:03:21Z,popod,codebytere;popod,sofianguy,,codebytere,,codebytere,
electron/electron,19007,"http post requests and google fonts crash app when packaged for windows <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.6
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * n/a

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
App to load without crashing
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Firstly I don't have the issue when I package for osx and I have tried electron-packager and electron-builder and get the same result.

If I add google fonts to my index file i.e
```
  <link href=""https://fonts.googleapis.com/css?family=Roboto:300,400,500"" rel=""stylesheet"">
  <link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
```
and use those fonts anywhere in my app it crashes straight away with a blank white screen.

Also if I make a http POST request the same thing happens so I assume it's related, http GET works OK

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->
https://github.com/dottodot/electron-test
```sh
$ git clone https://github.com/dottodot/electron-test
$ npm install
$ npm run package:win
```
then open on windows and you'll see it crashes straight away.
then in `src/index.html' remove then following
```
  <link href=""https://fonts.googleapis.com/css?family=Roboto:300,400,500"" rel=""stylesheet"">
  <link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
```
then re-package and it will work.

Similarly the see the http requests issue these can be uncommented in `src/app/app.component.ts` ",MarshallOfSound,platform/macOS;bug :beetle:;5-0-x,2019-06-27T12:09:27Z,2019-12-06T20:41:38Z,dottodot,dottodot;MarshallOfSound,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,19008,"Wrong behavior after canceling the printer dialog box ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.6
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * 4.2.5

### Expected Behavior
When I click on a **button** who uses the `print()` method
The print dialog opens
Then I click on ""Cancel"" button
I must be able to go to another page by clicking on a link

### Actual Behavior
When I click on a **button** who uses the `print()` method
The print dialog opens
Then I click on ""Cancel"" button
I can not click on another link, I have to quit the application and open it again

### To Reproduce
You can download the PIA 2.1.0 version at this URL https://github.com/LINCnil/pia-app/releases/tag/2.1.0 then:
* Create a new PIA
* Click on the **Preview** icon
* Click on the **Printer** icon (Wait for the printer dialog box)
* Click on the **Cancel** button
* Try to go on another page of the application

",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-06-27T12:10:13Z,2019-11-08T18:01:51Z,brunto,fxha;popod;JonathasNascimento;bjbk;codebytere;zadam;314r;lmparppei;brunto;welintonhaas;mikelpr,sofianguy,,codebytere,,jkleinsc,
electron/electron,19048,"Command + Shift + / does not open help menu on MacOS ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 3.1.8
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * 2.0.12

### Expected Behavior
When using keyboard combination `Command Shift /`, I expected the Help menu to open for the application in the top menu bar.

### Actual Behavior
See Screenshots section for a working example of what visually appears when using `Command Shift /` on Firefox 67.0.4 (64-bit) on MacOS 10.14.5.

### To Reproduce
- Install the latest version of Microsoft Visual Studio Code (vscode)  for Mac https://code.visualstudio.com/Download **or** the latest Spotify Desktop Application for Mac https://www.spotify.com/us/download/other/
- Open vscode **or** Spotify
- Press Command Shift / on the keyboard
- Observe the help menu is not opened
- Edit Jul 1: Slack Desktop App Version 3.4.2 also has the same issue
- Edit Jul 5: The `electron-quick-start` application shows the same issue https://github.com/electron/electron-quick-start#to-use.  At time of testing, the app displayed these versions `We are using Node.js 12.0.0, Chromium 73.0.3683.121, and Electron 5.0.6.`

### Screenshots
![image](https://user-images.githubusercontent.com/31117513/60387158-cf7d1900-9a64-11e9-8705-c723a7533319.png)

### Additional Information
This problem was originally reported by microsoft/vscode#69375 and microsoft/vscode#68604

Here is the 'Command + Shift + /' output from `monitorevents(window, 'keydown')` when using Chrome DevTools
![image](https://user-images.githubusercontent.com/31117513/60724369-d3dd8200-9efb-11e9-83e6-1c67b46cb7d8.png)

`console.log(globalShortcut.isRegistered('Command+Shift+/'))` returns false when added to bottom of `main.js` in the `electron-quick-start` app https://github.com/electron/electron-quick-start/blob/master/main.js",codebytere,platform/macOS;bug :beetle:;3-1-x,2019-06-29T17:04:18Z,2021-03-08T21:00:20Z,kinueng,kinueng;esambo;clavin;electron-triage,sofianguy,,codebytere,,electron-triage,electron/electron#21790;
electron/electron,19070,"chrome.runtime's port.postMessage incorrectly send UintArray <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.6
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
* **Operating System:** mac OS 10.14.5
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:** Unknown
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

`port.postMessage` correctly send UintArray

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

`port.postMessage` incorrectly appends unexpected number of `0` in buffer

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.
-->

- clone https://github.com/kwonoj/electron-crx-uintarray
- `npm install && npm start`
- navigate `localhost:8315` on chrome browser, open `chrome-extension://boo/_generated_background_page.html` to observe console message from devtools

<!--
You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
**from Electron@5**
![image](https://user-images.githubusercontent.com/1210596/60470747-7d7bf500-9c16-11e9-8990-994e689acb04.png)

**from chrome browser**
![image](https://user-images.githubusercontent.com/1210596/60470784-a56b5880-9c16-11e9-9cc9-6701c0cb740a.png)


### Additional Information
https://github.com/bvaughn/react-devtools-experimental/issues/344 is caused by this, since every `postMessage` to UnitArray appends `0` to its buffer, operations relying on `0` as default value (unsupported) raises exception on devtools. 

As attached above, this only happens in Electron (4 / 5 both so far tried) but not occurring on Chrome.
",MarshallOfSound,platform/macOS;bug :beetle:;5-0-x,2019-07-01T22:43:13Z,2019-07-15T10:05:10Z,kwonoj,,sofianguy,,MarshallOfSound,,zcbenz,
electron/electron,19074,"Electron does not support withFileTypes in readdir inside asar <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for a feature request that matches the one I want to file, without success.

### Problem Description
<!-- Is your feature request related to a problem? Please add a clear and concise description of what the problem is. -->
Electrons patching of asar does not support withFileTypes (or encoding for that matter) options on readdir and readdirSync
### Proposed Solution
<!-- Describe the solution you'd like in a clear and concise manner -->
[as you can see here](https://github.com/electron/electron/blob/cec61d010b7f421870d07f00d2aae25bb3b05b61/lib/common/asar.js#L605), electrons wrapping of readdir & readdir sync do not support the withFileTypes option, this option is majorly useful when reading over directories in node and requires a lot of unnecessary code work around this.
The Node that has the info neccessary for withTypes data is already being grabbed [here](https://github.com/electron/electron/blob/34c4c8d5088fa183f56baea28809de6f2a427e02/shell/common/asar/archive.cc#L245)
Im not versed enough in c++ to make a PR, but someone should be able to use that to get the info neccessary",codebytere,bug :beetle:;platform/all,2019-07-02T05:29:40Z,2020-06-12T15:33:00Z,xssc,,sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,19075,"New 閳ユ笅nspector閳 folder in Electron 5 package that doesn't do anything? * [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

* **Electron Package Version:**
  5.0.6 for 32-bit Windows
* **Operating System:**
  Windows 10
* **Last Known Electron Package Version Without This Folder:**
  4.2.5

After updating Electron from **v4** to **v5** I found a new **~9MB** folder `inspector` containing **188 files**  in the Electron package install path at **`node_modules/electron/dist/resources/inspector`** or **`${packagedApp}/resources/inspector`** after packaging with `electron-builder`. What is this for?

There seems to be no consequences for deleting this folder. I can still use Electron and chrome devtools perfectly fine after removing it.

**Can it be safely deleted/excluded from my packaged app?**

Any help is appreciated!",miniak,platform/windows;platform/linux;bug :beetle:;5-0-x,2019-07-02T10:54:20Z,2019-07-16T19:00:24Z,aabuhijleh,sofianguy,sofianguy;miniak,,miniak,,sofianguy,
electron/electron,19091,"Color set using setBackgroundColor ignored when loading file or URL ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.6
* **Operating System:**
  * Windows 10 1903

### Expected Behavior
The page is loaded with the background color specified by the last call to setBackgroundColor.

### Actual Behavior
The page is loaded with the background color specified by the color set in the initial creation options. If no page is loaded, the color from the last call to setBackgroundColor is correctly displayed.

### To Reproduce
https://github.com/electron/electron-quick-start/compare/master...sylveon:master

### Screenshots
![image](https://user-images.githubusercontent.com/6440374/60552536-39afeb00-9cfd-11e9-8e7a-036b57fbd4b0.png)",codebytere,platform/windows;bug :beetle:;5-0-x;7-1-x;9-x-y,2019-07-02T23:14:59Z,2020-08-13T04:49:14Z,sylveon,kiavashp;mikeyyyzhao;codebytere;sylveon,sofianguy;electron-triage;erickzhao,,codebytere,,codebytere,
electron/electron,19131,"BrowserWindow.on('swipe') broken since Electron 3 ### Issue Details

* **Electron Version:**
  * 3.0.x, 4.0.x, 5.0.x, 6.0.x
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * 2.0.x

### Expected Behavior
`BrowserWindow.on('swipe')` fires when doing a 3-finger swipe gesture.

### Actual Behavior
`BrowserWindow.on('swipe')` does not fire.
",codebytere,platform/macOS;bug :beetle:;4-2-x;5-0-x;3-1-x;6-0-x,2019-07-06T07:06:54Z,2019-07-19T23:21:08Z,bpasero,bpasero;KASOGIT;sdnyco;codebytere;sourabhverificient,sofianguy,,codebytere,,codebytere,
electron/electron,19194,"use window.close in Browserview-webcontents(web page) will close the app!!!!!!! 
### Preflight Checklist


* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

Electron Version: 5.0.6
Platform: macOs 10.14

Expected Behavior: 
    when use `window.close()` in web page of Browserview, which page with `onbeforunload` hook. and it will fire `webContents.on('will-prevent-unload', xxx)`, so that i can open a tips dialog of leaving page.

Actual Behavior:
   The Electron app is closed.

I have saw the source code. and it had rewrite the function `window.close` just like this:

```

export const windowSetup = (
  guestInstanceId: number, openerId: number, isHiddenPage: boolean, usesNativeWindowOpen: boolean
) => {
  if (guestInstanceId == null) {
    // Override default window.close.
    window.close = function () {
      ipcRendererInternal.sendSync('ELECTRON_BROWSER_WINDOW_CLOSE')
    }
  }
......
}
```

and in rpc-server.js ,just like this:

```
ipcMainInternal.on('ELECTRON_BROWSER_WINDOW_CLOSE', function (event) {
  const window = event.sender.getOwnerBrowserWindow()
  if (window) {
    window.close()
  }
  event.returnValue = null
})

```

so if like this, how i can close the web page in Browserview, and can get the thing i want?",codebytere,platform/macOS;bug :beetle:;5-0-x;8-x-y,2019-07-10T11:41:23Z,2021-03-08T23:15:31Z,spcBackToLife,pushkin-;PalmerAL;electron-triage;spcBackToLife;sentialx;Xylobol;codebytere;miniak;MatthieuLeMee,sofianguy;codebytere,codebytere,codebytere,,electron-triage,
electron/electron,19306,"Setting maximizable to false still shows the maximize icon on the frame Here is my sample code to create the window:

```
let aboutWindow = new BrowserWindow({
    width: 300,
    height: 300,
    backgroundColor: '#222',
    show: true,
    maximizable: false,
    minimizable: false,
    alwaysOnTop: true,
    title: 'About'
})
```

And here is the screenshot of the output window on Mac(Mojave 10.14.4). Have't tested on other platform yet.

<img width=""297"" alt=""Screen Shot 2019-07-17 at 9 36 57 PM"" src=""https://user-images.githubusercontent.com/6407135/61392526-a79f0980-a8dc-11e9-87f3-c722d41b32bc.png"">

Electron version: 4.2.0

As you can see the maximize icon is still there on the frame even after setting maximizable to false while creating the window. I can click that icon and the window goes full screen.",deermichel,bug :beetle:;4-2-x,2019-07-17T16:25:12Z,2019-07-19T23:18:00Z,kkumar4,deermichel,sofianguy,,deermichel,,codebytere,
electron/electron,19321,"typings for MenuItemConstructorOptions.roles are missing possible values <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
 5.0.7
* **Operating System:**
 macOS

### Expected Behavior
No typescript error when using for example `recentDocuments`-role for MenuItem

### Actual Behavior
Typescript error when using for example `recentDocuments`-role for MenuItem

### To Reproduce
Try to use `recentDocuments`-role on a MenuItem

### Additional Information

In the [menu-item.md](https://github.com/electron/electron/blob/master/docs/api/menu-item.md#roles) there are the possible roles only for macOS missing. This results in the following typescript declaration line: `role?: ('undo' | 'redo' | 'cut' | 'copy' | 'paste' | 'pasteandmatchstyle' | 'delete' | 'selectall' | 'reload' | 'forcereload' | 'toggledevtools' | 'resetzoom' | 'zoomin' | 'zoomout' | 'togglefullscreen' | 'window' | 'minimize' | 'close' | 'help' | 'about' | 'services' | 'hide' | 'hideothers' | 'unhide' | 'quit' | 'startspeaking' | 'stopspeaking' | 'close' | 'minimize' | 'zoom' | 'front' | 'appMenu' | 'fileMenu' | 'editMenu' | 'viewMenu' | 'windowMenu');`

I can still use the role I write `role: 'recentDocuments' as any`. I don't think this is how it should be. 
",codebytere,platform/macOS;bug :beetle:;5-0-x,2019-07-18T08:53:54Z,2019-07-31T21:13:57Z,patsimm,,sofianguy,,codebytere,,codebytere,
electron/electron,19348,"MessageBox `type` property not working on Windows <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** v7 nightly 20190615
* **Operating System:** Windows 10 (1809)
* **Last Known Working Electron version:** v7 nightly 20190613

### Expected Behavior
Icon is shown in message box according to the `type` property.

### Actual Behavior
Icon is not shown.

### To Reproduce
```
const { app, dialog } = require(""electron"")
app.on(""ready"", () => {
  dialog.showMessageBox({
    title: ""Also, something with windows looks broken."",
    type: ""info""
  })
})
```

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
_before_
![image](https://user-images.githubusercontent.com/8472721/61568972-1cd42100-aa3a-11e9-9fa6-6f4792eef625.png)

_after_
![image](https://user-images.githubusercontent.com/8472721/61569000-2cec0080-aa3a-11e9-9805-bb9900320f1d.png)


### Additional Information
I'm pretty sure this issue was introduced by https://github.com/electron/electron/pull/18732. Any ideas @codebytere? Probs the `icon` property is broken as well.",codebytere,bug :beetle:;platform/all;7-0-x,2019-07-19T22:34:04Z,2019-07-22T15:19:25Z,deermichel,,deermichel;codebytere,codebytere,codebytere,,codebytere,
electron/electron,19384,"6.0.0-beta.14 - Windows 10 - Window.setImmediate never run passed callback <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v6.0.0-beta.14
* **Operating System:**
  * Windows 10 Pro
* **Last Known Working Electron version:**
  * v5.0.1

### Expected Behavior
After invoking setImmediate(callback) we expect that callback will be called.

SIDE NOTE: We get this on chrome browser which dose not implement this function natively . This function is rather IE/Edge specific (https://developer.mozilla.org/en-US/docs/Web/API/Window/setImmediate).

### Actual Behavior
Passed callback is never called. There is no error, Immediate object is created.

### To Reproduce
Create BrowserWindow open dev tools console and run:
```javascript
setImmediate(() => console.log('Never gets logged'))
```
### Additional Information
When we reload window location.reload() function starts to work.
",erickzhao,platform/windows;bug :beetle:;6-0-x,2019-07-23T14:09:40Z,2019-07-23T20:18:12Z,amuzacz,codebytere;amuzacz;erickzhao;MarshallOfSound,codebytere,,erickzhao,miniak,codebytere,
electron/electron,19425,"process.uptime() returns unexpected result <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  v5.0.8
* **Operating System:**
 Microsoft Windows 10 Pro (Version: 10.0.18362 Build 18362)
* **Last Known Working Electron version:**
  unknown

### Expected Behavior
The same result node.js produces: the time the process is already running.
Output Node.js 12.7.0
```
node foo.js
2.1028718
4.1022395
6.1052112
8.1049451
```
### Actual Behavior
Electron returns some other numbers. 
Output Electron 5.0.8
```
electron foo.js 

 585175.0756366
585177.0780253
585179.0767907
585181.0769859
```

### To Reproduce
foo.js
```
function uptime() {
  console.log(process.uptime());
}

setTimeout(uptime, 2000);
setTimeout(uptime, 4000);
setTimeout(uptime, 6000);
setTimeout(uptime, 8000);
```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",deermichel,platform/windows;bug :beetle:;5-0-x,2019-07-24T11:37:03Z,2019-07-30T18:08:28Z,MareikeTaeubner,deermichel,sofianguy,,deermichel,,jkleinsc,
electron/electron,19481,"Frameless window does not enter fullscreen correctly from maximized <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.0-beta.15
* **Operating System:**
  * Windows 10 (1903)
* **Last Known Working Electron version:**
  * 5.0.8

### Expected Behaviour
When a frameless window is maximized, and then enters full screen from that state, it should fill the entire screen with no border.

### Actual Behaviour
If a frameless window enters fullscreen from a maximized state, a ~10px white border appears all around the screen.
(Hard to show in a screenshot on a white page閳)

### To Reproduce
Fiddle gist: https://gist.github.com/caesar/12c97746e9d8b0e9bd2ee7e4958c63ad

### Screenshots
It's hard to see the issue here because the border is white and so is the background of this page閳 but if you look carefully, the second time I the window enters fullscreen (when it does it from maximized), a white border appears.
![Kapture 2019-07-26 at 23 28 21](https://user-images.githubusercontent.com/1566516/61984625-20991200-affd-11e9-9e8a-9b4faed1fea8.gif)
",brenca,platform/windows;bug :beetle:;6-0-x,2019-07-26T22:32:20Z,2019-08-26T01:03:58Z,caesar,,codebytere,,brenca,,zcbenz,
electron/electron,19489,"Web Bluetooth: `navigator.bluetooth.requestDevice` returns immediately if user cancels dialog early <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

*  I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
*  I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
*  I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.8
* **Operating System:**
  * Mac OS Mojave and WIndows 10
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
`navigator.bluetooth.requestDevice` should scan for devices if called repeatedly.

### Actual Behavior
`navigator.bluetooth.requestDevice` returns immediately if called repeatedly and no `select-bluetooth-device` events have been emitted during a previous call. Error: User cancelled.

### Additional Information
Not sure if this is a feature request. It is certainly undesired behavior.

I have implemented a BT selection dialog (https://www.npmjs.com/package/electron-webbt-dialog). If the user cancels the dialog before a device has been detected, `navigator.bluetooth.requestDevice` thinks that the user canceled, and never leaves that state; any further attempt to call `navigator.bluetooth.requestDevice` returns immediately with the same error.

I suspect this is because the callback supplied with `select-bluetooth-device` is never called, because that event was never fired. The UI cannot tell `navigator.bluetooth.requestDevice` that it cancelled properly.

I would suggest that `navigator.bluetooth.requestDevice` emits a `select-bluetooth-device` event immediately with an empty device list so the main process knows the callback, and can inform `navigator.bluetooth.requestDevice` appropriately if the user canceled the dialog before a BT device has been detected.
",codebytere,platform/windows;platform/macOS;bug :beetle:;5-0-x;8-x-y,2019-07-27T16:36:42Z,2021-03-08T23:12:36Z,daumling,daumling;electron-triage;TerrapinSoftware;bierzorutas,sofianguy;electron-triage,electron-triage,codebytere,,electron-triage,
electron/electron,19522,"app.dock.bounce no longer has a default bounce type Hi all,

I just upgraded to `6.0` and `TypeError: Insufficient number of arguments.`",codebytere,platform/macOS;bug :beetle:;6-0-x,2019-07-30T02:10:26Z,2019-07-31T15:20:46Z,nghiepdev,MarshallOfSound,MarshallOfSound,,codebytere,,codebytere,
electron/electron,19588,"Win: app.clearRecentDocuments does not work <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
app.clearRecentDocuments does not work on Windows.


* **Electron Version:**
  * 5.0.8
* **Operating System:**
  * Windows 10 pro; build 1903
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
List of recent documents should be cleared

### Actual Behavior
List of recent documents continues to accumulate

### To Reproduce
Try `app.clearRecentDocuments();` on Windows

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
![image](https://user-images.githubusercontent.com/670682/62343120-307b8f00-b4f2-11e9-853e-a8aac23b8ecd.png)
![image](https://user-images.githubusercontent.com/670682/62343111-20fc4600-b4f2-11e9-8277-189fe6f0a69b.png)

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/windows;bug :beetle:;5-0-x,2019-08-02T03:55:46Z,2019-08-05T22:11:44Z,dospolov,codebytere;dospolov,codebytere,,codebytere,,codebytere,
electron/electron,19765,"vibrancy + backdrop-filter breaks (works without vibrancy) ### Issue Details

* **Electron Version:** Tried 6.0.2 and 7 beta 2
* **Operating System:** Mac 10.14.6
* **Last Known Working Electron version:** never

### Expected Behavior

If I don't do vibrancy I see the proper blur effect like so:

![image](https://user-images.githubusercontent.com/12100/63069890-dacdbc00-becd-11e9-8f7d-4a358fe3c9d5.png)

If I do have vibrancy on the window, it looks like this, where it shows a blurred layer *as well as the original non-blurred layer both*:

![image](https://user-images.githubusercontent.com/12100/63069966-2d0edd00-bece-11e9-8f9c-8590f652c7ab.png)

### To Reproduce

Started on a fiddle but this is a super complex fiddle, is there a simpler one? May not work...

https://github.com/natew/fiddle

```sh
$ git clone git@github.com:natew/fiddle.git
$ npm install
$ npm start || electron .
```
",MarshallOfSound,platform/macOS;bug :beetle:;7-0-x;6-1-x;7-1-x,2019-08-15T03:06:42Z,2021-03-09T03:42:56Z,natew,mofux;latesamurai;jcarpenter;drewrodrigues;electron-triage;Servinjesus1;augustography;sapkra;wthoutanymmries;andredezzy,sofianguy,sofianguy,sofianguy,,electron-triage,
electron/electron,19769,"set the x of BrowserWindow to 1021-1079,the width of the win will increase 2 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * Electron v6.0.2
* **Operating System:**
  * Windows 10 1903
* **Last Known Working Electron version:**
  * just had used v6.0.2

### Expected Behavior
set bound.x of browserWin to a new number (1021-1079)

### Actual Behavior
the bound.width increase 2

### To Reproduce
`setInterval(()=>{
        win.setBounds({
            x:1079,
        })
        console.log(win.getBounds().width)
    },100);`

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![image](https://user-images.githubusercontent.com/45453624/63081311-e07edc80-bf75-11e9-930a-3d903006207a.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",brenca,platform/windows;bug :beetle:;6-1-x,2019-08-15T07:47:21Z,2021-03-09T03:42:48Z,KinoriN,brenca;KinoriN;Garbee;electron-triage,sofianguy,sofianguy,brenca,,electron-triage,
electron/electron,19779,"bug: open file dialog doesn't allow selecting files <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v8.0.0-nightly.20190814, master
* **Operating System:**
  * macOS 10.14.6
* **Last Known Working Electron version:**
  * v8.0.0-nightly.20190813

### Expected Behavior
Should be able to select files or folders.

### Actual Behavior
Selecting is disabled (greyed out).

### To Reproduce
```js
const { app, dialog } = require('electron')

app.on('ready', () => {
  dialog.showOpenDialogSync({
    title: 'Hello!',
    properties: ['openFile'],
  })
})
```

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
![image](https://user-images.githubusercontent.com/8472721/63111062-b6abc280-bf41-11e9-8e68-992792390014.png)


### Additional Information
",codebytere,platform/macOS;bug :beetle:;8-x-y,2019-08-15T16:48:27Z,2019-08-16T15:55:02Z,deermichel,deermichel;codebytere,deermichel;sofianguy,,codebytere,,ckerr,
electron/electron,19795,"Can't show file chooser dialog when clicking <input type=""file""> after canceled the dialog. <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0-beta.3
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * 6.0.2

### Expected Behavior
Show file chooser dialog when clicking input type=""file"" after canceled the dialog.

### Actual Behavior
Can't show file chooser dialog when clicking input type=""file"" after canceled the dialog.

### To Reproduce

1. Clone and Install source code.
```sh
$ git clone https://github.com/agata/electron-quick-start.git -b bug-for-file-chooser-after-canceled
$ npm install
$ npm start || electron .
```
2. Click <input type=""file""> -> Show file chooser dialog.
3. Click cancel button of the dialog -> Close the dialog
4. Click <input type=""file""> again -> Can't show file chooser dialog.

### Screenshots
![bug-for-file-chooser-after-canceled](https://user-images.githubusercontent.com/40473/63176157-60916900-c080-11e9-8715-f263319f0e68.gif)

### Additional Information
WebView has same problem.",codebytere,platform/macOS;bug :beetle:;7-0-x,2019-08-16T14:53:32Z,2019-08-23T21:18:31Z,agata,,codebytere,,sofianguy,,codebytere,
electron/electron,20027,"Mac App Store Private API Rejection: Electron 5.0.10 * [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.

### Issue Details

* **Electron Version:** 5.0.10

### Rejection Email
ITMS-90338: Non-public API usage - The app contains or inherits from non-public classes in Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework: CAContext, CALayerHost, NSAccessibilityRemoteUIElement, NSNextStepFrame, NSThemeFrame, NSURLFileTypeMappings . If method names in your source code match the private Apple APIs listed above, altering your method names will help prevent this app from being flagged in future submissions. In addition, note that one or more of the above APIs may be located in a static library that was included with your app. If so, they must be removed. For further information, visit the Technical Support Information at http://developer.apple.com/support/technical/
",zcbenz,bug :beetle:;app-store;5-0-x;7-0-x;6-1-x;7-1-x,2019-08-29T15:46:29Z,2020-02-24T03:08:58Z,thomasdao,thomasdao;JustinPierce;JCBsystem;aydogankaragoz;mytran;yegor-slate;gurugeek;ForU;lubo08;alicerunsonfedora;buu700;zcbenz;gaodeng;MarshallOfSound;ogi1982;ffflorian;iwodoudou,sofianguy,,,,zcbenz,
electron/electron,20086,"Closing child window hangs main window ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

I have enabled nativeWindowOpen and nodeIntegrationInSubFrames for main window, and I have a preload script which required a remote from electron. Which this configuration I open a child window and then I close it. The main window render process hangs for ever so I have to restart whole app. Here is and example app https://github.com/zarubond/electron-quick-start/tree/child_hang

* **Electron Version:**
6.0.7, 7.0.0-beta3
* **Operating System:**
Windows, Linux, MacOS
* **Last Known Working Electron version:**
5.0.10

### Expected Behavior
Closing child window should not hang main window for ever

### Actual Behavior
Main window hangs after closing child window. 

### To Reproduce
Open child window and then close it

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",ckerr;miniak,bug :beetle:;app-feedback-program;7-0-x;6-1-x;7-1-x,2019-09-03T13:38:48Z,2020-07-14T15:57:23Z,zarubond,VishwasShashidhar;NikolayMakhonin;cynx;ckerr;miniak;loc,sofianguy,miniak,jkleinsc;miniak,,ckerr,
electron/electron,20122,"LoginItemSettings not in sync with OS level setting on Windows 10 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * any
* **Operating System:**
  *  Windows 10 (any version) 
* **Last Known Working Electron version:**
  * none

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
- setLoginItemSettings wit  `{openAtLogin: true}`  also delete corresponding StartupApproved\Run to guarantee launch on login is happening
- getting LoginItemSettings  should consider StartupApproved\Run reg key settings and return `{openAtLogin: false}` if corresponding reg value is present and has any value different from `02 
00 00 00 00 00 00 00 00 00 00 00` 

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
`getLoginItemSettings` will report it is enabled even though it is disabled on the OS level. The app will not launch on login

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

1. Set an Electron app to launch on login via `setLoginItemSettings` 
2. Disable the startup of the App via Taskmanager or System Settings 


<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->

The OS disables launch on login items via seperate registry key. 
For each launch on login item stored under `Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run` a corresponding binary value is created under `Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run`. If the value does not exist it means it is enabled. If the reg value exists and has a value of `02 
00 00 00 00 00 00 00 00 00 00 00`  it means the item is enabled. If the reg value exists and has any value different from `02 
00 00 00 00 00 00 00 00 00 00 00` it means the item is disabled.
",codebytere,platform/windows;bug :beetle:,2019-09-05T00:10:18Z,2021-03-09T23:04:04Z,bitdisaster,bitdisaster,sofianguy,,codebytere,,nornagon,
electron/electron,20181,"The open-url Event doesn't fire anymore <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v7.0.0-beta.4
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * v6.0.8

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

The [`open-url`-Event](https://electronjs.org/docs/api/app#event-open-url-macos) should fire and the application instance gains focus. 

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

The [`open-url`-Event](https://electronjs.org/docs/api/app#event-open-url-macos) doesn't  fire, but the application instance gains focus. 

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

Implement the following code:

```js
const { app } = require('electron')

app.once('ready', () => {
  app.setAsDefaultProtocolClient('foo')
  app.on('open-url', (event, url) => {
    console.log('this should be logged')
  })
})
```

From your terminal run:

```bash
$ open foo://some/url
```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->",codebytere,platform/macOS;bug :beetle:;7-0-x,2019-09-10T09:24:06Z,2019-10-10T15:54:04Z,HaNdTriX,,sofianguy,,codebytere,,MarshallOfSound,
electron/electron,20182,"Content type charset headers break registerStreamProtocol api <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0-beta.4
* **Operating System:**
  * MacOS 10.14.5
* **Last Known Working Electron version:**
  * 7.0.0-beta.3

### Tltr

| Header                                   | Result       |
|------------------------------------------|--------------|
| `content-type: text/html; charset=UTF-8` | doesn't work |
| `content-type: text/html`                | works        |


### Expected Behavior

`protocol.registerStreamProtocol` should work with content-type charset headers 

#### `BrowserWindow` Result Screenshot
<img width=""113"" alt=""Bildschirmfoto 2019-09-10 um 11 47 20"" src=""https://user-images.githubusercontent.com/1265681/64603483-c8597c00-d3c0-11e9-9410-517c9f3e79bf.png"">


### Actual Behavior

`protocol.registerStreamProtocol` doesn't work with content-type charset headers

#### `BrowserWindow` Result Screenshot

<img width=""218"" alt=""Bildschirmfoto 2019-09-10 um 11 47 30"" src=""https://user-images.githubusercontent.com/1265681/64603559-e58e4a80-d3c0-11e9-9044-e487a3ebd88c.png"">

### To Reproduce

```sh
$ git clone git@github.com:HaNdTriX/electron-content-type-bug.git
$ npm install
$ npm start
```

or use the following code

```js
const { app, protocol, BrowserWindow } = require('electron')
const { PassThrough } = require('stream')

function createStream (text) {
  const rv = new PassThrough() // PassThrough is also a Readable stream
  rv.push(text)
  rv.push(null)
  return rv
}

app.on('ready', () => {
  protocol.registerStreamProtocol('atom', (request, callback) => {
    callback({
      statusCode: 200,
      headers: {
        'content-type': 'text/html; charset=UTF-8'
        // 'content-type': 'text/html' -> is working
      },
      data: createStream('<h5>Response</h5>')
    })
  })

  let win = new BrowserWindow({ width: 800, height: 600 })
  win.loadURL('atom://app')
})

```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->
",zcbenz;deepak1556,platform/macOS;bug :beetle:;7-0-x,2019-09-10T09:51:40Z,2019-10-11T18:54:51Z,HaNdTriX,,sofianguy,,sofianguy,,jkleinsc,
electron/electron,20248,"Cannot use service worker in html document served from custom protocol: The document is in an invalid state. <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 
  * 7.0.0-beta.4
* **Operating System:** 
  * macOS 10.14.6
* **Last Known Working Electron version:** 
  * NA

### Expected Behavior
Serve up a simple html page inside an iframe using a custom protocol (`test-scheme` in this example). The html page should be able to register a service worker to handle requests

Here's the example main process code:

```js
protocol.registerSchemesAsPrivileged([
  { scheme: 'test-scheme', privileges: { allowServiceWorkers: true, standard: true, secure: true } }
]);
```

```js
 protocol.registerStringProtocol('test-scheme, (request, cb) => {
    cb({
      mimeType: 'text/html',
      charset: 'utf-8',
      data: `<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Heey World!</title>
  </head>
  <body>
    Hello iframe!
    <script>
      window.navigator.serviceWorker.register('service-worker.js', {scope: './'}).then(function(registration) {
        console.log('All good')
      })
    </script>
  </body>
</html>`
    })
  });
```

### Actual Behavior
The service worker cannot be registered. In the dev tools console, I see the error: 

```
DOMException: Failed to register a ServiceWorker: The document is in an invalid state.
```

### To Reproduce
Use the electron fiddle: https://gist.github.com/98ead2337cf17febffa64f731a8cc3e8

Look at the devtools output to see the errors

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->


/cc @deepak1556 - This is blocks migrating VS Code to use normal iframes for its webviews",zcbenz,bug :beetle:;platform/all;11-x-y;12-x-y;13-x-y,2019-09-16T23:32:13Z,2021-03-23T15:16:54Z,mjbvz,cawa-93;vladimiry;deepak1556,sofianguy;electron-triage;deepak1556,deepak1556,deepak1556,,jkleinsc,
electron/electron,20256,"process.on('document-start', ...) not emitted in sandbox mode When attempting to listen to `'document-start'` with `process.on('document-start', () => { ... })`, I can see output when I have sandbox mode off, even if I have contextIsolation enabled and nodeIntegration disabled, but as soon as sandbox is enabled this doesn't work.

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0-beta4
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * Couldn't find one where it worked

### Expected Behavior
Code in the event handler should run after the document exists

### Actual Behavior
The callback is never called

### To Reproduce
Run `process.on('document-start', () => console.log(""Test""))` in the preload script in a window with sandbox mode on
https://gist.github.com/samiskin/01ea5d1bb5b72bd9247384a8a75ad784",MarshallOfSound,platform/macOS;bug :beetle:;7-0-x,2019-09-17T16:00:17Z,2019-11-06T01:53:04Z,samiskin,,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,20277,"Renderer process leaked/orphaned when page that uses SharedWorker and remote module is closed <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** (reproduces on all of these):
  * Electron v6.0.0  Chromium v76.0.3809.88  Node v12.4.0  v8 v7.6.303.27-electron.0
  * Electron v6.0.9  Chromium v76.0.3809.146  Node v12.4.0  v8 v7.6.303.31-electron.0
  * Electron v7.0.0-beta.4  Chromium v78.0.3896.6  Node v12.8.1  v8 v7.8.212.1-electron.0

* **Operating System:**
  * Windows 10.0.17763 Build 17763
  * (Ubuntu 18 does not appear to be affected)

* **Last Known Working Electron version:**
   * Electron v5.0.10  Chromium v73.0.3683.121  Node v12.0.0  v8 v7.3.492.27-electron.0


### Expected Behavior
After loading a page with a `SharedWorker` and a preload script that requires the `remote` module, when electron closes, all electron and chromium renderer processes exit cleanly.

### Actual Behavior
After loading a page with a `SharedWorker` and a preload script that requires the `remote` module, when electron closes, it leaves a leaked/orphaned chromium renderer process running after all other electron processes exit.

### To Reproduce
This issue is readily reproducible for me with the following steps:

1. Run: `git clone https://github.com/devmonkey22/electron-renderer-leak.git`
2. Run: `npm install`
3. Run: `npm start`
4. Observe your process list with a tool like Process Explorer (tree view is best) or Task Manager. Notice the single renderer process and PID, along with other electron processes.
5. Close Electron
6. Observe that the `electron --type=renderer` process remains after all other processes exit.

The orphaned process doesn't use much CPU, but holds quite a bit of RAM until its forced terminated.

### Screenshots

While running:
<img width=""1528"" alt=""renderer-leak-while-running"" src=""https://user-images.githubusercontent.com/5084545/65179170-40125100-da28-11e9-9017-dd013f260c57.png"">

After closing Electron:
<img width=""1535"" alt=""renderer-leak-orphaned"" src=""https://user-images.githubusercontent.com/5084545/65179187-46083200-da28-11e9-9466-f6c085468280.png"">


### Additional Information
I'm not sure why, but this requires the combination of SharedWorker and require of `remote` module in preload to trigger the issue.  If either feature is commented out, the leak does not occur.

Originally my issue was occurring within a `webview` that used a SharedWorker (who is supposed to close the port during the `beforeunload` event, but that doesn't fire consistently (at all?) with Electron/Chromium.  However, I was able to isolate it that to occur in the main renderer, not just a webview now through the sample given.  Even when I close the port to the SharedWorker manually (via setTimeout after X seconds for example), the process still leaks.

When I downgraded my sample to 5.0.10, the issue did not occur.
",MarshallOfSound,platform/windows;bug :beetle:;7-0-x;6-1-x;7-1-x,2019-09-18T19:29:56Z,2021-03-09T03:40:15Z,devmonkey22,originalmoose;amirebrahimi;electron-triage,sofianguy,sofianguy,zcbenz,,electron-triage,
electron/electron,20345,"Calling hang() or crash() in browser window does not trigger unresponsive or crashed events <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.10 _(same result in 5.0.10)_
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
I need to listen to when the window goes unresponsive or crashes, then restart the app. However, when I manually call `process.hang()` or `process.crash()` to test the events, I expect the event listeners I setup in `main.js` to be triggered.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
When I manually call `process.hang()` or `process.crash()`, the app goes unresponsive or crashes, but the events are not triggered.

### To Reproduce

_See forked repo:_  [jocodev1/electron-quick-start](https://github.com/jocodev1/electron-quick-start/tree/bug/notFiringCrashEvents)

```sh
$ git clone https://github.com/jocodev1/electron-quick-start.git -b bug/notFiringCrashEvents
$ npm i --no-optional
$ npm start
```

In window, run `process.hang()` or `process.crash()` from console. You should see console messages when each event should get triggered, but there are none.

### Screenshots

![browserwindow](https://user-images.githubusercontent.com/10883716/65631994-aa863c80-dfa6-11e9-8f48-53db79dc6d91.png)

![console](https://user-images.githubusercontent.com/10883716/65631999-ad812d00-dfa6-11e9-8eeb-1589e9c09063.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/windows;bug :beetle:;5-0-x;6-1-x,2019-09-25T19:16:08Z,2021-03-08T23:09:41Z,jocodev1,fabiospampinato;codebytere;electron-triage,sofianguy,sofianguy,codebytere,,electron-triage,
electron/electron,20392,"Filter cookies by domain is not working in 7.0.0 ### Issue Details

* **Electron Version:**
  * 7.0.0-beta.5
* **Operating System:**
  * Windows
* **Last Known Working Electron version:**
  * 6

### Expected Behavior
```js
const filter = {
  domain: 'facebook.com'
}
const cookies = await webContents.session.cookies.get(filter) // will resolve with actual cookies
```

### Actual Behavior
```js
const filter = {
  domain: 'facebook.com',
  // url: 'https://facebook.com' - NOTE: filtering by url is working
}
const cookies = await webContents.session.cookies.get(filter) // is returning empty array
```

### To Reproduce
```js
const filter = {
  domain: 'facebook.com'
}
const cookies = await webContents.session.cookies.get(filter)
```

Filter by `domain` is returning empty array, but if I try to filter using `url` is returning the actual cookies.

Tested on all `7` beta versions.
On `6` filtering by domain was worked.
",zcbenz,platform/windows;bug :beetle:;7-0-x,2019-10-01T10:59:21Z,2019-10-09T06:57:42Z,btzsoft,codebytere;btzsoft,sofianguy,,sofianguy,,zcbenz,
electron/electron,20461,"win64 zombie renderer process after crashing <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v6.0.11
* **Operating System:**
  * Microsoft Windows 10 Pro 10.0.18362 Build 18362

### Expected Behavior
No processes should be left behind after the main process crashes.

### Actual Behavior
A zombie renderer process is left behind after the crash.

### To Reproduce

run from cmd.exe:
```sh
$ git clone https://github.com/shahrouzz/electron-win64-zombie-bug.git
$ cd electron-win64-zombie-bug
$ yarn
$ yarn electron .
```
After the crash there will still be a electron.exe renderer process running in taskmanager.

note: if you run it in bash on windows, use the following command to run:

```sh
./node_modules/electron/dist/electron.exe .
```

### Additional Information
This is how we are crashing the process:
```js
setTimeout(function() {
  console.log(""crashing!"");
  remote.process.crash();
}, 1000);
```
Note that this only seem to happen if the crash triggered through the remote api. If process.crash() is called from the main process it works as expected.

It seems like processes that are spawned by BrowserViews also become zombies under certain circumstances, so the problem isn't unique to BrowserWindow. The general problem for us is that if the our native code and brings down the main process there are zombie processes left behind by electron.
",miniak,platform/windows;bug :beetle:;6-0-x,2019-10-07T19:02:54Z,2020-02-05T09:47:55Z,shahrouzz,Slapbox;JohanKnutzen;miniak;shahrouzz,sofianguy,,miniak,,shahrouzz,
electron/electron,20517,"Memory leak in process.registerSchemesAsPrivileged <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 
  * v7.0.0-beta.6
* **Operating System:** 
  * macOS Mojave 10.14.5
* **Last Known Working Electron version:** 
  * v6.0.12

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

The electron helper process should not eat up memory.

<img width=""815"" alt=""Screenshot 2019-10-10 at 11 29 35"" src=""https://user-images.githubusercontent.com/1265681/66556996-7b98ca80-eb51-11e9-894f-7f6323deab7f.png"">


### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

An electron helper process eats up memory in a linear way

<img width=""898"" alt=""Screenshot 2019-10-10 at 11 23 35"" src=""https://user-images.githubusercontent.com/1265681/66557157-b438a400-eb51-11e9-954a-56cc236c72c6.png"">


![Electron Helper_48309 (1)](https://user-images.githubusercontent.com/1265681/66557054-93704e80-eb51-11e9-8507-ba76bafaa03e.png)



### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

#### Example Repositiory

Here is a minimal reproduction example: https://github.com/HaNdTriX/electron-memory-leak

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

```sh
$ git clone git@github.com:HaNdTriX/electron-memory-leak.git
$ cd electron-memory-leak
$ npm install
$ npm start
```

After starting the app please take a look at its memory usage.

#### Code

```js
const { session, app, protocol, BrowserWindow } = require('electron')
const { join } = require('path')

protocol.registerSchemesAsPrivileged([{
  scheme: 'atom',
  privileges: {
    // The following setting
    // is causing the memoryleak
    standard: true
  }
}])

app.on('ready', () => {
  session.defaultSession.protocol.registerFileProtocol('atom', (request, callback) => {
    callback({
      path: join(__dirname, 'index.html')
    })
  })

  mainWindow = new BrowserWindow({
    width: 800,
    height: 600
  })

  mainWindow.loadURL(`atom://foobar`)
})
```

### Screenshots

See above...

### Additional Information

I've tracked down the bug to `registerSchemesAsPrivileged` and its `standard` setting. 
",deepak1556,platform/macOS;bug :beetle:;7-0-x,2019-10-10T09:40:07Z,2019-10-14T01:21:42Z,HaNdTriX,,sofianguy,,sofianguy,,deepak1556,
electron/electron,20588,"node.js fs.mkdir/mkdirSync hang with {recursive: true} if name is invalid ### Issue Details

* **Electron Version:**
  * 6.0.11
* **Operating System:**
  * Windows 10

### Expected Behavior
`fs.mkdirSync` never hangs

### Actual Behavior
Run this in renderer:

```js
const fs = require('fs')

/*console.log(""1"")
fs.mkdir('invalid1:', {recursive: true}, (err) => {
  console.log(""is not called"")
  if (err) throw err
})*/

console.log(""before"")
fs.mkdirSync('C:\\Users\\<name>\\Desktop\\invalid2:', {recursive: true})
console.log(""after is not reached"")
```

This is fixed in later versions of node.js: https://github.com/nodejs/node/issues/28599

//cc @deepak1556 ",deepak1556,platform/windows;bug :beetle:;component/node-integration;5-0-x;6-0-x;7-0-x,2019-10-15T15:40:42Z,2019-10-25T03:33:04Z,bpasero,deepak1556,deepak1556;sofianguy,,deepak1556,,deepak1556,
electron/electron,20599,"systemPreferences.getColors() throws exceptions with some macOS colors <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
v7.0.0-beta.6
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
macOS 10.14.6
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->
the bug exists in all recent betas

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
a color value as a string
no exception thrown

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
exception thrown
```
""Error: Unknown color: disabled-control-text
    at Function.updateAppearanceTheme (/Users/iac/Desktop/gluon/dist/App.js:138:54)
    at App.createWindow (/Users/iac/Desktop/gluon/dist/App.js:9:13)
    at App.emit (events.js:208:15)""
```

### To Reproduce

```
systemPreferences.getColor('disabled-control-text');
systemPreferences.getColor('scrubber-textured-background');
systemPreferences.getColor('selected-menu-item');
```

For reference, here are the macOS headers for these colors and their availability in the macOS 10.14 SDK

```
@property (class, strong, readonly) NSColor *disabledControlTextColor;                     // Text on disabled controls

@property (class, strong, readonly) NSColor *scrubberTexturedBackgroundColor NS_AVAILABLE_MAC(10_12_2); // Patterned background color for use in NSScrubber

@property (class, strong, readonly) NSColor *selectedMenuItemColor NS_DEPRECATED_MAC(10_0, API_TO_BE_DEPRECATED, ""Use NSVisualEffectMaterialSelection"");
```

All three are available in macOS 10.14 (one is deprecated, but still available).

But even if they weren't, the Electron docs don't specify limitations on the macOS version for this function. Shouldn't I expect *some* value rather than throwing an exception even when colors are not available on the user's system.

Or perhaps the documentation should reflect that in some cases the function will throw an exception -- and what those cases are.


A fiddle for such basic stuff seems overkill, but it also took me about 1 minute -- so why not. 棣冩 

https://gist.github.com/yourhead/1db43ba064651648c673d686775b7afc

",codebytere,platform/macOS;bug :beetle:;7-0-x,2019-10-16T05:49:34Z,2019-10-21T21:31:04Z,yourhead,MarshallOfSound;yourhead;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,20606,"shell.openItem returns always true on Linux ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
```js
let ret = shell.openItem('file:///noexistent');
console.log(ret);
```
`ret` is always `true` on Linux even if opening fails, e.g.
```sh
xdg-open 'file:///noexistent'
echo $?
```
Shows nonzero error code.

* **Electron Version:**
  * v6.0.11
* **Operating System:**
  *Linux / Ubuntu 16.04 x64

### Expected Behavior
`ret` should be `false`, if `xdg-open` returns non-zero code.

Optional: It would be very nice if the `xdg-open` error (catch stderr) would be displayed in `dialog.showErrorBox` if it returns non-zero code. Just take care that `xdg-open` may write some warnings to stderr even if it returns 0.
",codebytere,platform/linux;bug :beetle:;6-1-x,2019-10-16T15:10:07Z,2019-11-08T07:08:44Z,xmedeko,codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,20610,"macOS VoiceOver navigation does not work on frameless window ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.12
  * 7.0.0-beta.7
* **Operating System:**
  * macOS 10.14.6
* **Last Known Working Electron version:**
  * 5.0.11

### Expected Behavior
macOS VoiceOver to move between elements using caps lock - arrow buttons.

### Actual Behavior
Caps Lock - arrow buttons do nothing while VoiceOver is on.

### To Reproduce
- On Fiddle, add `frame: false` to the `BrowserWindow` options object.
- (Optional) add an element to tab into easily (like `<a> test </a>` into HTML code.
- Run Fiddle and start VoiceOver
- Focus on the window.
- Try to navigate using Caps Lock - arrow buttons. Nothing happens.

You can see what should happen by removing `frame: false` or going back to 5.0.11 electron.
",codebytere,platform/macOS;bug :beetle:;a11y;6-1-x;7-1-x,2019-10-16T16:10:34Z,2021-03-09T03:29:14Z,natnan,qinyangyong;electron-triage,codebytere;sofianguy,sofianguy,codebytere,,electron-triage,
electron/electron,20631,"Electron 7, request using net module never contains cookies in response * [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0-beta.7
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * 6

### Expected Behavior
Cookies are received

### Actual Behavior
response.headers[""set-cookie""] never contains cookies

### To Reproduce
Do a request using the net module as described here: https://electronjs.org/docs/api/net
to any site that will return cookies.
",zcbenz,bug :beetle:;component/net;7-1-x,2019-10-18T10:07:57Z,2020-01-14T17:36:09Z,t57ser,codebytere;zcbenz;t57ser;arantes555,zcbenz;sofianguy,sofianguy,zcbenz,,nornagon,
electron/electron,20634,"webContents.printToPDF never ends * [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
I'm creating an ""html to pdf"" feature for my app, the user can enter a list of urls or html file, clicks a button and the app converts all of them. I'm using the Promise version of loadUrl and printToPdf, this is a fiddle I managed to create to [reproduce the issue](https://gist.github.com/f062371cd25fd38130af2e8e2151556e).
My issue is that it works most of the times but for some urls it just stays there and never ends. It reaches the printToPDF and then nothing happens, no error is printed or pdf file written, it just stays there in the printToPDF.
I tried the 7.0.0.beta7 and it does the same, I tried on Windows and Linux and I have the same issue.
If I enable logs I get many of these, they don't seem to be related to the printToPdf issue but still, they don't seem normal either:
```
[1:1018/121218.543891:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121218.544037:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121218.612767:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121220.512380:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
```

When I trigger the printToPDF these are the logs I get:
```
[1:1018/121435.112578:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[12207:1018/121435.113286:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed with unconsumed attachments: 0/1
[1:1018/121435.141258:VERBOSE1:sandbox_linux.cc(69)] Activated seccomp-bpf sandbox for process type: utility.
[1:1018/121435.141539:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.141857:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.141901:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.141952:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.141980:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142012:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142036:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142060:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142098:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142127:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142158:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.142187:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121435.145491:VERBOSE1:v8_context_snapshot.cc(152)] A context is created from snapshot for main world
[1:1018/121435.173524:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
[1:1018/121520.471001:ERROR:paint_controller.cc(547)] PaintController::FinishCycle() completed
```
Any idea on how to debug this or is there anything wrong in my code? As I said it works most of the times for some urls it seems to hang without any feedback
Thanks

* **Electron Version:**
  * 6.0.12
* **Operating System:**
  * Linux Mint Linux Mint 19.1 Cinnamon 64bits, Windows 7 64 bits
* **Last Known Working Electron version:**
  * don't know

### Expected Behavior
The page is printed to PDF

### Actual Behavior
printToPDF never ends

### To Reproduce
https://gist.github.com/f062371cd25fd38130af2e8e2151556e

### Screenshots
This the fiddle screeshot, 'after print' is never reached.
![image](https://user-images.githubusercontent.com/3884479/67108467-daec7f80-f1ce-11e9-8ae0-20fd4755a4e5.png)
",codebytere,bug :beetle:;platform/all;6-1-x,2019-10-18T15:47:18Z,2021-02-09T22:11:59Z,torakiki,neopostmodern;bjbk;gearcoded;codebytere;palashkulsh;markleutloff;mikkorantalainen;torakiki;codecounselor;fabiospampinato,sofianguy;codebytere,codebytere,codebytere,,codebytere,electron/electron#27605;
electron/electron,20683,"Resizable: false causes incorrect window sizes on differently scaled monitors <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0 beta 4+ (including 7.0 release), 6.0.6+
* **Operating System:**
  * Windows 10 (1903)
* **Last Known Working Electron version:**
  * 7.0.0 beta 3, 6.0.5

### Expected Behavior
Non resizable windows should have proper bounds on Monitors with display scales that are different from the primary.

### Actual Behavior
Non-resizable windows have bounds that are off by the ratio of the display scale of the secondary monitor to the primary monitor. e.g. if primary monitor is 200% scaled and secondary is 100%, the windows are 200/100 = twice the width and height.

### To Reproduce
Set your left monitor to primary with 200% scale
Set your right monitor to 100% scale
Then run this gist. Based on the resolution of your monitors, you might have to adjust the x position:
https://gist.github.com/sgd2z/7f92316b5fc920a59a55ee85c56011f4

### Screenshot
Here is a 200 x 200 window (the Hello World! from the reproducer) next to a correctly sized 400 x 400 window.
![image](https://user-images.githubusercontent.com/18012933/67309065-3bc6d100-f4c9-11e9-93b9-dc8674aea676.png)

### Additional Information
We believe that this is caused by this PR:
https://github.com/electron/electron/pull/19928
based on the version boundaries of where the dimensions cease to be incorrect.
",zcbenz;brenca,platform/windows;bug :beetle:;6-1-x;7-1-x,2019-10-22T16:42:06Z,2019-11-15T17:28:12Z,sgd2z,carterbs,sofianguy,sofianguy,zcbenz,,deepak1556,
electron/electron,20688,"session.cookies.set is broken in 7.0 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0
* **Operating System:**
  * Windows 10 (1903)
* **Last Known Working Electron version:**
  * 6.0.12

### Expected Behavior
session.defaultSession.cookies.set(cookie) should set a cookie that can be then retrieved using session.defaultSession.cookies.get(filter)

### Actual Behavior
session.defaultSession.cookies.set doesnt seem to be doing anything.

### To Reproduce
Gist:
This gist logs an empty array in 7.0.0, In 6.0.12, it logs the cookie object that was set:
https://gist.github.com/sgd2z/af6abf3cea4bddb1cd62a3e8265c359f
",zcbenz,documentation :notebook:;bug :beetle:;7-1-x,2019-10-22T20:48:54Z,2019-12-11T07:44:50Z,sgd2z,nornagon;sgd2z;binux;Treverix;a1q123456;ChrisHSandN,sofianguy;zcbenz,sofianguy,zcbenz,,zcbenz,
electron/electron,20746,"beforeunload and unload do not fire when closing a window with a browser view ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 5.0.7
* **Operating System:** Windows 10

### Expected Behavior
When I navigate a `BrowserView` to a page that has `beforeunload` and `unload` handlers, I expect that closing the window will cause them to fire.

### Actual Behavior
They do not fire when closing the window.

Notably, if I don't use `BrowserView` and just navigate the `BrowserWindow` to the page, those handlers will execute.

### To Reproduce

`npm start` the code below (in main.js). In the devtools that opens up, run `window.onbeforeunload = () => true;`, then close the window. In the working case, the window will not close. In the broken case that uses `BrowserView`, it will.

```
const { app, BrowserWindow, BrowserView } = require('electron')

function brokenCase() {
	const mainWindow = new BrowserWindow();
	const view = new BrowserView();
	mainWindow.setBrowserView(view);
	view.webContents.loadURL(""https://google.com"");
	view.webContents.openDevTools();
}

function workingCase() {
	const mainWindow = new BrowserWindow();
	mainWindow.webContents.loadURL(""https://google.com"");
	mainWindow.webContents.openDevTools();
}

app.on('ready', brokenCase)
```

Maybe related to [this comment](https://github.com/electron/electron/issues/19194#issuecomment-544407723)",codebytere,platform/windows;bug :beetle:;5-0-x;7-1-x;10-x-y,2019-10-25T18:17:05Z,2021-04-07T07:16:11Z,pushkin-,pushkin-,sofianguy;electron-triage,,codebytere,,codebytere,electron/electron#19194;
electron/electron,20777,"Windows 10 / VS 2019 build error: Perfetto patches not applied * [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
8.0.0-nightly.20191026 (Building from source)
* **Operating System:**
Windows 10 (1809)

### Expected Behavior
Perfetto patches in src/electron/patches/perfetto to be applied by apply_all_patches.py during the post hook phase of gclient sync.

### Actual Behavior
The patch ""metatrace_remove_memset_and_trivial_ctor_assumption.patch"" is not applied and the subsequent build fails.

### To Reproduce
Install and build electron from source on Windows 10 / VS 2019 using instructions provided.

### Additional Information
The Perfetto patch added in [this PR](https://github.com/electron/electron/pull/20465) is not applied leading to this build error (VS 2019 Community Edition):

`
FAILED: obj/third_party/perfetto/src/base/base/metatrace.obj
..\..\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe /nologo /showIncludes ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\ATLMFC\include"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\NETFXSDK\4.8\include\um"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\winrt"" ""-imsvc..\..\..\..\..\..\..\..\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\cppwinrt"" -DUSE_AURA=1 ""-DCR_CLANG_REVISION=\""372314-13bdae85-2\"""" -D_HAS_NODISCARD -D_HAS_EXCEPTIONS=0 -DCOMPONENT_BUILD -D__STD_C -D_CRT_RAND_S -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_DEPRECATE -D_ATL_NO_OPENGL -D_WINDOWS -DCERT_CHAIN_PARA_HAS_EXTRA_FIELDS -DPSAPI_VERSION=2 -DWIN32 -D_SECURE_ATL -D_USING_V110_SDK71_ -DWINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP -DWIN32_LEAN_AND_MEAN -DNOMINMAX -D_UNICODE -DUNICODE -DNTDDI_VERSION=NTDDI_WIN10_RS2 -D_WIN32_WINNT=0x0A00 -DWINVER=0x0A00 -D_DEBUG -DDYNAMIC_ANNOTATIONS_ENABLED=1 -D_HAS_ITERATOR_DEBUGGING=0 -DPERFETTO_IMPLEMENTATION -I../.. -Igen -I../../third_party/perfetto -I../../third_party/perfetto/include -Igen/third_party/perfetto/build_config -fcolor-diagnostics -fmerge-all-constants -fcrash-diagnostics-dir=../../tools/clang/crashreports -Xclang -mllvm -Xclang -instcombine-lower-dbg-declare=0 -fcomplete-member-pointers /Gy /FS /bigobj /utf-8 /Zc:sizedDealloc- /X -fmsc-version=1916 /guard:cf,nochecks /Zc:dllexportInlines- -m64 /Brepro -Wno-builtin-macro-redefined -D__DATE__= -D__TIME__= -D__TIMESTAMP__= -Xclang -fdebug-compilation-dir -Xclang . -no-canonical-prefixes /W4 -Wimplicit-fallthrough -Wthread-safety -Wextra-semi /WX /wd4091 /wd4127 /wd4251 /wd4275 /wd4312 /wd4324 /wd4351 /wd4355 /wd4503 /wd4589 /wd4611 /wd4100 /wd4121 /wd4244 /wd4505 /wd4510 /wd4512 /wd4610 /wd4838 /wd4995 /wd4996 /wd4456 /wd4457 /wd4458 /wd4459 /wd4200 /wd4201 /wd4204 /wd4221 /wd4245 /wd4267 /wd4305 /wd4389 /wd4702 /wd4701 /wd4703 /wd4661 /wd4706 /wd4715 -Wno-missing-field-initializers -Wno-unused-parameter -Wno-c++11-narrowing -Wno-unneeded-internal-declaration -Wno-undefined-var-template -Wno-nonportable-include-path -Wno-ignored-pragma-optimize -Wno-implicit-int-float-conversion -Wno-xor-used-as-pow -Wno-c99-designator -Wno-reorder-init-list -Wno-final-dtor-non-final-class -Wno-sizeof-array-div /Od /Ob0 /GF /Z7 -gcodeview-ghash -fno-standalone-debug /MDd -Xclang -add-plugin -Xclang find-bad-constructs -Wheader-hygiene -Wstring-conversion -Wtautological-overlap-compare -Wno-undefined-bool-conversion -Wno-tautological-undefined-compare /TP /wd4577 /GR- /c ../../third_party/perfetto/src/base/metatrace.cc /Foobj/third_party/perfetto/src/base/base/metatrace.obj /Fd""obj/third_party/perfetto/src/base/base_cc.pdb""
../../third_party/perfetto/src/base/metatrace.cc(87,3): error: static_assert failed due to requirement 'std::is_trivially_constructible<perfetto::metatrace::Record>::value' ""Record must be trivial""
  static_assert(PERFETTO_IS_TRIVIALLY_CONSTRUCTIBLE(Record) &&
  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
` 

Presumably because the perfetto folder is missing from src/electron/patches/config.json?

```json
{
  ""src/electron/patches/chromium"": ""src"",

  ""src/electron/patches/quiche"": ""src/net/third_party/quiche/src"",

  ""src/electron/patches/boringssl"": ""src/third_party/boringssl/src"",

  ""src/electron/patches/v8"":  ""src/v8"",

  ""src/electron/patches/node"": ""src/third_party/electron_node""
}
```",deepak1556,bug :beetle:;component/build,2019-10-28T13:47:18Z,2019-10-28T22:12:36Z,samkuhn,samkuhn;deepak1556,deepak1556,,deepak1556,,nornagon,
electron/electron,20787,"2nd call to systemPreferences.isTrustedAccessibilityClient(true) does not open prompt <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v8.0.0-beta.1, 7.x, 6.x, nightly is also affected
* **Operating System:**
  * macOS 10.14.6 (18G103)
* **Last Known Working Electron version:**
  * 5.0.11

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

If an Electron application is *not* a trusted accessibility client:

- Calling `systemPreferences.isTrustedAccessibilityClient(false)` first should return `false`
- Calling `systemPreferences.isTrustedAccessibilityClient(true)` second should show a system prompt

### Actual Behavior
- Calling `systemPreferences.isTrustedAccessibilityClient(false)` first returns `false` 閴
- Calling `systemPreferences.isTrustedAccessibilityClient(true)` second does not show a prompt 閴

### To Reproduce

Use the following snippet in `main.js`:

```js
app.on(""ready"", () => {
  const isTrusted = systemPreferences.isTrustedAccessibilityClient(false);
  console.log(""isTrustedAccessibilityClient"", isTrusted);
  if (!isTrusted) {
    const clickedButton = dialog.showMessageBox(null, {
      type: 'warning',
      message: 'Turn on accessibility',
      detail: 'Turn on Media Keys?',
      defaultId: 1,
      cancelId: 0,
      buttons: ['Not Now', 'Turn On Accessibility']
    })
    if (clickedButton === 1) {
      // Calling isTrustedAccessibilityClient with prompt=true has the side effect
      // of showing the native dialog that either denies access or opens System
      // Preferences.
      systemPreferences.isTrustedAccessibilityClient(true)
    }

  }
```



<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

Or use this example repo:

```sh
$ git clone https://github.com/salomvary/electron-media-keys-bug
$ cd electron-media-keys-bug
$ npm install
$ npm start
```

### Use case:

Show this ""explanatory prompt"" before showing the real one:

<img width=""532"" alt=""Screenshot 2019-10-28 at 21 23 34"" src=""https://user-images.githubusercontent.com/193923/67714952-3ab20a00-f9c9-11e9-9428-4530d91c45e7.png"">

<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;8-x-y;6-1-x;7-1-x,2019-10-28T20:26:34Z,2019-12-05T19:01:03Z,salomvary,codebytere;salomvary,sofianguy,,codebytere,,codebytere,
electron/electron,20788,"Media key global shortcut no longer working on macOS <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v8.0.0-beta.1, all versions from and including 6 seem to be affected
* **Operating System:**
  * macOS 10.14.6 (18G103)
* **Last Known Working Electron version:**
  * 5

### Expected Behavior

If an application is a trusted accessibility client and `globalShortcut.register(""MediaPlayPause"", handlerFn)` returns `true`, the  registered `handlerFn` should be invoked whenever the play/pause key is pressed. 

### Actual Behavior

The handler is not invoked.

### To Reproduce
```js
app.on(""ready"", () => {
  const isTrusted = systemPreferences.isTrustedAccessibilityClient(true);
  console.log(""isTrustedAccessibilityClient"", isTrusted);

  const registered = globalShortcut.register(""MediaPlayPause"", () => {
    console.log(""MediaPlayPause pressed"");
  });
  console.log(""Registered MediaPlayPause?"", registered);

  const win = new BrowserWindow();
  win.loadURL(""http://example.com"");
});
```

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone https://github.com/salomvary/electron-media-keys-bug -b another-bug
$ npm install
$ cd electron-media-keys-bug
$ npm start
```

When prompted, allow Terminal to control the computer, restart the app and repeat the test.
",codebytere,platform/macOS;bug :beetle:;8-x-y,2019-10-28T20:56:21Z,2019-12-11T06:48:56Z,salomvary,,sofianguy,,codebytere,,zcbenz,
electron/electron,20831,"There is no way to set `--max-http-header-size` in Electron 5.x <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.10
* **Operating System:**
  * all
* **Last Known Working Electron version:**
  * n/a

### Issue Summary

* Node 11.11.0 introduced a `--max-http-header-size` config option, to change `http.maxHeaderSize` (default 80kb)
* In Electron 5, Node 12.0.0 was introduced, which made the default `http.maxHeaderSize` only 8kb
* This made some of our users' tests fail with Electron 5, since the header size changed:
	* cypress-io/cypress#5431
* We want to increase the header size by doing `--max-http-header-size={1 MB}` at Electron startup time
	* However, Electron does not accept this command line argument. If you try passing it to an unpackaged app or a packaged app, the result is the same, `http.maxHeaderSize` is still 8kb.
	* You can pass it as a `NODE_OPTIONS`, and this works great. We updated our Electron launcher to pass this because we thought this was the solution: 
		* cypress-io/cypress#5452, cypress-io/cypress#5492
	* However, this only works in development. As the docs note:
		> https://electronjs.org/docs/all#node_options
		> NODE_OPTIONS are explicitly disallowed in packaged apps.
* So, it appears there is no real way to set `--max-http-header-size` in Electron. Not sure if this counts as a bug, or as a feature request, but either way, a working method to set this flag would be much appreciated!

P.S. thanks for all the work you do on Electron, the fact that this is the first issue I've had to open after 10 months of working with your product is a testament to its quality.

### Related

* #13402 - ""Electron ignores NODE_OPTIONS""",codebytere,bug :beetle:;platform/all;5-0-x,2019-10-29T16:54:06Z,2019-12-06T21:26:12Z,flotwig,codebytere;flotwig;sssandp,sofianguy,,codebytere,,codebytere,
electron/electron,20923,"The response of the CORS POST request is empty when using webRequest <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

The response of the CORS POST request is empty.

* **Electron Version:** 7.x, 8.x
* **Operating System:** Linux (at least)
* **Last Known Working Electron version:** 6.1.3

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
The response of the CORS POST request is not empty.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
The response of the CORS POST request is empty.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
https://github.com/vladimiry-playground/electron-quick-start-custom-prtocol-cors-issue

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

![v7 0 1 (response is empty)](https://user-images.githubusercontent.com/1560781/68053943-415cbc00-fcfe-11e9-9ba2-913fda4d0a84.gif)

![v6 3 1 (response is filled)](https://user-images.githubusercontent.com/1560781/68053948-43bf1600-fcfe-11e9-8722-620645f5c375.gif)


### Additional Information
<!-- Add any other context about the problem here. -->

In v7 and v8, the `access-control-allow-origin` and `origin` headers are not shown as modified in the dev console. It shows `https://mail.protonmail.com` value but should be showing `scheme123://index.html` as v6 does.",zcbenz,bug :beetle:;8-x-y;7-1-x,2019-11-01T20:08:12Z,2019-11-14T05:51:25Z,vladimiry,vladimiry;nornagon;jalanga;deepak1556;zcbenz,sofianguy,zcbenz,zcbenz,,zcbenz,
electron/electron,20941,"app.setAppLogsPath() does not set the `logs` path <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 7.0.0, 7.0.0-beta.4
* **Operating System:** macOS 10.14.6 (Mojave)
* **Last Known Working Electron version:** 7.0.0-beta.5

### Expected Behavior
`app.setAppLogsPath(path)` should change the default logging path

### Actual Behavior
`app.setAppLogsPath(desktopPath)` seems to have no effect, logs are always created in `~/Library/Logs/[appName]`

### To Reproduce
Fiddle: https://gist.github.com/eb7c5c66066afba3ab6dbb0353f79657

```js
const {app} = require('electron')
const path = require('path')

app.on('ready', () => {
  const desktopPath = app.getPath(`desktop`)
  app.setAppLogsPath(desktopPath)

  const logPath = app.getPath('logs')
  console.assert(logPath === desktopPath, `Expected ${logPath} to equal ${desktopPath}`);

  app.quit();
})
```",MarshallOfSound,platform/macOS;bug :beetle:;7-1-x,2019-11-04T14:14:15Z,2019-12-05T23:07:19Z,felixrieseberg,MarshallOfSound,sofianguy,,MarshallOfSound,,MarshallOfSound,
electron/electron,21070,"Unable to install Electron 7.1.1 on Raspberry PI 3 (32 bit ARM) * [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

Unable to install Electron 7.1.1 on Raspberry PI 3 (32 bit ARM).

* **Electron Version:**
  * 7.1.1
* **Operating System:**
  * Raspbian 10

### Expected Behavior
`npm install electron --save-dev --save-exact` should successfully install Electron.

### Actual Behavior
npm install fails with:

_(node:5627) UnhandledPromiseRejectionWarning: HTTPError: Response code 404 (Not Found)_

### To Reproduce

Run this command:

`npm install electron --save-dev --save-exact --verbose`

### Additional Information
Debugging the install script shows that install.js is attempting to download the following URL:

`https://github.com/electron/electron/releases/download/v7.1.1/electron-v7.1.1-linux-arm.zip`

This results in HTTP response code 404. The correct URL is:

`https://github.com/electron/electron/releases/download/v7.1.1/electron-v7.1.1-linux-armv7l.zip`


",jkleinsc,platform/linux;bug :beetle:;8-x-y;7-1-x,2019-11-10T22:23:25Z,2019-11-22T21:46:25Z,richardebrock,rudam;richardebrock;jkleinsc;flyxlee;dsanders11,sofianguy,,sofianguy,,malept,
electron/electron,21088,"BrowserWindow removeMenu method not working on v7.1.1 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
BrowserWindow method `removeMenu()` is not working on v7.1.1. The only change made was upgrading Electron version.
https://electronjs.org/docs/api/browser-window#winremovemenu-linux-windows

* **Electron Version:**
  * 7.1.1
* **Operating System:**
  * Windows 10 (1903)
* **Last Known Working Electron version:**
  * v6.0.3

### Expected Behavior
Menu Bar not visible.<!-- A clear and concise description of what you expected to happen. -->

### Actual Behavior
Menu Bar is visible.<!-- A clear and concise description of what actually happened. -->

### To Reproduce
For me, just update Electron version.

### Screenshots
With version 7.1.1:
![image](https://user-images.githubusercontent.com/11201504/68656003-c5d5e880-050f-11ea-8d22-dfd58d166762.png)

With version 6.0.3:
![image](https://user-images.githubusercontent.com/11201504/68656185-1baa9080-0510-11ea-9033-bec7554f4b40.png)
",zcbenz,platform/windows;bug :beetle:;7-1-x,2019-11-12T08:52:05Z,2019-12-09T19:17:37Z,gschattenhofer,gschattenhofer;jacobq;yarhamjohn;lunatupini;Pfuster12;IceHacks;PolyviosP;codebytere;superheri,sofianguy,,codebytere,,MarshallOfSound,
electron/electron,21154,"failed to create tray icon: error processing argument at index 0, conversion failure <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 8.0.0-beta2
* **Operating System:** Linux, Windows (have not tested on macOS)
* **Last Known Working Electron version:** 7.1.1

### Expected Behavior
Tray icon with the specified image created.

### Actual Behavior
Unhandled `error processing argument at index 0, conversion failure error` error is occurring. No tray icon created.

### To Reproduce
https://github.com/vladimiry-playground/electron-quick-start-tray-issue

### Screenshots

![8 0 0-beta 2](https://user-images.githubusercontent.com/1560781/68995118-33c93980-089b-11ea-86a9-7c66b8b35ea5.png)

![8 0 0-beta 2-win](https://user-images.githubusercontent.com/1560781/68995119-33c93980-089b-11ea-8962-af4ecdc5f7a3.png)

Tray icon with the specified image created if used v7.1.1 and below:

![7 1 1](https://user-images.githubusercontent.com/1560781/68995117-33c93980-089b-11ea-8ecb-83ba86a87b0c.png)

### Additional Information

If used 8.0.0-beta2 there is no error if I construct the tray using the native image module like `new Tray(nativeImage.createFromPath(""image path""))` but there is no visible tray icon either, but works for v7.1.1 and below.",codebytere,platform/windows;platform/linux;bug :beetle:;8-x-y,2019-11-16T15:08:44Z,2019-12-09T20:13:37Z,vladimiry,momakes3;vladimiry;betamos;dsteinman;nornagon;codebytere;sofianguy;FI-GGG,sofianguy,,sofianguy,,sofianguy,electron/electron#21445;
electron/electron,21159,"checkbox in dialog not working  

### Issue Details

* **Electron Version:**
  * 7.1.1
* **Operating System:**
  *  Windows 10 (1803) 
* **Last Known Working Electron version:**
  * 6.1.3

### Expected Behavior
dialog.showMessageBox
https://electronjs.org/docs/api/dialog#dialogshowmessageboxbrowserwindow-options
Returns Promise<Object> - resolves with a promise containing the following properties:
- response Number - The index of the clicked button.
- **checkboxChecked** Boolean - The checked state of the checkbox if checkboxLabel was set. Otherwise false.

### Actual Behavior
checkboxChecked do not change


",codebytere,platform/windows;bug :beetle:;component/dialog;7-1-x,2019-11-17T15:43:42Z,2019-11-27T07:39:08Z,otsybulsky,sofianguy;xland;codebytere;otsybulsky;jrdiard,sofianguy;codebytere,codebytere,codebytere,,zcbenz,
electron/electron,21186,"Malloc error in Renderer when contextIsolation is enabled When `contextIsolation` is enabled on a window, I'm hitting `malloc` errors after interacting a while (clicking on different Slack channels) that result in the Renderer crashing. The only thing done so far to try to isolate the issue is we set the devtools throttling to `Offline` and reproduce the issue, and we were still able to reproduce it.

There were 2 different errors, so I've put both of the crash dumps in the Issue Details.

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.1.1
* **Operating System:**
  * macOS 10.14.6

<details>
<summary> Crash log 1 </summary>

```
Process:               Electron Helper (Renderer) [42684]
Path:                  /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)
Identifier:            Electron Helper (Renderer)
Version:               0
Code Type:             X86-64 (Native)
Parent Process:        Electron [42677]
Responsible:           iTerm2 [456]
User ID:               502

Date/Time:             2019-11-18 14:35:15.948 -0800
OS Version:            Mac OS X 10.14.6 (18G1012)
Report Version:        12
Bridge OS Version:     3.0 (14Y906)
Anonymous UUID:        0ED2F3FB-B526-03FA-C930-47AF8DCFA764

Sleep/Wake UUID:       4B407E01-397C-4E74-A40B-6BEF8CB105B8

Time Awake Since Boot: 130000 seconds
Time Since Wake:       16000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_CRASH (SIGABRT)
Exception Codes:       0x0000000000000000, 0x0000000000000000

Application Specific Information:
abort() called
Electron Helper (Renderer)(42684,0x107cfa5c0) malloc: tiny_free_list_remove_ptr: Internal invariant broken (prev ptr of next): ptr=0x7feca1700b70, next_prev=0x7feca17289b0
 

Thread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib        	0x00007fff6e49c2c6 __pthread_kill + 10
1   libsystem_pthread.dylib       	0x00007fff6e557bf1 pthread_kill + 284
2   libsystem_c.dylib             	0x00007fff6e4066a6 abort + 127
3   libsystem_malloc.dylib        	0x00007fff6e515077 malloc_vreport + 545
4   libsystem_malloc.dylib        	0x00007fff6e52de0d malloc_zone_error + 183
5   libsystem_malloc.dylib        	0x00007fff6e511878 tiny_free_list_remove_ptr + 589
6   libsystem_malloc.dylib        	0x00007fff6e5181fa tiny_free_detach_region + 315
7   libsystem_malloc.dylib        	0x00007fff6e50f58d tiny_free_no_lock + 1815
8   libsystem_malloc.dylib        	0x00007fff6e50ed79 free_tiny + 480
9   com.github.Electron.framework 	0x00000001090ee99b v8_inspector::(anonymous namespace)::buildInspectorObjectCommon(v8_inspector::V8Debugger*, std::__1::vector<std::__1::shared_ptr<v8_inspector::StackFrame>, std::__1::allocator<std::__1::shared_ptr<v8_inspector::StackFrame> > > const&, v8_inspector::String16 const&, std::__1::shared_ptr<v8_inspector::AsyncStackTrace> const&, v8_inspector::V8StackTraceId const&, int) + 699 (memory:2648)
10  com.github.Electron.framework 	0x00000001090eeabe v8_inspector::(anonymous namespace)::buildInspectorObjectCommon(v8_inspector::V8Debugger*, std::__1::vector<std::__1::shared_ptr<v8_inspector::StackFrame>, std::__1::allocator<std::__1::shared_ptr<v8_inspector::StackFrame> > > const&, v8_inspector::String16 const&, std::__1::shared_ptr<v8_inspector::AsyncStackTrace> const&, v8_inspector::V8StackTraceId const&, int) + 990
11  com.github.Electron.framework 	0x00000001090eeabe v8_inspector::(anonymous namespace)::buildInspectorObjectCommon(v8_inspector::V8Debugger*, std::__1::vector<std::__1::shared_ptr<v8_inspector::StackFrame>, std::__1::allocator<std::__1::shared_ptr<v8_inspector::StackFrame> > > const&, v8_inspector::String16 const&, std::__1::shared_ptr<v8_inspector::AsyncStackTrace> const&, v8_inspector::V8StackTraceId const&, int) + 990
12  com.github.Electron.framework 	0x00000001090b7ce6 v8_inspector::V8StackTraceImpl::buildInspectorObjectImpl(v8_inspector::V8Debugger*, int) const + 118
13  com.github.Electron.framework 	0x00000001090eee5c v8_inspector::V8StackTraceImpl::buildInspectorObject(int) const + 28 (v8-stack-trace-impl.cc:290)
14  com.github.Electron.framework 	0x000000010b8bf84b blink::SourceLocation::BuildInspectorObject(int) const + 27
15  com.github.Electron.framework 	0x000000010c4e9afb blink::InspectorNetworkAgent::BuildInitiatorObject(blink::Document*, blink::FetchInitiatorInfo const&, int) + 187 (inspector_network_agent.cc:1174)
16  com.github.Electron.framework 	0x000000010c4e893a blink::InspectorNetworkAgent::WillSendRequestInternal(unsigned long long, blink::DocumentLoader*, blink::KURL const&, blink::ResourceRequest const&, blink::ResourceResponse const&, blink::FetchInitiatorInfo const&, blink::InspectorPageAgent::ResourceType) + 666
17  com.github.Electron.framework 	0x000000010c4ec4c1 blink::InspectorNetworkAgent::WillSendRequest(unsigned long long, blink::DocumentLoader*, blink::KURL const&, blink::ResourceRequest const&, blink::ResourceResponse const&, blink::FetchInitiatorInfo const&, blink::ResourceType) + 65 (inspector_network_agent.cc:909)
18  com.github.Electron.framework 	0x000000010c88459c blink::probe::WillSendRequestImpl(blink::CoreProbeSink*, unsigned long long, blink::DocumentLoader*, blink::KURL const&, blink::ResourceRequest const&, blink::ResourceResponse const&, blink::FetchInitiatorInfo const&, blink::ResourceType) + 188
19  com.github.Electron.framework 	0x000000010c779621 blink::ResourceLoadObserverForFrame::WillSendRequest(unsigned long long, blink::ResourceRequest const&, blink::ResourceResponse const&, blink::ResourceType, blink::FetchInitiatorInfo const&) + 225 (resource_load_observer_for_frame.cc:87)
20  com.github.Electron.framework 	0x000000010956d7bb blink::ResourceFetcher::StartLoad(blink::Resource*) + 715
21  com.github.Electron.framework 	0x000000010955f2ff blink::ResourceFetcher::RequestResource(blink::FetchParameters&, blink::ResourceFactory const&, blink::ResourceClient*) + 2031 (resource_fetcher.cc:1131)
22  com.github.Electron.framework 	0x000000010c75defa blink::ImageResource::Fetch(blink::FetchParameters&, blink::ResourceFetcher*) + 74 (image_resource.cc:183)
23  com.github.Electron.framework 	0x000000010c774e39 blink::ImageResourceContent::Fetch(blink::FetchParameters&, blink::ResourceFetcher*) + 9 (image_resource_content.cc:135)
24  com.github.Electron.framework 	0x000000010c74ed00 blink::ImageLoader::DoUpdateFromElement(blink::ImageLoader::BypassMainWorldBehavior, blink::ImageLoader::UpdateFromElementBehavior, blink::KURL const&, network::mojom::ReferrerPolicy, blink::ImageLoader::UpdateType) + 1952
25  com.github.Electron.framework 	0x000000010c764cd4 blink::ImageLoader::Task::Run() + 196 (image_loader.cc:140)
26  com.github.Electron.framework 	0x000000010c764edb base::internal::Invoker<base::internal::BindState<void (blink::ImageLoader::Task::*)(), WTF::PassedWrapper<std::__1::unique_ptr<blink::ImageLoader::Task, std::__1::default_delete<blink::ImageLoader::Task> > > >, void ()>::RunOnce(base::internal::BindStateBase*) + 43 (bind_internal.h:641)
27  com.github.Electron.framework 	0x000000010bb785da blink::MicrotaskFunctionCallback(void*) + 26 (microtask.cc:50)
28  com.github.Electron.framework 	0x0000000108e7549e v8::internal::Runtime_RunMicrotaskCallback(int, unsigned long*, v8::internal::Isolate*) + 78 (runtime-promise.cc:95)
29  com.github.Electron.framework 	0x000000010949a7f9 Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit + 57
30  com.github.Electron.framework 	0x000000010943d5c5 Builtins_RunMicrotasks + 389
31  com.github.Electron.framework 	0x000000010941de58 Builtins_JSRunMicrotasksEntry + 120
32  com.github.Electron.framework 	0x0000000108b96eed v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&) + 797
33  com.github.Electron.framework 	0x0000000108b97638 v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&) + 88 (execution.cc:326)
34  com.github.Electron.framework 	0x0000000108bb2d09 v8::internal::MicrotaskQueue::RunMicrotasks(v8::internal::Isolate*) + 489 (microtask-queue.cc:164)
35  com.github.Electron.framework 	0x000000010b8c47c4 blink::V8ScriptRunner::CallFunction(v8::Local<v8::Function>, blink::ExecutionContext*, v8::Local<v8::Value>, int, v8::Local<v8::Value>*, v8::Isolate*) + 964
36  com.github.Electron.framework 	0x000000010b9722e6 blink::V8FrameRequestCallback::Invoke(blink::bindings::V8ValueOrScriptWrappableAdapter, double) + 630 (v8_frame_request_callback.cc:106)
37  com.github.Electron.framework 	0x000000010b9723ff blink::V8FrameRequestCallback::InvokeAndReportException(blink::bindings::V8ValueOrScriptWrappableAdapter, double) + 111
38  com.github.Electron.framework 	0x000000010c089ddc blink::FrameRequestCallbackCollection::V8FrameCallback::Invoke(double) + 28 (frame_request_callback_collection.cc:174)
39  com.github.Electron.framework 	0x000000010c08970f blink::FrameRequestCallbackCollection::ExecuteCallbacksInternal(blink::HeapVector<blink::Member<blink::FrameRequestCallbackCollection::FrameCallback>, 0u>&, char const*, char const*, double, double) + 319 (frame_request_callback_collection.cc:133)
40  com.github.Electron.framework 	0x000000010c0db92b blink::ScriptedAnimationController::ServiceScriptedAnimations(base::TimeTicks) + 363 (scripted_animation_controller.cc:192)
41  com.github.Electron.framework 	0x000000010c05c721 blink::Document::ServiceScriptedAnimations(base::TimeTicks) + 49 (document.cc:7425)
42  com.github.Electron.framework 	0x000000010c7ab20f blink::PageAnimator::ServiceScriptedAnimations(base::TimeTicks) + 879 (page_animator.cc:86)
43  com.github.Electron.framework 	0x000000010c7acbd5 blink::PageWidgetDelegate::Animate(blink::Page&, base::TimeTicks) + 37 (page_widget_delegate.cc:55)
44  com.github.Electron.framework 	0x000000010c1f71ff blink::WebViewImpl::BeginFrame(base::TimeTicks, bool) + 479 (web_view_impl.cc:1504)
45  com.github.Electron.framework 	0x000000010d463492 content::RenderWidget::BeginMainFrame(base::TimeTicks) + 162 (render_widget.cc:1135)
46  com.github.Electron.framework 	0x000000010b44dc8b cc::ProxyMain::BeginMainFrame(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >) + 747 (proxy_main.cc:228)
47  com.github.Electron.framework 	0x000000010b478ad5 void base::internal::FunctorTraits<void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), void>::Invoke<void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), base::WeakPtr<cc::ProxyMain>, std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> > >(void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), base::WeakPtr<cc::ProxyMain>&&, std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >&&) + 85 (bind_internal.h:499)
48  com.github.Electron.framework 	0x000000010a083052 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 338 (task_annotator.cc:142)
49  com.github.Electron.framework 	0x000000010a092fe4 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) + 404 (heap_profiler.h:93)
50  com.github.Electron.framework 	0x000000010a0934b7 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 71 (thread_controller_with_message_pump_impl.cc:270)
51  com.github.Electron.framework 	0x000000010a0efaf3 base::MessagePumpCFRunLoopBase::RunWork() + 51
52  com.github.Electron.framework 	0x000000010a02b69a base::mac::CallWithEHFrame(void () block_pointer) + 10
53  com.github.Electron.framework 	0x000000010a0ef45f base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63 (message_pump_mac.mm:466)
54  com.apple.CoreFoundation      	0x00007fff4241be33 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
55  com.apple.CoreFoundation      	0x00007fff4241bdd9 __CFRunLoopDoSource0 + 108
56  com.apple.CoreFoundation      	0x00007fff423ff79b __CFRunLoopDoSources0 + 195
57  com.apple.CoreFoundation      	0x00007fff423fed65 __CFRunLoopRun + 1189
58  com.apple.CoreFoundation      	0x00007fff423fe66e CFRunLoopRunSpecific + 455
59  com.apple.Foundation          	0x00007fff446642ff -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 280
60  com.github.Electron.framework 	0x000000010a0f0001 base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 113 (message_pump_mac.h:121)
61  com.github.Electron.framework 	0x000000010a0eee28 base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 136 (message_pump_mac.mm:189)
62  com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
63  com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
64  com.github.Electron.framework 	0x000000010d46f690 content::RendererMain(content::MainFunctionParams const&) + 848 (renderer_main.cc:214)
65  com.github.Electron.framework 	0x000000010972988c content::ContentMainRunnerImpl::Run(bool) + 252
66  com.github.Electron.framework 	0x000000010b83d339 service_manager::Main(service_manager::MainParams const&) + 2793 (main.cc:423)
67  com.github.Electron.framework 	0x00000001088d2f84 content::ContentMain(content::ContentMainParams const&) + 68 (content_main.cc:19)
68  com.github.Electron.framework 	0x0000000107d25b54 AtomMain + 84
69  com.github.Electron.helper    	0x0000000101eff3a5 main + 357 (atom_main.cc:232)
70  libdyld.dylib                 	0x00007fff6e3613d5 start + 1

Thread 1:
0   libsystem_kernel.dylib        	0x00007fff6e497bfe __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff6e554636 _pthread_wqthread + 458
2   libsystem_pthread.dylib       	0x00007fff6e5543fd start_wqthread + 13

Thread 2:: ThreadPoolServiceThread
0   libsystem_kernel.dylib        	0x00007fff6e49e0a6 kevent64 + 10
1   com.github.Electron.framework 	0x000000010a0e758a base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) + 330 (message_pump_kqueue.cc:383)
2   com.github.Electron.framework 	0x000000010a0e73f6 base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) + 182
3   com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
4   com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
5   com.github.Electron.framework 	0x000000010a096a97 base::internal::ServiceThread::Run(base::RunLoop*) + 23 (service_thread.cc:61)
6   com.github.Electron.framework 	0x000000010a0a2f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
7   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
8   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
9   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
10  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 3:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 4:: Chrome_ChildIOThread
0   libsystem_kernel.dylib        	0x00007fff6e49e0a6 kevent64 + 10
1   com.github.Electron.framework 	0x000000010a0e758a base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) + 330 (message_pump_kqueue.cc:383)
2   com.github.Electron.framework 	0x000000010a0e73f6 base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) + 182
3   com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
4   com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
5   com.github.Electron.framework 	0x000000010a0a2f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 5:: GpuMemoryThread
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a07febf base::WaitableEvent::Wait() + 31 (waitable_event_mac.cc:110)
4   com.github.Electron.framework 	0x000000010a048cd7 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 199
5   com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
6   com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
7   com.github.Electron.framework 	0x000000010a0a2f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
8   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
9   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
10  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
11  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 6:: Compositor
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a048c7b base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 107 (message_pump_default.cc:57)
4   com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
5   com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
6   com.github.Electron.framework 	0x00000001095d9afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
7   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
8   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
9   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
10  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 7:: CompositorTileWorker1
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010a0de325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010d3878d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 8:: CompositorTileWorker2
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010a0de325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010d3878d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 9:: CompositorTileWorker3
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010a0de325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010d3878d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 10:: CompositorTileWorker4
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010a0de325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010d3878d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 11:: CompositorTileWorkerBackground
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010a0de325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010d3878d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 12:: ServiceWorker thread
0   libsystem_kernel.dylib        	0x00007fff6e4989de __ulock_wait + 10
1   libsystem_platform.dylib      	0x00007fff6e54ac3a _os_unfair_lock_lock_slow + 143
2   libsystem_malloc.dylib        	0x00007fff6e50ec42 free_tiny + 169
3   com.github.Electron.framework 	0x000000010a39a39a mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) + 906 (interface_endpoint_client.cc:549)
4   com.github.Electron.framework 	0x000000010a39f17e mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) + 654
5   com.github.Electron.framework 	0x000000010a39dd69 mojo::internal::MultiplexRouter::ProcessTasks(mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) + 857 (multiplex_router.cc:715)
6   com.github.Electron.framework 	0x000000010a39f733 mojo::internal::MultiplexRouter::LockAndCallProcessTasks() + 83 (multiplex_router.cc:906)
7   com.github.Electron.framework 	0x000000010a083052 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 338 (task_annotator.cc:142)
8   com.github.Electron.framework 	0x000000010a092fe4 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) + 404 (heap_profiler.h:93)
9   com.github.Electron.framework 	0x000000010a092cc7 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() + 71 (thread_controller_with_message_pump_impl.cc:219)
10  com.github.Electron.framework 	0x000000010a048c99 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 137 (message_pump_default.cc:39)
11  com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
12  com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
13  com.github.Electron.framework 	0x00000001095d9afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
14  com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
15  libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
16  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
17  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 13:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 14:
0   libsystem_kernel.dylib        	0x00007fff6e49d61a __select + 10
1   com.github.Electron.framework 	0x0000000107e600e2 electron::NodeBindingsMac::PollEvents() + 210 (node_bindings_mac.cc:57)
2   com.github.Electron.framework 	0x0000000107e5f907 electron::NodeBindings::EmbedThreadRunner(void*) + 55 (node_bindings.cc:451)
3   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
4   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
5   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 15:: ThreadPoolSingleThreadSharedForeground0
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09ebd4 base::internal::WorkerThread::RunSharedWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 16:: ThreadPoolForegroundWorker
0   com.github.Electron.framework 	0x000000010b545413 mojo::core::ports::Node::GetPort(mojo::core::ports::PortName const&, mojo::core::ports::PortRef*) + 435 (node.cc:165)
1   com.github.Electron.framework 	0x0000000108812a08 mojo::core::MessagePipeDispatcher::Deserialize(void const*, unsigned long, mojo::core::ports::PortName const*, unsigned long, mojo::PlatformHandle*, unsigned long) + 88 (message_pipe_dispatcher.cc:358)
2   com.github.Electron.framework 	0x000000010880e749 mojo::core::Dispatcher::Deserialize(mojo::core::Dispatcher::Type, void const*, unsigned long, mojo::core::ports::PortName const*, unsigned long, mojo::PlatformHandle*, unsigned long) + 201
3   com.github.Electron.framework 	0x000000010881f60a mojo::core::UserMessageImpl::ExtractSerializedHandles(mojo::core::UserMessageImpl::ExtractBadHandlePolicy, unsigned int*) + 842
4   com.github.Electron.framework 	0x0000000108807291 mojo::core::Core::GetMessageData(unsigned long, MojoGetMessageDataOptions const*, void**, unsigned int*, unsigned int*, unsigned int*) + 337 (core.cc:476)
5   com.github.Electron.framework 	0x000000010880e9da MojoGetMessageDataImpl + 42 (entrypoints.cc:102)
6   com.github.Electron.framework 	0x000000010a3a693a mojo::Message::CreateFromMessageHandle(mojo::ScopedHandleBase<mojo::MessageHandle>*) + 346 (message.cc:300)
7   com.github.Electron.framework 	0x000000010a3971a9 mojo::Connector::ReadMessage(mojo::Message*) + 105 (connector.cc:467)
8   com.github.Electron.framework 	0x000000010a397d60 mojo::Connector::ReadAllAvailableMessages() + 800 (connector.cc:582)
9   com.github.Electron.framework 	0x000000010a3ae02e mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&) + 222 (simple_watcher.cc:293)
10  com.github.Electron.framework 	0x000000010a083052 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 338 (task_annotator.cc:142)
11  com.github.Electron.framework 	0x000000010a098442 base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) + 34
12  com.github.Electron.framework 	0x000000010a097ead base::internal::TaskTracker::RunTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&) + 621 (task_tracker.cc:592)
13  com.github.Electron.framework 	0x000000010a0dec76 base::internal::TaskTrackerPosix::RunTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&) + 182 (task_tracker_posix.cc:23)
14  com.github.Electron.framework 	0x000000010a097b60 base::internal::TaskTracker::RunAndPopNextTask(base::internal::RegisteredTaskSource) + 496 (task_tracker.cc:459)
15  com.github.Electron.framework 	0x000000010a09ed8d base::internal::WorkerThread::RunWorker() + 365 (worker_thread.cc:321)
16  com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
17  com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
18  libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
19  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
20  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 17:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 18:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 19:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 20:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 21:: DedicatedWorker thread
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a07febf base::WaitableEvent::Wait() + 31 (waitable_event_mac.cc:110)
4   com.github.Electron.framework 	0x000000010a048cd7 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 199
5   com.github.Electron.framework 	0x000000010a093998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
6   com.github.Electron.framework 	0x000000010a067a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
7   com.github.Electron.framework 	0x00000001095d9afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
8   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
9   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
10  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
11  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 22:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x000000010a080045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x000000010a09e8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x000000010a09ef60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x000000010a09eb14 base::internal::WorkerThread::RunBackgroundPooledWorker() + 20
6   com.github.Electron.framework 	0x000000010a0e9307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000000  rbx: 0x0000000107cfa5c0  rcx: 0x00007ffeedcf76a8  rdx: 0x0000000000000000
  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffeedcf76e0  rsp: 0x00007ffeedcf76a8
   r8: 0x0000000000000000   r9: 0x00007ffeedcf7600  r10: 0x0000000000000000  r11: 0x0000000000000206
  r12: 0x0000000000000307  r13: 0x0000000106854000  r14: 0x0000000000000006  r15: 0x000000000000002d
  rip: 0x00007fff6e49c2c6  rfl: 0x0000000000000206  cr2: 0x00007fffa4bf6188
  
Logical CPU:     0
Error Code:      0x02000148
Trap Number:     133


Binary Images:
       0x101efe000 -        0x101f37fe7 +com.github.Electron.helper (0) <9D47CC4B-914F-3A7C-AFD2-5702FF788B61> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)
       0x101f3f000 -        0x101f5afff +com.github.Squirrel (1.0 - 1) <E4398068-33D3-3A00-9DBE-5ACC9B022501> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x101f7c000 -        0x101fdfff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x102051000 -        0x102065fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x102077000 -        0x102303fe7 +libffmpeg.dylib (0) <CD6D3D90-7668-37FE-A3E0-1B71B3ABB7C8> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x106bf5000 -        0x106bf5fff +notificationstate.node (0) <F1FC2DE7-6168-3546-B24B-F7B86EC6DF80> /Users/USER/*/notificationstate.node
       0x107c58000 -        0x107cc270f  dyld (655.1.1) <615654D5-B6C5-3D83-A146-34A3EA6D3A80> /usr/lib/dyld
       0x107d23000 -        0x10e49bf7f +com.github.Electron.framework (7.1.1) <0BB947D1-CEAB-3F02-8169-729C8CB4DC09> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
    0x7fff3e3fd000 -     0x7fff3e5d9ffb  com.apple.avfoundation (2.0 - 1550.4) <5854207B-6106-3DA4-80B6-36C42D042F26> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff3e5da000 -     0x7fff3e69ffff  com.apple.audio.AVFAudio (1.0 - ???) <D454A339-2FC6-3EF6-992F-D676046612DB> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff3e7a7000 -     0x7fff3e7a7fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <762942CB-CFC9-3A0C-9645-A56523A06426> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff3e7a8000 -     0x7fff3e7beff7  libCGInterfaces.dylib (506.22) <1B6C92D9-F4B8-37BA-9635-94C4A56098CE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff3e7bf000 -     0x7fff3ee58fef  com.apple.vImage (8.1 - ???) <53FA3611-894E-3158-A654-FBD2F70998FE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff3ee59000 -     0x7fff3f0d2ff3  libBLAS.dylib (1243.200.4) <417CA0FC-B6CB-3FB3-ACBC-8914E3F62D20> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff3f0d3000 -     0x7fff3f145ffb  libBNNS.dylib (38.250.1) <538D12A2-9B9D-3E22-9896-F90F6E69C06E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff3f146000 -     0x7fff3f4efff3  libLAPACK.dylib (1243.200.4) <92175DF4-863A-3780-909A-A3E5C410F2E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff3f4f0000 -     0x7fff3f505feb  libLinearAlgebra.dylib (1243.200.4) <CB671EE6-DEA1-391C-9B2B-AA09A46B4D7A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff3f506000 -     0x7fff3f50bff3  libQuadrature.dylib (3.200.2) <1BAE7E22-2862-379F-B334-A3756067730F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff3f50c000 -     0x7fff3f588ff3  libSparse.dylib (79.200.5) <E78B33D3-672A-3C53-B512-D3DDB2E9AC8D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff3f589000 -     0x7fff3f59cfe3  libSparseBLAS.dylib (1243.200.4) <E9243341-DB77-37C1-97C5-3DFA00DD70FA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff3f59d000 -     0x7fff3f784ff7  libvDSP.dylib (671.250.4) <7B110627-A9C1-3FB7-A077-0C7741BA25D8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff3f785000 -     0x7fff3f838ff7  libvMisc.dylib (671.250.4) <D5BA4812-BFFC-3CD0-B382-905CD8555DA6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff3f839000 -     0x7fff3f839fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <74288115-EF61-30B6-843F-0593B31D4929> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff3f9db000 -     0x7fff40790ffb  com.apple.AppKit (6.9 - 1671.60.109) <49E51666-59ED-3923-B873-668934E538A8> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff407e2000 -     0x7fff407e2fff  com.apple.ApplicationServices (50.1 - 50.1) <3E60C239-ECEA-3AB8-B05C-1A66614E24F5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff407e3000 -     0x7fff4084efff  com.apple.ApplicationServices.ATS (377 - 453.11.2.2) <A258DA73-114B-3102-A056-4AAAD3CEB9DD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff408e7000 -     0x7fff409fefff  libFontParser.dylib (228.6.2.3) <3602D55B-3B9E-3B3A-A814-08C1244A8AE4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff409ff000 -     0x7fff40a41fff  libFontRegistry.dylib (228.12.2.3) <2A56347B-2809-3407-A8B4-2AB88E484062> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff40a9b000 -     0x7fff40acdfff  libTrueTypeScaler.dylib (228.6.2.3) <7E4C5D9C-51AF-3EC1-8FA5-11CD4BEE477A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff40b32000 -     0x7fff40b36ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <AFC4FE0F-2F46-39E3-BF39-90AF0D4F63A4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff40bd1000 -     0x7fff40c23ff7  com.apple.HIServices (1.22 - 628) <2BE461FF-80B9-30D3-A574-AED5724B1C1B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff40c24000 -     0x7fff40c33fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <F5617A2A-FEA6-3832-B5BA-C2111B98786F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff40c34000 -     0x7fff40c7dff7  com.apple.print.framework.PrintCore (14.2 - 503.8) <57C2FE32-0E74-3079-B626-C2D52F2D2717> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff40c7e000 -     0x7fff40cb7ff7  com.apple.QD (3.12 - 407.2) <28C7D39F-59C9-3314-BECC-67045487229C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff40cb8000 -     0x7fff40cc4fff  com.apple.speech.synthesis.framework (8.1.3 - 8.1.3) <5E7B9BD4-122B-3012-A044-3259C97E7509> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff40cc5000 -     0x7fff40f3cfff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <571A3B68-AB1D-3050-932A-999EA148963C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff40f3e000 -     0x7fff40f3efff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <3D6E8961-8C34-3042-A588-21458C7D1C02> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff41297000 -     0x7fff41638fff  com.apple.CFNetwork (978.1 - 978.1) <01AB9E36-3C9F-3070-8D46-7F14B99A757A> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff4164d000 -     0x7fff4164dfff  com.apple.Carbon (158 - 158) <78AF9309-4DFE-3E3F-8108-A0FF1FC0E8C1> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff4164e000 -     0x7fff41651ffb  com.apple.CommonPanels (1.2.6 - 98) <1CD6D56D-8EC7-3528-8CBC-FC69533519B5> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff41652000 -     0x7fff41949fff  com.apple.HIToolbox (2.1.1 - 918.7) <13F69D4C-D19F-3E09-9231-1978D783A556> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff4194a000 -     0x7fff4194dff3  com.apple.help (1.3.8 - 66) <A08517EB-8958-36C9-AEE0-1A8FEEACBE3F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff4194e000 -     0x7fff41953ff7  com.apple.ImageCapture (9.0 - 1534.2) <DB063E87-ED8F-3E4E-A7E2-A6B45FA73EF7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff41954000 -     0x7fff419e9ff3  com.apple.ink.framework (10.9 - 225) <7C7E9483-2E91-3DD3-B1E0-C238F42CA0DD> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff419ea000 -     0x7fff41a02ff7  com.apple.openscripting (1.7 - 179.1) <9B8C1ECC-5864-3E21-9149-863E884EA25C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff41a22000 -     0x7fff41a23ff7  com.apple.print.framework.Print (14.2 - 267.4) <A7A9D2A0-D4E0-35EF-A0F7-50521F707C33> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff41a24000 -     0x7fff41a26ff7  com.apple.securityhi (9.0 - 55006) <05717F77-7A7B-37E6-AB3E-03F063E9095B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff41a27000 -     0x7fff41a2dff7  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <3CC050FB-EBCB-3087-8EA5-F378C8F99217> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff41b4f000 -     0x7fff41b4ffff  com.apple.Cocoa (6.11 - 23) <056B9D98-325B-3743-97AF-AAC8E182BDF9> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff41b5d000 -     0x7fff41cacff7  com.apple.ColorSync (4.13.0 - 3345.6) <F47177B2-7113-3642-98A5-602819CD02B0> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff41e38000 -     0x7fff41ebefff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E8E64E6-0E58-375A-97F7-07CB4EE181AC> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff41f22000 -     0x7fff41f4cffb  com.apple.CoreBluetooth (1.0 - 1) <A73F1709-DD18-3052-9F22-C0015278834B> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff41f4d000 -     0x7fff422d2fef  com.apple.CoreData (120 - 866.6) <132CB39B-8D58-30FA-B8AD-49BFFF34B293> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff422d3000 -     0x7fff423c3ff7  com.apple.CoreDisplay (101.3 - 110.18) <BA4092D7-27D3-3886-ABC0-74CDCF747350> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff423c4000 -     0x7fff42809fef  com.apple.CoreFoundation (6.9 - 1575.23) <596DBC2A-60E3-3A73-AA5F-7A1806CF3204> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff4280b000 -     0x7fff42e9bfe7  com.apple.CoreGraphics (2.0 - 1265.10) <2F243BDA-11A0-3691-9DCB-4D0ACA1062DA> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff42e9d000 -     0x7fff431bdfff  com.apple.CoreImage (14.4.0 - 750.0.140) <11026E39-D2FF-3CF6-8ACE-7BA293F9853E> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff43237000 -     0x7fff4328dff7  com.apple.audio.midi.CoreMIDI (1.10 - 88) <29B498FA-B55D-3CAB-85CF-BD631CF89C0F> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff43290000 -     0x7fff434b9fff  com.apple.CoreML (1.0 - 1) <9EC1FED2-BA47-307B-A326-43C4D05166E7> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML
    0x7fff434ba000 -     0x7fff435befff  com.apple.CoreMedia (1.0 - 2290.14) <19ABC5E2-6BEC-3914-BAE5-8ECA5A916BA2> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff435bf000 -     0x7fff4361afff  com.apple.CoreMediaIO (900.0 - 5050.1) <337584E5-42BC-3225-9783-2749F7F2A219> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff4361b000 -     0x7fff4361bfff  com.apple.CoreServices (946 - 946) <9A402CC6-8163-3CF1-8670-B95796B1A0EE> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff4361c000 -     0x7fff43698ff7  com.apple.AE (773 - 773) <55AE7C9E-27C3-30E9-A047-3B92A6FD53B4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff43699000 -     0x7fff43970fff  com.apple.CoreServices.CarbonCore (1178.33 - 1178.33) <CB87F0C7-2CD6-3983-8E32-B6A2EC925352> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff43971000 -     0x7fff439b9ff7  com.apple.DictionaryServices (1.2 - 284.16.4) <746EB200-DC51-30AE-9CBC-608A7B4CC8DA> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff439ba000 -     0x7fff439c2ffb  com.apple.CoreServices.FSEvents (1239.200.13 - 1239.200.13) <28BF3EC6-9985-3402-AEA9-0FF6EE1C200E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff439c3000 -     0x7fff43b74ff7  com.apple.LaunchServices (946 - 946) <A0C91634-9410-38E8-BC11-7A5A369E6BA5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff43b75000 -     0x7fff43c13ff7  com.apple.Metadata (10.7.0 - 1191.57) <BFFAED00-2560-318A-BB8F-4E7E5123EC61> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff43c14000 -     0x7fff43c5eff7  com.apple.CoreServices.OSServices (946 - 946) <20C4EEF8-D5AC-39A0-9B4A-78F88E3EFBCC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff43c5f000 -     0x7fff43cc6ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <DA08AA6F-A6F1-36C0-87F4-E26294E51A3A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff43cc7000 -     0x7fff43ce8ff3  com.apple.coreservices.SharedFileList (71.28 - 71.28) <487A8464-729E-305A-B5D1-E3FE8EB9CFC5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff43ff3000 -     0x7fff44155ff3  com.apple.CoreText (352.0 - 584.26.3.2) <59919B0C-CBD5-3877-8D6F-D6048F1E5F42> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff44156000 -     0x7fff44196ff3  com.apple.CoreVideo (1.8 - 281.4) <10CF8E52-07E3-382B-8091-2CEEEFFA69B4> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff44197000 -     0x7fff44226fff  com.apple.framework.CoreWLAN (13.0 - 1375.2) <BF4B29F7-FBC8-3299-98E8-C3F8C04B7C92> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff443a9000 -     0x7fff44457fff  com.apple.DiscRecording (9.0.3 - 9030.4.5) <D7A28B57-C025-3D44-BB17-82243B7B91BC> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff4447d000 -     0x7fff44482ffb  com.apple.DiskArbitration (2.7 - 2.7) <F481F2C0-884E-3265-8111-ABBEC93F0920> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff44645000 -     0x7fff44647ff3  com.apple.ForceFeedback (1.0.6 - 1.0.6) <205B0C3E-4E8D-3347-A993-469F06ABBFF9> /System/Library/Frameworks/ForceFeedback.framework/Versions/A/ForceFeedback
    0x7fff44648000 -     0x7fff449f5ffb  com.apple.Foundation (6.9 - 1575.23) <C5EA5ABE-2E0C-37A0-A02A-F3150FE3CC66> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff44a64000 -     0x7fff44a93ffb  com.apple.GSS (4.0 - 2.0) <E2B90D08-3857-3155-9FCC-07D778988EC9> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff44a94000 -     0x7fff44aadff3  com.apple.GameController (1.0 - 1) <9339D37B-54EA-31C5-A4A5-2135288BA992> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff44b93000 -     0x7fff44c9dfff  com.apple.Bluetooth (6.0.14 - 6.0.14d3) <BE98C8CF-11CA-3CB6-BB00-4A85608D375B> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff44d00000 -     0x7fff44d8ffff  com.apple.framework.IOKit (2.0.2 - 1483.260.4) <8A90F547-86EF-3DFB-92FE-0E2C0376DD84> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff44d91000 -     0x7fff44da0ffb  com.apple.IOSurface (255.6.1 - 255.6.1) <85F85EBB-EA59-3A8B-B3EB-7C20F3CC77AE> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff44da1000 -     0x7fff44df3ff3  com.apple.ImageCaptureCore (1.0 - 1534.2) <27942C51-8108-3ED9-B37E-7C365A31EC2D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff44df4000 -     0x7fff44f7ffef  com.apple.ImageIO.framework (3.3.0 - 1850.2) <75E46A31-D87D-35CE-86A4-96A50971FDB2> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff44f80000 -     0x7fff44f84ffb  libGIF.dylib (1850.2) <4774EBDF-583B-3DDD-A0E1-9F427CB6A074> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff44f85000 -     0x7fff45061fef  libJP2.dylib (1850.2) <697BB77F-A682-339F-8659-35432962432D> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff45062000 -     0x7fff45087feb  libJPEG.dylib (1850.2) <171A8AC4-AADA-376F-9F2C-B9C978DB1007> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff4534a000 -     0x7fff45370feb  libPng.dylib (1850.2) <FBCEE909-F573-3AD6-A45F-AF32612BF8A2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff45371000 -     0x7fff45373ffb  libRadiance.dylib (1850.2) <56907025-D5CE-3A9E-ACCB-A376C2599853> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff45374000 -     0x7fff453c1fe7  libTIFF.dylib (1850.2) <F59557C9-C761-3E6F-85D1-0FBFFD53ED5C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff456bc000 -     0x7fff4651cfff  com.apple.JavaScriptCore (14607 - 14607.3.9) <9B7D9E8B-619D-34A1-8FA9-E23C0EA3CD02> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff46534000 -     0x7fff4654dfff  com.apple.Kerberos (3.0 - 1) <DB1E0679-37E1-3B93-9789-32F63D660C3B> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff465d0000 -     0x7fff465eefff  com.apple.CoreAuthentication.SharedUtils (1.0 - 425.270.4) <180B7EB4-EE6F-34FC-83B9-1CB526923F4D> /System/Library/Frameworks/LocalAuthentication.framework/Support/SharedUtils.framework/Versions/A/SharedUtils
    0x7fff465ef000 -     0x7fff46603fff  com.apple.LocalAuthentication (1.0 - 425.270.4) <2360CAFC-E2D7-34E1-9C37-F5CB8A49D48A> /System/Library/Frameworks/LocalAuthentication.framework/Versions/A/LocalAuthentication
    0x7fff46807000 -     0x7fff46811fff  com.apple.MediaAccessibility (1.0 - 114.4) <76C449C5-DB45-3D7F-BFAD-3DACEF15DA21> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff46826000 -     0x7fff468c0ffb  com.apple.MediaPlayer (1.0 - 1.0) <B29D3221-A7E1-3DA9-AF9C-5EA8B15841D4> /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer
    0x7fff468c1000 -     0x7fff46f67fff  com.apple.MediaToolbox (1.0 - 2290.14) <E404EAFF-54E8-35CA-A3C5-2797F2DE73D0> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff46f69000 -     0x7fff47011ff7  com.apple.Metal (162.2 - 162.2) <92C0FEE5-3C13-31D7-BC98-582E0D8FA29A> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff47013000 -     0x7fff4702cff3  com.apple.MetalKit (1.0 - 113) <51CDE966-54A7-3556-971B-1173E9986BB8> /System/Library/Frameworks/MetalKit.framework/Versions/A/MetalKit
    0x7fff4702d000 -     0x7fff4704cff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <44CE8362-E972-3697-AD6F-15BC863BAEB8> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff4704d000 -     0x7fff470c9fe7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <EE8440DA-66DF-3923-ABBC-E0543211C069> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff470ca000 -     0x7fff470f1fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <E64450DF-2B96-331E-B7F4-666E00571C70> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff470f2000 -     0x7fff4721dff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <F2CF26B6-73F1-3644-8FE9-CDB9B2C4501F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff4721e000 -     0x7fff47238fff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <B33A35C3-0393-366B-ACFB-F4BB6A5F7B4A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector
    0x7fff47239000 -     0x7fff4723aff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <69F14BCF-C5C5-3BF8-9C31-8F87D2D6130A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff48031000 -     0x7fff4803dff7  com.apple.NetFS (6.0 - 4.0) <E917806F-0607-3292-B2D6-A15404D61B99> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff4aadb000 -     0x7fff4ab32ff7  com.apple.opencl (2.15.3 - 2.15.3) <50EF864A-EBFF-34AB-836B-075B079FBF0F> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff4ab33000 -     0x7fff4ab4eff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <F03D84EB-49B2-3A00-9127-B9A269824026> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff4ab4f000 -     0x7fff4ab5affb  com.apple.OpenDirectory (10.14 - 207.200.4) <A8020CEE-5B78-3581-A735-EA2833683F31> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff4b4aa000 -     0x7fff4b4acfff  libCVMSPluginSupport.dylib (17.7.3) <5003943C-2B94-3F1C-93DB-53034FC8873C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff4b4ad000 -     0x7fff4b4b2ff3  libCoreFSCache.dylib (166.2) <222C2A4F-7E32-30F6-8459-2FAB98073A3D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff4b4b3000 -     0x7fff4b4b7fff  libCoreVMClient.dylib (166.2) <6789ECD4-91DD-32EF-A1FD-F27D2344CD8B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff4b4b8000 -     0x7fff4b4c0ff7  libGFXShared.dylib (17.7.3) <D8182879-8143-3B6D-9EB4-B7F953BEF6B1> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff4b4c1000 -     0x7fff4b4ccfff  libGL.dylib (17.7.3) <0CDF608E-7D39-3F98-BB64-BB3D3721CCF8> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff4b4cd000 -     0x7fff4b507fef  libGLImage.dylib (17.7.3) <757CCAAD-ED2A-392A-A9EB-EEEE688B9C5D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff4b67b000 -     0x7fff4b6b9fff  libGLU.dylib (17.7.3) <8B2C8131-70F9-35FE-AAAE-933D730836F5> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff4c056000 -     0x7fff4c065ffb  com.apple.opengl (17.7.3 - 17.7.3) <6FE0731B-129C-3EA3-843B-A5BA9F0870A8> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff4c3e8000 -     0x7fff4c531ff7  com.apple.QTKit (7.7.3 - 3040) <D42BB4BE-B347-3113-ACA4-3257A5E45F52> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff4c532000 -     0x7fff4c786fff  com.apple.imageKit (3.0 - 1067) <4F398AF4-828E-3FC2-9E3D-4EE3F36F7619> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff4c787000 -     0x7fff4c874ff3  com.apple.PDFKit (1.0 - 745.4) <C4631DFB-89CC-3E87-9D26-B678124768AD> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff4c875000 -     0x7fff4cd44ff7  com.apple.QuartzComposer (5.1 - 370) <9C59494E-8D09-359E-B457-AA893520984C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff4cd45000 -     0x7fff4cd6bff7  com.apple.quartzfilters (1.10.0 - 83.1) <1CABB0FA-A6DB-3DD5-A598-F298F081E04E> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff4cd6c000 -     0x7fff4ce6dff7  com.apple.QuickLookUIFramework (5.0 - 775.6) <5660DDBA-2BE4-310A-9E81-370106EDB21D> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff4ce6e000 -     0x7fff4ce6efff  com.apple.quartzframework (1.5 - 23) <044ACF9F-1FEC-33B0-A390-82F7615156E4> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff4ce6f000 -     0x7fff4d0c6ff7  com.apple.QuartzCore (1.11 - 701.14) <AEDC3021-93C0-3438-8792-D5A386C35AC6> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff4d0c7000 -     0x7fff4d11efff  com.apple.QuickLookFramework (5.0 - 775.6) <CB74C63F-E223-3783-9021-8E28091BCDA6> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff4d2e5000 -     0x7fff4d2fdffb  com.apple.SafariServices.framework (14608 - 14608.3.10.10.1) <95CF1D7B-69CC-33FC-B66E-E6808DF5509D> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff4d8fc000 -     0x7fff4dbfcfff  com.apple.security (7.0 - 58286.270.3.0.1) <8DFB0541-E701-307E-8AE1-4DD9A9BA9FF3> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff4dbfd000 -     0x7fff4dc89fff  com.apple.securityfoundation (6.0 - 55185.260.1) <66B3719D-3B4E-3F56-9265-E5E7E4C87D8C> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff4dc8a000 -     0x7fff4dcbaffb  com.apple.securityinterface (10.0 - 55109.200.8) <DB82CA30-3C20-3860-BDD3-C8B1668C9CB8> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff4dcbb000 -     0x7fff4dcbffff  com.apple.xpc.ServiceManagement (1.0 - 1) <FCF7BABA-DDDD-3770-8DAC-7069850203C2> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff4df0e000 -     0x7fff4df24ffb  com.apple.StoreKit (1.0 - 1) <5E26D23D-D85C-32EF-AE44-2B0437893274> /System/Library/Frameworks/StoreKit.framework/Versions/A/StoreKit
    0x7fff4e058000 -     0x7fff4e0c5fff  com.apple.SystemConfiguration (1.17 - 1.17) <30C8327F-3EFF-3520-9C50-016F8B6B954F> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff4e324000 -     0x7fff4e685fff  com.apple.VideoToolbox (1.0 - 2290.14) <DDC0F7E1-CCE0-3398-B335-10683007AEE7> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff51301000 -     0x7fff513a6fff  com.apple.APFS (1.0 - 1) <7ACEA6C5-EA9B-3BE4-B235-A7ADD9B76278> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff51dbb000 -     0x7fff51dbcff7  com.apple.AggregateDictionary (1.0 - 1) <A6AF8AC4-1F25-37C4-9157-A02E9C200926> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary
    0x7fff5217a000 -     0x7fff522bdfff  com.apple.AnnotationKit (1.0 - 232.3.30) <DEE654C8-3D8B-3629-A670-0AD52DEB85CA> /System/Library/PrivateFrameworks/AnnotationKit.framework/Versions/A/AnnotationKit
    0x7fff523bd000 -     0x7fff523e9ff7  com.apple.framework.Apple80211 (13.0 - 1380.2) <16F093EF-370B-3B90-8DB4-E94624431D15> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff52511000 -     0x7fff52520fc7  com.apple.AppleFSCompression (96.200.3 - 1.0) <3CF60CE8-976E-3CB8-959D-DD0948C1C2DE> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff5261c000 -     0x7fff52627fff  com.apple.AppleIDAuthSupport (1.0 - 1) <2E9D1398-DBE6-328B-ADDA-20FA5FAD7405> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport
    0x7fff52668000 -     0x7fff526b1ff3  com.apple.AppleJPEG (1.0 - 1) <4C1F426B-7D77-3980-9633-7DBD8C666B9A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff52905000 -     0x7fff52927fff  com.apple.applesauce (1.0 - ???) <F49107C7-3C51-3024-8EF1-C57643BE4F3B> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff529e7000 -     0x7fff529eaff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <690222F7-29A6-39A1-BA61-F1DD4767D01D> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff529eb000 -     0x7fff52a3bff7  com.apple.AppleVAFramework (5.1.4 - 5.1.4) <473714CF-664E-372D-86CA-3451EA6A6403> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff52a86000 -     0x7fff52a9affb  com.apple.AssertionServices (1.0 - 1) <456E507A-4561-3628-9FBE-173ACE7429D8> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices
    0x7fff52e69000 -     0x7fff52f55ff7  com.apple.AuthKit (1.0 - 1) <2765ABE9-54F2-3E45-8A93-1261E251B90D> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit
    0x7fff53117000 -     0x7fff5311ffff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <2A396FC0-7B79-3088-9A82-FB93C1181A57> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff53120000 -     0x7fff531b5fff  com.apple.backup.framework (1.10.5 - ???) <4EEC51E2-AE4C-340A-B686-901810152C12> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff531b6000 -     0x7fff53223ff3  com.apple.BaseBoard (360.28 - 360.28) <68FA8044-F3CD-3BC6-9DAB-27DACF52BFC0> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard
    0x7fff5322c000 -     0x7fff53232ffb  com.apple.BezelServicesFW (317.5 - 317.5) <C825E2CD-7D67-3AC0-8CE8-AEE9C95DD248> /System/Library/PrivateFrameworks/BezelServices.framework/Versions/A/BezelServices
    0x7fff532a9000 -     0x7fff532e5ff3  com.apple.bom (14.0 - 197.6) <A99A6F9A-AFDE-3BC6-95CE-AA90B268B805> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
    0x7fff54081000 -     0x7fff540d0ff7  com.apple.ChunkingLibrary (201 - 201) <DFE16C42-24E6-386F-AC50-0058F61980A2> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff54e8e000 -     0x7fff54e97ffb  com.apple.CommonAuth (4.0 - 2.0) <93335CB6-ABEB-3EC7-A040-8A667F40D5F3> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff54eab000 -     0x7fff54ec0ffb  com.apple.commonutilities (8.0 - 900) <080E168B-21B7-3CCA-AB84-BB9911D18DAC> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities
    0x7fff55330000 -     0x7fff55713fef  com.apple.CoreAUC (274.0.0 - 274.0.0) <C71F1581-E73B-3DA0-958B-E912C3FB3F23> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff55714000 -     0x7fff55742ff7  com.apple.CoreAVCHD (6.0.0 - 6000.4.1) <A04A99B8-DAC5-36FC-BAC7-7431600C1F89> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff557d8000 -     0x7fff55836ffb  com.apple.corebrightness (1.0 - 1) <A383E4A0-14F4-3627-AD99-2F813068A982> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff55b70000 -     0x7fff55b81ff7  com.apple.CoreEmoji (1.0 - 69.19.9) <228457B3-E191-356E-9A5B-3C0438D05FBA> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff55d2a000 -     0x7fff55e19fff  com.apple.CoreHandwriting (161 - 1.2) <7CBB18C3-FE95-3352-9D67-B441E89AD10F> /System/Library/PrivateFrameworks/CoreHandwriting.framework/Versions/A/CoreHandwriting
    0x7fff55feb000 -     0x7fff56001ffb  com.apple.CoreMediaAuthoring (2.2 - 959) <86089759-E920-37DB-A3BB-F5621C351E4A> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff5612b000 -     0x7fff56191ff7  com.apple.CoreNLP (1.0 - 130.15.22) <27877820-17D0-3B02-8557-4014E876CCC7> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP
    0x7fff562fd000 -     0x7fff56389fff  com.apple.CorePDF (4.0 - 414) <E4ECDD15-34C0-30C2-AFA9-27C8EDAC3DB0> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff5643e000 -     0x7fff56446ff7  com.apple.CorePhoneNumbers (1.0 - 1) <11F97C7E-C183-305F-8E6C-9B374F50E26B> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers
    0x7fff565c2000 -     0x7fff565f3ff3  com.apple.CoreServicesInternal (358 - 358) <DD6EF60D-048F-3186-83DA-EB191EDF48AE> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff569ba000 -     0x7fff56a3efff  com.apple.CoreSymbolication (10.2 - 64490.25.1) <28B2FF2D-3FDE-3A20-B343-341E5BD4E22F> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff56ace000 -     0x7fff56bf9ff7  com.apple.coreui (2.1 - 499.10) <A80F4B09-F940-346F-A9DF-4EFADD9220A8> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff56bfa000 -     0x7fff56d9afff  com.apple.CoreUtils (5.9 - 590.16) <66CC50F7-766D-33E2-A388-4DE22840ADFB> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff56dee000 -     0x7fff56e51ff7  com.apple.framework.CoreWiFi (13.0 - 1375.2) <CA4B835A-27AC-3FAB-9F44-E48548EA2442> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff56e52000 -     0x7fff56e63ff3  com.apple.CrashReporterSupport (10.13 - 938.27) <4771B1CE-1B49-312F-9550-A3391C64214C> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff56ef3000 -     0x7fff56f02fff  com.apple.framework.DFRFoundation (1.0 - 211.1) <E3F02F2A-2059-39CC-85DA-969676EB88EB> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff56f03000 -     0x7fff56f07ff7  com.apple.DSExternalDisplay (3.1 - 380) <787B9748-B120-3453-B8FE-61D9E363A9E0> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff56f88000 -     0x7fff56ffdffb  com.apple.datadetectorscore (7.0 - 590.27) <06FB1A07-7AE6-3ADD-8E7E-41955FAB38E8> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff57049000 -     0x7fff57086ff7  com.apple.DebugSymbols (190 - 190) <6F4FAACA-E06B-38AD-A0C2-14EA5408A231> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff57087000 -     0x7fff571c2ff7  com.apple.desktopservices (1.13.5 - ???) <265C0E94-B8BF-3F58-8D68-EA001EEA0B15> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff573ce000 -     0x7fff57494fff  com.apple.DiskManagement (12.1 - 1555.270.2) <EB207683-FBD6-3B74-A606-3FE22234372C> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement
    0x7fff57495000 -     0x7fff57499ffb  com.apple.DisplayServicesFW (3.1 - 380) <62041594-2A4C-3362-87EE-F8E8C8E5BEEC> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff57542000 -     0x7fff57545ff3  com.apple.EFILogin (2.0 - 2) <210948F9-FD39-392D-8349-34985B3C751C> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff57c7b000 -     0x7fff57f5dff7  com.apple.vision.EspressoFramework (1.0 - 120) <8B56D943-F87B-3A01-B7A4-19DE3312B61C> /System/Library/PrivateFrameworks/Espresso.framework/Versions/A/Espresso
    0x7fff58109000 -     0x7fff58524fff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <A576E2DA-BF6F-3B18-8FEB-324E5C5FA9BD> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff5d479000 -     0x7fff5d47efff  com.apple.GPUWrangler (3.50.14 - 3.50.14) <6A317E65-B368-3D00-8AB4-11499320DCBF> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff5d80c000 -     0x7fff5d830ff3  com.apple.GenerationalStorage (2.0 - 285.101) <84C2E52C-F2C6-3FF8-87E5-3C88A40D3881> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff5e28a000 -     0x7fff5e299fff  com.apple.GraphVisualizer (1.0 - 5) <48D020B7-5938-3FAE-B468-E291AEE2C06F> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff5e3ff000 -     0x7fff5e473ffb  com.apple.Heimdal (4.0 - 2.0) <D97FCF19-EAD6-3E2F-BE88-F817E45CAE96> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff5f779000 -     0x7fff5f780ffb  com.apple.IOAccelerator (404.14 - 404.14) <3FCCFD5B-8C77-3945-933A-FAAD1B2DF507> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff5f784000 -     0x7fff5f79cfff  com.apple.IOPresentment (1.0 - 42.6) <2311058E-22A4-3E10-85F8-C8E116FAE800> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff5fb44000 -     0x7fff5fb71ff7  com.apple.IconServices (379 - 379) <7BAD562D-4FA3-3E11-863C-1EEBE2406D2C> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff5fc9b000 -     0x7fff5fc9fffb  com.apple.InternationalSupport (1.0 - 10.15.6) <6226A905-D055-321D-B665-5B0CC4798A74> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff5fe04000 -     0x7fff5fe16ff3  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <30CFE05C-4108-3879-AFAA-5BB02CBE190B> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle
    0x7fff5fe31000 -     0x7fff5ff0cff7  com.apple.LanguageModeling (1.0 - 159.15.15) <3DE3CE61-542B-37B7-883E-4B9717CAC65F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff5ff0d000 -     0x7fff5ff49ff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <4B5E843E-2809-3E70-9560-9254E2656419> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff5ff50000 -     0x7fff5ff55fff  com.apple.LinguisticData (1.0 - 238.25) <F529B961-098C-3E4C-A3E9-9DA9BFA1B3F0> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff60773000 -     0x7fff60776fff  com.apple.Mangrove (1.0 - 25) <537A5B2E-4C30-3CFD-8BDC-79F9A04AC327> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff607fd000 -     0x7fff60823ff3  com.apple.MarkupUI (1.0 - 232.3.30) <F6FF81DA-5048-3022-A8F2-7FC04D65D2F9> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI
    0x7fff6088b000 -     0x7fff608beff7  com.apple.MediaKit (16 - 907) <5EE0E7DA-5ACC-33F3-9BF0-47A448C011A1> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff608bf000 -     0x7fff60be2fff  com.apple.MediaRemote (1.0 - 1) <8AF135B0-781C-3B85-B44A-C0CFAC3EADE0> /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
    0x7fff60be3000 -     0x7fff60c06fff  com.apple.MediaServices (1.0 - 1) <82718A05-BD2D-37C2-A689-F09542CA988F> /System/Library/PrivateFrameworks/MediaServices.framework/Versions/A/MediaServices
    0x7fff60c4a000 -     0x7fff60c72ff7  com.apple.spotlight.metadata.utilities (1.0 - 1191.57) <38BB1FB7-3336-384C-B71F-4D0D402EB606> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities
    0x7fff60c73000 -     0x7fff60d00ff7  com.apple.gpusw.MetalTools (1.0 - 1) <2F9B8852-A146-366E-9AB9-8B57FA30B7DD> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff60eab000 -     0x7fff60ec6ffb  com.apple.MobileKeyBag (2.0 - 1.0) <C7C5DD21-66DE-31D1-92D9-BBEEAAE156FB> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff60ed9000 -     0x7fff60f4efff  com.apple.Montreal (1.0 - 42.15.9) <17BFD046-4362-3A76-A496-648D00FF3743> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal
    0x7fff60f4f000 -     0x7fff60f79ffb  com.apple.MultitouchSupport.framework (2450.1 - 2450.1) <42A23EC9-64A7-31C7-BF33-DF4412ED8A3F> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff611b5000 -     0x7fff611bffff  com.apple.NetAuth (6.2 - 6.2) <0D01BBE5-0269-310D-B148-D19DAE143DEB> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff61295000 -     0x7fff612afff7  com.apple.network.statistics.framework (1.2 - 1) <B056D329-5C7C-3FB4-991E-7092DB2F9A5B> /System/Library/PrivateFrameworks/NetworkStatistics.framework/Versions/A/NetworkStatistics
    0x7fff61a20000 -     0x7fff61a71ff3  com.apple.OTSVG (1.0 - ???) <5BF1A9EB-2694-3267-9514-A4EB3BEF4081> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG
    0x7fff62b15000 -     0x7fff62c08fff  com.apple.PencilKit (1.0 - 1) <79225726-6980-3680-AC0B-D8C5C5DB2224> /System/Library/PrivateFrameworks/PencilKit.framework/Versions/A/PencilKit
    0x7fff62c09000 -     0x7fff62c18ff7  com.apple.PerformanceAnalysis (1.218.2 - 218.2) <65F3DB3E-6D4E-33A0-B510-EF768D323DAB> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff62c19000 -     0x7fff62c42ff3  com.apple.persistentconnection (1.0 - 1.0) <9ECE64D9-8C5F-3FCE-8A46-29D7B3966920> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection
    0x7fff64a55000 -     0x7fff64aa9ffb  com.apple.ProtectedCloudStorage (1.0 - 1) <53B3C1F3-BB97-379F-8CBA-8FDCDF085793> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fff64aaa000 -     0x7fff64ac8ff7  com.apple.ProtocolBuffer (1 - 263.2) <907D6C95-D050-31DE-99CA-16A5135BC6F9> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff64c46000 -     0x7fff64c49ff3  com.apple.QuickLookNonBaseSystem (1.0 - 1) <69D0DD00-A3D2-3835-91F0-F33BD9D7D740> /System/Library/PrivateFrameworks/QuickLookNonBaseSystem.framework/Versions/A/QuickLookNonBaseSystem
    0x7fff64c4a000 -     0x7fff64c5fff3  com.apple.QuickLookThumbnailing (1.0 - 1) <B5E746AE-1DCB-3299-8626-10CCCBC2D5EE> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff64c60000 -     0x7fff64cb0fff  com.apple.ROCKit (27.6 - 27.6) <756C2253-E8B1-3C48-9945-DE8D6AD24DE2> /System/Library/PrivateFrameworks/ROCKit.framework/Versions/A/ROCKit
    0x7fff64dec000 -     0x7fff64df7fff  com.apple.xpc.RemoteServiceDiscovery (1.0 - 1336.261.2) <651F994E-21E1-359B-8FEA-6909CE9AAD56> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery
    0x7fff64e0a000 -     0x7fff64e2cfff  com.apple.RemoteViewServices (2.0 - 128) <8FB0E4EB-DCBB-32E6-94C6-AA9BA9EE4CAC> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff64e2d000 -     0x7fff64e40ff3  com.apple.xpc.RemoteXPC (1.0 - 1336.261.2) <E7B66B18-F5DF-3819-BA47-E35122BA09E8> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC
    0x7fff66636000 -     0x7fff66754fff  com.apple.Sharing (1288.62.2 - 1288.62.2) <5915173A-BAFB-3092-98C6-ED4871284FCA> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff67568000 -     0x7fff67817fff  com.apple.SkyLight (1.600.0 - 340.54) <3A96F564-275C-3EEA-8281-8168AC8D4F20> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff67fba000 -     0x7fff67fc6fff  com.apple.SpeechRecognitionCore (5.0.21 - 5.0.21) <7A6A67DB-C813-328E-AAFB-D267A5B50B3D> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff68717000 -     0x7fff687a2fc7  com.apple.Symbolication (10.2 - 64490.38.1) <9FDCC98D-5B32-35AD-A9BF-94DF2B78507F> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff68c79000 -     0x7fff68c85fff  com.apple.private.SystemPolicy (1.0 - 1) <9CDA85A3-875C-3615-8818-2DC73E9FFE8B> /System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy
    0x7fff68c8a000 -     0x7fff68c96ffb  com.apple.TCC (1.0 - 1) <73CF6FA9-44CE-30C9-887F-235940976585> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff68efc000 -     0x7fff68fc4ff3  com.apple.TextureIO (3.8.4 - 3.8.1) <7CEAC05A-D283-3D5A-B1E3-C849285FA0BF> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff69081000 -     0x7fff69239ffb  com.apple.UIFoundation (1.0 - 551.5) <254E42F9-ECAE-3F3C-9643-FF306CAFDA66> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff69eb5000 -     0x7fff69f8efff  com.apple.ViewBridge (401.1 - 401.1) <18144EC1-5DEF-369C-8EBA-2826E7142784> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff6a766000 -     0x7fff6a769fff  com.apple.dt.XCTTargetBootstrap (1.0 - 14490.66) <7AE3457F-AF40-3508-93FB-1D9E31EB1C9D> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap
    0x7fff6ab6a000 -     0x7fff6ab6cffb  com.apple.loginsupport (1.0 - 1) <3F8D6334-BCD6-36C1-BA20-CC8503A84375> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff6ae36000 -     0x7fff6ae6afff  libCRFSuite.dylib (41.15.4) <406DAC06-0C77-3F90-878B-4D38F11F0256> /usr/lib/libCRFSuite.dylib
    0x7fff6ae6d000 -     0x7fff6ae77ff7  libChineseTokenizer.dylib (28.15.3) <9B7F6109-3A5D-3641-9A7E-31D2239D73EE> /usr/lib/libChineseTokenizer.dylib
    0x7fff6ae78000 -     0x7fff6af01fff  libCoreStorage.dylib (546.50.1) <8E643B27-7986-3351-B37E-038FB6794BF9> /usr/lib/libCoreStorage.dylib
    0x7fff6af05000 -     0x7fff6af06ffb  libDiagnosticMessagesClient.dylib (107) <A14D0819-0970-34CD-8680-80E4D7FE8C2C> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff6af3d000 -     0x7fff6b194ff3  libFosl_dynamic.dylib (18.3.4) <1B5DD4E2-8AE0-315E-829E-D5BFCD264EA8> /usr/lib/libFosl_dynamic.dylib
    0x7fff6b1b4000 -     0x7fff6b1bbfff  libMatch.1.dylib (31.200.1) <EF8164CB-B599-39D9-9E73-4958A372DC0B> /usr/lib/libMatch.1.dylib
    0x7fff6b1e5000 -     0x7fff6b204fff  libMobileGestalt.dylib (645.270.1) <99A06C8A-97D6-383D-862C-F453BABB48A4> /usr/lib/libMobileGestalt.dylib
    0x7fff6b205000 -     0x7fff6b205fff  libOpenScriptingUtil.dylib (179.1) <4D603146-EDA5-3A74-9FF8-4F75D8BB9BC6> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff6b345000 -     0x7fff6b346ffb  libSystem.B.dylib (1252.250.1) <2CBD96C4-5698-363C-A22E-BFB6FF686FB4> /usr/lib/libSystem.B.dylib
    0x7fff6b3c2000 -     0x7fff6b3c3fff  libThaiTokenizer.dylib (2.15.1) <ADB37DC3-7D9B-3E73-A72A-BCC3433C937A> /usr/lib/libThaiTokenizer.dylib
    0x7fff6b3d5000 -     0x7fff6b3ebffb  libapple_nghttp2.dylib (1.24.1) <6F04250A-6686-3FDC-9A8D-290C64B06502> /usr/lib/libapple_nghttp2.dylib
    0x7fff6b3ec000 -     0x7fff6b415ffb  libarchive.2.dylib (54.250.1) <47289946-8504-3966-9127-6CE39993DC2C> /usr/lib/libarchive.2.dylib
    0x7fff6b416000 -     0x7fff6b495fff  libate.dylib (1.13.8) <92B44EDB-369D-3EE8-AEC5-61F8B9313DBF> /usr/lib/libate.dylib
    0x7fff6b499000 -     0x7fff6b499ff3  libauto.dylib (187) <3E3780E1-96F3-3A22-91C5-92F9A5805518> /usr/lib/libauto.dylib
    0x7fff6b56b000 -     0x7fff6b57bffb  libbsm.0.dylib (39.200.18) <CF381E0B-025B-364F-A83D-2527E03F1AA3> /usr/lib/libbsm.0.dylib
    0x7fff6b57c000 -     0x7fff6b589fff  libbz2.1.0.dylib (38.200.3) <272953A1-8D36-329B-BDDB-E887B347710F> /usr/lib/libbz2.1.0.dylib
    0x7fff6b58a000 -     0x7fff6b5ddff7  libc++.1.dylib (400.9.4) <9A60A190-6C34-339F-BB3D-AACE942009A4> /usr/lib/libc++.1.dylib
    0x7fff6b5de000 -     0x7fff6b5f3ff7  libc++abi.dylib (400.17) <38C09CED-9090-3719-90F3-04A2749F5428> /usr/lib/libc++abi.dylib
    0x7fff6b5f4000 -     0x7fff6b5f4ff3  libcharset.1.dylib (51.200.6) <2A27E064-314C-359C-93FC-8A9B06206174> /usr/lib/libcharset.1.dylib
    0x7fff6b5f5000 -     0x7fff6b605ffb  libcmph.dylib (6.15.1) <9C52B2FE-179F-32AC-B87E-2AFC49ABF817> /usr/lib/libcmph.dylib
    0x7fff6b606000 -     0x7fff6b61effb  libcompression.dylib (52.250.2) <7F4BB18C-1FB4-3825-8D8B-6E6B168774C6> /usr/lib/libcompression.dylib
    0x7fff6b893000 -     0x7fff6b8a9fff  libcoretls.dylib (155.220.1) <4C64BE3E-41E3-3020-8BB7-07E90C0C861C> /usr/lib/libcoretls.dylib
    0x7fff6b8aa000 -     0x7fff6b8abff3  libcoretls_cfhelpers.dylib (155.220.1) <0959B3E9-6643-3589-8BB3-21D52CDF0EF1> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff6bd44000 -     0x7fff6bd4fff7  libcsfde.dylib (546.50.1) <7BAF8FCF-33A1-3C7C-8FEB-2020C8ED6063> /usr/lib/libcsfde.dylib
    0x7fff6bd57000 -     0x7fff6bdadff3  libcups.2.dylib (462.12) <095619DC-9233-3937-9E50-5F10D917A40D> /usr/lib/libcups.2.dylib
    0x7fff6bee1000 -     0x7fff6bee1fff  libenergytrace.dylib (17.200.1) <80BB567A-FD18-3497-BF97-353F57D98CDD> /usr/lib/libenergytrace.dylib
    0x7fff6bee2000 -     0x7fff6befbffb  libexpat.1.dylib (16.1.1) <28A385F1-4210-32D2-861B-C1B2189A5294> /usr/lib/libexpat.1.dylib
    0x7fff6bf13000 -     0x7fff6bf18ff7  libgermantok.dylib (17.15.2) <E5F0F794-FF27-3D64-AE52-C78C6A84DD67> /usr/lib/libgermantok.dylib
    0x7fff6bf19000 -     0x7fff6bf1eff7  libheimdal-asn1.dylib (520.270.1) <73F60D6F-76F8-35EF-9C86-9A81225EE4BE> /usr/lib/libheimdal-asn1.dylib
    0x7fff6bf49000 -     0x7fff6c039fff  libiconv.2.dylib (51.200.6) <2047C9B7-3F74-3A95-810D-2ED8F0475A99> /usr/lib/libiconv.2.dylib
    0x7fff6c03a000 -     0x7fff6c29bffb  libicucore.A.dylib (62141.0.1) <A0D63918-76E9-3C1B-B255-46F4C1DA7FE8> /usr/lib/libicucore.A.dylib
    0x7fff6c2e8000 -     0x7fff6c2e9fff  liblangid.dylib (128.15.1) <22D05C4F-769B-3075-ABCF-44A0EBACE028> /usr/lib/liblangid.dylib
    0x7fff6c2ea000 -     0x7fff6c302ff3  liblzma.5.dylib (10.200.3) <E1F4FD60-1CE4-37B9-AD95-29D348AF1AC0> /usr/lib/liblzma.5.dylib
    0x7fff6c31a000 -     0x7fff6c3beff7  libmecab.1.0.0.dylib (779.24.1) <A8D0379B-85FA-3B3D-89ED-5CF2C3826AB2> /usr/lib/libmecab.1.0.0.dylib
    0x7fff6c3bf000 -     0x7fff6c5c3fff  libmecabra.dylib (779.24.1) <D71F71E0-30E2-3DB3-B636-7DE13D51FB4B> /usr/lib/libmecabra.dylib
    0x7fff6c79b000 -     0x7fff6caecff7  libnetwork.dylib (1229.250.15) <72C7E9E3-B2BE-3300-BE1B-64606222022C> /usr/lib/libnetwork.dylib
    0x7fff6cb7e000 -     0x7fff6d303fdf  libobjc.A.dylib (756.2) <7C312627-43CB-3234-9324-4DEA92D59F50> /usr/lib/libobjc.A.dylib
    0x7fff6d315000 -     0x7fff6d319ffb  libpam.2.dylib (22.200.1) <586CF87F-349C-393D-AEEB-FB75F94A5EB7> /usr/lib/libpam.2.dylib
    0x7fff6d31c000 -     0x7fff6d351fff  libpcap.A.dylib (79.250.1) <C0893641-7DFF-3A33-BDAE-190FF54837E8> /usr/lib/libpcap.A.dylib
    0x7fff6d3a7000 -     0x7fff6d3aafff  libpmenergy.dylib (194.267.1) <313C9825-2641-355B-8CA7-C038781BF848> /usr/lib/libpmenergy.dylib
    0x7fff6d3ab000 -     0x7fff6d3adfff  libpmsample.dylib (194.267.1) <47FF5A10-C847-307D-8028-E8C159A0A803> /usr/lib/libpmsample.dylib
    0x7fff6d46a000 -     0x7fff6d482ffb  libresolv.9.dylib (65.200.3) <6884EA23-6425-3A88-8534-2D1AB0188B2D> /usr/lib/libresolv.9.dylib
    0x7fff6d484000 -     0x7fff6d4bfff3  libsandbox.1.dylib (851.270.1) <04B924EF-2385-34DF-807E-93AAD9EF3AAB> /usr/lib/libsandbox.1.dylib
    0x7fff6d4d3000 -     0x7fff6d4d4ff7  libspindump.dylib (267.3) <A584E403-8C95-3841-9C16-E22664A5A63F> /usr/lib/libspindump.dylib
    0x7fff6d4d5000 -     0x7fff6d6b2fff  libsqlite3.dylib (274.26) <6404BA3B-BCA4-301F-B2FE-8776105A2AA3> /usr/lib/libsqlite3.dylib
    0x7fff6d8cb000 -     0x7fff6d8ceff7  libutil.dylib (51.200.4) <CE9B18C9-66ED-32D4-9D29-01F8FCB467B0> /usr/lib/libutil.dylib
    0x7fff6d8cf000 -     0x7fff6d8dcfff  libxar.1.dylib (417.1) <39CCF46B-C81A-34B1-92A1-58C4E5DA846E> /usr/lib/libxar.1.dylib
    0x7fff6d8e1000 -     0x7fff6d9c4ff3  libxml2.2.dylib (32.12) <48E64CC9-8C86-372B-99DC-1D114F6A259A> /usr/lib/libxml2.2.dylib
    0x7fff6d9c5000 -     0x7fff6d9edff3  libxslt.1.dylib (16.7) <FA4F431A-1387-3432-BD7A-D9C512638E94> /usr/lib/libxslt.1.dylib
    0x7fff6d9ee000 -     0x7fff6da00ff7  libz.1.dylib (70.200.4) <B048FC1F-058F-3A08-A1FE-81D5308CB3E6> /usr/lib/libz.1.dylib
    0x7fff6e1e4000 -     0x7fff6e1e8ff3  libcache.dylib (81) <1987D1E1-DB11-3291-B12A-EBD55848E02D> /usr/lib/system/libcache.dylib
    0x7fff6e1e9000 -     0x7fff6e1f3ff3  libcommonCrypto.dylib (60118.250.2) <1765BB6E-6784-3653-B16B-CB839721DC9A> /usr/lib/system/libcommonCrypto.dylib
    0x7fff6e1f4000 -     0x7fff6e1fbff7  libcompiler_rt.dylib (63.4) <5212BA7B-B7EA-37B4-AF6E-AC4F507EDFB8> /usr/lib/system/libcompiler_rt.dylib
    0x7fff6e1fc000 -     0x7fff6e205ff7  libcopyfile.dylib (146.250.1) <98CD00CD-9B91-3B5C-A9DB-842638050FA8> /usr/lib/system/libcopyfile.dylib
    0x7fff6e206000 -     0x7fff6e28afc3  libcorecrypto.dylib (602.260.2) <01464D24-570C-3B83-9D18-467769E0FCDD> /usr/lib/system/libcorecrypto.dylib
    0x7fff6e311000 -     0x7fff6e34aff7  libdispatch.dylib (1008.270.1) <97273678-E94C-3C8C-89F6-2E2020F4B43B> /usr/lib/system/libdispatch.dylib
    0x7fff6e34b000 -     0x7fff6e377ff7  libdyld.dylib (655.1.1) <002418CC-AD11-3D10-865B-015591D24E6C> /usr/lib/system/libdyld.dylib
    0x7fff6e378000 -     0x7fff6e378ffb  libkeymgr.dylib (30) <0D0F9CA2-8D5A-3273-8723-59987B5827F2> /usr/lib/system/libkeymgr.dylib
    0x7fff6e379000 -     0x7fff6e385ff3  libkxld.dylib (4903.278.12) <310B81DB-F3E2-3495-BC8A-19EB750FEDBF> /usr/lib/system/libkxld.dylib
    0x7fff6e386000 -     0x7fff6e386ff7  liblaunch.dylib (1336.261.2) <2B07E27E-D404-3E98-9D28-BCA641E5C479> /usr/lib/system/liblaunch.dylib
    0x7fff6e387000 -     0x7fff6e38cfff  libmacho.dylib (927.0.3) <A377D608-77AB-3F6E-90F0-B4F251A5C12F> /usr/lib/system/libmacho.dylib
    0x7fff6e38d000 -     0x7fff6e38fff7  libquarantine.dylib (86.270.1) <50A89DAB-7E34-3347-9AD5-68957B27EFD2> /usr/lib/system/libquarantine.dylib
    0x7fff6e390000 -     0x7fff6e391ff7  libremovefile.dylib (45.200.2) <9FBEB2FF-EEBE-31BC-BCFC-C71F8D0E99B6> /usr/lib/system/libremovefile.dylib
    0x7fff6e392000 -     0x7fff6e3a9ff3  libsystem_asl.dylib (356.200.4) <A62A7249-38B8-33FA-9875-F1852590796C> /usr/lib/system/libsystem_asl.dylib
    0x7fff6e3aa000 -     0x7fff6e3aaff7  libsystem_blocks.dylib (73) <A453E8EE-860D-3CED-B5DC-BE54E9DB4348> /usr/lib/system/libsystem_blocks.dylib
    0x7fff6e3ab000 -     0x7fff6e432fff  libsystem_c.dylib (1272.250.1) <7EDACF78-2FA3-35B8-B051-D70475A35117> /usr/lib/system/libsystem_c.dylib
    0x7fff6e433000 -     0x7fff6e436ffb  libsystem_configuration.dylib (963.270.3) <2B4A836D-68A4-33E6-8D48-CD4486B03387> /usr/lib/system/libsystem_configuration.dylib
    0x7fff6e437000 -     0x7fff6e43aff7  libsystem_coreservices.dylib (66) <719F75A4-74C5-3BA6-A09E-0C5A3E5889D7> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff6e43b000 -     0x7fff6e441fff  libsystem_darwin.dylib (1272.250.1) <EC9B39A5-9592-3577-8997-7DC721D20D8C> /usr/lib/system/libsystem_darwin.dylib
    0x7fff6e442000 -     0x7fff6e448ffb  libsystem_dnssd.dylib (878.270.3) <97EEE658-D935-33C8-B56E-0F41EA7F6B43> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff6e449000 -     0x7fff6e494ffb  libsystem_info.dylib (517.200.9) <D09D5AE0-2FDC-3A6D-93EC-729F931B1457> /usr/lib/system/libsystem_info.dylib
    0x7fff6e495000 -     0x7fff6e4bdff7  libsystem_kernel.dylib (4903.278.12) <210C5A31-0B19-3AA3-98E4-686F1DD3983E> /usr/lib/system/libsystem_kernel.dylib
    0x7fff6e4be000 -     0x7fff6e509ff7  libsystem_m.dylib (3158.200.7) <F19B6DB7-014F-3820-831F-389CCDA06EF6> /usr/lib/system/libsystem_m.dylib
    0x7fff6e50a000 -     0x7fff6e534fff  libsystem_malloc.dylib (166.270.1) <011F3AD0-8E6A-3A89-AE64-6E5F6840F30A> /usr/lib/system/libsystem_malloc.dylib
    0x7fff6e535000 -     0x7fff6e53fff7  libsystem_networkextension.dylib (767.250.2) <FF06F13A-AEFE-3A27-A073-910EF78AEA36> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff6e540000 -     0x7fff6e547fff  libsystem_notify.dylib (172.200.21) <145B5CFC-CF73-33CE-BD3D-E8DDE268FFDE> /usr/lib/system/libsystem_notify.dylib
    0x7fff6e548000 -     0x7fff6e551fef  libsystem_platform.dylib (177.270.1) <9D1FE5E4-EB7D-3B3F-A8D1-A96D9CF1348C> /usr/lib/system/libsystem_platform.dylib
    0x7fff6e552000 -     0x7fff6e55cff7  libsystem_pthread.dylib (330.250.2) <2D5C08FF-484F-3D59-9132-CE1DCB3F76D7> /usr/lib/system/libsystem_pthread.dylib
    0x7fff6e55d000 -     0x7fff6e560ff7  libsystem_sandbox.dylib (851.270.1) <9494594B-5199-3186-82AB-5FF8BED6EE16> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff6e561000 -     0x7fff6e563ff3  libsystem_secinit.dylib (30.260.2) <EF1EA47B-7B22-35E8-BD9B-F7003DCB96AE> /usr/lib/system/libsystem_secinit.dylib
    0x7fff6e564000 -     0x7fff6e56bff3  libsystem_symptoms.dylib (820.267.1) <03F1C2DD-0F5A-3D9D-88F6-B26C0F94EB52> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff6e56c000 -     0x7fff6e581fff  libsystem_trace.dylib (906.260.1) <FC761C3B-5434-3A52-912D-F1B15FAA8EB2> /usr/lib/system/libsystem_trace.dylib
    0x7fff6e583000 -     0x7fff6e588ffb  libunwind.dylib (35.4) <24A97A67-F017-3CFC-B0D0-6BD0224B1336> /usr/lib/system/libunwind.dylib
    0x7fff6e589000 -     0x7fff6e5b8fff  libxpc.dylib (1336.261.2) <7DEE2300-6D8E-3C00-9C63-E3E80D56B0C4> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 43
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 11013592
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=541.7M resident=0K(0%) swapped_out_or_unallocated=541.7M(100%)
Writable regions: Total=1.0G written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=1.0G(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Activity Tracing                   256K        1 
CoreServices                       132K        1 
Dispatch continuations            16.0M        1 
Kernel Alloc Once                    8K        1 
MALLOC                           123.2M      444 
MALLOC guard page                   32K        7 
Mach message                        24K        4 
Memory Tag 252                    62.8M      653 
Memory Tag 253                    85.9M      159 
Memory Tag 255                    11.6G      815 
PROTECTED_MEMORY                     4K        1 
STACK GUARD                       56.1M       23 
Stack                            176.7M       46 
VM_ALLOCATE                          4K        1 
__DATA                            39.0M      319 
__FONT_DATA                          4K        1 
__LINKEDIT                       225.2M        9 
__TEXT                           316.4M      311 
__UNICODE                          564K        1 
mapped file                      211.4M       17 
shared memory                    371.4M       67 
===========                     =======  ======= 
TOTAL                             13.2G     2882 
```

</details>

<details>
<summary> Crash log 2 </summary>

```
Process:               Electron Helper (Renderer) [42656]
Path:                  /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)
Identifier:            Electron Helper (Renderer)
Version:               0
Code Type:             X86-64 (Native)
Parent Process:        Electron [42650]
Responsible:           iTerm2 [456]
User ID:               502

Date/Time:             2019-11-18 14:34:09.112 -0800
OS Version:            Mac OS X 10.14.6 (18G1012)
Report Version:        12
Bridge OS Version:     3.0 (14Y906)
Anonymous UUID:        0ED2F3FB-B526-03FA-C930-47AF8DCFA764

Sleep/Wake UUID:       4B407E01-397C-4E74-A40B-6BEF8CB105B8

Time Awake Since Boot: 130000 seconds
Time Since Wake:       16000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_CRASH (SIGABRT)
Exception Codes:       0x0000000000000000, 0x0000000000000000

Application Specific Information:
abort() called
Electron Helper (Renderer)(42656,0x1172e85c0) malloc: Incorrect checksum for freed object 0x7fa00599ef28: probably modified after being freed.
Corrupt value: 0x0
 

Thread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib        	0x00007fff6e49c2c6 __pthread_kill + 10
1   libsystem_pthread.dylib       	0x00007fff6e557bf1 pthread_kill + 284
2   libsystem_c.dylib             	0x00007fff6e4066a6 abort + 127
3   libsystem_malloc.dylib        	0x00007fff6e515077 malloc_vreport + 545
4   libsystem_malloc.dylib        	0x00007fff6e52de0d malloc_zone_error + 183
5   libsystem_malloc.dylib        	0x00007fff6e51184b tiny_free_list_remove_ptr + 544
6   libsystem_malloc.dylib        	0x00007fff6e50f21c tiny_free_no_lock + 934
7   libsystem_malloc.dylib        	0x00007fff6e50ed79 free_tiny + 480
8   com.github.Electron.framework 	0x00000001085ae9d8 v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 120 (Protocol.cpp:565)
9   com.github.Electron.framework 	0x00000001085aea5e v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 14 (Protocol.cpp:564)
10  com.github.Electron.framework 	0x00000001085b0740 v8_inspector::protocol::ListValue::~ListValue() + 80 (Protocol.cpp:733)
11  com.github.Electron.framework 	0x00000001085ae9fa v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 154 (Protocol.cpp:565)
12  com.github.Electron.framework 	0x00000001085aea5e v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 14 (Protocol.cpp:564)
13  com.github.Electron.framework 	0x00000001085ae9fa v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 154 (Protocol.cpp:565)
14  com.github.Electron.framework 	0x00000001085aea5e v8_inspector::protocol::DictionaryValue::~DictionaryValue() + 14 (Protocol.cpp:564)
15  com.github.Electron.framework 	0x000000010863e33d v8_inspector::protocol::Runtime::ConsoleAPICalledNotification::serializeToBinary() + 61 (Runtime.h:1784)
16  com.github.Electron.framework 	0x00000001085b33d0 v8_inspector::protocol::InternalResponse::serializeToBinary() + 320 (Protocol.cpp:1173)
17  com.github.Electron.framework 	0x000000010861fe47 v8_inspector::V8InspectorSessionImpl::serializeForFrontend(std::__1::unique_ptr<v8_inspector::protocol::Serializable, std::__1::default_delete<v8_inspector::protocol::Serializable> >) + 39 (v8-inspector-session-impl.cc:167)
18  com.github.Electron.framework 	0x00000001086202f6 non-virtual thunk to v8_inspector::V8InspectorSessionImpl::sendProtocolNotification(std::__1::unique_ptr<v8_inspector::protocol::Serializable, std::__1::default_delete<v8_inspector::protocol::Serializable> >) + 54 (v8-inspector-session-impl.cc:185)
19  com.github.Electron.framework 	0x00000001085d4137 v8_inspector::protocol::Runtime::Frontend::consoleAPICalled(v8_inspector::String16 const&, std::__1::unique_ptr<std::__1::vector<std::__1::unique_ptr<v8_inspector::protocol::Runtime::RemoteObject, std::__1::default_delete<v8_inspector::protocol::Runtime::RemoteObject> >, std::__1::allocator<std::__1::unique_ptr<v8_inspector::protocol::Runtime::RemoteObject, std::__1::default_delete<v8_inspector::protocol::Runtime::RemoteObject> > > >, std::__1::default_delete<std::__1::vector<std::__1::unique_ptr<v8_inspector::protocol::Runtime::RemoteObject, std::__1::default_delete<v8_inspector::protocol::Runtime::RemoteObject> >, std::__1::allocator<std::__1::unique_ptr<v8_inspector::protocol::Runtime::RemoteObject, std::__1::default_delete<v8_inspector::protocol::Runtime::RemoteObject> > > > > >, int, double, v8_inspector_protocol_bindings::glue::detail::PtrMaybe<v8_inspector::protocol::Runtime::StackTrace>, v8_inspector_protocol_bindings::glue::detail::ValueMaybe<v8_inspector::String16>) + 535 (Runtime.cpp:1295)
20  com.github.Electron.framework 	0x00000001085f66fb v8_inspector::V8ConsoleMessage::reportToFrontend(v8_inspector::protocol::Runtime::Frontend*, v8_inspector::V8InspectorSessionImpl*, bool) const + 3195 (v8-console-message.cc:373)
21  com.github.Electron.framework 	0x000000010862aefe v8_inspector::V8RuntimeAgentImpl::reportMessage(v8_inspector::V8ConsoleMessage*, bool) + 30 (v8-runtime-agent-impl.cc:839)
22  com.github.Electron.framework 	0x00000001085f8d03 v8_inspector::V8InspectorImpl::forEachSession(int, std::__1::function<void (v8_inspector::V8InspectorSessionImpl*)> const&) + 1331 (v8-inspector-impl.cc:392)
23  com.github.Electron.framework 	0x00000001085f8424 v8_inspector::V8ConsoleMessageStorage::addMessage(std::__1::unique_ptr<v8_inspector::V8ConsoleMessage, std::__1::default_delete<v8_inspector::V8ConsoleMessage> >) + 580 (v8-console-message.cc:538)
24  com.github.Electron.framework 	0x00000001085fbc71 v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > > const&) + 241 (v8-console.cc:102)
25  com.github.Electron.framework 	0x00000001085f9fa4 v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType) + 484 (v8-console.cc:69)
26  com.github.Electron.framework 	0x00000001085fa036 v8_inspector::V8Console::Info(v8::debug::ConsoleCallArguments const&, v8::debug::ConsoleContext const&) + 38 (v8-console.cc:217)
27  com.github.Electron.framework 	0x0000000108054d54 v8::internal::(anonymous namespace)::ConsoleCall(v8::internal::Isolate*, v8::internal::BuiltinArguments&, void (v8::debug::ConsoleDelegate::*)(v8::debug::ConsoleCallArguments const&, v8::debug::ConsoleContext const&)) + 1044
28  com.github.Electron.framework 	0x000000010801e8a5 v8::internal::Builtin_ConsoleInfo(int, unsigned long*, v8::internal::Isolate*) + 53 (builtins-console.cc:102)
29  com.github.Electron.framework 	0x00000001089d98d9 Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit + 57
30  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
31  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
32  com.github.Electron.framework 	0x0000000108959039 Builtins_ArgumentsAdaptorTrampoline + 185
33  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
34  com.github.Electron.framework 	0x0000000108959039 Builtins_ArgumentsAdaptorTrampoline + 185
35  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
36  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
37  ???                           	0x00000018be91f57a 0 + 106276451706
38  ???                           	0x00000018be91021c 0 + 106276389404
39  ???                           	0x00000018be8d97d2 0 + 106276165586
40  ???                           	0x00000018be7bbdc8 0 + 106274995656
41  ???                           	0x00000018be932be8 0 + 106276531176
42  ???                           	0x00000018be7a9c96 0 + 106274921622
43  ???                           	0x00000018be996892 0 + 106276939922
44  ???                           	0x00000018be9080c6 0 + 106276356294
45  ???                           	0x00000018be7a9ce0 0 + 106274921696
46  ???                           	0x00000018be9968d5 0 + 106276939989
47  ???                           	0x00000018be9080c6 0 + 106276356294
48  ???                           	0x00000018be7a9ce0 0 + 106274921696
49  ???                           	0x00000018be9968d5 0 + 106276939989
50  ???                           	0x00000018be9080c6 0 + 106276356294
51  ???                           	0x00000018be7a9ce0 0 + 106274921696
52  ???                           	0x00000018be996892 0 + 106276939922
53  ???                           	0x00000018be9080c6 0 + 106276356294
54  ???                           	0x00000018be7a9ce0 0 + 106274921696
55  ???                           	0x00000018be996892 0 + 106276939922
56  ???                           	0x00000018be9080c6 0 + 106276356294
57  ???                           	0x00000018be7a9ce0 0 + 106274921696
58  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
59  com.github.Electron.framework 	0x000000010895f921 Builtins_InterpreterEntryTrampoline + 673
60  com.github.Electron.framework 	0x000000010895cefa Builtins_JSEntryTrampoline + 90
61  com.github.Electron.framework 	0x000000010895ccd8 Builtins_JSEntry + 120
62  com.github.Electron.framework 	0x00000001080d6055 v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&) + 1157
63  com.github.Electron.framework 	0x00000001080d5bbe v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 206 (execution.cc:358)
64  com.github.Electron.framework 	0x0000000107edd1a3 v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 435 (api.cc:4883)
65  com.github.Electron.framework 	0x000000010ae03780 blink::V8ScriptRunner::CallFunction(v8::Local<v8::Function>, blink::ExecutionContext*, v8::Local<v8::Value>, int, v8::Local<v8::Value>*, v8::Isolate*) + 896 (v8_script_runner.cc:471)
66  com.github.Electron.framework 	0x000000010aeb12e6 blink::V8FrameRequestCallback::Invoke(blink::bindings::V8ValueOrScriptWrappableAdapter, double) + 630 (v8_frame_request_callback.cc:106)
67  com.github.Electron.framework 	0x000000010aeb13ff blink::V8FrameRequestCallback::InvokeAndReportException(blink::bindings::V8ValueOrScriptWrappableAdapter, double) + 111
68  com.github.Electron.framework 	0x000000010b5c8ddc blink::FrameRequestCallbackCollection::V8FrameCallback::Invoke(double) + 28 (frame_request_callback_collection.cc:174)
69  com.github.Electron.framework 	0x000000010b5c870f blink::FrameRequestCallbackCollection::ExecuteCallbacksInternal(blink::HeapVector<blink::Member<blink::FrameRequestCallbackCollection::FrameCallback>, 0u>&, char const*, char const*, double, double) + 319 (frame_request_callback_collection.cc:133)
70  com.github.Electron.framework 	0x000000010b61a92b blink::ScriptedAnimationController::ServiceScriptedAnimations(base::TimeTicks) + 363 (scripted_animation_controller.cc:192)
71  com.github.Electron.framework 	0x000000010b59b721 blink::Document::ServiceScriptedAnimations(base::TimeTicks) + 49 (document.cc:7425)
72  com.github.Electron.framework 	0x000000010bcea20f blink::PageAnimator::ServiceScriptedAnimations(base::TimeTicks) + 879 (page_animator.cc:86)
73  com.github.Electron.framework 	0x000000010bcebbd5 blink::PageWidgetDelegate::Animate(blink::Page&, base::TimeTicks) + 37 (page_widget_delegate.cc:55)
74  com.github.Electron.framework 	0x000000010b7361ff blink::WebViewImpl::BeginFrame(base::TimeTicks, bool) + 479 (web_view_impl.cc:1504)
75  com.github.Electron.framework 	0x000000010c9a2492 content::RenderWidget::BeginMainFrame(base::TimeTicks) + 162 (render_widget.cc:1135)
76  com.github.Electron.framework 	0x000000010a98cc8b cc::ProxyMain::BeginMainFrame(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >) + 747 (proxy_main.cc:228)
77  com.github.Electron.framework 	0x000000010a9b7ad5 void base::internal::FunctorTraits<void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), void>::Invoke<void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), base::WeakPtr<cc::ProxyMain>, std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> > >(void (cc::ProxyMain::*)(std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >), base::WeakPtr<cc::ProxyMain>&&, std::__1::unique_ptr<cc::BeginMainFrameAndCommitState, std::__1::default_delete<cc::BeginMainFrameAndCommitState> >&&) + 85 (bind_internal.h:499)
78  com.github.Electron.framework 	0x00000001095c2052 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 338 (task_annotator.cc:142)
79  com.github.Electron.framework 	0x00000001095d1fe4 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) + 404 (heap_profiler.h:93)
80  com.github.Electron.framework 	0x00000001095d257a base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoDelayedWork(base::TimeTicks*) + 74 (thread_controller_with_message_pump_impl.cc:296)
81  com.github.Electron.framework 	0x000000010962eb15 base::MessagePumpCFRunLoopBase::RunWork() + 85 (message_pump_mac.mm:495)
82  com.github.Electron.framework 	0x000000010956a69a base::mac::CallWithEHFrame(void () block_pointer) + 10
83  com.github.Electron.framework 	0x000000010962e45f base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63 (message_pump_mac.mm:466)
84  com.apple.CoreFoundation      	0x00007fff4241be33 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
85  com.apple.CoreFoundation      	0x00007fff4241bdd9 __CFRunLoopDoSource0 + 108
86  com.apple.CoreFoundation      	0x00007fff423ff79b __CFRunLoopDoSources0 + 195
87  com.apple.CoreFoundation      	0x00007fff423fed65 __CFRunLoopRun + 1189
88  com.apple.CoreFoundation      	0x00007fff423fe66e CFRunLoopRunSpecific + 455
89  com.apple.Foundation          	0x00007fff446642ff -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 280
90  com.github.Electron.framework 	0x000000010962f001 base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 113 (message_pump_mac.h:121)
91  com.github.Electron.framework 	0x000000010962de28 base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 136 (message_pump_mac.mm:189)
92  com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
93  com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
94  com.github.Electron.framework 	0x000000010c9ae690 content::RendererMain(content::MainFunctionParams const&) + 848 (renderer_main.cc:214)
95  com.github.Electron.framework 	0x0000000108c6888c content::ContentMainRunnerImpl::Run(bool) + 252
96  com.github.Electron.framework 	0x000000010ad7c339 service_manager::Main(service_manager::MainParams const&) + 2793 (main.cc:423)
97  com.github.Electron.framework 	0x0000000107e11f84 content::ContentMain(content::ContentMainParams const&) + 68 (content_main.cc:19)
98  com.github.Electron.framework 	0x0000000107264b54 AtomMain + 84
99  com.github.Electron.helper    	0x000000010721f3a5 main + 357 (atom_main.cc:232)
100 libdyld.dylib                 	0x00007fff6e3613d5 start + 1

Thread 1:
0   libsystem_kernel.dylib        	0x00007fff6e497bfe __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fff6e554636 _pthread_wqthread + 458
2   libsystem_pthread.dylib       	0x00007fff6e5543fd start_wqthread + 13

Thread 2:: ThreadPoolServiceThread
0   libsystem_kernel.dylib        	0x00007fff6e49e0a6 kevent64 + 10
1   com.github.Electron.framework 	0x000000010962658a base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) + 330 (message_pump_kqueue.cc:383)
2   com.github.Electron.framework 	0x00000001096263f6 base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) + 182
3   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
4   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
5   com.github.Electron.framework 	0x00000001095d5a97 base::internal::ServiceThread::Run(base::RunLoop*) + 23 (service_thread.cc:61)
6   com.github.Electron.framework 	0x00000001095e1f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
7   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
8   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
9   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
10  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 3:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 4:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddb14 base::internal::WorkerThread::RunBackgroundPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 5:: Chrome_ChildIOThread
0   libsystem_kernel.dylib        	0x00007fff6e49e0a6 kevent64 + 10
1   com.github.Electron.framework 	0x000000010962658a base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) + 330 (message_pump_kqueue.cc:383)
2   com.github.Electron.framework 	0x00000001096263f6 base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) + 182
3   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
4   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
5   com.github.Electron.framework 	0x00000001095e1f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 6:: GpuMemoryThread
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095beebf base::WaitableEvent::Wait() + 31 (waitable_event_mac.cc:110)
4   com.github.Electron.framework 	0x0000000109587cd7 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 199
5   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
6   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
7   com.github.Electron.framework 	0x00000001095e1f46 base::Thread::ThreadMain() + 406 (thread.cc:315)
8   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
9   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
10  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
11  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 7:: Compositor
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x0000000109587c7b base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 107 (message_pump_default.cc:57)
4   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
5   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
6   com.github.Electron.framework 	0x0000000108b18afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
7   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
8   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
9   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
10  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 8:: CompositorTileWorker1
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010961d325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010c8c68d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 9:: CompositorTileWorker2
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010961d325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010c8c68d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 10:: CompositorTileWorker3
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010961d325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010c8c68d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 11:: CompositorTileWorker4
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010961d325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010c8c68d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 12:: CompositorTileWorkerBackground
0   libsystem_kernel.dylib        	0x00007fff6e49986a __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff6e55856e _pthread_cond_wait + 722
2   com.github.Electron.framework 	0x000000010961d325 base::ConditionVariable::Wait() + 53 (condition_variable_posix.cc:80)
3   com.github.Electron.framework 	0x000000010c8c68d6 content::CategorizedWorkerPool::Run(std::__1::vector<cc::TaskCategory, std::__1::allocator<cc::TaskCategory> > const&, base::ConditionVariable*) + 134
4   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
5   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
6   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
7   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 13:: ServiceWorker thread
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x0000000109587c7b base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 107 (message_pump_default.cc:57)
4   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
5   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
6   com.github.Electron.framework 	0x0000000108b18afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
7   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
8   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
9   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
10  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 14:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 15:
0   libsystem_kernel.dylib        	0x00007fff6e49d61a __select + 10
1   com.github.Electron.framework 	0x000000010739f0e2 electron::NodeBindingsMac::PollEvents() + 210 (node_bindings_mac.cc:57)
2   com.github.Electron.framework 	0x000000010739e907 electron::NodeBindings::EmbedThreadRunner(void*) + 55 (node_bindings.cc:451)
3   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
4   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
5   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 16:: ThreadPoolSingleThreadSharedForeground0
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddbd4 base::internal::WorkerThread::RunSharedWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 17:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 18:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 19:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 20:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 21:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddba4 base::internal::WorkerThread::RunPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 22:: DedicatedWorker thread
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095beebf base::WaitableEvent::Wait() + 31 (waitable_event_mac.cc:110)
4   com.github.Electron.framework 	0x0000000109587cd7 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 199
5   com.github.Electron.framework 	0x00000001095d2998 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 120
6   com.github.Electron.framework 	0x00000001095a6a17 base::RunLoop::Run() + 391 (run_loop.cc:158)
7   com.github.Electron.framework 	0x0000000108b18afb blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 459 (worker_thread.cc:165)
8   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
9   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
10  libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
11  libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 23:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff6e49622a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6e49676c mach_msg + 60
2   com.github.Electron.framework 	0x00000001095bf045 base::WaitableEvent::TimedWait(base::TimeDelta const&) + 373 (waitable_event_mac.cc:167)
3   com.github.Electron.framework 	0x00000001095dd8dd base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) + 61 (worker_thread.cc:37)
4   com.github.Electron.framework 	0x00000001095ddf60 base::internal::WorkerThread::RunWorker() + 832 (worker_thread.cc:317)
5   com.github.Electron.framework 	0x00000001095ddb14 base::internal::WorkerThread::RunBackgroundPooledWorker() + 20
6   com.github.Electron.framework 	0x0000000109628307 base::(anonymous namespace)::ThreadFunc(void*) + 87 (platform_thread_posix.cc:83)
7   libsystem_pthread.dylib       	0x00007fff6e5552eb _pthread_body + 126
8   libsystem_pthread.dylib       	0x00007fff6e558249 _pthread_start + 66
9   libsystem_pthread.dylib       	0x00007fff6e55440d thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000000  rbx: 0x00000001172e85c0  rcx: 0x00007ffee89d7ad8  rdx: 0x0000000000000000
  rdi: 0x0000000000000307  rsi: 0x0000000000000006  rbp: 0x00007ffee89d7b10  rsp: 0x00007ffee89d7ad8
   r8: 0x0000000000000000   r9: 0x00007ffee89d7a30  r10: 0x0000000000000000  r11: 0x0000000000000206
  r12: 0x0000000000000307  r13: 0x0000000112cfd000  r14: 0x0000000000000006  r15: 0x000000000000002d
  rip: 0x00007fff6e49c2c6  rfl: 0x0000000000000206  cr2: 0x00007fffa4bf6188
  
Logical CPU:     0
Error Code:      0x02000148
Trap Number:     133


Binary Images:
       0x10721e000 -        0x107257fe7 +com.github.Electron.helper (0) <9D47CC4B-914F-3A7C-AFD2-5702FF788B61> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)
       0x107262000 -        0x10d9daf7f +com.github.Electron.framework (7.1.1) <0BB947D1-CEAB-3F02-8169-729C8CB4DC09> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x10e13f000 -        0x10e15afff +com.github.Squirrel (1.0 - 1) <E4398068-33D3-3A00-9DBE-5ACC9B022501> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x10e17c000 -        0x10e1dfff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x10e254000 -        0x10e268fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x10e27d000 -        0x10e509fe7 +libffmpeg.dylib (0) <CD6D3D90-7668-37FE-A3E0-1B71B3ABB7C8> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x1129fc000 -        0x1129fcfff +notificationstate.node (0) <F1FC2DE7-6168-3546-B24B-F7B86EC6DF80> /Users/USER/*/notificationstate.node
       0x117246000 -        0x1172b070f  dyld (655.1.1) <615654D5-B6C5-3D83-A146-34A3EA6D3A80> /usr/lib/dyld
    0x7fff3e3fd000 -     0x7fff3e5d9ffb  com.apple.avfoundation (2.0 - 1550.4) <5854207B-6106-3DA4-80B6-36C42D042F26> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff3e5da000 -     0x7fff3e69ffff  com.apple.audio.AVFAudio (1.0 - ???) <D454A339-2FC6-3EF6-992F-D676046612DB> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff3e7a7000 -     0x7fff3e7a7fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <762942CB-CFC9-3A0C-9645-A56523A06426> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff3e7a8000 -     0x7fff3e7beff7  libCGInterfaces.dylib (506.22) <1B6C92D9-F4B8-37BA-9635-94C4A56098CE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff3e7bf000 -     0x7fff3ee58fef  com.apple.vImage (8.1 - ???) <53FA3611-894E-3158-A654-FBD2F70998FE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff3ee59000 -     0x7fff3f0d2ff3  libBLAS.dylib (1243.200.4) <417CA0FC-B6CB-3FB3-ACBC-8914E3F62D20> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff3f0d3000 -     0x7fff3f145ffb  libBNNS.dylib (38.250.1) <538D12A2-9B9D-3E22-9896-F90F6E69C06E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff3f146000 -     0x7fff3f4efff3  libLAPACK.dylib (1243.200.4) <92175DF4-863A-3780-909A-A3E5C410F2E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff3f4f0000 -     0x7fff3f505feb  libLinearAlgebra.dylib (1243.200.4) <CB671EE6-DEA1-391C-9B2B-AA09A46B4D7A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff3f506000 -     0x7fff3f50bff3  libQuadrature.dylib (3.200.2) <1BAE7E22-2862-379F-B334-A3756067730F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff3f50c000 -     0x7fff3f588ff3  libSparse.dylib (79.200.5) <E78B33D3-672A-3C53-B512-D3DDB2E9AC8D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff3f589000 -     0x7fff3f59cfe3  libSparseBLAS.dylib (1243.200.4) <E9243341-DB77-37C1-97C5-3DFA00DD70FA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff3f59d000 -     0x7fff3f784ff7  libvDSP.dylib (671.250.4) <7B110627-A9C1-3FB7-A077-0C7741BA25D8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff3f785000 -     0x7fff3f838ff7  libvMisc.dylib (671.250.4) <D5BA4812-BFFC-3CD0-B382-905CD8555DA6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff3f839000 -     0x7fff3f839fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <74288115-EF61-30B6-843F-0593B31D4929> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff3f9db000 -     0x7fff40790ffb  com.apple.AppKit (6.9 - 1671.60.109) <49E51666-59ED-3923-B873-668934E538A8> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff407e2000 -     0x7fff407e2fff  com.apple.ApplicationServices (50.1 - 50.1) <3E60C239-ECEA-3AB8-B05C-1A66614E24F5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff407e3000 -     0x7fff4084efff  com.apple.ApplicationServices.ATS (377 - 453.11.2.2) <A258DA73-114B-3102-A056-4AAAD3CEB9DD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff408e7000 -     0x7fff409fefff  libFontParser.dylib (228.6.2.3) <3602D55B-3B9E-3B3A-A814-08C1244A8AE4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff409ff000 -     0x7fff40a41fff  libFontRegistry.dylib (228.12.2.3) <2A56347B-2809-3407-A8B4-2AB88E484062> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff40a9b000 -     0x7fff40acdfff  libTrueTypeScaler.dylib (228.6.2.3) <7E4C5D9C-51AF-3EC1-8FA5-11CD4BEE477A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff40b32000 -     0x7fff40b36ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <AFC4FE0F-2F46-39E3-BF39-90AF0D4F63A4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff40bd1000 -     0x7fff40c23ff7  com.apple.HIServices (1.22 - 628) <2BE461FF-80B9-30D3-A574-AED5724B1C1B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff40c24000 -     0x7fff40c33fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <F5617A2A-FEA6-3832-B5BA-C2111B98786F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff40c34000 -     0x7fff40c7dff7  com.apple.print.framework.PrintCore (14.2 - 503.8) <57C2FE32-0E74-3079-B626-C2D52F2D2717> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff40c7e000 -     0x7fff40cb7ff7  com.apple.QD (3.12 - 407.2) <28C7D39F-59C9-3314-BECC-67045487229C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff40cb8000 -     0x7fff40cc4fff  com.apple.speech.synthesis.framework (8.1.3 - 8.1.3) <5E7B9BD4-122B-3012-A044-3259C97E7509> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff40cc5000 -     0x7fff40f3cfff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <571A3B68-AB1D-3050-932A-999EA148963C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff40f3e000 -     0x7fff40f3efff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <3D6E8961-8C34-3042-A588-21458C7D1C02> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff41297000 -     0x7fff41638fff  com.apple.CFNetwork (978.1 - 978.1) <01AB9E36-3C9F-3070-8D46-7F14B99A757A> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff4164d000 -     0x7fff4164dfff  com.apple.Carbon (158 - 158) <78AF9309-4DFE-3E3F-8108-A0FF1FC0E8C1> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff4164e000 -     0x7fff41651ffb  com.apple.CommonPanels (1.2.6 - 98) <1CD6D56D-8EC7-3528-8CBC-FC69533519B5> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff41652000 -     0x7fff41949fff  com.apple.HIToolbox (2.1.1 - 918.7) <13F69D4C-D19F-3E09-9231-1978D783A556> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff4194a000 -     0x7fff4194dff3  com.apple.help (1.3.8 - 66) <A08517EB-8958-36C9-AEE0-1A8FEEACBE3F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff4194e000 -     0x7fff41953ff7  com.apple.ImageCapture (9.0 - 1534.2) <DB063E87-ED8F-3E4E-A7E2-A6B45FA73EF7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff41954000 -     0x7fff419e9ff3  com.apple.ink.framework (10.9 - 225) <7C7E9483-2E91-3DD3-B1E0-C238F42CA0DD> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff419ea000 -     0x7fff41a02ff7  com.apple.openscripting (1.7 - 179.1) <9B8C1ECC-5864-3E21-9149-863E884EA25C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff41a22000 -     0x7fff41a23ff7  com.apple.print.framework.Print (14.2 - 267.4) <A7A9D2A0-D4E0-35EF-A0F7-50521F707C33> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff41a24000 -     0x7fff41a26ff7  com.apple.securityhi (9.0 - 55006) <05717F77-7A7B-37E6-AB3E-03F063E9095B> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff41a27000 -     0x7fff41a2dff7  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <3CC050FB-EBCB-3087-8EA5-F378C8F99217> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff41b4f000 -     0x7fff41b4ffff  com.apple.Cocoa (6.11 - 23) <056B9D98-325B-3743-97AF-AAC8E182BDF9> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff41b5d000 -     0x7fff41cacff7  com.apple.ColorSync (4.13.0 - 3345.6) <F47177B2-7113-3642-98A5-602819CD02B0> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff41e38000 -     0x7fff41ebefff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E8E64E6-0E58-375A-97F7-07CB4EE181AC> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff41f22000 -     0x7fff41f4cffb  com.apple.CoreBluetooth (1.0 - 1) <A73F1709-DD18-3052-9F22-C0015278834B> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff41f4d000 -     0x7fff422d2fef  com.apple.CoreData (120 - 866.6) <132CB39B-8D58-30FA-B8AD-49BFFF34B293> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff422d3000 -     0x7fff423c3ff7  com.apple.CoreDisplay (101.3 - 110.18) <BA4092D7-27D3-3886-ABC0-74CDCF747350> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff423c4000 -     0x7fff42809fef  com.apple.CoreFoundation (6.9 - 1575.23) <596DBC2A-60E3-3A73-AA5F-7A1806CF3204> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff4280b000 -     0x7fff42e9bfe7  com.apple.CoreGraphics (2.0 - 1265.10) <2F243BDA-11A0-3691-9DCB-4D0ACA1062DA> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff42e9d000 -     0x7fff431bdfff  com.apple.CoreImage (14.4.0 - 750.0.140) <11026E39-D2FF-3CF6-8ACE-7BA293F9853E> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff43237000 -     0x7fff4328dff7  com.apple.audio.midi.CoreMIDI (1.10 - 88) <29B498FA-B55D-3CAB-85CF-BD631CF89C0F> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff43290000 -     0x7fff434b9fff  com.apple.CoreML (1.0 - 1) <9EC1FED2-BA47-307B-A326-43C4D05166E7> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML
    0x7fff434ba000 -     0x7fff435befff  com.apple.CoreMedia (1.0 - 2290.14) <19ABC5E2-6BEC-3914-BAE5-8ECA5A916BA2> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff435bf000 -     0x7fff4361afff  com.apple.CoreMediaIO (900.0 - 5050.1) <337584E5-42BC-3225-9783-2749F7F2A219> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff4361b000 -     0x7fff4361bfff  com.apple.CoreServices (946 - 946) <9A402CC6-8163-3CF1-8670-B95796B1A0EE> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff4361c000 -     0x7fff43698ff7  com.apple.AE (773 - 773) <55AE7C9E-27C3-30E9-A047-3B92A6FD53B4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff43699000 -     0x7fff43970fff  com.apple.CoreServices.CarbonCore (1178.33 - 1178.33) <CB87F0C7-2CD6-3983-8E32-B6A2EC925352> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff43971000 -     0x7fff439b9ff7  com.apple.DictionaryServices (1.2 - 284.16.4) <746EB200-DC51-30AE-9CBC-608A7B4CC8DA> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff439ba000 -     0x7fff439c2ffb  com.apple.CoreServices.FSEvents (1239.200.13 - 1239.200.13) <28BF3EC6-9985-3402-AEA9-0FF6EE1C200E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff439c3000 -     0x7fff43b74ff7  com.apple.LaunchServices (946 - 946) <A0C91634-9410-38E8-BC11-7A5A369E6BA5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff43b75000 -     0x7fff43c13ff7  com.apple.Metadata (10.7.0 - 1191.57) <BFFAED00-2560-318A-BB8F-4E7E5123EC61> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff43c14000 -     0x7fff43c5eff7  com.apple.CoreServices.OSServices (946 - 946) <20C4EEF8-D5AC-39A0-9B4A-78F88E3EFBCC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff43c5f000 -     0x7fff43cc6ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <DA08AA6F-A6F1-36C0-87F4-E26294E51A3A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff43cc7000 -     0x7fff43ce8ff3  com.apple.coreservices.SharedFileList (71.28 - 71.28) <487A8464-729E-305A-B5D1-E3FE8EB9CFC5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff43ff3000 -     0x7fff44155ff3  com.apple.CoreText (352.0 - 584.26.3.2) <59919B0C-CBD5-3877-8D6F-D6048F1E5F42> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff44156000 -     0x7fff44196ff3  com.apple.CoreVideo (1.8 - 281.4) <10CF8E52-07E3-382B-8091-2CEEEFFA69B4> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff44197000 -     0x7fff44226fff  com.apple.framework.CoreWLAN (13.0 - 1375.2) <BF4B29F7-FBC8-3299-98E8-C3F8C04B7C92> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff443a9000 -     0x7fff44457fff  com.apple.DiscRecording (9.0.3 - 9030.4.5) <D7A28B57-C025-3D44-BB17-82243B7B91BC> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff4447d000 -     0x7fff44482ffb  com.apple.DiskArbitration (2.7 - 2.7) <F481F2C0-884E-3265-8111-ABBEC93F0920> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff44645000 -     0x7fff44647ff3  com.apple.ForceFeedback (1.0.6 - 1.0.6) <205B0C3E-4E8D-3347-A993-469F06ABBFF9> /System/Library/Frameworks/ForceFeedback.framework/Versions/A/ForceFeedback
    0x7fff44648000 -     0x7fff449f5ffb  com.apple.Foundation (6.9 - 1575.23) <C5EA5ABE-2E0C-37A0-A02A-F3150FE3CC66> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff44a64000 -     0x7fff44a93ffb  com.apple.GSS (4.0 - 2.0) <E2B90D08-3857-3155-9FCC-07D778988EC9> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff44a94000 -     0x7fff44aadff3  com.apple.GameController (1.0 - 1) <9339D37B-54EA-31C5-A4A5-2135288BA992> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff44b93000 -     0x7fff44c9dfff  com.apple.Bluetooth (6.0.14 - 6.0.14d3) <BE98C8CF-11CA-3CB6-BB00-4A85608D375B> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff44d00000 -     0x7fff44d8ffff  com.apple.framework.IOKit (2.0.2 - 1483.260.4) <8A90F547-86EF-3DFB-92FE-0E2C0376DD84> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff44d91000 -     0x7fff44da0ffb  com.apple.IOSurface (255.6.1 - 255.6.1) <85F85EBB-EA59-3A8B-B3EB-7C20F3CC77AE> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff44da1000 -     0x7fff44df3ff3  com.apple.ImageCaptureCore (1.0 - 1534.2) <27942C51-8108-3ED9-B37E-7C365A31EC2D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff44df4000 -     0x7fff44f7ffef  com.apple.ImageIO.framework (3.3.0 - 1850.2) <75E46A31-D87D-35CE-86A4-96A50971FDB2> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff44f80000 -     0x7fff44f84ffb  libGIF.dylib (1850.2) <4774EBDF-583B-3DDD-A0E1-9F427CB6A074> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff44f85000 -     0x7fff45061fef  libJP2.dylib (1850.2) <697BB77F-A682-339F-8659-35432962432D> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff45062000 -     0x7fff45087feb  libJPEG.dylib (1850.2) <171A8AC4-AADA-376F-9F2C-B9C978DB1007> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff4534a000 -     0x7fff45370feb  libPng.dylib (1850.2) <FBCEE909-F573-3AD6-A45F-AF32612BF8A2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff45371000 -     0x7fff45373ffb  libRadiance.dylib (1850.2) <56907025-D5CE-3A9E-ACCB-A376C2599853> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff45374000 -     0x7fff453c1fe7  libTIFF.dylib (1850.2) <F59557C9-C761-3E6F-85D1-0FBFFD53ED5C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff456bc000 -     0x7fff4651cfff  com.apple.JavaScriptCore (14607 - 14607.3.9) <9B7D9E8B-619D-34A1-8FA9-E23C0EA3CD02> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff46534000 -     0x7fff4654dfff  com.apple.Kerberos (3.0 - 1) <DB1E0679-37E1-3B93-9789-32F63D660C3B> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff465d0000 -     0x7fff465eefff  com.apple.CoreAuthentication.SharedUtils (1.0 - 425.270.4) <180B7EB4-EE6F-34FC-83B9-1CB526923F4D> /System/Library/Frameworks/LocalAuthentication.framework/Support/SharedUtils.framework/Versions/A/SharedUtils
    0x7fff465ef000 -     0x7fff46603fff  com.apple.LocalAuthentication (1.0 - 425.270.4) <2360CAFC-E2D7-34E1-9C37-F5CB8A49D48A> /System/Library/Frameworks/LocalAuthentication.framework/Versions/A/LocalAuthentication
    0x7fff46807000 -     0x7fff46811fff  com.apple.MediaAccessibility (1.0 - 114.4) <76C449C5-DB45-3D7F-BFAD-3DACEF15DA21> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff46826000 -     0x7fff468c0ffb  com.apple.MediaPlayer (1.0 - 1.0) <B29D3221-A7E1-3DA9-AF9C-5EA8B15841D4> /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer
    0x7fff468c1000 -     0x7fff46f67fff  com.apple.MediaToolbox (1.0 - 2290.14) <E404EAFF-54E8-35CA-A3C5-2797F2DE73D0> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff46f69000 -     0x7fff47011ff7  com.apple.Metal (162.2 - 162.2) <92C0FEE5-3C13-31D7-BC98-582E0D8FA29A> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff47013000 -     0x7fff4702cff3  com.apple.MetalKit (1.0 - 113) <51CDE966-54A7-3556-971B-1173E9986BB8> /System/Library/Frameworks/MetalKit.framework/Versions/A/MetalKit
    0x7fff4702d000 -     0x7fff4704cff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <44CE8362-E972-3697-AD6F-15BC863BAEB8> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff4704d000 -     0x7fff470c9fe7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <EE8440DA-66DF-3923-ABBC-E0543211C069> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff470ca000 -     0x7fff470f1fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <E64450DF-2B96-331E-B7F4-666E00571C70> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff470f2000 -     0x7fff4721dff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <F2CF26B6-73F1-3644-8FE9-CDB9B2C4501F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff4721e000 -     0x7fff47238fff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <B33A35C3-0393-366B-ACFB-F4BB6A5F7B4A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector
    0x7fff47239000 -     0x7fff4723aff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <69F14BCF-C5C5-3BF8-9C31-8F87D2D6130A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff48031000 -     0x7fff4803dff7  com.apple.NetFS (6.0 - 4.0) <E917806F-0607-3292-B2D6-A15404D61B99> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff4aadb000 -     0x7fff4ab32ff7  com.apple.opencl (2.15.3 - 2.15.3) <50EF864A-EBFF-34AB-836B-075B079FBF0F> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff4ab33000 -     0x7fff4ab4eff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <F03D84EB-49B2-3A00-9127-B9A269824026> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff4ab4f000 -     0x7fff4ab5affb  com.apple.OpenDirectory (10.14 - 207.200.4) <A8020CEE-5B78-3581-A735-EA2833683F31> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff4b4aa000 -     0x7fff4b4acfff  libCVMSPluginSupport.dylib (17.7.3) <5003943C-2B94-3F1C-93DB-53034FC8873C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff4b4ad000 -     0x7fff4b4b2ff3  libCoreFSCache.dylib (166.2) <222C2A4F-7E32-30F6-8459-2FAB98073A3D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff4b4b3000 -     0x7fff4b4b7fff  libCoreVMClient.dylib (166.2) <6789ECD4-91DD-32EF-A1FD-F27D2344CD8B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff4b4b8000 -     0x7fff4b4c0ff7  libGFXShared.dylib (17.7.3) <D8182879-8143-3B6D-9EB4-B7F953BEF6B1> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff4b4c1000 -     0x7fff4b4ccfff  libGL.dylib (17.7.3) <0CDF608E-7D39-3F98-BB64-BB3D3721CCF8> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff4b4cd000 -     0x7fff4b507fef  libGLImage.dylib (17.7.3) <757CCAAD-ED2A-392A-A9EB-EEEE688B9C5D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff4b67b000 -     0x7fff4b6b9fff  libGLU.dylib (17.7.3) <8B2C8131-70F9-35FE-AAAE-933D730836F5> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff4c056000 -     0x7fff4c065ffb  com.apple.opengl (17.7.3 - 17.7.3) <6FE0731B-129C-3EA3-843B-A5BA9F0870A8> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff4c3e8000 -     0x7fff4c531ff7  com.apple.QTKit (7.7.3 - 3040) <D42BB4BE-B347-3113-ACA4-3257A5E45F52> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff4c532000 -     0x7fff4c786fff  com.apple.imageKit (3.0 - 1067) <4F398AF4-828E-3FC2-9E3D-4EE3F36F7619> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff4c787000 -     0x7fff4c874ff3  com.apple.PDFKit (1.0 - 745.4) <C4631DFB-89CC-3E87-9D26-B678124768AD> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff4c875000 -     0x7fff4cd44ff7  com.apple.QuartzComposer (5.1 - 370) <9C59494E-8D09-359E-B457-AA893520984C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff4cd45000 -     0x7fff4cd6bff7  com.apple.quartzfilters (1.10.0 - 83.1) <1CABB0FA-A6DB-3DD5-A598-F298F081E04E> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff4cd6c000 -     0x7fff4ce6dff7  com.apple.QuickLookUIFramework (5.0 - 775.6) <5660DDBA-2BE4-310A-9E81-370106EDB21D> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff4ce6e000 -     0x7fff4ce6efff  com.apple.quartzframework (1.5 - 23) <044ACF9F-1FEC-33B0-A390-82F7615156E4> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff4ce6f000 -     0x7fff4d0c6ff7  com.apple.QuartzCore (1.11 - 701.14) <AEDC3021-93C0-3438-8792-D5A386C35AC6> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff4d0c7000 -     0x7fff4d11efff  com.apple.QuickLookFramework (5.0 - 775.6) <CB74C63F-E223-3783-9021-8E28091BCDA6> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff4d2e5000 -     0x7fff4d2fdffb  com.apple.SafariServices.framework (14608 - 14608.3.10.10.1) <95CF1D7B-69CC-33FC-B66E-E6808DF5509D> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff4d8fc000 -     0x7fff4dbfcfff  com.apple.security (7.0 - 58286.270.3.0.1) <8DFB0541-E701-307E-8AE1-4DD9A9BA9FF3> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff4dbfd000 -     0x7fff4dc89fff  com.apple.securityfoundation (6.0 - 55185.260.1) <66B3719D-3B4E-3F56-9265-E5E7E4C87D8C> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff4dc8a000 -     0x7fff4dcbaffb  com.apple.securityinterface (10.0 - 55109.200.8) <DB82CA30-3C20-3860-BDD3-C8B1668C9CB8> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff4dcbb000 -     0x7fff4dcbffff  com.apple.xpc.ServiceManagement (1.0 - 1) <FCF7BABA-DDDD-3770-8DAC-7069850203C2> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff4df0e000 -     0x7fff4df24ffb  com.apple.StoreKit (1.0 - 1) <5E26D23D-D85C-32EF-AE44-2B0437893274> /System/Library/Frameworks/StoreKit.framework/Versions/A/StoreKit
    0x7fff4e058000 -     0x7fff4e0c5fff  com.apple.SystemConfiguration (1.17 - 1.17) <30C8327F-3EFF-3520-9C50-016F8B6B954F> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff4e324000 -     0x7fff4e685fff  com.apple.VideoToolbox (1.0 - 2290.14) <DDC0F7E1-CCE0-3398-B335-10683007AEE7> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff51301000 -     0x7fff513a6fff  com.apple.APFS (1.0 - 1) <7ACEA6C5-EA9B-3BE4-B235-A7ADD9B76278> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff51dbb000 -     0x7fff51dbcff7  com.apple.AggregateDictionary (1.0 - 1) <A6AF8AC4-1F25-37C4-9157-A02E9C200926> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary
    0x7fff5217a000 -     0x7fff522bdfff  com.apple.AnnotationKit (1.0 - 232.3.30) <DEE654C8-3D8B-3629-A670-0AD52DEB85CA> /System/Library/PrivateFrameworks/AnnotationKit.framework/Versions/A/AnnotationKit
    0x7fff523bd000 -     0x7fff523e9ff7  com.apple.framework.Apple80211 (13.0 - 1380.2) <16F093EF-370B-3B90-8DB4-E94624431D15> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff52511000 -     0x7fff52520fc7  com.apple.AppleFSCompression (96.200.3 - 1.0) <3CF60CE8-976E-3CB8-959D-DD0948C1C2DE> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff5261c000 -     0x7fff52627fff  com.apple.AppleIDAuthSupport (1.0 - 1) <2E9D1398-DBE6-328B-ADDA-20FA5FAD7405> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport
    0x7fff52668000 -     0x7fff526b1ff3  com.apple.AppleJPEG (1.0 - 1) <4C1F426B-7D77-3980-9633-7DBD8C666B9A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff52905000 -     0x7fff52927fff  com.apple.applesauce (1.0 - ???) <F49107C7-3C51-3024-8EF1-C57643BE4F3B> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff529e7000 -     0x7fff529eaff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <690222F7-29A6-39A1-BA61-F1DD4767D01D> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff529eb000 -     0x7fff52a3bff7  com.apple.AppleVAFramework (5.1.4 - 5.1.4) <473714CF-664E-372D-86CA-3451EA6A6403> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff52a86000 -     0x7fff52a9affb  com.apple.AssertionServices (1.0 - 1) <456E507A-4561-3628-9FBE-173ACE7429D8> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices
    0x7fff52e69000 -     0x7fff52f55ff7  com.apple.AuthKit (1.0 - 1) <2765ABE9-54F2-3E45-8A93-1261E251B90D> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit
    0x7fff53117000 -     0x7fff5311ffff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <2A396FC0-7B79-3088-9A82-FB93C1181A57> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff53120000 -     0x7fff531b5fff  com.apple.backup.framework (1.10.5 - ???) <4EEC51E2-AE4C-340A-B686-901810152C12> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff531b6000 -     0x7fff53223ff3  com.apple.BaseBoard (360.28 - 360.28) <68FA8044-F3CD-3BC6-9DAB-27DACF52BFC0> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard
    0x7fff5322c000 -     0x7fff53232ffb  com.apple.BezelServicesFW (317.5 - 317.5) <C825E2CD-7D67-3AC0-8CE8-AEE9C95DD248> /System/Library/PrivateFrameworks/BezelServices.framework/Versions/A/BezelServices
    0x7fff532a9000 -     0x7fff532e5ff3  com.apple.bom (14.0 - 197.6) <A99A6F9A-AFDE-3BC6-95CE-AA90B268B805> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
    0x7fff54081000 -     0x7fff540d0ff7  com.apple.ChunkingLibrary (201 - 201) <DFE16C42-24E6-386F-AC50-0058F61980A2> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff54e8e000 -     0x7fff54e97ffb  com.apple.CommonAuth (4.0 - 2.0) <93335CB6-ABEB-3EC7-A040-8A667F40D5F3> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff54eab000 -     0x7fff54ec0ffb  com.apple.commonutilities (8.0 - 900) <080E168B-21B7-3CCA-AB84-BB9911D18DAC> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities
    0x7fff55330000 -     0x7fff55713fef  com.apple.CoreAUC (274.0.0 - 274.0.0) <C71F1581-E73B-3DA0-958B-E912C3FB3F23> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff55714000 -     0x7fff55742ff7  com.apple.CoreAVCHD (6.0.0 - 6000.4.1) <A04A99B8-DAC5-36FC-BAC7-7431600C1F89> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff557d8000 -     0x7fff55836ffb  com.apple.corebrightness (1.0 - 1) <A383E4A0-14F4-3627-AD99-2F813068A982> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff55b70000 -     0x7fff55b81ff7  com.apple.CoreEmoji (1.0 - 69.19.9) <228457B3-E191-356E-9A5B-3C0438D05FBA> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff55d2a000 -     0x7fff55e19fff  com.apple.CoreHandwriting (161 - 1.2) <7CBB18C3-FE95-3352-9D67-B441E89AD10F> /System/Library/PrivateFrameworks/CoreHandwriting.framework/Versions/A/CoreHandwriting
    0x7fff55feb000 -     0x7fff56001ffb  com.apple.CoreMediaAuthoring (2.2 - 959) <86089759-E920-37DB-A3BB-F5621C351E4A> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff5612b000 -     0x7fff56191ff7  com.apple.CoreNLP (1.0 - 130.15.22) <27877820-17D0-3B02-8557-4014E876CCC7> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP
    0x7fff562fd000 -     0x7fff56389fff  com.apple.CorePDF (4.0 - 414) <E4ECDD15-34C0-30C2-AFA9-27C8EDAC3DB0> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff5643e000 -     0x7fff56446ff7  com.apple.CorePhoneNumbers (1.0 - 1) <11F97C7E-C183-305F-8E6C-9B374F50E26B> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers
    0x7fff565c2000 -     0x7fff565f3ff3  com.apple.CoreServicesInternal (358 - 358) <DD6EF60D-048F-3186-83DA-EB191EDF48AE> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff569ba000 -     0x7fff56a3efff  com.apple.CoreSymbolication (10.2 - 64490.25.1) <28B2FF2D-3FDE-3A20-B343-341E5BD4E22F> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff56ace000 -     0x7fff56bf9ff7  com.apple.coreui (2.1 - 499.10) <A80F4B09-F940-346F-A9DF-4EFADD9220A8> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff56bfa000 -     0x7fff56d9afff  com.apple.CoreUtils (5.9 - 590.16) <66CC50F7-766D-33E2-A388-4DE22840ADFB> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff56dee000 -     0x7fff56e51ff7  com.apple.framework.CoreWiFi (13.0 - 1375.2) <CA4B835A-27AC-3FAB-9F44-E48548EA2442> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff56e52000 -     0x7fff56e63ff3  com.apple.CrashReporterSupport (10.13 - 938.27) <4771B1CE-1B49-312F-9550-A3391C64214C> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff56ef3000 -     0x7fff56f02fff  com.apple.framework.DFRFoundation (1.0 - 211.1) <E3F02F2A-2059-39CC-85DA-969676EB88EB> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff56f03000 -     0x7fff56f07ff7  com.apple.DSExternalDisplay (3.1 - 380) <787B9748-B120-3453-B8FE-61D9E363A9E0> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff56f88000 -     0x7fff56ffdffb  com.apple.datadetectorscore (7.0 - 590.27) <06FB1A07-7AE6-3ADD-8E7E-41955FAB38E8> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff57049000 -     0x7fff57086ff7  com.apple.DebugSymbols (190 - 190) <6F4FAACA-E06B-38AD-A0C2-14EA5408A231> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff57087000 -     0x7fff571c2ff7  com.apple.desktopservices (1.13.5 - ???) <265C0E94-B8BF-3F58-8D68-EA001EEA0B15> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff573ce000 -     0x7fff57494fff  com.apple.DiskManagement (12.1 - 1555.270.2) <EB207683-FBD6-3B74-A606-3FE22234372C> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement
    0x7fff57495000 -     0x7fff57499ffb  com.apple.DisplayServicesFW (3.1 - 380) <62041594-2A4C-3362-87EE-F8E8C8E5BEEC> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff57542000 -     0x7fff57545ff3  com.apple.EFILogin (2.0 - 2) <210948F9-FD39-392D-8349-34985B3C751C> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff57c7b000 -     0x7fff57f5dff7  com.apple.vision.EspressoFramework (1.0 - 120) <8B56D943-F87B-3A01-B7A4-19DE3312B61C> /System/Library/PrivateFrameworks/Espresso.framework/Versions/A/Espresso
    0x7fff58109000 -     0x7fff58524fff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <A576E2DA-BF6F-3B18-8FEB-324E5C5FA9BD> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff5d479000 -     0x7fff5d47efff  com.apple.GPUWrangler (3.50.14 - 3.50.14) <6A317E65-B368-3D00-8AB4-11499320DCBF> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff5d80c000 -     0x7fff5d830ff3  com.apple.GenerationalStorage (2.0 - 285.101) <84C2E52C-F2C6-3FF8-87E5-3C88A40D3881> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff5e28a000 -     0x7fff5e299fff  com.apple.GraphVisualizer (1.0 - 5) <48D020B7-5938-3FAE-B468-E291AEE2C06F> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff5e3ff000 -     0x7fff5e473ffb  com.apple.Heimdal (4.0 - 2.0) <D97FCF19-EAD6-3E2F-BE88-F817E45CAE96> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff5f779000 -     0x7fff5f780ffb  com.apple.IOAccelerator (404.14 - 404.14) <3FCCFD5B-8C77-3945-933A-FAAD1B2DF507> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff5f784000 -     0x7fff5f79cfff  com.apple.IOPresentment (1.0 - 42.6) <2311058E-22A4-3E10-85F8-C8E116FAE800> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff5fb44000 -     0x7fff5fb71ff7  com.apple.IconServices (379 - 379) <7BAD562D-4FA3-3E11-863C-1EEBE2406D2C> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff5fc9b000 -     0x7fff5fc9fffb  com.apple.InternationalSupport (1.0 - 10.15.6) <6226A905-D055-321D-B665-5B0CC4798A74> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff5fe04000 -     0x7fff5fe16ff3  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <30CFE05C-4108-3879-AFAA-5BB02CBE190B> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle
    0x7fff5fe31000 -     0x7fff5ff0cff7  com.apple.LanguageModeling (1.0 - 159.15.15) <3DE3CE61-542B-37B7-883E-4B9717CAC65F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff5ff0d000 -     0x7fff5ff49ff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <4B5E843E-2809-3E70-9560-9254E2656419> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff5ff50000 -     0x7fff5ff55fff  com.apple.LinguisticData (1.0 - 238.25) <F529B961-098C-3E4C-A3E9-9DA9BFA1B3F0> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff60773000 -     0x7fff60776fff  com.apple.Mangrove (1.0 - 25) <537A5B2E-4C30-3CFD-8BDC-79F9A04AC327> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff607fd000 -     0x7fff60823ff3  com.apple.MarkupUI (1.0 - 232.3.30) <F6FF81DA-5048-3022-A8F2-7FC04D65D2F9> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI
    0x7fff6088b000 -     0x7fff608beff7  com.apple.MediaKit (16 - 907) <5EE0E7DA-5ACC-33F3-9BF0-47A448C011A1> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff608bf000 -     0x7fff60be2fff  com.apple.MediaRemote (1.0 - 1) <8AF135B0-781C-3B85-B44A-C0CFAC3EADE0> /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
    0x7fff60be3000 -     0x7fff60c06fff  com.apple.MediaServices (1.0 - 1) <82718A05-BD2D-37C2-A689-F09542CA988F> /System/Library/PrivateFrameworks/MediaServices.framework/Versions/A/MediaServices
    0x7fff60c4a000 -     0x7fff60c72ff7  com.apple.spotlight.metadata.utilities (1.0 - 1191.57) <38BB1FB7-3336-384C-B71F-4D0D402EB606> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities
    0x7fff60c73000 -     0x7fff60d00ff7  com.apple.gpusw.MetalTools (1.0 - 1) <2F9B8852-A146-366E-9AB9-8B57FA30B7DD> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff60eab000 -     0x7fff60ec6ffb  com.apple.MobileKeyBag (2.0 - 1.0) <C7C5DD21-66DE-31D1-92D9-BBEEAAE156FB> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff60ed9000 -     0x7fff60f4efff  com.apple.Montreal (1.0 - 42.15.9) <17BFD046-4362-3A76-A496-648D00FF3743> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal
    0x7fff60f4f000 -     0x7fff60f79ffb  com.apple.MultitouchSupport.framework (2450.1 - 2450.1) <42A23EC9-64A7-31C7-BF33-DF4412ED8A3F> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff611b5000 -     0x7fff611bffff  com.apple.NetAuth (6.2 - 6.2) <0D01BBE5-0269-310D-B148-D19DAE143DEB> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff61295000 -     0x7fff612afff7  com.apple.network.statistics.framework (1.2 - 1) <B056D329-5C7C-3FB4-991E-7092DB2F9A5B> /System/Library/PrivateFrameworks/NetworkStatistics.framework/Versions/A/NetworkStatistics
    0x7fff61a20000 -     0x7fff61a71ff3  com.apple.OTSVG (1.0 - ???) <5BF1A9EB-2694-3267-9514-A4EB3BEF4081> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG
    0x7fff62b15000 -     0x7fff62c08fff  com.apple.PencilKit (1.0 - 1) <79225726-6980-3680-AC0B-D8C5C5DB2224> /System/Library/PrivateFrameworks/PencilKit.framework/Versions/A/PencilKit
    0x7fff62c09000 -     0x7fff62c18ff7  com.apple.PerformanceAnalysis (1.218.2 - 218.2) <65F3DB3E-6D4E-33A0-B510-EF768D323DAB> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff62c19000 -     0x7fff62c42ff3  com.apple.persistentconnection (1.0 - 1.0) <9ECE64D9-8C5F-3FCE-8A46-29D7B3966920> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection
    0x7fff64a55000 -     0x7fff64aa9ffb  com.apple.ProtectedCloudStorage (1.0 - 1) <53B3C1F3-BB97-379F-8CBA-8FDCDF085793> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fff64aaa000 -     0x7fff64ac8ff7  com.apple.ProtocolBuffer (1 - 263.2) <907D6C95-D050-31DE-99CA-16A5135BC6F9> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff64c46000 -     0x7fff64c49ff3  com.apple.QuickLookNonBaseSystem (1.0 - 1) <69D0DD00-A3D2-3835-91F0-F33BD9D7D740> /System/Library/PrivateFrameworks/QuickLookNonBaseSystem.framework/Versions/A/QuickLookNonBaseSystem
    0x7fff64c4a000 -     0x7fff64c5fff3  com.apple.QuickLookThumbnailing (1.0 - 1) <B5E746AE-1DCB-3299-8626-10CCCBC2D5EE> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff64c60000 -     0x7fff64cb0fff  com.apple.ROCKit (27.6 - 27.6) <756C2253-E8B1-3C48-9945-DE8D6AD24DE2> /System/Library/PrivateFrameworks/ROCKit.framework/Versions/A/ROCKit
    0x7fff64dec000 -     0x7fff64df7fff  com.apple.xpc.RemoteServiceDiscovery (1.0 - 1336.261.2) <651F994E-21E1-359B-8FEA-6909CE9AAD56> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery
    0x7fff64e0a000 -     0x7fff64e2cfff  com.apple.RemoteViewServices (2.0 - 128) <8FB0E4EB-DCBB-32E6-94C6-AA9BA9EE4CAC> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff64e2d000 -     0x7fff64e40ff3  com.apple.xpc.RemoteXPC (1.0 - 1336.261.2) <E7B66B18-F5DF-3819-BA47-E35122BA09E8> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC
    0x7fff66636000 -     0x7fff66754fff  com.apple.Sharing (1288.62.2 - 1288.62.2) <5915173A-BAFB-3092-98C6-ED4871284FCA> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff67568000 -     0x7fff67817fff  com.apple.SkyLight (1.600.0 - 340.54) <3A96F564-275C-3EEA-8281-8168AC8D4F20> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff67fba000 -     0x7fff67fc6fff  com.apple.SpeechRecognitionCore (5.0.21 - 5.0.21) <7A6A67DB-C813-328E-AAFB-D267A5B50B3D> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff68717000 -     0x7fff687a2fc7  com.apple.Symbolication (10.2 - 64490.38.1) <9FDCC98D-5B32-35AD-A9BF-94DF2B78507F> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff68c79000 -     0x7fff68c85fff  com.apple.private.SystemPolicy (1.0 - 1) <9CDA85A3-875C-3615-8818-2DC73E9FFE8B> /System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy
    0x7fff68c8a000 -     0x7fff68c96ffb  com.apple.TCC (1.0 - 1) <73CF6FA9-44CE-30C9-887F-235940976585> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff68efc000 -     0x7fff68fc4ff3  com.apple.TextureIO (3.8.4 - 3.8.1) <7CEAC05A-D283-3D5A-B1E3-C849285FA0BF> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff69081000 -     0x7fff69239ffb  com.apple.UIFoundation (1.0 - 551.5) <254E42F9-ECAE-3F3C-9643-FF306CAFDA66> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff69eb5000 -     0x7fff69f8efff  com.apple.ViewBridge (401.1 - 401.1) <18144EC1-5DEF-369C-8EBA-2826E7142784> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff6a766000 -     0x7fff6a769fff  com.apple.dt.XCTTargetBootstrap (1.0 - 14490.66) <7AE3457F-AF40-3508-93FB-1D9E31EB1C9D> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap
    0x7fff6ab6a000 -     0x7fff6ab6cffb  com.apple.loginsupport (1.0 - 1) <3F8D6334-BCD6-36C1-BA20-CC8503A84375> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff6ae36000 -     0x7fff6ae6afff  libCRFSuite.dylib (41.15.4) <406DAC06-0C77-3F90-878B-4D38F11F0256> /usr/lib/libCRFSuite.dylib
    0x7fff6ae6d000 -     0x7fff6ae77ff7  libChineseTokenizer.dylib (28.15.3) <9B7F6109-3A5D-3641-9A7E-31D2239D73EE> /usr/lib/libChineseTokenizer.dylib
    0x7fff6ae78000 -     0x7fff6af01fff  libCoreStorage.dylib (546.50.1) <8E643B27-7986-3351-B37E-038FB6794BF9> /usr/lib/libCoreStorage.dylib
    0x7fff6af05000 -     0x7fff6af06ffb  libDiagnosticMessagesClient.dylib (107) <A14D0819-0970-34CD-8680-80E4D7FE8C2C> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff6af3d000 -     0x7fff6b194ff3  libFosl_dynamic.dylib (18.3.4) <1B5DD4E2-8AE0-315E-829E-D5BFCD264EA8> /usr/lib/libFosl_dynamic.dylib
    0x7fff6b1b4000 -     0x7fff6b1bbfff  libMatch.1.dylib (31.200.1) <EF8164CB-B599-39D9-9E73-4958A372DC0B> /usr/lib/libMatch.1.dylib
    0x7fff6b1e5000 -     0x7fff6b204fff  libMobileGestalt.dylib (645.270.1) <99A06C8A-97D6-383D-862C-F453BABB48A4> /usr/lib/libMobileGestalt.dylib
    0x7fff6b205000 -     0x7fff6b205fff  libOpenScriptingUtil.dylib (179.1) <4D603146-EDA5-3A74-9FF8-4F75D8BB9BC6> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff6b345000 -     0x7fff6b346ffb  libSystem.B.dylib (1252.250.1) <2CBD96C4-5698-363C-A22E-BFB6FF686FB4> /usr/lib/libSystem.B.dylib
    0x7fff6b3c2000 -     0x7fff6b3c3fff  libThaiTokenizer.dylib (2.15.1) <ADB37DC3-7D9B-3E73-A72A-BCC3433C937A> /usr/lib/libThaiTokenizer.dylib
    0x7fff6b3d5000 -     0x7fff6b3ebffb  libapple_nghttp2.dylib (1.24.1) <6F04250A-6686-3FDC-9A8D-290C64B06502> /usr/lib/libapple_nghttp2.dylib
    0x7fff6b3ec000 -     0x7fff6b415ffb  libarchive.2.dylib (54.250.1) <47289946-8504-3966-9127-6CE39993DC2C> /usr/lib/libarchive.2.dylib
    0x7fff6b416000 -     0x7fff6b495fff  libate.dylib (1.13.8) <92B44EDB-369D-3EE8-AEC5-61F8B9313DBF> /usr/lib/libate.dylib
    0x7fff6b499000 -     0x7fff6b499ff3  libauto.dylib (187) <3E3780E1-96F3-3A22-91C5-92F9A5805518> /usr/lib/libauto.dylib
    0x7fff6b56b000 -     0x7fff6b57bffb  libbsm.0.dylib (39.200.18) <CF381E0B-025B-364F-A83D-2527E03F1AA3> /usr/lib/libbsm.0.dylib
    0x7fff6b57c000 -     0x7fff6b589fff  libbz2.1.0.dylib (38.200.3) <272953A1-8D36-329B-BDDB-E887B347710F> /usr/lib/libbz2.1.0.dylib
    0x7fff6b58a000 -     0x7fff6b5ddff7  libc++.1.dylib (400.9.4) <9A60A190-6C34-339F-BB3D-AACE942009A4> /usr/lib/libc++.1.dylib
    0x7fff6b5de000 -     0x7fff6b5f3ff7  libc++abi.dylib (400.17) <38C09CED-9090-3719-90F3-04A2749F5428> /usr/lib/libc++abi.dylib
    0x7fff6b5f4000 -     0x7fff6b5f4ff3  libcharset.1.dylib (51.200.6) <2A27E064-314C-359C-93FC-8A9B06206174> /usr/lib/libcharset.1.dylib
    0x7fff6b5f5000 -     0x7fff6b605ffb  libcmph.dylib (6.15.1) <9C52B2FE-179F-32AC-B87E-2AFC49ABF817> /usr/lib/libcmph.dylib
    0x7fff6b606000 -     0x7fff6b61effb  libcompression.dylib (52.250.2) <7F4BB18C-1FB4-3825-8D8B-6E6B168774C6> /usr/lib/libcompression.dylib
    0x7fff6b893000 -     0x7fff6b8a9fff  libcoretls.dylib (155.220.1) <4C64BE3E-41E3-3020-8BB7-07E90C0C861C> /usr/lib/libcoretls.dylib
    0x7fff6b8aa000 -     0x7fff6b8abff3  libcoretls_cfhelpers.dylib (155.220.1) <0959B3E9-6643-3589-8BB3-21D52CDF0EF1> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff6bd44000 -     0x7fff6bd4fff7  libcsfde.dylib (546.50.1) <7BAF8FCF-33A1-3C7C-8FEB-2020C8ED6063> /usr/lib/libcsfde.dylib
    0x7fff6bd57000 -     0x7fff6bdadff3  libcups.2.dylib (462.12) <095619DC-9233-3937-9E50-5F10D917A40D> /usr/lib/libcups.2.dylib
    0x7fff6bee1000 -     0x7fff6bee1fff  libenergytrace.dylib (17.200.1) <80BB567A-FD18-3497-BF97-353F57D98CDD> /usr/lib/libenergytrace.dylib
    0x7fff6bee2000 -     0x7fff6befbffb  libexpat.1.dylib (16.1.1) <28A385F1-4210-32D2-861B-C1B2189A5294> /usr/lib/libexpat.1.dylib
    0x7fff6bf13000 -     0x7fff6bf18ff7  libgermantok.dylib (17.15.2) <E5F0F794-FF27-3D64-AE52-C78C6A84DD67> /usr/lib/libgermantok.dylib
    0x7fff6bf19000 -     0x7fff6bf1eff7  libheimdal-asn1.dylib (520.270.1) <73F60D6F-76F8-35EF-9C86-9A81225EE4BE> /usr/lib/libheimdal-asn1.dylib
    0x7fff6bf49000 -     0x7fff6c039fff  libiconv.2.dylib (51.200.6) <2047C9B7-3F74-3A95-810D-2ED8F0475A99> /usr/lib/libiconv.2.dylib
    0x7fff6c03a000 -     0x7fff6c29bffb  libicucore.A.dylib (62141.0.1) <A0D63918-76E9-3C1B-B255-46F4C1DA7FE8> /usr/lib/libicucore.A.dylib
    0x7fff6c2e8000 -     0x7fff6c2e9fff  liblangid.dylib (128.15.1) <22D05C4F-769B-3075-ABCF-44A0EBACE028> /usr/lib/liblangid.dylib
    0x7fff6c2ea000 -     0x7fff6c302ff3  liblzma.5.dylib (10.200.3) <E1F4FD60-1CE4-37B9-AD95-29D348AF1AC0> /usr/lib/liblzma.5.dylib
    0x7fff6c31a000 -     0x7fff6c3beff7  libmecab.1.0.0.dylib (779.24.1) <A8D0379B-85FA-3B3D-89ED-5CF2C3826AB2> /usr/lib/libmecab.1.0.0.dylib
    0x7fff6c3bf000 -     0x7fff6c5c3fff  libmecabra.dylib (779.24.1) <D71F71E0-30E2-3DB3-B636-7DE13D51FB4B> /usr/lib/libmecabra.dylib
    0x7fff6c79b000 -     0x7fff6caecff7  libnetwork.dylib (1229.250.15) <72C7E9E3-B2BE-3300-BE1B-64606222022C> /usr/lib/libnetwork.dylib
    0x7fff6cb7e000 -     0x7fff6d303fdf  libobjc.A.dylib (756.2) <7C312627-43CB-3234-9324-4DEA92D59F50> /usr/lib/libobjc.A.dylib
    0x7fff6d315000 -     0x7fff6d319ffb  libpam.2.dylib (22.200.1) <586CF87F-349C-393D-AEEB-FB75F94A5EB7> /usr/lib/libpam.2.dylib
    0x7fff6d31c000 -     0x7fff6d351fff  libpcap.A.dylib (79.250.1) <C0893641-7DFF-3A33-BDAE-190FF54837E8> /usr/lib/libpcap.A.dylib
    0x7fff6d3a7000 -     0x7fff6d3aafff  libpmenergy.dylib (194.267.1) <313C9825-2641-355B-8CA7-C038781BF848> /usr/lib/libpmenergy.dylib
    0x7fff6d3ab000 -     0x7fff6d3adfff  libpmsample.dylib (194.267.1) <47FF5A10-C847-307D-8028-E8C159A0A803> /usr/lib/libpmsample.dylib
    0x7fff6d46a000 -     0x7fff6d482ffb  libresolv.9.dylib (65.200.3) <6884EA23-6425-3A88-8534-2D1AB0188B2D> /usr/lib/libresolv.9.dylib
    0x7fff6d484000 -     0x7fff6d4bfff3  libsandbox.1.dylib (851.270.1) <04B924EF-2385-34DF-807E-93AAD9EF3AAB> /usr/lib/libsandbox.1.dylib
    0x7fff6d4d3000 -     0x7fff6d4d4ff7  libspindump.dylib (267.3) <A584E403-8C95-3841-9C16-E22664A5A63F> /usr/lib/libspindump.dylib
    0x7fff6d4d5000 -     0x7fff6d6b2fff  libsqlite3.dylib (274.26) <6404BA3B-BCA4-301F-B2FE-8776105A2AA3> /usr/lib/libsqlite3.dylib
    0x7fff6d8cb000 -     0x7fff6d8ceff7  libutil.dylib (51.200.4) <CE9B18C9-66ED-32D4-9D29-01F8FCB467B0> /usr/lib/libutil.dylib
    0x7fff6d8cf000 -     0x7fff6d8dcfff  libxar.1.dylib (417.1) <39CCF46B-C81A-34B1-92A1-58C4E5DA846E> /usr/lib/libxar.1.dylib
    0x7fff6d8e1000 -     0x7fff6d9c4ff3  libxml2.2.dylib (32.12) <48E64CC9-8C86-372B-99DC-1D114F6A259A> /usr/lib/libxml2.2.dylib
    0x7fff6d9c5000 -     0x7fff6d9edff3  libxslt.1.dylib (16.7) <FA4F431A-1387-3432-BD7A-D9C512638E94> /usr/lib/libxslt.1.dylib
    0x7fff6d9ee000 -     0x7fff6da00ff7  libz.1.dylib (70.200.4) <B048FC1F-058F-3A08-A1FE-81D5308CB3E6> /usr/lib/libz.1.dylib
    0x7fff6e1e4000 -     0x7fff6e1e8ff3  libcache.dylib (81) <1987D1E1-DB11-3291-B12A-EBD55848E02D> /usr/lib/system/libcache.dylib
    0x7fff6e1e9000 -     0x7fff6e1f3ff3  libcommonCrypto.dylib (60118.250.2) <1765BB6E-6784-3653-B16B-CB839721DC9A> /usr/lib/system/libcommonCrypto.dylib
    0x7fff6e1f4000 -     0x7fff6e1fbff7  libcompiler_rt.dylib (63.4) <5212BA7B-B7EA-37B4-AF6E-AC4F507EDFB8> /usr/lib/system/libcompiler_rt.dylib
    0x7fff6e1fc000 -     0x7fff6e205ff7  libcopyfile.dylib (146.250.1) <98CD00CD-9B91-3B5C-A9DB-842638050FA8> /usr/lib/system/libcopyfile.dylib
    0x7fff6e206000 -     0x7fff6e28afc3  libcorecrypto.dylib (602.260.2) <01464D24-570C-3B83-9D18-467769E0FCDD> /usr/lib/system/libcorecrypto.dylib
    0x7fff6e311000 -     0x7fff6e34aff7  libdispatch.dylib (1008.270.1) <97273678-E94C-3C8C-89F6-2E2020F4B43B> /usr/lib/system/libdispatch.dylib
    0x7fff6e34b000 -     0x7fff6e377ff7  libdyld.dylib (655.1.1) <002418CC-AD11-3D10-865B-015591D24E6C> /usr/lib/system/libdyld.dylib
    0x7fff6e378000 -     0x7fff6e378ffb  libkeymgr.dylib (30) <0D0F9CA2-8D5A-3273-8723-59987B5827F2> /usr/lib/system/libkeymgr.dylib
    0x7fff6e379000 -     0x7fff6e385ff3  libkxld.dylib (4903.278.12) <310B81DB-F3E2-3495-BC8A-19EB750FEDBF> /usr/lib/system/libkxld.dylib
    0x7fff6e386000 -     0x7fff6e386ff7  liblaunch.dylib (1336.261.2) <2B07E27E-D404-3E98-9D28-BCA641E5C479> /usr/lib/system/liblaunch.dylib
    0x7fff6e387000 -     0x7fff6e38cfff  libmacho.dylib (927.0.3) <A377D608-77AB-3F6E-90F0-B4F251A5C12F> /usr/lib/system/libmacho.dylib
    0x7fff6e38d000 -     0x7fff6e38fff7  libquarantine.dylib (86.270.1) <50A89DAB-7E34-3347-9AD5-68957B27EFD2> /usr/lib/system/libquarantine.dylib
    0x7fff6e390000 -     0x7fff6e391ff7  libremovefile.dylib (45.200.2) <9FBEB2FF-EEBE-31BC-BCFC-C71F8D0E99B6> /usr/lib/system/libremovefile.dylib
    0x7fff6e392000 -     0x7fff6e3a9ff3  libsystem_asl.dylib (356.200.4) <A62A7249-38B8-33FA-9875-F1852590796C> /usr/lib/system/libsystem_asl.dylib
    0x7fff6e3aa000 -     0x7fff6e3aaff7  libsystem_blocks.dylib (73) <A453E8EE-860D-3CED-B5DC-BE54E9DB4348> /usr/lib/system/libsystem_blocks.dylib
    0x7fff6e3ab000 -     0x7fff6e432fff  libsystem_c.dylib (1272.250.1) <7EDACF78-2FA3-35B8-B051-D70475A35117> /usr/lib/system/libsystem_c.dylib
    0x7fff6e433000 -     0x7fff6e436ffb  libsystem_configuration.dylib (963.270.3) <2B4A836D-68A4-33E6-8D48-CD4486B03387> /usr/lib/system/libsystem_configuration.dylib
    0x7fff6e437000 -     0x7fff6e43aff7  libsystem_coreservices.dylib (66) <719F75A4-74C5-3BA6-A09E-0C5A3E5889D7> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff6e43b000 -     0x7fff6e441fff  libsystem_darwin.dylib (1272.250.1) <EC9B39A5-9592-3577-8997-7DC721D20D8C> /usr/lib/system/libsystem_darwin.dylib
    0x7fff6e442000 -     0x7fff6e448ffb  libsystem_dnssd.dylib (878.270.3) <97EEE658-D935-33C8-B56E-0F41EA7F6B43> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff6e449000 -     0x7fff6e494ffb  libsystem_info.dylib (517.200.9) <D09D5AE0-2FDC-3A6D-93EC-729F931B1457> /usr/lib/system/libsystem_info.dylib
    0x7fff6e495000 -     0x7fff6e4bdff7  libsystem_kernel.dylib (4903.278.12) <210C5A31-0B19-3AA3-98E4-686F1DD3983E> /usr/lib/system/libsystem_kernel.dylib
    0x7fff6e4be000 -     0x7fff6e509ff7  libsystem_m.dylib (3158.200.7) <F19B6DB7-014F-3820-831F-389CCDA06EF6> /usr/lib/system/libsystem_m.dylib
    0x7fff6e50a000 -     0x7fff6e534fff  libsystem_malloc.dylib (166.270.1) <011F3AD0-8E6A-3A89-AE64-6E5F6840F30A> /usr/lib/system/libsystem_malloc.dylib
    0x7fff6e535000 -     0x7fff6e53fff7  libsystem_networkextension.dylib (767.250.2) <FF06F13A-AEFE-3A27-A073-910EF78AEA36> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff6e540000 -     0x7fff6e547fff  libsystem_notify.dylib (172.200.21) <145B5CFC-CF73-33CE-BD3D-E8DDE268FFDE> /usr/lib/system/libsystem_notify.dylib
    0x7fff6e548000 -     0x7fff6e551fef  libsystem_platform.dylib (177.270.1) <9D1FE5E4-EB7D-3B3F-A8D1-A96D9CF1348C> /usr/lib/system/libsystem_platform.dylib
    0x7fff6e552000 -     0x7fff6e55cff7  libsystem_pthread.dylib (330.250.2) <2D5C08FF-484F-3D59-9132-CE1DCB3F76D7> /usr/lib/system/libsystem_pthread.dylib
    0x7fff6e55d000 -     0x7fff6e560ff7  libsystem_sandbox.dylib (851.270.1) <9494594B-5199-3186-82AB-5FF8BED6EE16> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff6e561000 -     0x7fff6e563ff3  libsystem_secinit.dylib (30.260.2) <EF1EA47B-7B22-35E8-BD9B-F7003DCB96AE> /usr/lib/system/libsystem_secinit.dylib
    0x7fff6e564000 -     0x7fff6e56bff3  libsystem_symptoms.dylib (820.267.1) <03F1C2DD-0F5A-3D9D-88F6-B26C0F94EB52> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff6e56c000 -     0x7fff6e581fff  libsystem_trace.dylib (906.260.1) <FC761C3B-5434-3A52-912D-F1B15FAA8EB2> /usr/lib/system/libsystem_trace.dylib
    0x7fff6e583000 -     0x7fff6e588ffb  libunwind.dylib (35.4) <24A97A67-F017-3CFC-B0D0-6BD0224B1336> /usr/lib/system/libunwind.dylib
    0x7fff6e589000 -     0x7fff6e5b8fff  libxpc.dylib (1336.261.2) <7DEE2300-6D8E-3C00-9C63-E3E80D56B0C4> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 51
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 11014606
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=541.7M resident=0K(0%) swapped_out_or_unallocated=541.7M(100%)
Writable regions: Total=784.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=784.9M(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Activity Tracing                   256K        1 
Dispatch continuations            16.0M        1 
Kernel Alloc Once                    8K        1 
MALLOC                           123.8M      362 
MALLOC guard page                   32K        6 
Mach message                        24K        3 
Memory Tag 252                    61.2M      615 
Memory Tag 253                    99.5M      170 
Memory Tag 255                    11.6G      937 
PROTECTED_MEMORY                     4K        1 
STACK GUARD                       56.1M       24 
Stack                            184.7M       48 
VM_ALLOCATE                       66.0M       43 
__DATA                            39.0M      319 
__FONT_DATA                          4K        1 
__LINKEDIT                       225.2M        9 
__TEXT                           316.4M      311 
__UNICODE                          564K        1 
mapped file                       53.9M       15 
shared memory                     24.3M       27 
===========                     =======  ======= 
TOTAL                             12.8G     2895 
```

</details>

### Expected Behavior
Renderer does not crash

### Actual Behavior
Renderer crashes

### To Reproduce
When running the app with `contextIsolation: true`, I start interacting with the app and after a number of clicks on different channels the renderer process crashes.

If either contextIsolation is disabled, I am unable to bring about a crash
",loc,platform/macOS;bug :beetle:;7-1-x,2019-11-18T23:26:13Z,2019-12-09T18:34:41Z,samiskin,loc,sofianguy,,loc,,loc,
electron/electron,21242,"Layouting issues on Electron 8.0.0-beta.3 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0-beta.3
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * 8.0.0-beta.2

### Expected Behavior

![2019-11-21-18-23-47](https://user-images.githubusercontent.com/11065386/69361317-8a17ed00-0c8c-11ea-8c27-42719d9d3137.gif)

### Actual Behavior

Also, there's a little flicker when changing the tabs on GitHub.

![2019-11-21-18-24-23](https://user-images.githubusercontent.com/11065386/69361473-db27e100-0c8c-11ea-9a28-746e7196813e.gif)

### To Reproduce
https://gist.github.com/sentialx/16bb70ff9ee870a8e8d27441ca1ab91f

",ckerr,platform/windows;platform/linux;bug :beetle:;status/confirmed;8-x-y,2019-11-21T17:30:40Z,2019-12-18T20:09:15Z,sentialx,ckerr;sentialx,sofianguy;ckerr,,jkleinsc,,ckerr,
electron/electron,21393,"Blurry rendering on Mac OS X after switching from non-retina display to retina display NOTE: I previously reported this at #21229 which was closed after someone was unable to reproduce it. I insist that this bug *is* present, and *is* an Electron bug, because it occurs on Caprine, Slack, WhatsApp, VS Code, and my own home-built Google Photos desktop app. After the issue was closed, @nielsvandepas was able to reproduce the bug, but the issue was not reopened after commented. I'm not sure why this issue couldn't be reproduced using the steps I've given, so I'm attaching screenshots. Sorry for duplicate - I don't have permissions for reopening the other issue.

<!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
7
* **Operating System:**
Mac OS X
* **Last Known Working Electron version:**
N/A

### To Reproduce
1. Connect MacBook to a non-retina display - in my case, a 40"" 4k display connected via DisplayPort with standard scaling (i.e. full resolution, not retina-like 1080p scaled up to 4k).
2. Close the MacBook lid.
3. Open an Electron app.
4. Unplug the display.
5. Open the MacBook lid. Electron app is blurry.

### Screenshots

<img width=""311"" alt=""Screen Shot 2019-12-05 at 11 31 43 AM"" src=""https://user-images.githubusercontent.com/4722472/70231858-12999180-1753-11ea-8955-9ce04d9b2b32.png"">
<img width=""300"" alt=""Screen Shot 2019-12-05 at 11 32 52 AM"" src=""https://user-images.githubusercontent.com/4722472/70231870-19280900-1753-11ea-926e-3fb8bc8563c7.png"">
<img width=""389"" alt=""Screen Shot 2019-12-05 at 11 32 27 AM"" src=""https://user-images.githubusercontent.com/4722472/70231899-2644f800-1753-11ea-9e09-07c712f3abe9.png"">
<img width=""360"" alt=""Screen Shot 2019-12-05 at 11 33 12 AM"" src=""https://user-images.githubusercontent.com/4722472/70231905-29d87f00-1753-11ea-8715-f3b1437538d6.png"">
",deepak1556,platform/macOS;bug :beetle:;7-1-x,2019-12-05T11:35:12Z,2020-01-23T19:49:44Z,aterenin,ckerr;EllDoubleYew;karipov;obahareth;eric1iu;deepak1556,ckerr,,deepak1556,,deepak1556,
electron/electron,21397,"Print issue on Electron from v7 - Print only works once (window.print()) <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  Not working since v7.00.  
  Tested on:
  * v8.0.0-beta.4
  * v7.0.0
* **Operating System:**
  * macOS 10.14.5
* **Last Known Working Electron version:**
  * v6.1.5

### Expected Behavior
That the ```window.print()``` will work, even after the first time.  
Like in versions prior to v7.0.0

### Actual Behavior
The ```window.print()``` function only works one time.  
After the first time, it's not working.
The print dialog appears but the actual printing is not.

### To Reproduce
Run ```window.print()``` twice.  
On the Electron Fiddle app example, click on the Print Page and print.
After that first time, click on the Print Page button again and try to print again.
[Link to the Gist](https://gist.github.com/ChenAlon/1d2253dc2c5ad1201370700cd200b0fa)

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
[Link to video](https://drive.google.com/file/d/1QfXvhPVGuNv6Zvdn9JkbHGgXAklx2F-N/view?usp=sharing)
",codebytere,platform/macOS;bug :beetle:;8-x-y;7-1-x,2019-12-05T16:47:22Z,2020-01-27T18:54:57Z,ChenAlon,codebytere;ChenAlon;umeduardo;dipunj;exander77;daveajones;barbalex,sofianguy,,codebytere,,codebytere,
electron/electron,21440,"Cannot resize/maximize/restore/drag or close the window using pen on touchscreen devices * [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  7.1.0
* **Operating System:**
  Windows 10 pro
* **Last Known Working Electron version:**
  n/a

### Expected Behavior
Window should respond to pen taps on the screen.

### Actual Behavior
Window does not respond.

### To Reproduce
Download or clone electron-quick-start project on a touchscreen laptop(surface book in my case) and try using pen to resize/maximize/restore/drag or close the window.

 #### Clone the repository
git clone https://github.com/electron/electron-quick-start
##### Go into the repository
cd electron-quick-start
##### Install dependencies
npm install
##### Run the app
npm start

### Additional Information
I tried the latest vs code which is based on electron v6 and it works properly. All other apps on the machine also responds normally to pen taps.
",ckerr;zcbenz,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;8-x-y;9-x-y;10-x-y;7-3-x,2019-12-09T14:26:28Z,2020-06-12T14:26:17Z,sachetsharma1,kenpowers-signal,sofianguy;ckerr,ckerr,ckerr;zcbenz,,ckerr,
electron/electron,21445,"No tray icon on Linux (electron@^8) <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 8.0.0-beta.4
* **Operating System:** Linux (tested on: Manjaro LXDE, Ubuntu 19.04/19.10 Gnome Shell)
* **Last Known Working Electron version:** 7.1.3

### Expected Behavior
Tray icon created.

### Actual Behavior
No tray icon created.

### To Reproduce
https://github.com/vladimiry-playground/electron-quick-start-tray-issue

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information

The issue has been partially fixed within https://github.com/electron/electron/issues/21154

CC @codebytere 
",ckerr,platform/linux;bug :beetle:;8-x-y,2019-12-09T20:27:57Z,2020-01-28T15:17:46Z,vladimiry,codebytere;vladimiry;ckerr;squalou;p3x-robot;dotenorio;abhigyank;hovancik;akontsevich;bkmo;zcbenz,sofianguy,,MarshallOfSound,MarshallOfSound,jkleinsc,electron/electron#21154;
electron/electron,21499,"tray.setContextMenu(Menu.buildFromTemplate([...])) doesn't update the tray menu and the app segfaults if menu item clicked several times <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 8.0.0-beta.4, 9.0.0-nightly.20191225
* **Operating System:** Linux (tested on: Manjaro XFCE, Ubuntu 19.04/19.10 Gnome Shell, Kubuntu 19.10)
* **Last Known Working Electron version:** 7.1.3

### Expected Behavior
- `tray.setContextMenu(Menu.buildFromTemplate([...]))` call updates the tray menu.
- Clicking on the tray menu item doesn't lead to the app segfault crash.
- After the 3 seconds delay clicking on the tray menu item prints `clicked { label: '3000ms' }` to console.

### Actual Behavior
- `tray.setContextMenu(Menu.buildFromTemplate([...]))` call does not update the tray menu items.
- Clicking on the tray menu item leads to the app segfault crash.
- After the 3 seconds delay clicking on the tray menu item prints `clicked { label: 'initial' }` to console.

### To Reproduce
https://github.com/vladimiry-playground/electron-quick-start-tray-issue-menu-dynamics
- `npm ci`
- `ELECTRON_ENABLE_LOGGIN=true ./node_modules/electron/dist/electron main.js`
- Wait for 3 seconds (`3000 ms` gets printed in the console).
- Open the tray menu. There should be one item with `3000 ms` label but in fact, the menu item has `initial` label, so the tray menu didn't get updated.
- Start clicking on that tray menu item until the app segfaults (normally 2-4 clicks, rarely up to 10 clicks).

Console output:
```
(electron) The default value of app.allowRendererProcessReuse is deprecated, it is currently ""false"".  It will change to be ""true"" in Electron 9.  For more information please check https://github.com/electron/electron/issues/18397
[3962:1213/042903.974947:ERROR:buffer_manager.cc(488)] [.DisplayCompositor]GL ERROR :GL_INVALID_OPERATION : glBufferData: <- error from previous GL command
3000 ms
clicked { label: 'initial' }
clicked { label: 'initial' }
clicked { label: 'initial' }
clicked { label: 'initial' }
Segmentation fault (core dumped)
```
Number of `clicked { label: 'initial' }` lines count here represents how many times tray menu item was clicked before the app got crashed (normally 2-4 clicks, rarely up to 10 clicks). The click does nothing but printing to console https://github.com/vladimiry-playground/electron-quick-start-tray-issue-menu-dynamics/blob/785866857eec555404e1f3c5e0c0cfd0b1d73e8e/main.js#L51

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

### Additional Information

#21445 is a possibly related issue.",ckerr,platform/linux;bug :beetle:;8-x-y,2019-12-13T01:49:52Z,2020-01-26T21:02:34Z,vladimiry,vladimiry,sofianguy,,ckerr,,ckerr,
electron/electron,21515,"await Promise with Timer behavior regress from previous version <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 5.0.12 - 7.1.10
* **Operating System:**
  * Windows 10/macOS 10.15
* **Last Known Working Electron version:**
  * 4.2.5

### Expected Behavior
We have been using the piece of code to perform asynchronous operations.
```js
await new Promise((resolve) => { setTimeout(resolve, 1000); }
```
It would pause the execution of the code path containing it for about 1 second and resume it then. This has been working well for a long time.

### Actual Behavior
Since we upgrade to Electron 7, in forked node processes, only the first several timer callbacks are called on time, while the rest of them are called extremely late for unknown reason.

Suppose we call the above piece of code for 10 times in a loop. Only the first two promises are created and resolved correctly. In addition, the process exits for unknown reason. In our production code, since there are other things going on (not computationally intensive) which keeps the process alive, we are seeing the 3rd and the rest of the Timers being created and invoked unreasonably late (around 12s after the 2nd one resolves).

The output in the renderer console is
```
Spawned child process <some_pid>
child process send a message INIT_ACK
child process send a message INIT_ACK
child process exits
```

### To Reproduce
https://github.com/JasonYeMSFT/electron-quick-start/tree/bug/await-Promise

To run the repro steps
```sh
$ git clone https://github.com/JasonYeMSFT/electron-quick-start -b bug/await-Promise
$ npm install
$ npm start
```
<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
Electron 4.2.5 behaves correctly for exactly the same code in this repo. The behavior doesn't reproduce in renderer process. Also it doesn't seem to be a nodejs problem because I can run the renderer.js directly with node on the same version and it behaves correctly.

I did some extra experiment and it turns out that `setInterval` is producing much more stable behaviors compared to `setTimeout` (update, I was wrong, `setInterval` also has the weird behavior).",ckerr;codebytere,platform/windows;platform/macOS;bug :beetle:;5-0-x;6-1-x;7-1-x,2019-12-13T18:28:46Z,2020-04-21T19:18:23Z,JasonYeMSFT,MRayermannMSFT;codebytere;ckerr;aabuhijleh;witcher112;arantes555;craxal,sofianguy,,codebytere,,codebytere,
electron/electron,21596,"youtube.com not loading on 8.0.0-beta.5 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0-beta.5
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * 8.0.0-beta.4

### Expected Behavior
https://youtube.com should load.

### Actual Behavior
https://youtube.com is not loading.

### To Reproduce
https://gist.github.com/e9ea437d3562b951a6619540aaf3da15

### Screenshots
![image](https://user-images.githubusercontent.com/11065386/71311012-519a3900-241b-11ea-90b5-2eb959bc74ea.png)

### Additional information

This may be related to #21242 ",codebytere,platform/windows;platform/macOS;bug :beetle:;status/confirmed;8-x-y,2019-12-21T16:58:53Z,2020-01-22T13:03:18Z,sentialx,nornagon,codebytere,,sofianguy,,zcbenz,
electron/electron,21597,"Crash when going to http://google.com with any `webRequest` listener <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0-beta.5
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * 8.0.0-beta,4

### Expected Behavior
http://google.com should load without any crash

### Actual Behavior
Going to http://google.com works for the first time. However, when going to the same URL after the cache has been saved in `userData`, it crashes with `3221225477` exit code. The strange thing is that when going to https://google.com, it works perfectly.

### To Reproduce
(I couldn't use Fiddle, since it saves the `userData` temporarily)
https://github.com/sentialx/electron-quick-start/tree/google-crash
Branch `google-crash`
",zcbenz,platform/windows;crash :boom:;bug :beetle:;8-x-y,2019-12-21T19:48:55Z,2020-01-22T01:31:11Z,sentialx,sentialx;zcbenz,sofianguy;zcbenz,,sofianguy,,zcbenz,
electron/electron,21616,"Crash when opening an external link after calling app.removeAllListeners() <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v7.1.7
* **Operating System:**
  * macOS 10.14
* **Last Known Working Electron version:**
  * v6.1.7

### Expected Behavior

Electron can open an external link successfully with browser window

### Actual Behavior

Process crashes. Below is a dump when I tried `ELECTRON_ENABLE_LOGGING=true ELECTRON_ENABLE_STACK_DUMPING=true ./node_modules/.bin/electron .`:

```
Received signal 11 SEGV_MAPERR 000000000058
 [0x0001155eca59]
 [0x000115545163]
 [0x0001155ec971]
 [0x7fffa43d5b3a]
 [0x0001155a31ff]
 [0x000113311ac9]
 [0x00011345acb9]
 [0x0001158af7d9]
 [0x0001158b46de]
 [0x0001158b3f64]
 [0x0001158ac943]
 [0x0001158ad1ba]
 [0x0001158c358e]
 [0x0001155985b2]
 [0x0001155a8544]
 [0x0001155a8a17]
 [0x000115605053]
 [0x000115540bfa]
 [0x0001156049bf]
 [0x7fff8e9e16d1]
 [0x7fff8e9c25cd]
 [0x7fff8e9c1ac6]
 [0x7fff8e9c14c4]
 [0x7fff8df21ebc]
 [0x7fff8df21cf1]
 [0x7fff8df21b26]
 [0x7fff8c4b6a54]
 [0x7fff8cc327ee]
 [0x7fff8c4ab3db]
 [0x00011560585c]
 [0x000115604388]
 [0x0001155a8ef8]
 [0x00011557cf77]
 [0x000114d82bb3]
 [0x000114d84112]
 [0x000114d7fe66]
 [0x000114c3e372]
 [0x000114c3df8e]
 [0x000116d53339]
 [0x000113de7654]
 [0x000113237154]
 [0x00010caba9e0]
 [0x7fffa41c6235]
 [0x000000000002]
[end of stack trace]
```

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

Run following code on main process:

```javascript
const { app, BrowserWindow } = require('electron');

async function go() {
    await app.whenReady();
    app.removeAllListeners();

    const win = new BrowserWindow();
    win.loadURL('https://example.com');
}

go().catch(console.error);
```

It does not crash when commenting out `app.removeAllListeners()`. And I also confirmed this does not occur with Electron v6.

### Screenshots

Crashes with following dialog:

![閵堝箍鍋楅妷閵夌哄厒閵堟灚鍎抽妷鍐﹀創 2019-12-25 12 45 53](https://user-images.githubusercontent.com/823277/71431375-c79ce980-2714-11ea-9d10-179aca8297ac.png)

Though it is localized, it says 'Application exited due to unexpected reason. When you want to reopen the application, please click ""reopen"". When you want to send a crash report to Apple, please click ""report""'.

### Additional Information
Might be related to #21597, but in this case `webRequest` listener is not involved.
",loc,platform/macOS;bug :beetle:;7-1-x,2019-12-25T03:53:00Z,2021-03-09T03:56:42Z,rhysd,loc;electron-triage,sofianguy,,codebytere;loc,loc,electron-triage,
electron/electron,21633,"default button in dialog not working on macOS <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v7.1.5 (also tried 7.1.7)
* **Operating System:**
  * macOS 10.14.6 (but I think it doesn't matter. I think it happens on all macOS versions)
* **Last Known Working Electron version:**
  * none that I know of

### Expected Behavior
When I set `defaultId` for `showMessageBox*`, the button set should be active by default.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
No button is selected at all:

<img width=""217"" alt=""image"" src=""https://user-images.githubusercontent.com/223439/71554617-97449c00-29ef-11ea-960d-7a7558120531.png"">


### To Reproduce
Minimal example:

`test.js`

```
const {app, BrowserWindow, dialog} = require('electron');

let mainWindow;

app.on('ready', () => {
	mainWindow = new BrowserWindow({
		height: 200,
		width: 440
	});

	mainWindow.loadURL('file://' + __dirname + '/index.html');

	const ok = dialog.showMessageBoxSync(mainWindow, {
		type: 'question',
		message: 'message here',
		buttons: ['Ok', 'Cancel'],
		defaultId: 1,
		cancelId: 1,
	});
});
```

`node_modules/electron/dist/Electron.app/Contents/MacOS/Electron test.js`

<img width=""552"" alt=""image"" src=""https://user-images.githubusercontent.com/223439/71555100-db3a9f80-29f5-11ea-86f0-0c0e31c91809.png"">

---

Context:

An application that uses Electron and experiences this problem is Joplin. Joplin can be built as follows:

```
git clone https://github.com/laurent22/joplin.git
cd joplin
npm install && cd Tools && npm install && cd ..
cd ElectronClient/app
npm install
cd ..
./run.sh
```

To get to such a dialog, create a notebook and a note. Right-click on a note an choose `Delete`.
Or try to delete one of the welcome notes.

### Additional Information
I've seen this problem since Electron 4.x. I can't recall an Electron version where this ever worked on macOS.

",codebytere,platform/macOS;bug :beetle:;component/dialog,2019-12-29T09:47:01Z,2019-12-31T13:48:44Z,tessus,,codebytere,,codebytere,,jkleinsc,
electron/electron,21666,"Crashes in NativeBrowserViewViews::AutoResize function on Move/Resize <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.0.7 and 6.1.5 <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
* **Operating System:**
  * Windows 10 x64 <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
App not crashing
<!-- A clear and concise description of what you expected to happen. -->

### Actual Behavior
It crashes 
<!-- A clear and concise description of what actually happened. -->

### To Reproduce
Was not able to reproduce myself or get reports with steps from user. 
Only information that we have is crash reports with backtraces.  

This backtraces have different call traces but all end with crash in ""atom::NativeBrowserViewViews::AutoResize"" file native_browser_view_views.cc line 54. 
Crashes of this two types of exceptions EXCEPTION_ACCESS_VIOLATION_READ and EXCEPTION_ACCESS_VIOLATION_EXEC. 
Calls to AutoResize leading to a crash originated from two different events Move and Resize. 

> atom::NativeBrowserViewViews::AutoResize native_browser_view_views.cc:54
> std::list<T>::list list:800
> atom::NativeWindowViews::GetBounds native_window_views.cc:588
> atom::NativeWindowViews::OnWidgetBoundsChanged native_window_views.cc:1222
> base::ObserverList<T>::Iter::EnsureValidIndex observer_list.h:211
> views::Widget::OnNativeWidgetMove widget.cc:1180
> display::win::ScreenWin::GetDisplayNearestPoint screen_win.cc:640
> views::DesktopWindowTreeHostWin::HandleMove desktop_window_tree_host_win.cc:836
> atom::NativeWindow::GetContentMaximumSize native_window.cc:287
> views::HWNDMessageHandler::_ProcessWindowMessage hwnd_message_handler.h:423
 

> atom::NativeBrowserViewViews::AutoResize native_browser_view_views.cc:54
> std::list<T>::list list:800
> atom::NativeWindowViews::OnWidgetBoundsChanged native_window_views.cc:1222
> base::ObserverList<T>::Iter::EnsureValidIndex observer_list.h:211
> views::Widget::OnNativeWidgetSizeChanged widget.cc:1192
> aura::Window::SetBoundsInternal window.cc:862
> aura::Window::SetBounds window.cc:355
> views::DesktopNativeWidgetAura::OnHostResized desktop_native_widget_aura.cc:1223
> aura::Window::UpdateLocalSurfaceId window.cc:1493
> base::ObserverList<T>::Iter::Iter observer_list.h:135
> aura::WindowTreeHost::OnHostResizedInPixels window_tree_host.cc:457
> atom::api::TopLevelWindow::OnWindowMessage atom_api_top_level_window.cc:292
> base::ObserverList<T>::Iter::EnsureValidIndex observer_list.h:211
> views::HWNDMessageHandler::ClientAreaSizeChanged hwnd_message_handler.cc:1360
> views::HWNDMessageHandler::OnNCPaint hwnd_message_handler.cc:2254
> CThemeWnd::NcHitTest nctheme.cpp:6619
> views::HWNDMessageHandler::OnWindowPosChanged hwnd_message_handler.cc:2763
> views::HWNDMessageHandler::_ProcessWindowMessage hwnd_message_handler.h:440

Crashing line native_browser_view_views.cc line 54. 
https://github.com/electron/electron/blob/47ee65c66ce0a1fcd476ac4cefcdc2b3b96cede9/atom/browser/native_browser_view_views.cc#L54

Can object reference returned by GetInspectableWebContentsView() be invalid or object destroyed when Move/Resize event comes from the system? 

<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
Our crash reporting system receives about 100 crashes a day what involves AutoResize. 

<!-- Add any other context about the problem here. -->
",groundwater,platform/windows;platform/linux;bug :beetle:;component/BrowserView;6-1-x,2020-01-02T21:08:51Z,2020-09-17T00:10:50Z,summeroff,,sofianguy;codebytere,,groundwater,,codebytere,
electron/electron,21699,"dev tools: unable to load source maps over custom protocol <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.1.7
* **Operating System:**
  * macOS 10.14.6
* **Last Known Working Electron version:**
  * 6.1.7

### Expected Behavior
When loading a Javascript file using a custom protocol, opening the dev tools should load the source maps.

### Actual Behavior
It does not load the source maps, and produces no error message other than an `ERR_UNKNOWN_URL_SCHEME` in the net log if net logging is enabled.

### To Reproduce
To see it work properly on Electron 6.1.7:
1. Run [this fiddle](https://gist.github.com/d0cb93e9c7d6ad198fe38db77038495a) on Electron 6.1.7
2. Open the dev tools
3. Note that `source map requested!` was logged to the main process console, and the source map for `test.js` (including `test.ts`) was loaded into the dev tools

To see it fail on Electron 7.1.7:
1. Run [this fiddle](https://gist.github.com/d0cb93e9c7d6ad198fe38db77038495a) on Electron 7.1.7
2. Open the dev tools
3. Note that `source map requested!` was not logged to the main process console, and neither `test.js.map` nor `test.ts` were loaded

### Additional Information
This is probably more fallout from Chromium's network service. When I enable net logging (`app.commandLine.appendSwitch('log-net-log', 'netlog.json')`), I see the following when opening the dev tools:

```
{""params"":{""priority"":""IDLE"",""traffic_annotation"":129652775,""url"":""serve://dist/assets/test.js.map""},""phase"":1,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":2},
{""phase"":1,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":103},
{""phase"":2,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":103},
{""params"":{""load_flags"":0,""method"":""GET"",""privacy_mode"":0,""url"":""serve://dist/assets/test.js.map""},""phase"":1,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":99},
{""params"":{""net_error"":-302},""phase"":2,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":99},
{""phase"":1,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":107},
{""phase"":2,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":107},
{""params"":{""net_error"":-302},""phase"":2,""source"":{""id"":27,""type"":1},""time"":""20404995"",""type"":2},
```

Note the `""net_error"":-302` -- `-302` is `ERR_UNKNOWN_URL_SCHEME`, so somehow the network service(?) isn't aware of the standard scheme that was registered when trying to load `test.js.map`, even though `test.js` was successfully loaded using that same scheme.

This is currently preventing `ember-electron` apps from loading source maps on 7.x since `ember-electron` relies on a custom protocol to load the Ember app from the filesystem while still allowing Ember's web-based tooling (route recognition, web-style absolute asset URLs, etc.) to function.",deepak1556,platform/macOS;bug :beetle:;7-1-x;11-x-y,2020-01-08T06:44:49Z,2021-04-12T04:59:37Z,bendemboski,jean343;rhys-e;MGraefe;Simon-Laux;bpasero,sofianguy;ckerr,,deepak1556,,deepak1556,
electron/electron,21708,"webContents.printToPDF rejects in v8.0.0-beta.5 ### Preflight Checklist

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

Note: related but different issues:

* #21603 -- that one was using the older (callback) API, but this is using the latest (promise) API (and #21639 appears to be a duplicate of that)
* #18093 -- in that case some output is produced, but here a rejection occurs (and the affected electron versions are different).
* #20634 -- that one never ends, but this one rejects shortly after the call occurs


### Issue Details

* **Electron Version:**
  * v8.0.0-beta.5 (also happens in 9.0.0-nightly.20191220 & 9.0.0-nightly.20200108)
* **Operating System:**
  * Debian (bullseye/sid) x64, 5.3.0 kernel
* **Last Known Working Electron version:**
  * 7.1.8, 8.0.0-beta.4, See [bisect](https://github.com/electron/electron/issues/21708#issuecomment-573079603)

### Expected Behavior
Calling `someBrowserWindow.webContents.printToPDF` should not throw exception / generate promise rejection.

### Actual Behavior
Calling `someBrowserWindow.webContents.printToPDF` rejects with `[Error: Failed to generate PDF]`.

### To Reproduce
Fiddle: https://gist.github.com/jacobq/cc5e5e1736b88cb32604f55369afd1c7
Repo: https://github.com/jacobq/electron-quick-start/tree/bug/print-to-pdf

```js
mainWindow.webContents.once('did-finish-load', async function() {
  try {
    const pdfData = await mainWindow.webContents.printToPDF({})
    console.log('Got PDF data -->', pdfData) // never gets here
  } catch(e) {
    // output --> Call to printToPDF threw exception [Error: Failed to generate PDF]
    console.error('Call to printToPDF threw exception', e)
  }
});
```
",codebytere,platform/linux;bug :beetle:;8-x-y,2020-01-08T19:41:07Z,2020-01-16T05:05:37Z,jacobq,jacobq;codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,21790,"Menu Accelerators don't follow macOS HIG ### Issue Details

When using an accelerator like `Shift+CmdOrCtrl+3`, the shown accelerator should be `閳褉瀵3`, However, it's shown as `閳#`. 

The HIG show menus with the shift arrow: https://developer.apple.com/design/human-interface-guidelines/macos/menus/menu-anatomy/


* **Electron Version:** 7.x
* **Operating System:** macOS 10.14.6

### Expected Behavior
The accelerator is shown as `閳褉瀵3`.

### Actual Behavior
The accelerator is shown as `閳#`.


Will create a small fiddle later.",zcbenz,platform/macOS;bug :beetle:;11-x-y;12-x-y;13-x-y,2020-01-15T14:42:02Z,2021-06-02T07:32:48Z,Kilian,nornagon;clavin;alexdima;zcbenz;electron-triage;Kilian,sofianguy;Kilian,,,,electron-triage,
electron/electron,21831,"checkboxChecked still not working in 7.1.9 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, **only found a [closed issue](https://github.com/electron/electron/issues/21159) that doesn't works**.

### Issue Details

* **Electron Version:**
  * 7.1.9
* **Operating System:**
  * Windows 10, 1809

### Expected Behavior
The `checkboxChecked` property of dialog boxes should works in the promise.

### Actual Behavior
It doens't work when the `checkboxChecked` is set to be false, it works when `checkboxChecked` is set to be true.
This problem is said to be solved, but it hasn't been...

### To Reproduce
@jrdiard gave a example in the old and closed 21159 issue,
with the fiddle code in main.js:
```
const { app, BrowserWindow, dialog } = require('electron')

let mainWindow = null

app.on('ready', () => {
  mainWindow = new BrowserWindow({ height: 600, width: 600 })

  var ret = dialog.showMessageBox(mainWindow, {
    type: ""question"", buttons: [""Yes"", ""No""],
    message: ""Do you want to run the demonstration scenes?"",
    cancelId: 1,
    checkboxLabel: ""Save images for each scene"", checkboxChecked: true, noLink: false
  });
  ret.then((val) => {
    console.log(""Run Demo: "" + val.response + "" Save scenes: "" + val.checkboxChecked);
  });

})
```
",codebytere,platform/windows;bug :beetle:;7-1-x,2020-01-19T02:13:31Z,2020-01-22T07:38:40Z,RoderickQiu,RoderickQiu;codebytere,codebytere,,codebytere,,zcbenz,electron/electron#21159;
electron/electron,21837,"getProducts method crashes the app on OS X Yosemite ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.1.7
* **Operating System:**
  * macOS 10.10.5

### Expected Behavior
The `getProducts` method should not crash the app. Probably the method `canMakePayments()` should return `false` for old and unsupported mac os versions.

### Actual Behavior
Calling `remote.inAppPurchase.canMakePayments()` return `true` but `getProducts` method crashes the app without any error reports.

### Additional Information

<details>
<summary>Details</summary>
OS Version: Mac OS X 10.10.5 (14F27)
Report Version: 104

Crashed Thread: 6290

Application Specific Information:
Fatal Error: EXC_BAD_ACCESS / KERN_INVALID_ADDRESS

Thread 6290 Crashed:
0   libobjc.A.dylib                 0x7fff87bb80dd      objc_msgSend
1   StoreKit                        0x10b40c0a3         __47-[SKProductsRequest issueRequestForIdentifier:]_block_invoke_3
2   libdispatch.dylib               0x7fff8500a323      <unknown>
3   libdispatch.dylib               0x7fff85005c13      <unknown>
4   libdispatch.dylib               0x7fff85009365      <unknown>
5   libdispatch.dylib               0x7fff8500aecc      <unknown>
6   libdispatch.dylib               0x7fff850086b7      <unknown>
7   libdispatch.dylib               0x7fff85016fe4      <unknown>
8   libsystem_pthread.dylib         0x7fff8976aa9c      _pthread_wqthread
9   libsystem_pthread.dylib         0x7fff897683dc      start_wqthread
10  libdispatch.dylib               0x7fff85016f89      <unknown>

Thread 6275
0   Electron Framework              0x1050aeb00         v8::V8::MoveGlobalReference (api.cc:1037)
1   Electron Framework              0x1068b2563         base::internal::Invoker<T>::RunOnce (bind_internal.h:399)
2   Electron Framework              0x106937d4a         base::internal::FunctorTraits<T>::Invoke<T> (callback.h:97)
3   Electron Framework              0x106a34f3f         base::TaskAnnotator::RunTask (callback.h:97)
4   Electron Framework              0x106a4442a         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl (thread_controller_with_message_pump_impl.cc:368)
5   Electron Framework              0x106a44906         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork (thread_controller_with_message_pump_impl.cc:265)
6   Electron Framework              0x106aa3072         base::MessagePumpCFRunLoopBase::RunWork (message_pump_mac.mm:489)
7   Electron Framework              0x1069da909         base::mac::CallWithEHFrame
8   Electron Framework              0x106aa29de         base::MessagePumpCFRunLoopBase::RunWorkSource (message_pump_mac.mm:463)
9   CoreFoundation                  0x7fff8d766a00      __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__
10  CoreFoundation                  0x7fff8d758b8c      __CFRunLoopDoSources0
11  CoreFoundation                  0x7fff8d7581be      __CFRunLoopRun
12  CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
13  HIToolbox                       0x7fff897a356f      <unknown>
14  HIToolbox                       0x7fff897a32ea      <unknown>
15  HIToolbox                       0x7fff897a312b      <unknown>
16  AppKit                          0x7fff8bd928aa      _DPSNextEvent
17  AppKit                          0x7fff8bd91e57      -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]
18  AppKit                          0x7fff8bd87af2      -[NSApplication run]
19  Electron Framework              0x106aa386b         base::MessagePumpNSApplication::DoRun (message_pump_mac.mm:850)
20  Electron Framework              0x106aa23a7         base::MessagePumpCFRunLoopBase::Run (message_pump_mac.mm:186)
21  Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
22  Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
23  Electron Framework              0x105ea877a         content::BrowserMainLoop::MainMessageLoopRun (browser_main_loop.cc:1533)
24  Electron Framework              0x105ea85dc         content::BrowserMainLoop::RunMainMessageLoopParts (browser_main_loop.cc:1006)
25  Electron Framework              0x105ea9f61         content::BrowserMainRunnerImpl::Run (browser_main_runner_impl.cc:149)
26  Electron Framework              0x105ea55d5         content::BrowserMain (browser_main.cc:47)
27  Electron Framework              0x105d7a2b4         content::ContentMainRunnerImpl::RunServiceManager (content_main_runner_impl.cc:551)
28  Electron Framework              0x105d79ea0         content::ContentMainRunnerImpl::Run (content_main_runner_impl.cc:870)
29  Electron Framework              0x108112aaf         service_manager::Main (main.cc:422)
30  Electron Framework              0x1050072b3         content::ContentMain (content_main.cc:19)
31  Electron Framework              0x1046445d3         AtomMain (atom_library_main.mm:23)
32  Termius Beta                    0x10460ba10         <unknown>
33  libdyld.dylib                   0x7fff871d25c9      [inlined] <unknown>
34  libdyld.dylib                   0x7fff871d25c9      <unknown>

Thread 6289
0   libsystem_kernel.dylib          0x7fff940a3232      <unknown>
1   libdispatch.dylib               0x7fff85008a6a      <unknown>

Thread 6291
0   libsystem_kernel.dylib          0x7fff940a294a      <unknown>
1   libsystem_pthread.dylib         0x7fff897683dc      start_wqthread
2   libdispatch.dylib               0x7fff85016f89      <unknown>

Thread 6293
0   libsystem_kernel.dylib          0x7fff940a294a      <unknown>
1   libsystem_pthread.dylib         0x7fff897683dc      start_wqthread
2   libdispatch.dylib               0x7fff85016f89      <unknown>

Thread 6300
0   libsystem_kernel.dylib          0x7fff940a294a      <unknown>
1   libsystem_pthread.dylib         0x7fff897683dc      start_wqthread
2   libdispatch.dylib               0x7fff85016f89      <unknown>

Thread 6307
0   libsystem_kernel.dylib          0x7fff940a3232      <unknown>
1   Electron Framework              0x106a99ed5         base::MessagePumpKqueue::Run (message_pump_kqueue.cc:170)
2   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
3   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
4   Electron Framework              0x106a48da6         base::internal::ServiceThread::Run (thread.cc:242)
5   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
6   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
7   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
8   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
9   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6308
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a506e3         base::internal::WorkerThread::RunPooledWorker (worker_thread.cc:222)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6309
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a50653         base::internal::WorkerThread::RunBackgroundPooledWorker (worker_thread.cc:228)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6310
0   libsystem_kernel.dylib          0x7fff940a3232      <unknown>
1   Electron Framework              0x106a99ed5         base::MessagePumpKqueue::Run (message_pump_kqueue.cc:170)
2   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
3   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
4   Electron Framework              0x105eafa93         content::BrowserProcessSubThread::IOThreadRun (browser_process_sub_thread.cc:158)
5   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
6   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
7   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
8   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
9   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6311
0   libsystem_kernel.dylib          0x7fff940a321a      <unknown>
1   Electron Framework              0x109fbdba0         uv_run (core.c:368)
2   Electron Framework              0x109f392e5         node::WorkerThreadsTaskRunner::DelayedTaskScheduler::Run (node_platform.cc:90)
3   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
4   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
5   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6312
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109f393e7         node::TaskQueue<T>::BlockingPop (node_mutex.h:108)
3   Electron Framework              0x109f37197         node::(anonymous namespace)::PlatformWorkerThread (node_platform.cc:44)
4   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
5   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
6   libsystem_pthread.dylib         0x7fff897683ec      thread_start
7   Electron Framework              0x109f3701f         node::WorkerThreadsTaskRunner::WorkerThreadsTaskRunner (node_platform.cc:63)

Thread 6313
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109f393e7         node::TaskQueue<T>::BlockingPop (node_mutex.h:108)
3   Electron Framework              0x109f37197         node::(anonymous namespace)::PlatformWorkerThread (node_platform.cc:44)
4   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
5   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
6   libsystem_pthread.dylib         0x7fff897683ec      thread_start
7   Electron Framework              0x109f3701f         node::WorkerThreadsTaskRunner::WorkerThreadsTaskRunner (node_platform.cc:63)

Thread 6314
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109f393e7         node::TaskQueue<T>::BlockingPop (node_mutex.h:108)
3   Electron Framework              0x109f37197         node::(anonymous namespace)::PlatformWorkerThread (node_platform.cc:44)
4   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
5   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
6   libsystem_pthread.dylib         0x7fff897683ec      thread_start
7   Electron Framework              0x109f3701f         node::WorkerThreadsTaskRunner::WorkerThreadsTaskRunner (node_platform.cc:63)

Thread 6319
0   libsystem_kernel.dylib          0x7fff9409d51a      <unknown>
1   Electron Framework              0x109f82dd1         node::inspector::(anonymous namespace)::StartIoThreadMain (inspector_agent.cc:99)
2   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
3   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
4   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6328
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x10775338d         crashpad::MachMessageWithDeadline (mach_message.cc:112)
2   Electron Framework              0x1077535f8         crashpad::MachMessageServer::Run (mach_message_server.cc:104)
3   Electron Framework              0x10774f437         crashpad::(anonymous namespace)::HandlerStarter::RestartThreadMain (crashpad_client_mac.cc:405)
4   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
5   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
6   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6329
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109fb9b78         worker (threadpool.c:76)
3   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
4   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
5   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6330
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109fb9b78         worker (threadpool.c:76)
3   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
4   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
5   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6331
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109fb9b78         worker (threadpool.c:76)
3   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
4   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
5   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6332
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x109fc9438         uv_cond_wait (thread.c:760)
2   Electron Framework              0x109fb9b78         worker (threadpool.c:76)
3   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
4   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
5   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6333
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   CoreFoundation                  0x7fff8d758eb3      __CFRunLoopServiceMachPort
2   CoreFoundation                  0x7fff8d75837a      __CFRunLoopRun
3   CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
4   Foundation                      0x7fff87e4bb28      -[NSRunLoop(NSRunLoop) runMode:beforeDate:]
5   Electron Framework              0x106aa3580         base::MessagePumpNSRunLoop::DoRun (message_pump_mac.mm:767)
6   Electron Framework              0x106aa23a7         base::MessagePumpCFRunLoopBase::Run (message_pump_mac.mm:186)
7   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
8   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
9   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
10  Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
11  libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
12  libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
13  libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6334
0   libsystem_kernel.dylib          0x7fff940a3682      <unknown>
1   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
2   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
3   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
4   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6335
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   CoreFoundation                  0x7fff8d758eb3      __CFRunLoopServiceMachPort
2   CoreFoundation                  0x7fff8d75837a      __CFRunLoopRun
3   CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
4   Foundation                      0x7fff87e4bb28      -[NSRunLoop(NSRunLoop) runMode:beforeDate:]
5   Electron Framework              0x106aa3580         base::MessagePumpNSRunLoop::DoRun (message_pump_mac.mm:767)
6   Electron Framework              0x106aa23a7         base::MessagePumpCFRunLoopBase::Run (message_pump_mac.mm:186)
7   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
8   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
9   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
10  Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
11  libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
12  libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
13  libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6336
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a506e3         base::internal::WorkerThread::RunPooledWorker (worker_thread.cc:222)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6337
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a506e3         base::internal::WorkerThread::RunPooledWorker (worker_thread.cc:222)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6338
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a506e3         base::internal::WorkerThread::RunPooledWorker (worker_thread.cc:222)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6339
0   libsystem_kernel.dylib          0x7fff940a2136      <unknown>
1   Electron Framework              0x106a91204         base::ConditionVariable::Wait (condition_variable_posix.cc:75)
2   Electron Framework              0x107cf4727         cc::SingleThreadTaskGraphRunner::Run (single_thread_task_graph_runner.cc:126)
3   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
4   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
5   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
6   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6340
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a31dde         omitted (waitable_event_mac.cc:106)
3   Electron Framework              0x1069f8dd0         base::MessagePumpDefault::Run (message_pump_default.cc:55)
4   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
5   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
6   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
7   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
8   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
9   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
10  libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6342
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a50743         base::internal::WorkerThread::RunDedicatedWorker (worker_thread.cc:246)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6343
0   libsystem_kernel.dylib          0x7fff940a23fa      <unknown>
1   Electron Framework              0x1069b15de         atom::NodeBindings::EmbedThreadRunner (node_bindings.cc:460)
2   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
3   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
4   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6349
0   libsystem_kernel.dylib          0x7fff940a294a      <unknown>
1   libsystem_pthread.dylib         0x7fff897683dc      start_wqthread
2   libdispatch.dylib               0x7fff85016f89      <unknown>

Thread 6358
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a50a5f         base::internal::WorkerThread::RunWorker (worker_thread.cc:315)
4   Electron Framework              0x106a50653         base::internal::WorkerThread::RunBackgroundPooledWorker (worker_thread.cc:228)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6359
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   CoreFoundation                  0x7fff8d758eb3      __CFRunLoopServiceMachPort
2   CoreFoundation                  0x7fff8d75837a      __CFRunLoopRun
3   CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
4   Foundation                      0x7fff87e4bb28      -[NSRunLoop(NSRunLoop) runMode:beforeDate:]
5   Electron Framework              0x106aa3580         base::MessagePumpNSRunLoop::DoRun (message_pump_mac.mm:767)
6   Electron Framework              0x106aa23a7         base::MessagePumpCFRunLoopBase::Run (message_pump_mac.mm:186)
7   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
8   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
9   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
10  Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
11  libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
12  libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
13  libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6360
0   libsystem_kernel.dylib          0x7fff940a3232      <unknown>
1   Electron Framework              0x106a99ed5         base::MessagePumpKqueue::Run (message_pump_kqueue.cc:170)
2   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
3   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
4   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6382
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   CoreFoundation                  0x7fff8d758eb3      __CFRunLoopServiceMachPort
2   CoreFoundation                  0x7fff8d75837a      __CFRunLoopRun
3   CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
4   AppKit                          0x7fff8be5a56a      _NSEventThread
5   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
6   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
7   libsystem_pthread.dylib         0x7fff897683ec      thread_start
8   AppKit                          0x7fff8be5a4e1      -[NSSurface dealloc]

Thread 6396
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a507cb         base::internal::WorkerThread::RunWorker (worker_thread.cc:296)
4   Electron Framework              0x106a50683         base::internal::WorkerThread::RunBackgroundSharedWorker (worker_thread.cc:240)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6397
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   CoreFoundation                  0x7fff8d758eb3      __CFRunLoopServiceMachPort
2   CoreFoundation                  0x7fff8d75837a      __CFRunLoopRun
3   CoreFoundation                  0x7fff8d757bd7      CFRunLoopRunSpecific
4   Foundation                      0x7fff87e4bb28      -[NSRunLoop(NSRunLoop) runMode:beforeDate:]
5   Electron Framework              0x106aa3580         base::MessagePumpNSRunLoop::DoRun (message_pump_mac.mm:767)
6   Electron Framework              0x106aa23a7         base::MessagePumpCFRunLoopBase::Run (message_pump_mac.mm:186)
7   Electron Framework              0x106a44dd7         base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run (thread_controller_with_message_pump_impl.cc:466)
8   Electron Framework              0x106a16b36         base::RunLoop::RunWithTimeout (run_loop.cc:161)
9   Electron Framework              0x106a589b5         base::Thread::ThreadMain (thread.cc:312)
10  Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
11  libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
12  libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
13  libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6423
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a507cb         base::internal::WorkerThread::RunWorker (worker_thread.cc:296)
4   Electron Framework              0x106a506e3         base::internal::WorkerThread::RunPooledWorker (worker_thread.cc:222)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start

Thread 6430
0   libsystem_kernel.dylib          0x7fff9409d4de      <unknown>
1   Electron Framework              0x106a31f10         base::WaitableEvent::TimedWaitUntil (waitable_event_mac.cc:149)
2   Electron Framework              0x106a5041a         base::internal::WorkerThread::Delegate::WaitForWork
3   Electron Framework              0x106a507cb         base::internal::WorkerThread::RunWorker (worker_thread.cc:296)
4   Electron Framework              0x106a50713         base::internal::WorkerThread::RunSharedWorker (worker_thread.cc:234)
5   Electron Framework              0x106a9bc66         base::(anonymous namespace)::ThreadFunc (platform_thread_posix.cc:81)
6   libsystem_pthread.dylib         0x7fff8976b059      _pthread_body
7   libsystem_pthread.dylib         0x7fff8976afd6      _pthread_start
8   libsystem_pthread.dylib         0x7fff897683ec      thread_start



EOF
</details>",codebytere,platform/macOS;bug :beetle:;6-1-x,2020-01-20T04:32:14Z,2021-03-09T03:25:32Z,kirillgalushko,thomasdao;electron-triage;semireg,sofianguy,,codebytere,,electron-triage,
electron/electron,21881,"Chromedriver @rpath on electron 8 and higher does not include ffmpeg Chromedriver from electron 8 and higher has this error on start due to a bad rpath.

```
dyld: Library not loaded: @rpath/libffmpeg.dylib
  Referenced from: /Users/sattard/projects/electron/spectron/node_modules/electron-chromedriver/bin/chromedriver
  Reason: image not found
```

Adding the executable path to the rpath fixes it:
`install_name_tool -add_rpath @executable_path/. chromedriver`",erickzhao,platform/macOS;bug :beetle:;8-x-y,2020-01-23T23:45:09Z,2020-01-30T00:40:10Z,MarshallOfSound,,MarshallOfSound,,MarshallOfSound;erickzhao,,MarshallOfSound,
electron/electron,22004,"Provide Electron 7 pre-built binary for arm32v7 (e.g. raspberry pi 3 and 4) <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for a feature request that matches the one I want to file, without success.

### Problem Description

Electron 7 does not have pre-built binaries for arm32v7 e.g. raspberry pi 4 (with current raspbian which is still 32bit) and raspberry pi 3.

Dockerfile
```Dockerfile
FROM arm32v7/node

WORKDIR /foo
RUN npm init -y
RUN npm install electron@^7 --unsafe-perm
```

Throws error:

```
> electron@7.1.11 postinstall /foo/node_modules/electron
> node install.js

(node:38) UnhandledPromiseRejectionWarning: HTTPError: Response code 404 (Not Found)
```

However it works just fine with `arm64v8/node` because Electron does provide arm64 binaries.

Note for Electron 6 there exists arm32v7 binaries, so I have to resort using Electron 6 branch.",malept,platform/linux;bug :beetle:;8-x-y;7-1-x;9-x-y,2020-02-01T23:39:20Z,2020-02-11T23:30:44Z,Ciantic,malept;Ciantic,malept,,malept,,malept,
electron/electron,22027,"Cannot resize maximized window on Windows <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x ] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version: 7.1.11 && 8.0.0
* **Operating System: Windows 10 (1607)
* **Last Known Working Electron version:6.*

### Expected Behavior
The window will be resized.

### Actual Behavior
The window stays maximized.

### To Reproduce
await this.app.browserWindow.maximize();
await this.app.browserWindow.setBounds({
      x: 0,
      y: 0,
      width: 1920,
      height: 900,
 });

### Additional Information
If I call unmaximzed after maximized, it can resize it. I can use that as a workaround. On Mac OS it works correctly.
",mlaurencin,platform/windows;bug :beetle:;8-x-y;7-1-x,2020-02-04T15:16:18Z,2021-03-10T03:33:20Z,getupp,pushkin-;somebeaver;zilti;mlaurencin;groundwater;electron-triage,sofianguy,,mlaurencin,,electron-triage,
electron/electron,22069,"Crash on web worker close with node integration ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
7.1.2
* **Operating System:**
Mac OS 10.15.2
* **Last Known Working Electron version:**
Unknown, bug has existed since at least 4.0

### Expected Behavior
Web workers with node integration should not crash on shutdown.

### Actual Behavior
Web workers with node integration occasionally crash on shutdown.

--




### To Reproduce
I am sorry, I do not have a repro because this is definitely a timing issue and is difficult to track down.
### Additional Information
I would tell you at least what code is involved in the crash, but the library that is the culprit is rather large, we use Monaco Editor, which is a subset of the VScode codebase. When it shuts down webworkers, we occasionally run into this crash.

It looks like there was a similar issue opened https://github.com/electron/electron/issues/11243, but this has been closed and whatever the actual cause of this segfault is still out there, haunting us.

Stack trace, crashes with EXC_BAD_ACCESS / KERN_INVALID_ADDRESS:
```json
{
  ""function"": ""uv_close"",
  ""function_offset"": ""0xb7"",
  ""module_offset"": ""0x59fa5c7"",
  ""frame"": 0,
  ""module"": ""Electron Framework"",
  ""registers"": {
    ""r14"": ""0x0000000000000000"",
    ""r15"": ""0x000000010e29b550"",
    ""r12"": ""0x00007f8718515640"",
    ""r13"": ""0x000070001c9409b0"",
    ""r10"": ""0x000000000000002c"",
    ""r11"": ""0x0000000000000206"",
    ""rsp"": ""0x000070001c940990"",
    ""rbx"": ""0x00007f8717bdda18"",
    ""r8"": ""0x000000000001f60b"",
    ""r9"": ""0x0000000000000000"",
    ""rip"": ""0x0000000113b585c7"",
    ""rbp"": ""0x000070001c9409a0"",
    ""rdx"": ""0x0000000000000000"",
    ""rcx"": ""0x000070001c9409b0"",
    ""rdi"": ""0x00007f8717bdda18"",
    ""rax"": ""0x000000000000000b"",
    ""rsi"": ""0x0000000000000000""
  },
  ""file"": ""/Users/distiller/project/src/out/Default/../../third_party/electron_node/deps/uv/src/unix/core.c"",
  ""offset"": ""0x113b585c7"",
  ""line"": 217,
  ""trust"": ""context""
},
{
  ""function"": ""uv_walk"",
  ""function_offset"": ""0xaf"",
  ""module_offset"": ""0x59f971f"",
  ""frame"": 1,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/../../third_party/electron_node/deps/uv/src/uv-common.c"",
  ""offset"": ""0x113b5771f"",
  ""line"": 456,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""electron::NodeBindings::~NodeBindings()"",
  ""function_offset"": ""0x7c"",
  ""module_offset"": ""0x13baec"",
  ""frame"": 2,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/../../electron/shell/common/node_bindings.cc"",
  ""offset"": ""0x10e299aec"",
  ""line"": 104,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""electron::NodeBindingsMac::~NodeBindingsMac()"",
  ""function_offset"": ""0xd"",
  ""module_offset"": ""0x13d8ed"",
  ""frame"": 3,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/../../electron/shell/common/node_bindings_mac.cc"",
  ""offset"": ""0x10e29b8ed"",
  ""line"": 20,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""electron::WebWorkerObserver::ContextWillDestroy(v8::Local<v8::Context>)"",
  ""function_offset"": ""0xcb"",
  ""module_offset"": ""0x1572bb"",
  ""frame"": 4,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/../../electron/shell/renderer/web_worker_observer.cc"",
  ""offset"": ""0x10e2b52bb"",
  ""line"": 38,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""blink::WorkerThread::PrepareForShutdownOnWorkerThread()"",
  ""function_offset"": ""0xc7"",
  ""module_offset"": ""0x4c91b27"",
  ""frame"": 5,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/./../../third_party/blink/renderer/core/workers/worker_thread.cc"",
  ""offset"": ""0x112defb27"",
  ""line"": 668,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""base::TaskAnnotator::RunTask(char const*, base::PendingTask*)"",
  ""function_offset"": ""0x151"",
  ""module_offset"": ""0x2361141"",
  ""frame"": 6,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/../../base/callback.h"",
  ""offset"": ""0x1104bf141"",
  ""line"": 98,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*)"",
  ""function_offset"": ""0x193"",
  ""module_offset"": ""0x23710d3"",
  ""frame"": 7,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc"",
  ""offset"": ""0x1104cf0d3"",
  ""line"": 365,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork()"",
  ""function_offset"": ""0x46"",
  ""module_offset"": ""0x2370db6"",
  ""frame"": 8,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc"",
  ""offset"": ""0x1104cedb6"",
  ""line"": 219,
  ""trust"": ""frame_pointer""
},
{
  ""function"": ""base::MessagePumpDefault::Run(base::MessagePump::Delegate*)"",
  ""function_offset"": ""0x88"",
  ""module_offset"": ""0x2326d88"",
  ""frame"": 9,
  ""module"": ""Electron Framework"",
  ""file"": ""/Users/distiller/project/src/out/Default/./../../base/message_loop/message_pump_default.cc"",
  ""offset"": ""0x110484d88"",
  ""line"": 39,
  ""trust"": ""frame_pointer""
}
```
",codebytere,platform/macOS;bug :beetle:;7-1-x,2020-02-06T16:20:59Z,2020-07-08T18:00:44Z,implausible,kalbert312;LightGlobal;endymonium;codebytere;implausible,sofianguy,,codebytere,,codebytere,
electron/electron,22119,"Renderer Node fs API stops working on page reload when allowRendererProcessReuse is true <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0
* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->Unknown

When setting `app.allowRendererProcessReuse = true` and after reloading the renderer (`Ctrl+R` in developer console), Node `fs` APIs would randomly stop working. Specifically, the callbacks are never called, or if you're using `fs.promises`, the promises are never resolved.

An interesting observation is: when you reload again, for a brief moment before the page is refreshed, the previous `fs` calls are magically unblocked. This can be observed by `console.log` lines suddenly printing the moment you hit `Ctrl+R` which disappears quickly as the whole page reloads.

Possibly related: https://github.com/electron/electron/issues/19554 This issue sounds like the opposite of what's happening here.

Also note: issue does not present itself when `app.allowRendererProcessReuse = false`


### Expected Behavior
From the repro steps, expecting to see local files printed in the console:
```
...
renderer.js:8 Reading file main.js
renderer.js:8 Reading file package-lock.json
renderer.js:8 Reading file package.json
renderer.js:8 Reading file preload.js
renderer.js:8 Reading file README.md
renderer.js:8 Reading file renderer.js
renderer.js:14 done
```

### Actual Behavior
List is printed the first time the app loads. Hit Ctrl+R and observe only a few lines printed, or none at all. Hit Ctrl+R again and observe more lines printed for a split second before renderer reloads.

### To Reproduce

Clone https://github.com/electron/electron-quick-start

rendereer.js
```
(async () => {
	const fs = require('fs').promises;

	for (let i = 0; i < 10; i++) {
		let list = await fs.readdir('.', {withFileTypes: true});
		for (let file of list) {
			if (file.isFile()) {
				console.log('Reading file', file.name);
				await fs.readFile(file.name, 'utf-8');
			}
		}
	}

	console.log('done');
})();
```

main.js
```
const {app, BrowserWindow} = require('electron');

function createWindow() {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true
    }
  });

  win.loadFile('index.html');
  win.webContents.openDevTools();
}

app.whenReady().then(createWindow);

app.allowRendererProcessReuse = true;
app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});
```


### Screenshots
First boot:
![image](https://user-images.githubusercontent.com/609710/74136094-80cb5c00-4bbb-11ea-92fd-c49b87b3a9f3.png)
On reload:
![image](https://user-images.githubusercontent.com/609710/74136317-cd169c00-4bbb-11ea-8e81-caf0e967bbd9.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,bug :beetle:;platform/all;9-x-y;10-x-y;11-x-y,2020-02-10T09:19:38Z,2020-10-13T16:19:46Z,lishid,OfficerHalf;Seblor;pushkin-;aabuhijleh;compeek;talhaguy;janakg;lishid;sboys3;ffflorian;ggreco;zhepoch;codebytere;remss;KishanBagaria;obsius;JontyMC;Hectate;afloras;mahhov,sofianguy,,,,codebytere,
electron/electron,22120,"Media internals broken in electron 8 ### Preflight Checklist
* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0
* **Operating System:**
  * Ubuntu 18.04 x64 
* **Last Known Working Electron version:**
  * 7.1.11

### Expected Behavior
Loading chrome://media-internals should load the chrome media internals page

### Actual Behavior
Blank page. In chrome 80 there's also the option to show it in the devtools. If I set the correct flags I can see the 'Media' tab option, but it also gives me a blank page. So neither way works.

### To Reproduce
Load `chrome://media-internals`",MarshallOfSound,bug :beetle:;platform/all;8-x-y;9-x-y,2020-02-10T12:57:10Z,2021-03-10T03:32:15Z,sebakerckhof,erickzhao;jdwalker;sarumjanuch;kubaau;eengoron;mashafomasha;electron-triage;danielmain,erickzhao;sofianguy,erickzhao,sofianguy,,electron-triage,
electron/electron,22144,"mediaDevices.enumerateDevices returns different deviceIds on every reload 

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * Tested with 8.0.0 and v9.0.0-beta.1
* **Operating System:**
  * macOS 10.15.3 (19D76)
* **Last Known Working Electron version:**
  * 7.1.12

### Expected Behavior

`navigator.mediaDevices.enumerateDevices()` should return a list of MediaDevices with a `label` and a `deviceId` property. The `deviceId` property should stay the same across reloads and restarts.

### Actual Behavior
The `deviceId` property changes with every reload/restart.

### To Reproduce
Simply execute `navigator.mediaDevices.enumerateDevices()` in the renderer process and compare the ids of the media devices to a different execution.

See this fork for an example:
https://github.com/codedrift/electron-quick-start

```sh
$ git clone https://github.com/codedrift/electron-quick-start -b media-device-ids
$ npm install
$ npm start || electron .
```

### Additional Information
It seems to work fine in a regular Chrome 80 browser. 
",MarshallOfSound,platform/windows;platform/macOS;bug :beetle:;status/confirmed;8-x-y;9-x-y,2020-02-11T13:16:25Z,2020-02-27T00:03:56Z,codedrift,erickzhao;lyswhut;koenoe,erickzhao;sofianguy,,erickzhao,,MarshallOfSound,
electron/electron,22178,"PDF download button doesn't do anything When viewing a PDF, clicking the ""download"" button has no effect. It should trigger a download (including the `""will-download""` event and associated machinery).",codebytere,bug :beetle:;platform/all;component/pdf-viewer,2020-02-13T01:37:07Z,2020-08-17T15:25:21Z,nornagon,aaronsarnat;agata;vishnu0320,nornagon;codebytere,,codebytere,,codebytere,
electron/electron,22242,"webRequest onBeforeSendHeaders + onHeadersReceived CORS net::ERR_FAILED error <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** v9.0.0-beta.2, 10.0.0-nightly.20200216
* **Operating System:** Linux
* **Last Known Working Electron version:** 8.0.1

### Expected Behavior
The following text gets printed on screen on ""Send cross-domain XHR request"" button click:
```
{""status"":422,""statusText"":""Unprocessable Entity"",""responseText"":""{\""Code\"":10080,\""Error\"":\""some-user-name@protonmail.ch does not exist. Did you mean SomeUsername@protonmail.com?\"",\""ErrorDescription\"":\""\"",\""Details\"":{}}""}
```
![ok](https://user-images.githubusercontent.com/1560781/74688785-cdc9b680-51e9-11ea-9c43-3f06fadee40b.png)

### Actual Behavior
The following text gets printed on screen on ""Send cross-domain XHR request"" button click:
```
{""status"":0,""statusText"":"""",""responseText"":""EMPTY""}
XMLHttpRequest error
```
![error](https://user-images.githubusercontent.com/1560781/74688794-d1f5d400-51e9-11ea-93c3-b8a4e427572f.png)

### To Reproduce

https://github.com/vladimiry-playground/electron-quick-start-cors-issue2

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
",zcbenz,platform/linux;bug :beetle:;9-x-y,2020-02-17T21:58:05Z,2020-03-02T01:23:44Z,vladimiry,samuelmaddock;vladimiry;purplesmoke05,electron-triage,,sofianguy,,zcbenz,
electron/electron,22267,"Null exception for ResizeObserver loop limit exceeded <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 7.1.11
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> macOS 10.15.2
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

When there is a potential infinite loop in resize observer, chromium will stop the listener and emit `ResizeObserver loop limit exceeded` error message. However it doesn't send an Error object

![image](https://user-images.githubusercontent.com/876920/74782919-516ebc00-5259-11ea-9036-6134aff64728.png)

It provides information like message, filename, line number, column number, but error is `null`.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",deepak1556,bug :beetle:;platform/all;8-x-y;7-1-x;9-x-y,2020-02-18T22:17:28Z,2021-03-09T03:51:05Z,rebornix,deepak1556;electron-triage,electron-triage;deepak1556,deepak1556,deepak1556,,electron-triage,
electron/electron,22370,"webRequest API stopped working with file:// urls since 7.0.0 (and up to 9.0.0-beta.3 at least) ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.0.0
  * 7.1.13
  * 8.0.1
  * 8.0.2
  * 9.0.0-beta.2
  * 9.0.0-beta.3
* **Operating System:**
  * `Linux xps 5.5.4-arch1-1 #1 SMP PREEMPT Sat, 15 Feb 2020 00:36:29 +0000 x86_64 GNU/Linux`, Arch Linux current
* **Last Known Working Electron version:**
  * 6.1.8

### Expected Behavior
E.g. how 6.x behaves: `onBeforeRequest` callback gets fired before requests are made.

Note: `touch /tmp/1.html` to get `onCompleted`, otherwise check `onErrorOccured`.

```
Electron 6.1.8
onBeforeRequest: file:///tmp/1.html
onCompleted: file:///tmp/1.html
Load finished!
```

See code to reproduce below.

### Actual Behavior
#### With `file:///tmp/1.html` (does not work):

```
Electron 7.0.0
Load finished!
```

```
Electron 7.1.13
Load finished!
```

```
Electron 8.0.2
Load finished!
```

```
Electron 9.0.0-beta.3
Load finished!
```

#### With `https://example.com/` (works):

```
Electron 9.0.0-beta.3
onBeforeRequest: https://example.com/
onCompleted: https://example.com/
Load finished!
```

```
Electron 8.0.2
onBeforeRequest: https://example.com/
onCompleted: https://example.com/
Load finished!
```

```
Electron 7.0.0
onBeforeRequest: https://example.com/
onCompleted: https://example.com/
Load finished!
```

### To Reproduce

```js
const { BrowserWindow, app } = require('electron')

app.on('ready', () => {
  const window = new BrowserWindow({})
  console.log(`Electron ${process.versions.electron}`)
  window.webContents.session.webRequest.onBeforeRequest((details, callback) => {
    console.log(`onBeforeRequest: ${details.url}`)
    callback({})
  })
  window.webContents.session.webRequest.onCompleted((details) => {
    console.log(`onCompleted: ${details.url}`)
  })
  window.webContents.session.webRequest.onErrorOccurred((details) => {
    console.log(`onErrorOccured: ${details.url}`)
  })
  window.webContents.loadURL('file:///tmp/1.html') // compare with https://example.com/
  window.webContents.on('did-finish-load', () => {
    console.log('Load finished!')
  })
  window.show()
})
```

### Additional Information
* Documented to work with `file:` urls: https://www.electronjs.org/docs/api/web-request#webrequestonbeforerequestfilter-listener
* Specifying filters manually doesn't seem to help
* https://github.com/electron/electron/issues/21308 might be related
* Looks like a regression to me.",zcbenz,platform/linux;bug :beetle:;8-x-y;7-1-x;9-x-y,2020-02-25T05:02:46Z,2020-04-01T07:38:41Z,ChALkeR,ChALkeR;pascalkania,electron-triage,,zcbenz,,zcbenz,
electron/electron,22393,"Frameless minimum sized window is not restored to previous size after minimize and restore ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.1.10 - 9.0.0-beta.3 (and presumably later versions until this bug is fixed)
* **Operating System:**
  * Windows 10 pro (1909)
* **Last Known Working Electron version:**
  * 7.1.9

### Preconditions

* Window is frameless
* Window has minimum size
* Window size is minimum size

### Expected behavior

* Window is minimized
* Window is restored
* Window has the same size as before the minimization

### Actual behavior

* Window is minimized
* Window is restored
* Window is slightly higher and wider than before the minimization

### To Reproduce

```
git clone -b frameless-minsize-minimize-restore-bug https://github.com/christian-judt/electron-quick-start.git
cd electron-quick-start
npm install
npm start
```

### Additional Information

* A similar problem with ""maximize-unmaximize"" instead of ""minimize-restore"" has appeared in Electron Version 7.1.2. (see #22440)

### Maybe related issues

* Windows: Restore (after minimize) to wrong window size #7951
* Frameless minimum sized window is not restored to previous size after maximize and unmaximize #13533
* maximize, minimize, restore incorrect size #15702
* Electron 6 - restore after minimize has wrong window size #19816",zcbenz,platform/windows;bug :beetle:;8-x-y;7-1-x;9-x-y;10-x-y,2020-02-26T11:15:34Z,2020-08-19T19:34:16Z,christian-judt,talon266;orangeChu;pejman1,electron-triage;deepak1556,,sofianguy;zcbenz,deepak1556,codebytere,
electron/electron,22394,"Modals are not rendered correctly in Electron 9.x ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.0-beta.3
* **Operating System:**
  * macOS 10.15.3
* **Last Known Working Electron version:**
  * 8.x

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Modals should not have rounded corners like in the screenshot below and look like they are attached to the parent window

<img width=""912"" alt=""Schermafbeelding 2020-02-26 om 12 05 14"" src=""https://user-images.githubusercontent.com/30040390/75340076-0d4f6d00-5892-11ea-8c39-ffe538dc435f.png"">

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Modals look weird and are not attached to the parent

<img width=""912"" alt=""Schermafbeelding 2020-02-26 om 12 04 18"" src=""https://user-images.githubusercontent.com/30040390/75340010-ebee8100-5891-11ea-85d3-e1b5dad308d2.png"">

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

My Example code below:

```js
const modal = new BrowserWindow({
	width: 450,
	height: 250,
	useContentSize: true,
	vibrancy: process.platform === ""darwin"" ? ""popover"" : undefined,
	resizable: false,
	parent: parentWindow,
	skipTaskbar: false,
	modal: (!parentWindow) ? false : true,
	show: false,
	acceptFirstMouse: true,
	titleBarStyle: 'hidden',
	minimizable: false,
	maximizable: false,
	webPreferences: {
		nodeIntegration: true,
		enableRemoteModule: true
	}
});
```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
See above

### Additional Information
`dialog.showMessageBox` works as expected.
",codebytere,platform/macOS;bug :beetle:;9-x-y,2020-02-26T11:25:11Z,2020-04-07T18:47:30Z,Arjan-Zuidema,codebytere,electron-triage,,codebytere,,codebytere,
electron/electron,22440,"Frameless minimum sized window is not restored to previous size after maximize and unmaximize ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 7.1.2 - 9.0.0-beta.3 (and presumably later versions until this bug is fixed)
* **Operating System:**
  * Windows 10 pro (1909)
* **Last Known Working Electron version:**
  * 7.1.1

### Preconditions

* Window is frameless
* Window has minimum size
* Window size is minimum size

### Expected behavior

* Window is maximized
* Window is unmaximized
* Window has the same size as before the maximization

### Actual Behavior
* Window is maximized
* Window is unmaximized
* Window is slightly higher and wider than before the maximization

### To Reproduce

```
git clone -b frameless-minsize-maximize-unmaximize-bug https://github.com/christian-judt/electron-quick-start.git
cd electron-quick-start
npm install
npm start
```

### Additional Information

* This seems to be a reappearing problem. (for the last occurence see #13533)
* A similar problem with ""minimize-restore"" instead of ""maximize-unmaximize"" has appeared in Electron Version 7.1.10. (see #22393)

### Other maybe related issues

* [Windows] Frameless window size increase on a maximize, unmaximize sequence #2498
* Windows: Restore (after minimize) to wrong window size #7951
* maximize, minimize, restore incorrect size #15702
* Electron 6 - restore after minimize has wrong window size #19816",zcbenz,platform/windows;bug :beetle:;8-x-y;7-1-x;9-x-y,2020-02-28T10:40:14Z,2020-08-24T20:32:09Z,christian-judt,aleksey-hoffman;Pettor,sofianguy,,zcbenz,,codebytere,
electron/electron,22597,"The navigator.connection 'onchange' event should be triggered in a renderer process ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 8.1.0, 9.0.0-beta.6
* **Operating System:** macOS 10.15.3

### Expected Behavior
The `navigator.connection` API should trigger the `onchange` event.

### Actual Behavior
When accessing the `navigator.connection` object from within a renderer, the 'onchange' event is never called. This is available and working in Chromium version 80.0.3987.137.

### Additional Information
Other related issues / PR's:
https://github.com/electron/electron/issues/13074
https://github.com/electron/electron/issues/11875
https://github.com/electron/electron/pull/21004

",zcbenz,platform/macOS;bug :beetle:;blocked/upstream 閴;8-x-y;9-x-y,2020-03-08T11:22:20Z,2020-11-16T18:42:15Z,monohandle,DariusNorv;zcbenz;ahallicks;nornagon,sofianguy;nornagon,,zcbenz,,nornagon,
electron/electron,22615,"Adding any Object prototype throws an error * **Electron Version:**
  v8.1.0
* **Operating System:**
  macOS 10.15.3
* **Last Known Working Electron version:**
  N/A

### Expected Behavior
I expect to be able to add an Object prototype without Electron throwing an error.

### Actual Behavior
Electron throws an error on startup, then otherwise seems to work fine.

### To Reproduce
Electron fiddle: https://gist.github.com/d3238b39f2b33493e0d7dbfc4c3b6afe

### Screenshots
A screenshot by another user already exists here (different code than in the Fiddle, though) on this old Stackoverflow Question: https://stackoverflow.com/questions/54179169/object-prototype-break-electron
",MarshallOfSound,bug :beetle:,2020-03-09T21:23:51Z,2020-03-17T20:17:56Z,somebeaver,MarshallOfSound,MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,22646,"auto re-enable maximizable even if set to false ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, with only a solution not working https://github.com/electron/electron/issues/11756.

### Issue Details

* **Electron Version:**
  * 7.1.14
* **Operating System:**
  * macOS 10.15.2

### Expected Behavior
`maximizable` property should always work.

### Actual Behavior
`maximizable` property will be ignored when some other properties are changed to the window or an alert is shown.

### To Reproduce

1.

From https://github.com/electron/electron/issues/11756.
> If i create a window like this:
> 
> ```javascript
> win = new BrowserWindow({ title: ""My App"", backgroundColor:'#FF0000', maximizable:false, width: 400, height: 200, resizable: false})
> ```
> 
> The window maximize button get disabled as wanted, but if we active the alert function inside
> 
> the index.html file by putting `<script> alert(""test""); </script>` inside the file then the maximize button get enabled again and we can use it again.

2.
Also, for other kinds of code, like
```javascript
var mainWindow = new BrowserWindow({
    width: 800,
    height: 600,
    maximizable: false,
    webPreferences: {
      nodeIntegration: true
    }
  })

nativeTheme.on('updated', function theThemeHasChanged() {
    if (nativeTheme.shouldUseDarkColors) {
      if (mainWindow != null) {
        mainWindow.setBackgroundColor('#393939');
      }
    } else {
      if (mainWindow != null) {
        mainWindow.setBackgroundColor('#fefefe');
      }
    }
  })
```
can also produce this problem.
(how to: set dark mode / light mode, and then maximizable property is ignored.)

### Additional Information

These are *extremely old* resources that I found:

- https://github.com/electron/electron/pull/6736
- https://github.com/electron/electron/pull/18425

",codebytere,platform/macOS;bug :beetle:;8-x-y;7-1-x;9-x-y,2020-03-11T03:12:34Z,2020-03-17T17:58:58Z,RoderickQiu,codebytere;RoderickQiu,sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,22720,"webview's DOM operations do not happen when the webview is out of the viewport <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.1.1 / 7.x.x
* **Operating System:**
  * macOS  / Windows 10  

### Expected Behavior
Whenever a webview is loaded but not inside the viewport, DOM operations triggered inside the webview should work as expected.
We have a list of webviews in a scrollable container. The DOM operation we are performing is `window.scrollTo()`. The operation is triggered using IPC set up in the preload script.

### Actual Behavior
The IPC event is received immediately by all the webivews, but DOM operations performed in the handler do not get executed for the webviews that are out of the viewport. They all are executed together when those webviews are brought into the viewport.


### Additional Information
I noticed the same thing happening with `webview.capturePage()`
The promise returned by the `capturePage()` function does not resolve until the webview is brought into the viewport by scrolling down. 



",codebytere,platform/windows;platform/macOS;component/webview;bug :beetle:;8-x-y;7-1-x,2020-03-17T13:35:11Z,2021-03-09T03:50:08Z,praneetrohida,codebytere;praneetrohida;electron-triage;kitze,codebytere,,codebytere,,electron-triage,
electron/electron,22744,"Undo/Redo has no effect inside <webview> Calling Cmd+Z (webContents.undo()) and Shift+Cmd+Z (webContents.redo()) have no effect inside a <webview> tag

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * Electron v8.1.1
* **Operating System:**
  * macOS 10.15

### Expected Behavior
Calling Cmd+Z (webContents.undo()) and Shift+Cmd+Z (webContents.redo()) inside a <webview> tag will do the functionality that are defined for them i.e, undo and redo. Also by calling them from menu bar inside edit.

### Actual Behavior
Calling undo and redo inside <webview> has no effect. It gives no response. I remains unchanged after calling undo/redo it.

### To Reproduce
I use Electron fiddler to reproduce this issue and the gist link is https://gist.github.com/958fea4350204faf6778121b97af90f7
(no effect of undo and redo inside google search bar)


### Screenshots
![ezgif com-video-to-gif-2](https://user-images.githubusercontent.com/25535045/76966288-bea26980-694b-11ea-84ed-215097205276.gif)

",codebytere,platform/macOS;component/webview;bug :beetle:;8-x-y;merged/9-x-y,2020-03-18T13:39:07Z,2020-04-02T17:05:06Z,adityamudgil2505,andersk;codebytere;pyrocto,codebytere,,codebytere,,codebytere,
electron/electron,22799,"Electron failed to load c++ symbols when using node addon with napi and cmake <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
  * tested on latest v10.0.0-nightly.20200317 / v9.0.0-beta.9 / v8.1.1
* **Operating System:**
  <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
  * Windows 10 (1909)
* **Last Known Working Electron version:**
  <!-- (if applicable) e.g. 3.1.0 -->
  * not known.
* **Node version the c++ addon(N-api) build against:**
  * v12.16.1
* **MSVC version to build the addon:**
  * Visual Studio 2019 with v140 compiler(VS 2015). Tried v142, too.

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
The C++ addon(using N-api) loaded by electron should work properly.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Crash when c++ addon using some c++ std objects(e.g. std::stringstream). VS debugger shows it is crashed on the RaiseException line in MSVC's delayhlp.cpp since the c++ symbols cannot be found(the pfnRet remains NULL after the last resort in __delayLoadHelper2 function).
BTW. using node.exe instead of electron.exe works just fine.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->
(forgiving me for not pushed to a github repo.)
a minimal c++ addon project using cmake-js and N-api which cause the electron to crash(built with `cmake-js -t v140 -a x64`, also tried with just `cmake-js` which is using default v142):

```cmake
# CMakeLists.txt
cmake_minimum_required(VERSION 2.8.2)

project(sstream_failure)

include_directories(${CMAKE_JS_INC})
add_library(${PROJECT_NAME} SHARED
  sstream_test.cc
  ${CMAKE_JS_SRC})
  # win_delay_load_hook.cc)  # I found a temporary fix later by adding an extra hook.
set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX """" SUFFIX "".node"")
target_compile_definitions(${PROJECT_NAME} PRIVATE NAPI_CPP_EXCEPTIONS NODE_ADDON_API_DISABLE_DEPRECATED)
target_link_libraries(${PROJECT_NAME} ${CMAKE_JS_LIB})

# Include N-API wrappers
execute_process(
  COMMAND node -p ""require('node-addon-api').include""
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE NODE_ADDON_API_DIR)
string(REPLACE ""\n"" """" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})
string(REPLACE ""\"""" """" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})
target_include_directories(${PROJECT_NAME} PRIVATE ${NODE_ADDON_API_DIR})

message(""NODE_RUNTIME:"" ${NODE_RUNTIME})
message(""NODE_RUNTIMEVERSION:"" ${NODE_RUNTIMEVERSION})
message(""NODE_ARCH:"" ${NODE_ARCH})
```

```c++
// sstream_test.cc
#include <sstream>
#include ""napi.h""

Napi::Number TestSStream(const Napi::CallbackInfo& info) {
  std::string name = info[0].As<Napi::String>();
  Napi::Function config_cb = info[1].As<Napi::Function>();
  Napi::Env env = info.Env();
  try {
    Napi::Object json = env.Global().Get(""JSON"").As<Napi::Object>();
    Napi::Function parse = json.Get(""parse"").As<Napi::Function>();
    std::stringstream ss;  // crashes on here.
    ss << ""{\"""" << name << ""\"": \""sstream initialized\""}"";
    Napi::Object result = parse.Call(json, { Napi::String::New(env, ss.str()) }).As<Napi::Object>();
    config_cb.Call(env.Global(), { result });
    return Napi::Number::New(env, 0);
  } catch(const std::exception& e) {
    Napi::TypeError::New(env, std::string(""cli error: "") + e.what()).ThrowAsJavaScriptException();
    return Napi::Number::New(env, (double) 1);
  }
}

Napi::Object Init(Napi::Env env, Napi::Object exports) {
  exports.Set(Napi::String::New(env, ""testSStream""), Napi::Function::New(env, TestSStream));
  return exports;
}

NODE_API_MODULE(sstream_failure, Init)
```

and the main.js to call the addon:
```js
var addon = require('/path/to/sstream_failure.node');
addon.testSStream(""Test"", (config_json_str) => { console.log(config_json_str); });
```

### Additional Information
<!-- Add any other context about the problem here. -->
Via VS debugger I found that it is because the c++ symbols(std::basic_io, std::streambuf, etc) in my addon could not be found during std::stringstream object initialization(since load_exe_hook replaces the node.exe with electron.exe). Then go through the __delayLoadHelper2 function in delayhlp.cpp(which called the load_exe_hook), I found that in the last effort, it would try load_failure_hook() to get the symbol address, so the temporary solution I found here is as follows:
I copied the default win_delay_load_hook.cc and add following hook:
```c++
// load_exe_hook stuff ...

static FARPROC WINAPI load_failure_hook(unsigned int event, DelayLoadInfo* info) {
	if (event == dliFailGetProc) {
#ifdef DEBUG
		HMODULE m = GetModuleHandle(""msvcp140d.dll"");
#else
		HMODULE m = GetModuleHandle(""msvcp140.dll"");
#endif // DEBUG
		return m != NULL ? GetProcAddress(m, info->dlp.szProcName) : NULL;
	}
}

decltype(__pfnDliFailureHook2) __pfnDliFailureHook2 = load_failure_hook;
```
Then replace the original ${CMAKE_JS_SRC} by the new win_delay_load_hook.cc file in CMakeLists.txt, and it is now runs well as expected.

I also found this issue may relate to #14617 ?
",zcbenz,platform/windows;bug :beetle:;8-x-y;9-x-y;10-x-y;stale,2020-03-22T14:29:12Z,2022-11-08T02:16:33Z,forif,MarshallOfSound;galenelias;zcbenz;forif;mastergberry;lilong7676;ohanar,sofianguy;zcbenz,sofianguy,zcbenz,,,
electron/electron,22853,"electron.screen gets cached to a bad version if error is thrown on its initialization ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
8.0.0
* **Operating System:**
Only tested on mac 10.14.16 (Mojave)
* **Last Known Working Electron version:**
5.0.0   (not a regression range, this is the version I was using before)


### Expected Behavior
electron.screen can be used

### Actual Behavior
electron.screen can't be used if it was attempted to use before app ready event.

### To Reproduce
Details: it looks like that electron.screen is a lazy getter that gets badly cached if its initialization throws.
I had an `electron.screen` usage that threw the following error:

> ""The 'screen' module can't be used before the app 'ready' event""

That's all fine and expected. However, a later usage of any of the APIs from `electron.screen`, for example `electron.screen.getAllDisplays()`, throws the following exception:

> callback can only be called for once

which, given the weird phrasing unrelated to the issue at hand, I believe is not intentional",MarshallOfSound,platform/macOS;bug :beetle:;8-x-y,2020-03-26T21:02:41Z,2020-03-31T21:49:16Z,felipc,codebytere,codebytere,,MarshallOfSound,,MarshallOfSound,
electron/electron,22951,"Mac OS - HTTP authentication - NTLMv2 authentication not working <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 6.1.9, 7.2.1, 8.2.0, 9.0.X
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * Never

### Expected Behavior
1. When authenticating via HTTP authentication and Proxy/Server only allows NTLMv2, authentication should work.
2. When authenticating via HTTP authentication and Proxy/Server negotiates protocol and allows NTLMv1 and NTLMv2, Electron should always use NTLMv2.

### Actual Behavior
1. When authenticating via HTTP and the Proxy/Server only allows NTLMv2 and 'login' event is triggered in Electron and **Password/Username is entered correctly**, authentication does not work. Windows Event Log Error Code 0xc000006d / Substatus 0xc000006a (https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625)
2. When authenticating via HTTP authentication and Proxy/Server negotiates protocol, Electron always uses NTLMv1.

### To Reproduce
1. Configure all Domain Controllers for Windows server to only allow NTLMv2
2. Try to authenticate with correct credentials via Electron 'login'-Event
-> 'login'-Event in Electron is triggered again and the described Error Codes can be seen in Windows Event Log

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
![image](https://user-images.githubusercontent.com/6893212/78341915-be83aa00-7598-11ea-929b-836cca0097a5.png)
![image](https://user-images.githubusercontent.com/6893212/78341931-c4798b00-7598-11ea-8c8e-c44d85b41ff6.png)


### Additional Information
* This issue #17111 states, that Chrome should use NTLMv2 per default since Chromium 65
* NTLMv2 in Electron works on Windows 10 Version 1903 (OS Build 18362.476)
* NTLMv2 is used and works per default on Chromium Browser Version 80.0.3987.158, which is used in current stable Electron Version 8.2.0, where it does not work",deepak1556,platform/macOS;bug :beetle:;8-x-y;6-1-x;9-x-y;7-2-x,2020-04-03T08:54:54Z,2020-06-02T19:58:01Z,christophpre,christophpre;deepak1556;rizi,sofianguy,,sofianguy,,deepak1556,
electron/electron,23007,"Loading an extension crashes Electron ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * master
* **Operating System:**
  * macOS 10.15.2 / Windows 10
* **Last Known Working Electron version:**
  * 9.0.0-beta.14

### Expected Behavior
The extension should load.

### Actual Behavior
Loading an extension in any session crashes completely Electron with the following stack trace:
```
[20712:0407/231718.415617:FATAL:extension.cc(552)] Check failed: path.empty() || path.IsAbsolute(). 
0   Electron Framework                  0x0000000110eaa489 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x0000000110d749e3 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x0000000110d93419 logging::LogMessage::~LogMessage() + 249
3   Electron Framework                  0x00000001167b5771 extensions::Extension::Extension(base::FilePath const&, std::__1::unique_ptr<extensions::Manifest, std::__1::default_delete<extensions::Manifest> >) + 529
4   Electron Framework                  0x00000001167b208c extensions::Extension::Create(base::FilePath const&, extensions::Manifest::Location, base::DictionaryValue const&, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) + 476
5   Electron Framework                  0x00000001167fb8c9 extensions::file_util::LoadExtension(base::FilePath const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, extensions::Manifest::Location, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) + 169
6   Electron Framework                  0x00000001167fb7fc extensions::file_util::LoadExtension(base::FilePath const&, extensions::Manifest::Location, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) + 44
7   Electron Framework                  0x000000010bd2d72d extensions::(anonymous namespace)::LoadUnpacked(base::FilePath const&) + 109
8   Electron Framework                  0x000000010bd2ee33 base::internal::Invoker<base::internal::BindState<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > (*)(base::FilePath const&), base::FilePath>, std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > ()>::RunOnce(base::internal::BindStateBase*) + 19
9   Electron Framework                  0x000000010bd2f172 void base::internal::ReturnAsParamAdapter<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(base::OnceCallback<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > ()>, std::__1::unique_ptr<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::default_delete<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*) + 130
10  Electron Framework                  0x000000010bd2f427 base::internal::Invoker<base::internal::BindState<void (*)(base::OnceCallback<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > ()>, std::__1::unique_ptr<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::default_delete<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*), base::OnceCallback<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > ()>, std::__1::unique_ptr<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::default_delete<std::__1::pair<scoped_refptr<extensions::Extension const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*>, void ()>::RunOnce(base::internal::BindStateBase*) + 39
11  Electron Framework                  0x0000000110e5cf2a base::(anonymous namespace)::PostTaskAndReplyRelay::RunTaskAndPostReply(base::(anonymous namespace)::PostTaskAndReplyRelay) + 186
12  Electron Framework                  0x0000000110e5d379 base::internal::Invoker<base::internal::BindState<void (*)(base::(anonymous namespace)::PostTaskAndReplyRelay), base::(anonymous namespace)::PostTaskAndReplyRelay>, void ()>::RunOnce(base::internal::BindStateBase*) + 73
13  Electron Framework                  0x0000000110e0c554 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 404
14  Electron Framework                  0x0000000110e47a22 base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) + 34
15  Electron Framework                  0x0000000110e47299 base::internal::TaskTracker::RunTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&) + 1209
16  Electron Framework                  0x0000000110ebb6ee base::internal::TaskTrackerPosix::RunTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&) + 238
17  Electron Framework                  0x0000000110e46a0b base::internal::TaskTracker::RunAndPopNextTask(base::internal::RegisteredTaskSource) + 475
18  Electron Framework                  0x0000000110e55bf6 base::internal::WorkerThread::RunWorker() + 1062
19  Electron Framework                  0x0000000110e55754 base::internal::WorkerThread::RunPooledWorker() + 20
20  Electron Framework                  0x0000000110ebbcdf base::(anonymous namespace)::ThreadFunc(void*) + 95
21  libsystem_pthread.dylib             0x00007fff6f70de65 _pthread_start + 148
22  libsystem_pthread.dylib             0x00007fff6f70983b thread_start + 15
Task trace:
0   Electron Framework                  0x000000010bd2d376 extensions::ElectronExtensionLoader::LoadExtension(base::FilePath const&, base::OnceCallback<void (extensions::Extension const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) + 70
```

### To Reproduce
https://github.com/sentialx/electron-quick-start/tree/extensions-crash-10",MarshallOfSound,platform/windows;platform/macOS;bug :beetle:;10-x-y,2020-04-07T21:23:53Z,2020-08-21T03:47:10Z,sentialx,sentialx;nornagon,sofianguy,sofianguy,MarshallOfSound,,MarshallOfSound,
electron/electron,23026,"Menu bar is shown while `setMenuBarVisibility(false)` <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  9.0.0-beta.14
* **Operating System:**
 Windows 10
* **Last Known Working Electron version:**
  8.2.1

### Expected Behavior
Setting `win.setMenuBarVisibility(false)` will hide the menu bar. 

### Actual Behavior
Menu bar is shown

### To Reproduce
```
    let win = new BrowserWindow({
        width: 800,
        height: 600,
        webPreferences: {
            preload: path.resolve(__dirname, '../renderer/renderer-preload.js'),
            plugins: true,
            webviewTag: true,
            devTools: debugMode,
        },
    });
    win.setMenuBarVisibility(false); // or     win.removeMenu();
```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
* If I set ` autoHideMenuBar: true` it disappears but it appears when you pres `alt` key.
* If I set `frame: false` it disappears 
",zcbenz,platform/windows;bug :beetle:;9-x-y,2020-04-08T10:40:09Z,2020-04-23T17:51:33Z,ghost,vladimiry,sofianguy,,sofianguy,,codebytere,
electron/electron,23042,"Click-through frameless and transparent window not supported on versions > 6.1.9 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.2.1
* **Operating System:**
  * macOS 10.15.3
* **Last Known Working Electron version:**
  * 6.1.9

### Expected Behavior
Note: this is related to #1335.  However, that issue offers many solutions and workarounds.  This distorts the central issue, frameless transparent windows no longer allow click through.

Up to version 6.1.9, a window could be set with the options, frame: false, transparent: true.  If you set the bounds of the window to the full width / height of the display, and set the body background color to transparent of the renderer page and set the window on top, you could click-though to any OS window behind it.  Our application uses an element within the frameless transparent window that the end user interacts with.  This is possible up to version 6.1.9.

Illustrated in the Electron Fiddle gist - https://gist.github.com/glawson/63bfdbca42e2b482a3385ad101a8e1d3.

### Actual Behavior
You can no longer click-though frameless transparent windows unless you set setIgnoreMouseEvents, but that applies to the whole window.  If you need to interact with a part of the window, you have to change setIgnoreMouseEvents false over that element.  There is the 'forwarding' option, but it is only available on Windows OS - https://www.electronjs.org/docs/api/frameless-window#forwarding.  If run on macOS, there is no way to toggle setIgnoreMouseEvents when over the element you need user interaction. 

### To Reproduce
Electron Fiddle gist - https://gist.github.com/glawson/63bfdbca42e2b482a3385ad101a8e1d3.  run with version 6.1.9 to show expected click-through, change to 8.2.1 to show break. 

### Screenshots
https://www.loom.com/share/581466825f924c68863ca06e9996293b

### Additional Information

",zcbenz,platform/macOS;bug :beetle:;8-x-y;9-x-y,2020-04-08T23:52:21Z,2021-03-10T18:17:35Z,glawson,sofianguy;zcbenz;paulius005;sapkra;gchilds;glawson;electron-triage;OwnageBanana;toonvanvr,sofianguy,,sofianguy,,electron-triage,
electron/electron,23163,"Webview always has blink features enabled - cannot be disabled ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 8.2.3
* **Operating System:** Windows 7
* **Last Known Working Electron version:** Unknown

### Expected Behavior
There should be a way to disable all blink features in a `webview`, and they should not be enabled by default OR the documentation should make clear what the defaults are.

### Actual Behavior
`Electron Security Warning (enableBlinkFeatures) This renderer process has additional ""enableBlinkFeatures"" enabled. This exposes users of this app to some security risk. If you do not need this feature, you should disable it.`

Blink features are (apparently) enabled by default. There is no option to disable them in bulk.

I've tried setting `enableblinkfeatures=""""`, but it's the same result.

```js
   <webview
      enableremotemodule=""false"" //  =""false"" is correct, do not change to ={false}
      src={webviewSrc}
      preload={preload}
    />
```",codebytere,component/webview;bug :beetle:;10-x-y;11-x-y;12-x-y,2020-04-19T22:24:04Z,2021-02-18T19:11:35Z,Slapbox,sofianguy;codebytere;delewis13;grantcv1,sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,23196,"Ubuntu: closing an Electron app with an open alert() causes a zombie window in the application bar ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** v9.0.0-beta.13, v8.2.3, v7.2.3, v6.1.10 (I didn't go back any further)
* **Operating System:** Ubuntu 19.10

### Expected Behavior

Closing an Electron application should close the Electron application.

### Actual Behavior

When an `alert()` is displayed and I close the application a zombie window remains in the task bar (or whatever it is called) on Ubuntu. The screenshot shows the zombies after I did the thing multiple times.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

Essentially just a preload script with a `alert(1);`

1. https://gist.github.com/Prinzhorn/dfe34f7b9e6e90fbde99f5f20e402747
2. Close the main window but leave the alert inside open
3. The application closes (`ps ax | grep electron` doesn't yield any results) but it still shows in the application bar on the left (clicking it doesn't do a thing, right click -> quit neither)

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
![Selection_614](https://user-images.githubusercontent.com/679144/79838025-ad1d0900-83b2-11ea-90cf-127e0ee90c6a.png)


",ckerr,platform/linux;bug :beetle:;8-x-y;6-1-x;9-x-y;7-2-x,2020-04-21T07:30:48Z,2021-03-09T01:04:40Z,Prinzhorn,Prinzhorn;electron-triage,sofianguy,,ckerr,,electron-triage,
electron/electron,23244,"'before-input-event' is missing the isComposing property <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [ x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x ] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.2.2
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
[before-input-event](https://github.com/electron/electron/blob/master/docs/api/web-contents.md#event-before-input-event) include the `isComposing` property of the [KeyboardEvents](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent) object.

### Actual Behavior
There is no `KeyboardEvent.isComposing` property.

### To Reproduce

```javascript
webContents.on('before-input-event', (event, input) => {
  console.log('Is composing defined?', input.isComposing !== undefined);
});
```

### Screenshots
Here is the shape of an event is currently fired.
![image](https://user-images.githubusercontent.com/4505008/80048100-12145400-84c4-11ea-9ae9-7115fdc22c55.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;8-x-y,2020-04-23T01:11:14Z,2020-06-05T22:18:20Z,ilias-t,,codebytere,,codebytere,,codebytere,
electron/electron,23246,"setAlwaysOnTop(true, ""floating"", 1) - Unexpected Behavior MacOS Catalina <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
v8.2.3
* **Operating System:**
Mac OS Catalina (10.15.4)
* **Last Known Working Electron version:**
Unsure
### Expected Behavior
`setAlwaysOnTop(true, ""floating"", 1)` should create a window that will be hidden when mission control is launched and in other ways act similarly to Spotlight Search.
### Actual Behavior
The window will not hide on mission control launch 

### To Reproduce
create a new BrowserWindow and call the method setAlwaysOnTop(true, ""floating"", 1)


<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;8-x-y,2020-04-23T03:31:08Z,2020-06-05T22:17:31Z,ddamico125,vanejung;codebytere;zquancai;arantes555,codebytere,,codebytere,,codebytere,
electron/electron,23282,"Crash when pressing ALT and setMenu is called with Menu.buildFromTemplate([]) <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->v8.2.3

* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->Windows 10 (64 bit)
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->N/A
### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Doesn't crash
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Crashes
### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
```
const { app, BrowserWindow, Menu } = require('electron');

function createWindow () {
  let win = new BrowserWindow();
  win.setMenu(Menu.buildFromTemplate([]));
  win.loadFile('index.html');
}

app.whenReady().then(createWindow);
```

Press ALT in the window that pops up. Result: electron.exe crashes. Probably `Menu.buildFromTemplate` shouldn't be called with an empty array... BUT, this still shouldn't crash the application in my opinion.

### Call stack from crashdump

```
electron.exe!views::FocusSearch::FindNextFocusableViewImpl(views::View * starting_view, views::FocusSearch::StartingViewPolicy check_starting_view, bool can_go_up, bool can_go_down, views::FocusSearch::AnchoredDialogPolicy can_go_into_anchored_dialog, int skip_group_id, base::internal::flat_tree<views::View *,views::View *,base::internal::GetKeyFromValueIdentity<views::View *>,std::__1::less<void>> * seen_views, views::FocusTraversable * * focus_traversable, views::View * * focus_traversable_view) Line 186	C++
electron.exe!views::FocusSearch::FindNextFocusableView(views::View * starting_view, views::FocusSearch::SearchDirection search_direction, views::FocusSearch::TraversalDirection traversal_direction, views::FocusSearch::StartingViewPolicy check_starting_view, views::FocusSearch::AnchoredDialogPolicy can_go_into_anchored_dialog, views::FocusTraversable * * focus_traversable, views::View * * focus_traversable_view) Line 63	C++
[Inline Frame] electron.exe!views::AccessiblePaneView::GetFirstFocusableChild() Line 138	C++
electron.exe!views::AccessiblePaneView::SetPaneFocus(views::View * initial_focus) Line 72	C++
electron.exe!electron::MenuBar::SetPaneFocus(views::View * initial_focus) Line 204	C++
electron.exe!electron::RootView::HandleKeyEvent(const content::NativeWebKeyboardEvent & event) Line 153	C++
electron.exe!electron::CommonWebContentsDelegate::HandleKeyboardEvent(content::WebContents * source, const content::NativeWebKeyboardEvent & event) Line 37	C++
electron.exe!content::RenderWidgetHostImpl::OnKeyboardEventAck(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> & event, content::InputEventAckSource ack_source, content::InputEventAckState ack_result) Line 2126	C++
[Inline Frame] electron.exe!base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>::Run(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> & args, content::InputEventAckSource args, content::InputEventAckState args) Line 98	C++
electron.exe!content::InputRouterImpl::KeyboardEventHandled(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> & event, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)> event_result_callback, content::InputEventAckSource source, const ui::LatencyInfo & latency, content::InputEventAckState state, const base::Optional<ui::DidOverscrollParams> & overscroll, const base::Optional<cc::TouchAction> & touch_action) Line 566	C++
[Inline Frame] electron.exe!base::internal::FunctorTraits<void (content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &),void>::Invoke(void(content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &) method, base::WeakPtr<content::InputRouterImpl> && receiver_ptr, content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> && args, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)> && args, content::InputEventAckSource && args, const ui::LatencyInfo & args, content::InputEventAckState && args, const base::Optional<ui::DidOverscrollParams> &) Line 498	C++
[Inline Frame] electron.exe!base::internal::InvokeHelper<1,void>::MakeItSo(void(content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &) && functor, base::WeakPtr<content::InputRouterImpl> && weak_ptr, content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> && args, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)> && args, content::InputEventAckSource && args, const ui::LatencyInfo & args, content::InputEventAckState && args, const base::Optional<ui::DidOverscrollParams> &) Line 618	C++
[Inline Frame] electron.exe!base::internal::Invoker<base::internal::BindState<void (content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &),base::WeakPtr<content::InputRouterImpl>,content::EventWithLatencyInfo<content::NativeWebKeyboardEvent>,base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>>,void (content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &)>::RunImpl(void(content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &) && functor, std::__1::tuple<base::WeakPtr<content::InputRouterImpl>,content::EventWithLatencyInfo<content::NativeWebKeyboardEvent>,base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>> && bound, std::__1::integer_sequence<unsigned long long,0,1,2>, content::InputEventAckSource && unbound_args, const ui::LatencyInfo & unbound_args, content::InputEventAckState && unbound_args, const base::Optional<ui::DidOverscrollParams> &) Line 671	C++
electron.exe!base::internal::Invoker<base::internal::BindState<void (content::InputRouterImpl::*)(const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>, content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &),base::WeakPtr<content::InputRouterImpl>,content::EventWithLatencyInfo<content::NativeWebKeyboardEvent>,base::OnceCallback<void (const content::EventWithLatencyInfo<content::NativeWebKeyboardEvent> &, content::InputEventAckSource, content::InputEventAckState)>>,void (content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &)>::RunOnce(base::internal::BindStateBase * base, content::InputEventAckSource unbound_args, const ui::LatencyInfo & unbound_args, content::InputEventAckState unbound_args, const base::Optional<ui::DidOverscrollParams> & unbound_args, const base::Optional<cc::TouchAction> & unbound_args) Line 644	C++
[Inline Frame] electron.exe!base::OnceCallback<void (content::InputEventAckSource, const ui::LatencyInfo &, content::InputEventAckState, const base::Optional<ui::DidOverscrollParams> &, const base::Optional<cc::TouchAction> &)>::Run(content::InputEventAckSource args, const ui::LatencyInfo & args, content::InputEventAckState args, const base::Optional<ui::DidOverscrollParams> & args, const base::Optional<cc::TouchAction> & args) Line 98	C++
electron.exe!content::mojom::WidgetInputHandler_DispatchEvent_ForwardToCallback::Accept(mojo::Message * message) Line 1969	C++
electron.exe!mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message * message) Line 549	C++
electron.exe!mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper * message_wrapper, mojo::internal::MultiplexRouter::ClientCallBehavior client_call_behavior, base::SequencedTaskRunner * current_task_runner) Line 882	C++
electron.exe!mojo::internal::MultiplexRouter::Accept(mojo::Message * message) Line 608	C++
electron.exe!mojo::Connector::DispatchMessageW(mojo::Message message) Line 538	C++
electron.exe!mojo::Connector::ReadAllAvailableMessages() Line 627	C++
[Inline Frame] electron.exe!base::RepeatingCallback<void (unsigned int, const mojo::HandleSignalsState &)>::Run(unsigned int args, const mojo::HandleSignalsState & args) Line 132	C++
electron.exe!mojo::SimpleWatcher::OnHandleReady(int watch_id, unsigned int result, const mojo::HandleSignalsState & state) Line 293	C++
[Inline Frame] electron.exe!base::OnceCallback<void ()>::Run() Line 98	C++
electron.exe!base::TaskAnnotator::RunTask(const char * trace_event_name, base::PendingTask * pending_task) Line 142	C++
electron.exe!base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow * continuation_lazy_now, bool * ran_task) Line 366	C++
electron.exe!base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() Line 221	C++
electron.exe!base::MessagePumpForUI::DoRunLoop() Line 218	C++
electron.exe!base::MessagePumpWin::Run(base::MessagePump::Delegate * delegate) Line 76	C++
electron.exe!base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool application_tasks_allowed, base::TimeDelta timeout) Line 471	C++
electron.exe!base::RunLoop::Run() Line 158	C++
electron.exe!content::BrowserMainLoop::MainMessageLoopRun() Line 1537	C++
electron.exe!content::BrowserMainLoop::RunMainMessageLoopParts() Line 1064	C++
electron.exe!content::BrowserMainRunnerImpl::Run() Line 151	C++
electron.exe!content::BrowserMain(const content::MainFunctionParams & parameters) Line 47	C++
electron.exe!content::RunBrowserProcessMain(const content::MainFunctionParams & main_function_params, content::ContentMainDelegate * delegate) Line 527	C++
electron.exe!content::ContentMainRunnerImpl::RunServiceManager(content::MainFunctionParams & main_params, bool start_service_manager_only) Line 960	C++
electron.exe!content::ContentMainRunnerImpl::Run(bool start_service_manager_only) Line 872	C++
electron.exe!service_manager::Main(const service_manager::MainParams & params) Line 423	C++
electron.exe!content::ContentMain(const content::ContentMainParams & params) Line 19	C++
electron.exe!wWinMain(HINSTANCE__ * instance, HINSTANCE__ *, wchar_t * cmd, int) Line 168	C++
[External Code]
```
",codebytere,platform/windows;bug :beetle:;8-x-y,2020-04-25T21:05:47Z,2020-04-30T15:29:03Z,dezsiszabi,,sofianguy,,codebytere,,codebytere,
electron/electron,23328,"navigator.clipboard.readText() gets into the permission request handler with permission: ""unknown"" ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.2.4
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * ?

### Expected Behavior
permission string should be something like ""clipboard""

### Actual Behavior
permission string is ""unknown""

### To Reproduce
Attach a permission request handler to a session like described here: https://www.electronjs.org/docs/api/session
i.e.: session.setPermissionRequestHandler((webContents, permission, callback) => { .... })
then execute the following in a webpage: navigator.clipboard.readText()",MarshallOfSound,bug :beetle:;platform/all;8-x-y,2020-04-29T13:24:54Z,2021-03-10T18:31:27Z,t57ser,electron-triage,sofianguy;codebytere,,MarshallOfSound,,electron-triage,
electron/electron,23413,"Handle custom protocol in filter of webRequest.onBeforeRequest ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

I've faced with the issue that I couldn't catch request by `webRequest.onBeforeRequest` if custom protocol was used in `filter`.

```js
mainWindow.webContents.session.webRequest.onBeforeRequest({
    urls: ['myscheme://*/*'],
}, (details, cb) => {
    console.log('onBeforeRequest:', details.url);
    cb({ cancel: false });
});
```

* **Electron Version:**
  * v8.2.5
* **Operating System:**
  * macOS 10.15.4

### Expected Behavior

Message in console like:

```bash
onBeforeRequest: myscheme://action/foobar
```

### Actual Behavior

The error on `onBeforeRequest` a call.

```
Uncaught Exception:
TypeError: Invalid url pattern myscheme://*/*: Wrong scheme type.
```

### To Reproduce

```js
mainWindow.webContents.session.webRequest.onBeforeRequest({
    urls: ['myscheme://*/*'],
}, (details, cb) => {
    console.log('onBeforeRequest:', details.url);
    cb({ cancel: false });
});
```

### Additional Information

Original question: https://stackoverflow.com/questions/61610086/typeerror-invalid-url-pattern-myscheme-wrong-scheme-type
",codebytere,platform/macOS;bug :beetle:;8-x-y,2020-05-05T11:58:08Z,2021-03-10T18:30:48Z,mahnunchik,deepak1556;mahnunchik;vladimiry;electron-triage,codebytere,,codebytere,,electron-triage,
electron/electron,23421,"display-metrics-changed not working on Catalina ### Issue Details

* **Electron Version:**
v8.2.5
* **Operating System:**
Mac OS 10.15.4
* **Last Known Working Electron version:**
N/A. Failed on 9.0.0 beta as well.

### Expected Behavior
display-metrics-changed should fire when the app doc hides and unhides. 

### Actual Behavior
No screen workArea changes detected when app doc hides/unhides. It doesn't change even when you examine the value of it by looking at the display properties. i.e. event doesn't fire and even if you periodically check the value of workArea, it does not change.

### To Reproduce
<!--

-->
Run code below that registers for display-metrics-changed changes and also checks if workArea changes every second. Hide and unhide app doc. Same code works on Mojave and Windows 10. Hide and unhide dock by making an any app go into full screen mode or wait for dock to hide on its own when set to automatically hide. It does work if you go into preferences and explicitly toggle the hide/unhide state, but not if it happens when any app goes into full screen mode or auto hides.

```
app.on('ready', () => {
  let height = 0, width = 0;
  screen.on('display-metrics-changed', (event, display, changedMetrics) => {
    console.log(`Changed info in event: `, event, display, changedMetrics);
  });
  setInterval(() => {
    let d = screen.getPrimaryDisplay();
    if (d.workArea.height !== height || d.workArea.width !== width) {
      console.log(`Changed display info `, d);
      height = d.workArea.height;
      width = d.workArea.width;
    }
  }, 1000);
});
```

",codebytere,platform/macOS;blocked/need-info 閴;bug :beetle:;8-x-y;9-x-y,2020-05-05T20:37:18Z,2020-06-05T22:04:51Z,infinite3219,codebytere,codebytere,,codebytere,,codebytere,
electron/electron,23640,"heap use-after-free in OSR Abridged report:

```
==529==ERROR: AddressSanitizer: heap-use-after-free on address 0x6030000d5680 at pc 0x55d10f042120 bp 0x7f03d170ef30 sp 0x7f03d170ef28
READ of size 1 at 0x6030000d5680 thread T6 (VizCompositorTh)
    #0 0x55d10f04211f in mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::OnEventSignaled() ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:214:47
[...]
    #9 0x55d104fcd6a7 in viz::mojom::DisplayClientProxy::IsOffscreen(bool*) ./gen/services/viz/privileged/mojom/compositing/display_private.mojom.cc:789:28
    #10 0x55d11adfe260 in viz::OutputSurfaceProviderImpl::CreateSoftwareOutputDeviceForPlatform(unsigned long, viz::mojom::DisplayClient*) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:234:25
[...]

0x6030000d5680 is located 16 bytes inside of 24-byte region [0x6030000d5670,0x6030000d5688)
freed by thread T6 (VizCompositorTh) here:
    #0 0x55d1015515dd in operator delete(void*) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_new_delete.cpp:160:3
[...]
    #9 0x55d10f0136da in mojo::internal::InterfacePtrStateBase::~InterfacePtrStateBase() ./../../mojo/public/cpp/bindings/lib/interface_ptr_state.cc:15:20
[...]
    #26 0x55d11ae4c3a0 in viz::FrameSinkManagerImpl::DestroyCompositorFrameSink(viz::FrameSinkId const&, base::OnceCallback<void ()>) ./../../components/viz/service/frame_sinks/frame_sink_manager_impl.cc:192:18
[...]

previously allocated by thread T6 (VizCompositorTh) here:
[...]
    #6 0x55d104fcd6a7 in viz::mojom::DisplayClientProxy::IsOffscreen(bool*) ./gen/services/viz/privileged/mojom/compositing/display_private.mojom.cc:789:28
    #7 0x55d11adfe260 in viz::OutputSurfaceProviderImpl::CreateSoftwareOutputDeviceForPlatform(unsigned long, viz::mojom::DisplayClient*) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:234:25
```

Full ASan report:

<details>

```
=================================================================
==529==ERROR: AddressSanitizer: heap-use-after-free on address 0x6030000d5680 at pc 0x55d10f042120 bp 0x7f03d170ef30 sp 0x7f03d170ef28
READ of size 1 at 0x6030000d5680 thread T6 (VizCompositorTh)
    #0 0x55d10f04211f in mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::OnEventSignaled() ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:214:47
    #1 0x55d10f04b109 in Run ./../../base/callback.h:133:12
    #2 0x55d10f04b109 in mojo::SyncHandleRegistry::Wait(bool const**, unsigned long) ./../../mojo/public/cpp/bindings/lib/sync_handle_registry.cc:153:20
    #3 0x55d10f0479ae in mojo::SyncEventWatcher::SyncWatch(bool const**, unsigned long) ./../../mojo/public/cpp/bindings/lib/sync_event_watcher.cc:51:28
    #4 0x55d10f0429ef in SyncWatch ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:162:34
    #5 0x55d10f0429ef in mojo::SequenceLocalSyncEventWatcher::SyncWatch(bool const*) ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:282:41
    #6 0x55d10f02a743 in mojo::internal::MultiplexRouter::InterfaceEndpoint::SyncWatch(bool const*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:147:27
    #7 0x55d10f000d5e in mojo::InterfaceEndpointClient::SendMessageWithResponder(mojo::Message*, bool, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:335:16
    #8 0x55d10f001617 in mojo::InterfaceEndpointClient::AcceptWithResponder(mojo::Message*, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:247:10
    #9 0x55d104fcd6a7 in viz::mojom::DisplayClientProxy::IsOffscreen(bool*) ./gen/services/viz/privileged/mojom/compositing/display_private.mojom.cc:789:28
    #10 0x55d11adfe260 in viz::OutputSurfaceProviderImpl::CreateSoftwareOutputDeviceForPlatform(unsigned long, viz::mojom::DisplayClient*) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:234:25
    #11 0x55d11adfd740 in viz::OutputSurfaceProviderImpl::CreateOutputSurface(unsigned long, bool, viz::mojom::DisplayClient*, viz::RendererSettings const&) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:118:9
    #12 0x55d11ae898bc in viz::RootCompositorFrameSinkImpl::Create(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>, viz::FrameSinkManagerImpl*, viz::OutputSurfaceProvider*, unsigned int, bool) ./../../components/viz/service/frame_sinks/root_compositor_frame_sink_impl.cc:40:50
    #13 0x55d11ae4ae3a in viz::FrameSinkManagerImpl::CreateRootCompositorFrameSink(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>) ./../../components/viz/service/frame_sinks/frame_sink_manager_impl.cc:170:37
    #14 0x55d104fe3365 in viz::mojom::FrameSinkManagerStubDispatch::Accept(viz::mojom::FrameSinkManager*, mojo::Message*) ./gen/services/viz/privileged/mojom/compositing/frame_sink_manager.mojom.cc:1354:13
    #15 0x55d10effd618 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:554:54
    #16 0x55d10f015bc3 in mojo::MessageDispatcher::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:41:19
    #17 0x55d10f001804 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:356:22
    #18 0x55d10f025beb in mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:953:42
    #19 0x55d10f023cfc in mojo::internal::MultiplexRouter::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:620:38
    #20 0x55d10f015bc3 in mojo::MessageDispatcher::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:41:19
    #21 0x55d10efef890 in mojo::Connector::DispatchMessage(mojo::Message) ./../../mojo/public/cpp/bindings/lib/connector.cc:539:49
    #22 0x55d10eff2564 in mojo::Connector::ReadAllAvailableMessages() ./../../mojo/public/cpp/bindings/lib/connector.cc:627:12
    #23 0x55d10eff1b52 in mojo::Connector::OnHandleReadyInternal(unsigned int) ./../../mojo/public/cpp/bindings/lib/connector.cc:446:3
    #24 0x55d101613b9c in Run ./../../base/callback.h:133:12
    #25 0x55d101613b9c in mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback<void (unsigned int)> const&, unsigned int, mojo::HandleSignalsState const&) ./../../mojo/public/cpp/system/simple_watcher.h:194:14
    #26 0x55d10f08c3a5 in Run ./../../base/callback.h:133:12
    #27 0x55d10f08c3a5 in mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&) ./../../mojo/public/cpp/system/simple_watcher.cc:292:14
    #28 0x55d10f08d44d in Invoke<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState> ./../../base/bind_internal.h:490:12
    #29 0x55d10f08d44d in MakeItSo<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState> ./../../base/bind_internal.h:644:5
    #30 0x55d10f08d44d in RunImpl<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), std::__1::tuple<base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState>, 0, 1, 2, 3> ./../../base/bind_internal.h:697:12
    #31 0x55d10f08d44d in base::internal::Invoker<base::internal::BindState<void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState>, void ()>::RunOnce(base::internal::BindStateBase*) ./../../base/bind_internal.h:666:12
    #32 0x55d10dbb68b7 in Run ./../../base/callback.h:99:12
    #33 0x55d10dbb68b7 in base::TaskAnnotator::RunTask(char const*, base::PendingTask*) ./../../base/task/common/task_annotator.cc:142:33
    #34 0x55d10dc0f7fa in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:321:23
    #35 0x55d10dc0efdf in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:246:36
    #36 0x55d10dace173 in base::MessagePumpDefault::Run(base::MessagePump::Delegate*) ./../../base/message_loop/message_pump_default.cc:39:55
    #37 0x55d10dc10f07 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:425:12
    #38 0x55d10db57088 in base::RunLoop::Run() ./../../base/run_loop.cc:124:14
    #39 0x55d10dc9214d in base::Thread::Run(base::RunLoop*) ./../../base/threading/thread.cc:309:13
    #40 0x55d10dc92c4b in base::Thread::ThreadMain() ./../../base/threading/thread.cc:380:3
    #41 0x55d10dd9788b in base::(anonymous namespace)::ThreadFunc(void*) ./../../base/threading/platform_thread_posix.cc:81:13
    #42 0x7f03eb6936da in start_thread ??:0:0
0x6030000d5680 is located 16 bytes inside of 24-byte region [0x6030000d5670,0x6030000d5688)
freed by thread T6 (VizCompositorTh) here:
    #0 0x55d1015515dd in operator delete(void*) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_new_delete.cpp:160:3
    #1 0x55d10f021be6 in operator() ./../../buildtools/third_party/libc++/trunk/include/memory:2378:5
    #2 0x55d10f021be6 in reset ./../../buildtools/third_party/libc++/trunk/include/memory:2633:7
    #3 0x55d10f021be6 in mojo::internal::MultiplexRouter::InterfaceEndpoint::DetachClient() ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:104:19
    #4 0x55d10f021766 in mojo::internal::MultiplexRouter::DetachEndpointClient(mojo::ScopedInterfaceEndpointHandle const&) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:497:13
    #5 0x55d10effecab in mojo::InterfaceEndpointClient::~InterfaceEndpointClient() ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:178:33
    #6 0x55d10effeedd in mojo::InterfaceEndpointClient::~InterfaceEndpointClient() ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:175:53
    #7 0x55d10f0136da in operator() ./../../buildtools/third_party/libc++/trunk/include/memory:2378:5
    #8 0x55d10f0136da in reset ./../../buildtools/third_party/libc++/trunk/include/memory:2633:7
    #9 0x55d10f0136da in mojo::internal::InterfacePtrStateBase::~InterfacePtrStateBase() ./../../mojo/public/cpp/bindings/lib/interface_ptr_state.cc:15:20
    #10 0x55d11ae8b60d in ~InterfacePtrState ./../../mojo/public/cpp/bindings/lib/interface_ptr_state.h:127:32
    #11 0x55d11ae8b60d in ~Remote ./../../mojo/public/cpp/bindings/remote.h:87:21
    #12 0x55d11ae8b60d in viz::RootCompositorFrameSinkImpl::~RootCompositorFrameSinkImpl() ./../../components/viz/service/frame_sinks/root_compositor_frame_sink_impl.cc:165:1
    #13 0x55d11ae8b76d in viz::RootCompositorFrameSinkImpl::~RootCompositorFrameSinkImpl() ./../../components/viz/service/frame_sinks/root_compositor_frame_sink_impl.cc:162:61
    #14 0x55d11ae5fa71 in operator() ./../../buildtools/third_party/libc++/trunk/include/memory:2378:5
    #15 0x55d11ae5fa71 in reset ./../../buildtools/third_party/libc++/trunk/include/memory:2633:7
    #16 0x55d11ae5fa71 in ~unique_ptr ./../../buildtools/third_party/libc++/trunk/include/memory:2587:19
    #17 0x55d11ae5fa71 in ~pair ./../../buildtools/third_party/libc++/trunk/include/utility:297:29
    #18 0x55d11ae5fa71 in destroy ./../../buildtools/third_party/libc++/trunk/include/memory:1920:64
    #19 0x55d11ae5fa71 in __destroy<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl>>>> ./../../buildtools/third_party/libc++/trunk/include/memory:1782:18
    #20 0x55d11ae5fa71 in destroy<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl>>>> ./../../buildtools/third_party/libc++/trunk/include/memory:1619:14
    #21 0x55d11ae5fa71 in __destruct_at_end ./../../buildtools/third_party/libc++/trunk/include/vector:426:9
    #22 0x55d11ae5fa71 in __destruct_at_end ./../../buildtools/third_party/libc++/trunk/include/vector:833:17
    #23 0x55d11ae5fa71 in std::__1::vector<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl> > >, std::__1::allocator<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl> > > > >::erase(std::__1::__wrap_iter<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl> > > const*>, std::__1::__wrap_iter<std::__1::pair<viz::FrameSinkId, std::__1::unique_ptr<viz::RootCompositorFrameSinkImpl, std::__1::default_delete<viz::RootCompositorFrameSinkImpl> > > const*>) ./../../buildtools/third_party/libc++/trunk/include/vector:1738:15
    #24 0x55d11ae4c3a0 in erase ./../../base/containers/flat_tree.h:792:22
    #25 0x55d11ae4c3a0 in erase<viz::FrameSinkId> ./../../base/containers/flat_tree.h:784:3
    #26 0x55d11ae4c3a0 in viz::FrameSinkManagerImpl::DestroyCompositorFrameSink(viz::FrameSinkId const&, base::OnceCallback<void ()>) ./../../components/viz/service/frame_sinks/frame_sink_manager_impl.cc:192:18
    #27 0x55d104fe547c in viz::mojom::FrameSinkManagerStubDispatch::AcceptWithResponder(viz::mojom::FrameSinkManager*, mojo::Message*, std::__1::unique_ptr<mojo::MessageReceiverWithStatus, std::__1::default_delete<mojo::MessageReceiverWithStatus> >) ./gen/services/viz/privileged/mojom/compositing/frame_sink_manager.mojom.cc:1781:13
    #28 0x55d11ae5a32c in viz::mojom::FrameSinkManagerStub<mojo::RawPtrImplRefTraits<viz::mojom::FrameSinkManager> >::AcceptWithResponder(mojo::Message*, std::__1::unique_ptr<mojo::MessageReceiverWithStatus, std::__1::default_delete<mojo::MessageReceiverWithStatus> >) ./gen/services/viz/privileged/mojom/compositing/frame_sink_manager.mojom.h:309:12
    #29 0x55d10effd563 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:528:56
    #30 0x55d10f015bc3 in mojo::MessageDispatcher::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:41:19
    #31 0x55d10f001804 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:356:22
    #32 0x55d10f025beb in mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:953:42
    #33 0x55d10f028b28 in mojo::internal::MultiplexRouter::ProcessFirstSyncMessageForEndpoint(unsigned int) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:825:20
    #34 0x55d10f02aef5 in mojo::internal::MultiplexRouter::InterfaceEndpoint::OnSyncEventSignaled() ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:166:37
    #35 0x55d10f041fe2 in Run ./../../base/callback.h:133:12
    #36 0x55d10f041fe2 in mojo::SequenceLocalSyncEventWatcher::SequenceLocalState::OnEventSignaled() ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:215:28
    #37 0x55d10f04b109 in Run ./../../base/callback.h:133:12
    #38 0x55d10f04b109 in mojo::SyncHandleRegistry::Wait(bool const**, unsigned long) ./../../mojo/public/cpp/bindings/lib/sync_handle_registry.cc:153:20
    #39 0x55d10f0479ae in mojo::SyncEventWatcher::SyncWatch(bool const**, unsigned long) ./../../mojo/public/cpp/bindings/lib/sync_event_watcher.cc:51:28
    #40 0x55d10f0429ef in SyncWatch ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:162:34
    #41 0x55d10f0429ef in mojo::SequenceLocalSyncEventWatcher::SyncWatch(bool const*) ./../../mojo/public/cpp/bindings/lib/sequence_local_sync_event_watcher.cc:282:41
    #42 0x55d10f02a743 in mojo::internal::MultiplexRouter::InterfaceEndpoint::SyncWatch(bool const*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:147:27
    #43 0x55d10f000d5e in mojo::InterfaceEndpointClient::SendMessageWithResponder(mojo::Message*, bool, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:335:16
    #44 0x55d10f001617 in mojo::InterfaceEndpointClient::AcceptWithResponder(mojo::Message*, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:247:10
    #45 0x55d104fcd6a7 in viz::mojom::DisplayClientProxy::IsOffscreen(bool*) ./gen/services/viz/privileged/mojom/compositing/display_private.mojom.cc:789:28
    #46 0x55d11adfe260 in viz::OutputSurfaceProviderImpl::CreateSoftwareOutputDeviceForPlatform(unsigned long, viz::mojom::DisplayClient*) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:234:25
    #47 0x55d11adfd740 in viz::OutputSurfaceProviderImpl::CreateOutputSurface(unsigned long, bool, viz::mojom::DisplayClient*, viz::RendererSettings const&) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:118:9
    #48 0x55d11ae898bc in viz::RootCompositorFrameSinkImpl::Create(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>, viz::FrameSinkManagerImpl*, viz::OutputSurfaceProvider*, unsigned int, bool) ./../../components/viz/service/frame_sinks/root_compositor_frame_sink_impl.cc:40:50
    #49 0x55d11ae4ae3a in viz::FrameSinkManagerImpl::CreateRootCompositorFrameSink(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>) ./../../components/viz/service/frame_sinks/frame_sink_manager_impl.cc:170:37
previously allocated by thread T6 (VizCompositorTh) here:
    #0 0x55d101550d7d in operator new(unsigned long) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0x55d10f02aac2 in make_unique<mojo::SequenceLocalSyncEventWatcher, base::RepeatingCallback<void ()>> ./../../buildtools/third_party/libc++/trunk/include/memory:3043:28
    #2 0x55d10f02aac2 in mojo::internal::MultiplexRouter::InterfaceEndpoint::EnsureSyncWatcherExists() ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:188:9
    #3 0x55d10f02a71e in mojo::internal::MultiplexRouter::InterfaceEndpoint::SyncWatch(bool const*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:146:5
    #4 0x55d10f000d5e in mojo::InterfaceEndpointClient::SendMessageWithResponder(mojo::Message*, bool, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:335:16
    #5 0x55d10f001617 in mojo::InterfaceEndpointClient::AcceptWithResponder(mojo::Message*, std::__1::unique_ptr<mojo::MessageReceiver, std::__1::default_delete<mojo::MessageReceiver> >) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:247:10
    #6 0x55d104fcd6a7 in viz::mojom::DisplayClientProxy::IsOffscreen(bool*) ./gen/services/viz/privileged/mojom/compositing/display_private.mojom.cc:789:28
    #7 0x55d11adfe260 in viz::OutputSurfaceProviderImpl::CreateSoftwareOutputDeviceForPlatform(unsigned long, viz::mojom::DisplayClient*) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:234:25
    #8 0x55d11adfd740 in viz::OutputSurfaceProviderImpl::CreateOutputSurface(unsigned long, bool, viz::mojom::DisplayClient*, viz::RendererSettings const&) ./../../components/viz/service/display_embedder/output_surface_provider_impl.cc:118:9
    #9 0x55d11ae898bc in viz::RootCompositorFrameSinkImpl::Create(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>, viz::FrameSinkManagerImpl*, viz::OutputSurfaceProvider*, unsigned int, bool) ./../../components/viz/service/frame_sinks/root_compositor_frame_sink_impl.cc:40:50
    #10 0x55d11ae4ae3a in viz::FrameSinkManagerImpl::CreateRootCompositorFrameSink(mojo::StructPtr<viz::mojom::RootCompositorFrameSinkParams>) ./../../components/viz/service/frame_sinks/frame_sink_manager_impl.cc:170:37
    #11 0x55d104fe3365 in viz::mojom::FrameSinkManagerStubDispatch::Accept(viz::mojom::FrameSinkManager*, mojo::Message*) ./gen/services/viz/privileged/mojom/compositing/frame_sink_manager.mojom.cc:1354:13
    #12 0x55d10effd618 in mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:554:54
    #13 0x55d10f015bc3 in mojo::MessageDispatcher::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:41:19
    #14 0x55d10f001804 in mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:356:22
    #15 0x55d10f025beb in mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:953:42
    #16 0x55d10f023cfc in mojo::internal::MultiplexRouter::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/multiplex_router.cc:620:38
    #17 0x55d10f015bc3 in mojo::MessageDispatcher::Accept(mojo::Message*) ./../../mojo/public/cpp/bindings/lib/message_dispatcher.cc:41:19
    #18 0x55d10efef890 in mojo::Connector::DispatchMessage(mojo::Message) ./../../mojo/public/cpp/bindings/lib/connector.cc:539:49
    #19 0x55d10eff2564 in mojo::Connector::ReadAllAvailableMessages() ./../../mojo/public/cpp/bindings/lib/connector.cc:627:12
    #20 0x55d10eff1b52 in mojo::Connector::OnHandleReadyInternal(unsigned int) ./../../mojo/public/cpp/bindings/lib/connector.cc:446:3
    #21 0x55d101613b9c in Run ./../../base/callback.h:133:12
    #22 0x55d101613b9c in mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback<void (unsigned int)> const&, unsigned int, mojo::HandleSignalsState const&) ./../../mojo/public/cpp/system/simple_watcher.h:194:14
    #23 0x55d10f08c3a5 in Run ./../../base/callback.h:133:12
    #24 0x55d10f08c3a5 in mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&) ./../../mojo/public/cpp/system/simple_watcher.cc:292:14
    #25 0x55d10f08d44d in Invoke<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState> ./../../base/bind_internal.h:490:12
    #26 0x55d10f08d44d in MakeItSo<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState> ./../../base/bind_internal.h:644:5
    #27 0x55d10f08d44d in RunImpl<void (mojo::SimpleWatcher::*)(int, unsigned int, const mojo::HandleSignalsState &), std::__1::tuple<base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState>, 0, 1, 2, 3> ./../../base/bind_internal.h:697:12
    #28 0x55d10f08d44d in base::internal::Invoker<base::internal::BindState<void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState>, void ()>::RunOnce(base::internal::BindStateBase*) ./../../base/bind_internal.h:666:12
    #29 0x55d10dbb68b7 in Run ./../../base/callback.h:99:12
    #30 0x55d10dbb68b7 in base::TaskAnnotator::RunTask(char const*, base::PendingTask*) ./../../base/task/common/task_annotator.cc:142:33
    #31 0x55d10dc0f7fa in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:321:23
    #32 0x55d10dc0efdf in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:246:36
    #33 0x55d10dace173 in base::MessagePumpDefault::Run(base::MessagePump::Delegate*) ./../../base/message_loop/message_pump_default.cc:39:55
    #34 0x55d10dc10f07 in base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) ./../../base/task/sequence_manager/thread_controller_with_message_pump_impl.cc:425:12
    #35 0x55d10db57088 in base::RunLoop::Run() ./../../base/run_loop.cc:124:14
    #36 0x55d10dc9214d in base::Thread::Run(base::RunLoop*) ./../../base/threading/thread.cc:309:13
Thread T6 (VizCompositorTh) created by T0 (electron) here:
    #0 0x55d10151271a in pthread_create /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_interceptors.cpp:214:3
    #1 0x55d10dd96701 in base::(anonymous namespace)::CreateThread(unsigned long, bool, base::PlatformThread::Delegate*, base::PlatformThreadHandle*, base::ThreadPriority) ./../../base/threading/platform_thread_posix.cc:120:13
    #2 0x55d10dc9102a in base::Thread::StartWithOptions(base::Thread::Options const&) ./../../base/threading/thread.cc:186:15
    #3 0x55d10c1dd8f2 in CreateAndStartCompositorThread ./../../components/viz/service/main/viz_compositor_thread_runner_impl.cc:77:3
    #4 0x55d10c1dd8f2 in viz::VizCompositorThreadRunnerImpl::VizCompositorThreadRunnerImpl() ./../../components/viz/service/main/viz_compositor_thread_runner_impl.cc:91:15
    #5 0x55d10c1e352e in make_unique<viz::VizCompositorThreadRunnerImpl> ./../../buildtools/third_party/libc++/trunk/include/memory:3043:32
    #6 0x55d10c1e352e in viz::VizMainImpl::VizMainImpl(viz::VizMainImpl::Delegate*, viz::VizMainImpl::ExternalDependencies, std::__1::unique_ptr<gpu::GpuInit, std::__1::default_delete<gpu::GpuInit> >) ./../../components/viz/service/main/viz_main_impl.cc:82:9
    #7 0x55d11b091ee2 in content::GpuChildThread::GpuChildThread(base::RepeatingCallback<void ()>, content::ChildThreadImpl::Options, std::__1::unique_ptr<gpu::GpuInit, std::__1::default_delete<gpu::GpuInit> >) ./../../content/gpu/gpu_child_thread.cc:119:7
    #8 0x55d11b091b32 in content::GpuChildThread::GpuChildThread(base::RepeatingCallback<void ()>, std::__1::unique_ptr<gpu::GpuInit, std::__1::default_delete<gpu::GpuInit> >) ./../../content/gpu/gpu_child_thread.cc:101:7
    #9 0x55d11b09073b in content::GpuMain(content::MainFunctionParams const&) ./../../content/gpu/gpu_main.cc:375:11
    #10 0x55d109937303 in content::RunZygote(content::ContentMainDelegate*) ./../../content/app/content_main_runner_impl.cc:480:14
    #11 0x55d10993b368 in content::ContentMainRunnerImpl::Run(bool) ./../../content/app/content_main_runner_impl.cc:847:10
    #12 0x55d11369a9f4 in service_manager::Main(service_manager::MainParams const&) ./../../services/service_manager/embedder/main.cc:454:29
    #13 0x55d10573ba7f in content::ContentMain(content::ContentMainParams const&) ./../../content/app/content_main.cc:19:10
    #14 0x55d101553a2b in main ./../../electron/shell/app/electron_main.cc:231:10
    #15 0x7f03e3fc2b96 in __libc_start_main ??:0:0
SUMMARY: AddressSanitizer: heap-use-after-free (/home/builduser/project/src/out/Default/electron+0x1c3d611f)
Shadow bytes around the buggy address:
  0x0c0680012a80: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa
  0x0c0680012a90: fa fa fd fd fd fa fa fa fd fd fd fd fa fa fd fd
  0x0c0680012aa0: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa
  0x0c0680012ab0: 00 00 00 fa fa fa 00 00 00 00 fa fa fd fd fd fd
  0x0c0680012ac0: fa fa fd fd fd fd fa fa fd fd fd fa fa fa fd fd
=>0x0c0680012ad0:[fd]fa fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  0x0c0680012ae0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa
  0x0c0680012af0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd
  0x0c0680012b00: fd fa fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  0x0c0680012b10: fd fd fd fd fa fa fd fd fd fa fa fa fd fd fd fd
  0x0c0680012b20: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==529==ABORTING
```

</details>",zcbenz,bug :beetle:;component/offscreen,2020-05-18T19:29:21Z,2021-02-19T23:28:48Z,nornagon,nornagon;oldmtn;zcbenz,zcbenz,,zcbenz,,nornagon,
electron/electron,23662,"React DevTools and Redux DevTools tabs sometimes not appearing Electron@9.0.0 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v9.0.0
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * 8.2.0

### Expected Behavior
In our project we are loading ReactDevTool and ReduxDevTools.
```js
app.on('ready', async () => {
    await session.defaultSession.loadExtension(
        path_to_devtools
    );
});
```
In the terminal for version 9.0.0 we see warnings:
```
(node:59148) ExtensionLoadWarning: Warnings loading extension at path_to_ext: Unrecognized manifest key 'browser_action'. Unrecognized manifest key 'minimum_chrome_version'. Unrecognized manifest key 'update_url'. Cannot load extension with file or directory name _metadata. Filenames starting with ""_"" are reserved for use by the system.
(node:59148) ExtensionLoadWarning: Warnings loading extension at path_to_ext: Unrecognized manifest key 'browser_action'. Unrecognized manifest key 'minimum_chrome_version'. Unrecognized manifest key 'update_url'. Cannot load extension with file or directory name _metadata. Filenames starting with ""_"" are reserved for use by the system.
(node:59148) ExtensionLoadWarning: Warnings loading extension at path_to_ext: Unrecognized manifest key 'commands'. Unrecognized manifest key 'homepage_url'. Unrecognized manifest key 'page_action'. Unrecognized manifest key 'short_name'. Unrecognized manifest key 'update_url'. Permission 'notifications' is unknown or URL pattern is malformed. Permission 'contextMenus' is unknown or URL pattern is malformed. Permission 'tabs' is unknown or URL pattern is malformed. Cannot load extension with file or directory name _metadata. Filenames starting with ""_"" are reserved for use by the system.
(node:59148) ExtensionLoadWarning: Warnings loading extension at path_to_ext: Unrecognized manifest key 'commands'. Unrecognized manifest key 'homepage_url'. Unrecognized manifest key 'page_action'. Unrecognized manifest key 'short_name'. Unrecognized manifest key 'update_url'. Permission 'notifications' is unknown or URL pattern is malformed. Permission 'contextMenus' is unknown or URL pattern is malformed. Permission 'tabs' is unknown or URL pattern is malformed. Cannot load extension with file or directory name _metadata. Filenames starting with ""_"" are reserved for use by the system.
```
And both extensions don't work.

### Actual Behavior
No warnings in the terminal and working extensions.
",nornagon,platform/macOS;bug :beetle:;9-x-y;10-x-y,2020-05-19T15:09:43Z,2021-02-08T17:08:23Z,mashafomasha,ChALkeR;nornagon;GitNomster;mashafomasha;idanwork;NatanCieplinski;btzsoft;orpheus;loktevra;dugiwarc,,,nornagon,,nornagon,
electron/electron,23664,"Electron 9.0.0 webSecurity option no longer disables CORS <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**  9.0.0
  <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
* **Operating System:** Windows 10 (1904)
  <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:** 8.2.0
  <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Setting BrowserWindow webPreferences: { webSecurity: false } should disable the CORS policy

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Although I am receiving the electron security warnings for ""Disabled webSecurity"",""allowRunningInsecureContent"" and ""Insecure Content-Security-Policy"" in the console I am still getting COR policy errors on my requests.

**Here is an example:**

Access to XMLHttpRequest at 'http://localhost:8080/users/login' from origin 'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.
",zcbenz,bug :beetle:;platform/all;9-x-y;10-x-y,2020-05-19T15:16:00Z,2020-09-16T21:55:54Z,wesflynn,yy923683900;koczko;amwtxgt;YouLiLiao;Bug-Reaper;danutzcodrescu;khuzema786;china-net-meng;vedaprakashms;FengfanHu;xland;flotwig;ColorfulHorse;galaxode;daltonmenezes;gormonn;mafortier-nexapp;chinaqiao;ishowshao;vitto32;XMLHexagram,sofianguy,,,,nornagon,
electron/electron,23757,"9.0.0 does not display local images <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v9.0.0
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * v8.3.0

### Expected Behavior
My app shows a gallery of images from local disk. Electron 8.2.0 would show images. v9.0.0 shows blanks with error:
```
GET file:///C:/VHA/vha-videos/filmstrips/6f3acc0aeee45a7af5404e3849d8719f.jpg 
net::ERR_UNKNOWN_URL_SCHEME
```

### Actual Behavior
App does not show local images

### To Reproduce
Clone https://github.com/whyboris/Video-Hub-App
Run the app, create a ""hub"" (give it a folder with videos) and it will create a gallery of images.
Exit the app, update to Electron 9 (comment out 2 lines of `shell.openItem`) and run app again

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots

![image](https://user-images.githubusercontent.com/17264277/82849048-31880d80-9ec4-11ea-95fc-6639cf36e858.png)


### Additional Information
<!-- Add any other context about the problem here. -->
",zcbenz;codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;9-x-y;12-x-y;13-x-y,2020-05-26T00:13:35Z,2021-04-07T01:46:23Z,whyboris,codebytere;whyboris;astoilkov;lyswhut;JonasKruckenberg;ethan-ou;irelance;venuseo;Bug-Reaper;linonetwo;zerrol;jdzl;ChamHerz;miki-long;ShanZiJun;jcc,codebytere,,codebytere,,zcbenz,
electron/electron,23768,"Electron 9.00 - checkbox not using accent color on Mac <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.0
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * 8.3.0

### Expected Behavior
checkboxes should use the accent color that is set in System Preferences > General

### Actual Behavior
checkboxes remain blue

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
using electron fiddle:
https://gist.github.com/e27800f409182981352b68a90690c4a6

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
<img width=""759"" alt=""checkbox-accent-color"" src=""https://user-images.githubusercontent.com/1267580/82912561-8a5fb080-9f6d-11ea-9612-26bedf702a3c.png"">
### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;blocked/upstream 閴;9-x-y,2020-05-26T14:26:35Z,2021-07-15T20:16:36Z,dgmid,codebytere;jlongster;erickzhao,codebytere,,codebytere,,codebytere,
electron/electron,23838,"Incorrect UnhandledPromiseRejectionWarning for asynchronous called async function ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v9.0.0
* **Operating System:**
  * Windows 10 (1909)
* **Last Known Working Electron version:**
  * Not sure

### Expected Behavior
UnhandledPromiseRejectionWarning warnings should not be printed since all promise rejections are handled.
Similar script executed in plain Node.js project (not Electron) with recent Node version (v12.16.1) does not produce these warnings.

### Actual Behavior
UnhandledPromiseRejectionWarning warnings are printed even though all promise rejections are handled.

### To Reproduce
```sh
git clone https://github.com/ivanggq/electron-async-vs-promise-issue.git -b master
cd electron-async-vs-promise-issue/
npm install
npm start
```

### Screenshots

### Additional Information
The focus of this bug is that the UnhandledPromiseRejectionWarning is printed only under the following conditions:
 - only for function f3(),
 - only when executed under Electron (it is not printed under plain Node project), and, 
 - only when the function is called asynchronously (from a setTimeout() callback)

If any of the above conditions is changed, the warning is not printed. It is not printed
 - for functions f1() and f2(), or,
 - when executed from plain Node.js project (Electron-specific parts should be removed from the script), or, 
 - when the functions are called directly from the main script (not from setTimeout() callback)

I am looking to get answer/discussion to the  following questions:
 - Why the UnhandledPromiseRejectionWarning warning is printed when executed from Electron but not when executed in a plain Node.js project?
 - Technical explanation of under-the-hood difference between f1/f2 and f3? Is an additional promise created/destroyed leading to some internal detection logic to complain? Why is the warning printed twice?
 - Why this happens only when executed from an asynchronous callback?
 - Is there any incorrect behavior in Electron or Node.js that should be fixed? If the outcome is correct, this means the code I submit is wrong. Can you point me to documentation or technical specification explaining why f3 is wrong or discouraged, if so?

```
const { app } = require('electron');

const f1 = async () => {
    throw 'oops';
}

const f2 = () => {
    return new Promise((_, reject) => {
        reject('oops');
    });
}

const f3 = async () => {
    return new Promise((_, reject) => {
        reject('oops');
    });
}

setTimeout(() => {
    f1().catch((error) => {
        console.log('1 caught', error);
    });
}, 1000);

setTimeout(() => {
    f2().catch((error) => {
        console.log('2 caught', error);
    });
}, 2000);

setTimeout(() => {
    f3().catch((error) => {
        console.log('3 caught', error);
    });
}, 3000);

setTimeout(() => app.exit(), 4000);
```
Output:
```
1 caught oops
2 caught oops
(node:21316) UnhandledPromiseRejectionWarning: oops
(node:21316) UnhandledPromiseRejectionWarning: oops
(node:21316) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
(node:21316) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
(node:21316) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:21316) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
3 caught oops
(node:21316) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 3)
(node:21316) PromiseRejectionHandledWarning: Promise rejection was handled asynchronously (rejection id: 3)
```
",codebytere,platform/windows;bug :beetle:;9-x-y,2020-05-29T01:51:07Z,2020-06-17T17:08:11Z,ivanggq,codebytere,codebytere,,codebytere,,deepak1556,
electron/electron,23910,"[Win] libuv loop stops working in a native addon after page reload. ### Issue Details

* **Electron Version:** 9.0.0 (beta versions of 9.0.0 too)
* **Operating System:** Windows 10 1903
* **Last Known Working Electron version:** 7.2.4

### Repro steps
1. **require** a native module in a Renderer process (on a page)
2. call libuv function **uv_queue_work** 5 times
3. get **uv_after_work_cb** invoked 5 times
4. reload the page 
5. call libuv function **uv_queue_work** 5 times once more

### Expected Behavior
6. get **uv_after_work_cb** invoked 5 times

### Actual Behavior
6. get **uv_after_work_cb** invoked 1 or 2 times, remaining ones never get invoked by libuv

### To Reproduce
I prepared a sample project with minimal code that demonstrates the problem:
>>> https://github.com/jphw/libuv_problems

Please read the README.MD and check src/libuv_problems_module.cpp sources.

### Additional Information
**app.allowRendererProcessReuse = false;**  works as a workaround for this issue
",ckerr;codebytere,platform/windows;bug :beetle:;9-x-y;11-x-y,2020-06-02T16:02:38Z,2020-10-13T16:19:46Z,jphw,aabuhijleh;nornagon;ckerr;Jiahui-Yan,codebytere;sofianguy,,jkleinsc;codebytere,,codebytere,
electron/electron,24105,"macOS: powerMonitor 'shutdown' event is emitted when quitting from the dock icon ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.
    * Issue https://github.com/electron/electron/issues/15022 reports the same issue, but it was closed without a satisfying resolution

### Issue Details

* **Electron Version:**
  * 8.1.1
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
The [powerMonitor shutdown event](https://www.electronjs.org/docs/api/power-monitor#event-shutdown-linux-macos) description says that it is emitted when ""the system is about to reboot or shut down"". Based on the description I would expect this event to be emitted only when the OS is about to shut down or reboot.

### Actual Behavior

The powerMonitor shutdown event is also emitted on macOS when the user quits the app from the dock icon (right click on dock icon > Quit).

https://github.com/electron/electron/issues/15022 reports the same issue, but it was closed as ""expected behavior"", but that does not seem correct to me because the behavior does not match the documentation. If this really is expected behavior then I think the documentation should be updated to reflect the actual behavior.

### To Reproduce
Electron Fiddle gist link: https://gist.github.com/jwonderly/25681d6dd6cd4b4af590cb2f30f8ecac

Run the Fiddle on macOS and quit the app from the dock icon. A dialog box will pop up when the powerMonitor 'shutdown' event is emitted.

### Additional Information

Electron might be able to use [NSWorkspaceWillPowerOffNotification](https://developer.apple.com/documentation/appkit/nsworkspacewillpoweroffnotification?language=objc) as the trigger for the powerMonitor shutdown event on macOS.
",codebytere,platform/macOS;bug :beetle:,2020-06-12T14:54:51Z,2020-06-16T01:58:29Z,jwonderly,codebytere;jwonderly,codebytere,,codebytere,,codebytere,
electron/electron,24196,"Tray event click & double-click not working after setContextMenu on macOS <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [v] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [v] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [v] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.4
* **Operating System:**
  * macOS 10.15.4


### Expected Behavior
[macOS]Tray event click , double-click & right-click will triggle after setContextMenu.

### Actual Behavior
Tray event click , double-click & right-click not fired after setContextMenu.
But when I remove setContextMenu, they can be fired again.

### Additional Information
[Windows] Behavior is Ok. Maybe contextmenu event prevent to popup?
",codebytere,platform/macOS;component/tray;bug :beetle:;9-x-y,2020-06-18T10:09:58Z,2020-06-22T15:24:48Z,irelance,codebytere;irelance,codebytere,codebytere,codebytere,,codebytere,
electron/electron,24216,"Mac Modal windows should not have rounded corners <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.4
* **Operating System:**
  * macOS 10.15.4
* **Last Known Working Electron version:**
  * 8x

### Expected Behavior
Mac os modal windows that are attached to the parent window as a sheet should have square corners and no border.

### Actual Behavior
In Electron 9.0.4 modal windows attached to the parent window have rounded corners and a border like the parent window

### To Reproduce
Create a parent window with a modal window attached

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
Example of a modal window using Electron 8x
<img width=""607"" alt=""electron-8x"" src=""https://user-images.githubusercontent.com/1267580/85196606-89efd680-b2db-11ea-9062-a4518076cba2.png"">

Example of a modal window using Electron 9.0.4
<img width=""618"" alt=""electron-9x"" src=""https://user-images.githubusercontent.com/1267580/85196613-9411d500-b2db-11ea-8cce-72bc933454bb.png"">


### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;9-x-y,2020-06-20T07:51:38Z,2020-06-24T14:30:50Z,dgmid,dgmid;codebytere,codebytere,codebytere,codebytere,,codebytere,
electron/electron,24244,"powerMonitor does not fire 'suspend"" event  <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.2
* **Operating System:**
  * Windows 10<!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
electron.remote.powerMonitor should have fired the 'suspend' event and eventually 'The system is going to sleep' should have been printed in the console.
<!-- A clear and concise description of what you expected to happen. -->

### Actual Behavior
No event is received.
<!-- A clear and concise description of what actually happened. -->

### To Reproduce
Try to put your computer on sleep from the Start menu of windows.
And then check the logs after unlocking the computer after some time.
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

[Github Gist link](https://gist.github.com/gupta-shivam/d364e186dfc0a2cd177c9078c9a576eb)
<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/windows;bug :beetle:;9-x-y,2020-06-23T00:08:45Z,2020-06-24T14:28:30Z,gupta-shivam,gupta-shivam;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,24290,"Web Notifications API: notifications don't always close from Mac Notification Center when close function is called ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v8.3.1
* **Operating System:**
  * macOS 10.14.6
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
I have a simple electron app that generates a notification when a button is clicked. Before the new notification is generated, `close()` is called on the last notification. I would expect that each time the button is clicked, the existing notification closes and a new one pops up.

### Actual Behavior
When the button is clicked a new notification is generated, but the old notification does not close. It is important to note that I am logging in the `onclose` event handler for all notifications, and this log shows that all notifications are being closed successfully even though they remain in the Mac Notification Center. I also have logs in the `onerror` event handler for each notification, and these logs are never getting printed, so no errors are occurring.

### To Reproduce
Using the sample app provided in the fiddle link below, click on the 'Generate Notification' button ~20 times. Do some clicks back to back, and spread out some clicks by a few seconds. Check the Mac Notification Center and you will see that most of the notifications are still there, even though only the most recent notification should be there. There are rare occasions where the close does work, but it is still unknown how to reproduce this result consistently. Check the renderer logs as well to see that the `onclose` function was triggered for each notification, even though they are still in the Notification Center.

**Electron Fiddle Link**: https://gist.github.com/fd16a663434667d2096cd31ec7f2662f

### Additional Information
This problem is only seen when running an electron app on Mac. If you run the exact renderer.js and index.html files from the fiddle code in a real chrome web browser, it works correctly (old notifications always clear when new ones come in).
I have confirmed that `nodeIntegration` and the notification option `requireInteraction` have no effect on this regardless of if their values are true or false.",codebytere,platform/macOS;bug :beetle:;component/notifications,2020-06-24T20:17:15Z,2020-07-03T06:04:33Z,jflasch,,codebytere,,codebytere,,codebytere,
electron/electron,24407,"Multiple app dock icons shown <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 9.0.5
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> macOS 10.15.5
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> not sure

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
With the example program at [https://github.com/CyrusRoshan/electron-multiple-dock-icon](https://github.com/CyrusRoshan/electron-multiple-dock-icon), I would expect the dock icon to be hidden after the initial click, or multiple quick clicks in succession.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
If clicking once, dock icon behaves as expected, and disappears. If quickly clicking multiple times, dock icons are quickly added. These dock icons persist after app shutdown.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Clone and run this [electron-quick-start fork](https://github.com/CyrusRoshan/electron-multiple-dock-icon), then quickly click the dock icon.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![image](https://user-images.githubusercontent.com/8443502/86441896-c3ecaf80-bcc1-11ea-8fda-619506d19331.png), can also upload a video if that'd help.



### Additional Information
<!-- Add any other context about the problem here. -->
This may have something to do with the following lines:

```
win.show();
win.setVisibleOnAllWorkspaces(true);
win.setAlwaysOnTop(true, 'pop-up-menu');
win.hide();
```

which are used for keeping BrowserWindows always on top [over fullscreen apps](https://github.com/electron/electron/issues/10078#issuecomment-331581160).",zcbenz,platform/macOS;bug :beetle:,2020-07-03T07:14:16Z,2020-09-03T11:46:25Z,CyrusRoshan,CyrusRoshan;bpasero,sofianguy,zcbenz,zcbenz,,zcbenz,
electron/electron,24456,"Printing hangs with pageSize Object * **Electron Version:**
v9.0.1
* **Operating System:**
Linux 5.7.4-arch1-1
### Expected Behavior
I expect it to print.

### Actual Behavior
The printing hangs.

### To Reproduce
```javascript
const { remote } = require ('electron');

const { BrowserWindow } = remote;
const win = new BrowserWindow();

win.loadURL('https://google.com');

win.webContents.on('did-finish-load', () => {
  win.webContents.print({ pageSize: { height: 88.6, width: 35.7 } }, (success, error) => {
    if(!success) console.error(error);
  })
})
```
Here is a fiddle of the error `https://gist.github.com/81597c2a1f33779c7083194b4590f55c`


",codebytere,platform/linux;component/printing;bug :beetle:;9-x-y;10-x-y,2020-07-08T09:16:08Z,2020-07-10T16:42:23Z,TheSinding,codebytere;TheSinding,sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,24458,"Save as PDF from PDF Viewer Print dialog fails <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.1.0
* **Operating System:**
  * macOS Mojave 10.14.6
* **Last Known Working Electron version:**
  * just v9. Because in electron version 9 was introduce ""pdf viewer"", but now it cant print pdf.

### Expected Behavior
just print correctly the pdf...

### Actual Behavior
when you try to print with ""window.print()"" a page that load a PDF electron do not respond.... sometimes crash...

### To Reproduce
just clone ""electron-quick-start"" and replace this line :
 mainWindow.loadFile('index.html') 
 for 
 mainWindow.loadURL('http://www.africau.edu/images/default/sample.pdf')
and replace all content script ""preload.js"" for:

window.addEventListener('DOMContentLoaded', () => {
  window.print();
});

this is a example repo to reproduce the error: 
https://github.com/rgarcia1990/electron-quick-start

just do the normal setup

$ git clone https://github.com/rgarcia1990/electron-quick-start
$ npm install
$ npm start || electron .

and when the app electron start will popup print dialog, just try to print!

that is all!",codebytere,platform/macOS;component/printing;bug :beetle:;component/pdf-viewer;9-x-y;10-x-y;11-x-y,2020-07-08T13:57:24Z,2020-10-17T01:30:47Z,rgarcia1990,Lawrence0528;KasperSommer;irafaelfurtado;codebytere;FrankWangZY;geesen;aidanjacobson;LFdeWeb;KaminoRyo;michel-smarticket;mfmatt;fulfillrite;Phillips126;squalle0nhart;githubBrandon,sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,24499,"powerMonitor does not fire 'suspend"" event, Re:open 24244 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.4.0
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
Again opening issue [24244](https://github.com/electron/electron/issues/24244) as its not working even after the new changes.

electron.remote.powerMonitor should have fired the 'suspend' event and eventually 'The system is going to sleep' should have been printed in the console.
<!-- A clear and concise description of what you expected to happen. -->

### Actual Behavior
No event is received.
<!-- A clear and concise description of what actually happened. -->

### To Reproduce
I tried both the scenarios, but it is not working
1) to explicitly put the computer on sleep and hibernate
2) to wait for some time as selected in power options, and let it automatically go to sleep.
Try using this Gist link
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
[Gist URL link](https://gist.github.com/gupta-shivam/d364e186dfc0a2cd177c9078c9a576eb)
<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",zcbenz,platform/windows;bug :beetle:;8-x-y,2020-07-10T05:46:39Z,2020-08-24T20:09:38Z,gupta-shivam,alexeykuzmin;gupta-shivam;zcbenz,sofianguy,,zcbenz,,codebytere,electron/electron#24244;
electron/electron,24577,"assert.ok(false) throws TypeError instead of AssertionError <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.0.0 (also tested with `electron-nightly@11.0.0-nightly.20200708`)
* **Operating System:**
  * macOS 10.15.5
* **Last Known Working Electron version:**
  * 7.3.2

### Expected Behavior
```
$ yarn add electron@8.0.0
$ node_modules/electron/dist/Electron.app/Contents/MacOS/Electron -i
> require('assert').ok(false)
Thrown:
AssertionError [ERR_ASSERTION]: false == true
    at repl:1:19
    at Script.runInContext (vm.js:137:20)
    at REPLServer.defaultEval (repl.js:386:29)
    at bound (domain.js:420:14)
    at REPLServer.runBound [as eval] (domain.js:433:12)
    at REPLServer.onLine (repl.js:700:10)
    at REPLServer.emit (events.js:203:13)
    at REPLServer.EventEmitter.emit (domain.js:476:20)
    at REPLServer.Interface._onLine (readline.js:316:10)
    at REPLServer.Interface._line (readline.js:693:8) {
  generatedMessage: true,
  code: 'ERR_ASSERTION',
  actual: false,
  expected: true,
  operator: '=='
}
```

### Actual Behavior
```
$ yarn add electron@8.0.0
$ node_modules/electron/dist/Electron.app/Contents/MacOS/Electron -i
> require('assert').ok(false)
Thrown:
TypeError: call.getFileName is not a function
    at getErrMessage (assert.js:270:25)
    at innerOk (assert.js:361:17)
    at Function.ok (assert.js:381:3)
    at repl:1:19
    at Script.runInContext (vm.js:127:20)
    at REPLServer.defaultEval (repl.js:406:29)
    at bound (domain.js:420:14)
    at REPLServer.runBound [as eval] (domain.js:433:12)
    at REPLServer.onLine (repl.js:715:10)
    at REPLServer.emit (events.js:210:5)
```
### To Reproduce
See expected/actual behavior.

### Additional Information
I'm assuming this is an Electron bug since it works fine from the node interpreter. If that's not the case please let me know and I can open an issue with the node project.

```
$ node
> process.versions.node
'12.13.0'
> require('assert').ok(false)
Thrown:
AssertionError [ERR_ASSERTION]: false == true
    at repl:1:19
    at Script.runInThisContext (vm.js:116:20)
    at REPLServer.defaultEval (repl.js:404:29)
    at bound (domain.js:420:14)
    at REPLServer.runBound [as eval] (domain.js:433:12)
    at REPLServer.onLine (repl.js:715:10)
    at REPLServer.emit (events.js:215:7)
    at REPLServer.EventEmitter.emit (domain.js:476:20)
    at REPLServer.Interface._onLine (readline.js:316:10)
    at REPLServer.Interface._line (readline.js:693:8) {
  generatedMessage: true,
  code: 'ERR_ASSERTION',
  actual: false,
  expected: true,
  operator: '=='
}
```",codebytere,bug :beetle:;component/node-integration;9-x-y;10-x-y,2020-07-15T21:57:34Z,2020-07-20T19:41:53Z,ianhattendorf,,codebytere,,codebytere,,codebytere,
electron/electron,24630,"Invalid document.visibilityState on webview unloading <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
v10.0.0-beta.12
* **Operating System:**
Ubuntu 20.04 x64

### Expected Behavior
The value of document.visibilityState should be 'hidden' on a webview unloading.

### Actual Behavior
The visibilitychange event is triggered between the beforeunload and unload event but document.visibilityState remains 'visible'.

### To Reproduce
I have attached an example to compare the behavior between Electron and a browser : [webview-visibilitystate-unload.zip](https://github.com/electron/electron/files/4938374/webview-visibilitystate-unload.zip)

Chromium output (webview.html) : 
```
visibilityState beforeunload visible
visibilityState visibilitychange hidden
visibilityState unload hidden
```
Electron output (main) : 
```
visibilityState beforeunload visible
visibilityState visibilitychange visible
visibilityState unload visible
```

",codebytere,platform/linux;bug :beetle:;10-x-y;stale,2020-07-17T14:38:27Z,2022-11-07T02:18:10Z,drivron,ckerr,ckerr,,ckerr,,,
electron/electron,24777,"Adding a MenuItem with a CommandOrControl+W accelerator will prevent ""About AppName"" to close on macOS ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.5
* **Operating System:**
  * macOS 10.15.6

### Expected Behavior

[MenuItem](https://www.electronjs.org/docs/api/menu-item#new-menuitemoptions ) docs says:

> browserWindow BrowserWindow | undefined - This will not be defined if no window is open.

Any opened and focused window created by Electron should be closable with accelerator.

### Actual Behavior

An error occurs and the About window can't be closed with keyboard shortcut (clicking red x works). In other words, the **Menu item click callback doesn't receive the About window as focused window in its second argument.**

### To Reproduce

See Electron Fiddle: https://gist.github.com/087a1cb3564c9ece5047b57fc9626872

Setup the following menu:
```js
  const APP_NAME = 'APP_NAME'
  Menu.setApplicationMenu(Menu.buildFromTemplate([
    {
      label: APP_NAME,
      submenu: [
        {
          label: `About ${APP_NAME}`,
          role: 'about',
        },
      ]
    },
    {
      label: 'File',
      submenu: [
        {
          label: 'Close',
          // Don't use role custom in order to handle close logic manually
          // role: 'close',
          accelerator: 'CommandOrControl+W',
          click(_, focusedWindow) {
            // Issue: focusedWindow is undefined when trying to close ""About APP_NAME"" with keyboard accelerator
            focusedWindow.close()
          },
        },
      ],
    },
  ]))
```


### Screenshots

<img width=""800"" alt=""Screenshot 2020-07-29 at 11 30 39"" src=""https://user-images.githubusercontent.com/1636460/88789715-f8536e80-d18e-11ea-82c3-bf5d2c250ccb.png"">",codebytere,platform/macOS;status/wontfix 棣冩瘒;bug :beetle:;9-x-y,2020-07-29T10:37:46Z,2020-08-04T17:14:59Z,dmnsgn,codebytere;dmnsgn,ckerr;codebytere,,codebytere,,codebytere,
electron/electron,24780,"The maximize event is triggered twice <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  9.1.0

* **Operating System:**
  Windows 10

* **Last Known Working Electron version:** 
 9.1.0

### Expected Behavior

one

### Actual Behavior

twice

### To Reproduce

1.  First, get the bug replay code:

```sh
$ git clone https://github.com/kaysonwu/electron-quick-start.git -b master
$ yarn install
$ yarn dev
```

2. When the program runs for the first time, click on the title bar

3. In the developer tool console page, you can see the event output twice

### Screenshots

![20200729202825](https://user-images.githubusercontent.com/14865584/88800044-14303200-d1da-11ea-84a5-97331e21f1cf.png)

### Additional Information

Similar: [https://github.com/electron/electron/issues/23275#issuecomment-635253811](https://github.com/electron/electron/issues/23275#issuecomment-635253811)",zcbenz,platform/windows;bug :beetle:;status/confirmed;9-x-y;10-x-y,2020-07-29T12:30:26Z,2020-08-24T20:32:09Z,kaysonwu,kaysonwu;ckerr;zcbenz,ckerr;zcbenz,zcbenz,zcbenz,,codebytere,
electron/electron,24803,"PowerMonitor ""resume"" and ""suspend"" event send twice on macOS <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
When I upgrade the electron version 6.1.9 to 8.4.0, the PowerMonitor module ""resume"" and ""suspend"" event send twice on macOS.

useage:
```
app.on(""ready"", () => {
    const { powerMonitor } = require('electron')
    
    powerMonitor.on('suspend', () => {
        mainLog.info('system suspend.')
        mainWindow.webContents.send('system-status', 'suspend');
    });

    powerMonitor.on('resume', () => {
        mainLog.info('system resume.')
        mainWindow.webContents.send('system-status', 'resume');
    });
});
```
electron-log, main.log:
```
[2020-07-31 11:29:41.926] [info] system suspend.
[2020-07-31 11:29:41.933] [info] system suspend.
[2020-07-31 11:30:20.169] [info] system resume.
[2020-07-31 11:30:21.963] [info] system resume.
```
* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->8.4.0

* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS 10.15.6
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->8.4.0

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
just one times ""resume"" and ""suspend"" event.
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
i receive twice same events.
### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,bug :beetle:;component/powerMonitor;8-x-y,2020-07-31T03:39:04Z,2020-08-05T03:08:46Z,sevilen,codebytere;sevilen;DangerBlack,codebytere,,codebytere,,codebytere,
electron/electron,24830,"Electron using Chrome color picker instead of operating system default ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 9.X.X. + 
* **Operating System:** macOS 10.15.3
* **Last Known Working Electron version:** 8.X.X

### Expected Behavior
Whenever a color input is clicked on, Electron used to open the systems native color picker. 

For macOS, it used to be: https://developer.apple.com/documentation/appkit/nscolorpanel 

### Actual Behavior
Now, it appears to be using a less capable one that ships with Google Chrome.

### To Reproduce
Simply create the following field: <input type=""color"">

### Screenshots
<img width=""252"" alt=""Screen Shot 2020-08-04 at 9 33 08 PM"" src=""https://user-images.githubusercontent.com/2031235/89317191-ab91fb00-d69a-11ea-9652-ea3e3ab90075.png"">

![unnamed](https://user-images.githubusercontent.com/2031235/89317409-eeec6980-d69a-11ea-9e62-356ffb1d010a.png)

",codebytere,platform/macOS;bug :beetle:;9-x-y,2020-08-04T16:08:48Z,2020-09-20T00:12:02Z,msavin,codebytere;msavin;t57ser,codebytere,codebytere,codebytere,,codebytere,
electron/electron,24959,"Creating a folder in the showOpenDialog hides the native dialog behind the app (macOS Catalina only) ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.2.0
* **Operating System:**
  * macOS 10.15.6

### Expected Behavior
After clicking the ""Create"" button, the dialog should stay focused

### Actual Behavior
After clicking the ""Create"" button, the dialog the app main window is focused and hides the native dialog

### To Reproduce
* Install the latest [electron API demos](https://github.com/electron/electron-api-demos) app
* Run the app
* Navigate to ""Use system dialogs""
* Expand the ""Save Dialog"" section
* Click View Demo
* In the file picker dialog, click the ""New Folder"" button
* Enter a name and click the ""Create"" button


### Screenshots
![2020-08-12 14 20 48](https://user-images.githubusercontent.com/11858527/90052576-54e27d80-dca7-11ea-976e-73a654feaf10.gif)


### Additional Information
We tested on macOS 10.13 without any issues, seems a Catalina issue.
",zcbenz,platform/macOS;bug :beetle:;9-x-y;10-x-y;stale,2020-08-12T18:33:26Z,2022-11-07T02:17:22Z,ThomasSzabo,zcbenz;ThomasSzabo;twitharshil,zcbenz,,zcbenz,,zcbenz,
electron/electron,24991,"Two BrowserView loadUrl (or loadFile) without  await will cause upload file error in renderer process OS: `windows 10`
Electron: `9.2.0` `9.1.2` `9.0.0` `8.5.0` `7.3.0`

Main process code:
```javascript
const mainWindow = new BrowserWindow({
  width: 800,
  height: 600,
  webPreferences: {
    nodeIntegration: true,
    webSecurity:false
  }
})
let view1 = new BrowserView({
    webPreferences: {
      nodeIntegration: true,
      devTools: true,
      webSecurity: false,
    },
  });
mainWindow.setBrowserView(view1);
let size = mainWindow.getSize();
view1.setBounds({
  x: 0,
  y: 0,
  width: size[0],
  height: size[1],
});
view1.setAutoResize({
  width: true,
  height: true,
});
view1.webContents.loadFile(`index.html`)
view1.webContents.openDevTools({ mode: ""undocked"" })
let view2 = new BrowserView({
  webPreferences: {
    nodeIntegration: true,
    devTools: true,
    webSecurity: false,
  },
});
view2.webContents.loadFile(`index.html`);
```

Renderer process code
```javascript
//HTML
// <input id=""fileInput"" type=""file"" />
postFile = (data)=> {
  let _url = 'https://******.com/upload'
  return fetch(_url, {
    method: 'POST',
    body: data,
  }).then(response => response.json())
    .catch(error => {
      console.error(error)
    })
}
let fileInput = document.getElementById(""fileInput"")
fileInput.addEventListener('change', function() {
  var file = fileInput.files[0];
  let formData = new FormData()
  formData.append('filetype', 'image')
  formData.append('file', file)
  postFile(formData);
});
```
Error:

> POST https://******.com/upload net::ERR_ACCESS_DENIED

Description:
When add `await` before `view1.webContents.loadFile`,the renderer process will work correctly.",zcbenz,bug :beetle:,2020-08-17T01:34:43Z,2020-08-28T01:43:08Z,xland,zcbenz;xland,zcbenz,zcbenz,zcbenz,,zcbenz,
electron/electron,25013,"webContents.print()'s pageRanges property is not honored <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->9.2.0
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->win10
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
[this is config](https://www.electronjs.org/docs/api/web-contents#contentsprintoptions-callback)
<!-- A clear and concise description of what you expected to happen. -->The saved PDF has a custom `header`, and the `pageRanges` is work.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
`header` and `pageRanges` is not work.
### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->
[my electron fiddle](https://gist.github.com/36d96e2fe459dab8ffed2a764d751528)
<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![image](https://user-images.githubusercontent.com/19225429/90504323-7d74e680-e183-11ea-86df-6f6925e77616.png)


### Additional Information
<!-- Add any other context about the problem here. -->
Finally, who can tell me how to determine the total number of pages generated by the printer system of Chrome?
",codebytere,platform/windows;platform/macOS;bug :beetle:;status/confirmed;9-x-y;10-x-y;has-repro-gist,2020-08-18T10:50:05Z,2020-08-28T03:21:30Z,Linbubin,ckerr;Linbubin,ckerr;codebytere,,codebytere,,codebytere,
electron/electron,25033,"webcontents.print(options,callback) An object could not be cloned <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [閳 ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ 閳姝 I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [閳 ] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.2.0
* **Operating System:**
  *  Windows 10
* **Last Known Working Electron version:**

### Expected Behavior
 call the webcontents.print(options,callback) then work like the official document say

### Actual Behavior
throw exception electron/js2c/renderer_init.js:126 Uncaught (in promise) Error: An object could not be cloned.
    at EventEmitter.t.ipcRendererInternal.send.t.ipcRendererInternal.invoke


### To Reproduce
![image](https://user-images.githubusercontent.com/60084325/90603165-71ddfa00-e22d-11ea-8b64-27eaa729fdd4.png)

### Detail
official document 
```
const options = { silent: true, deviceName: 'My-Printer' }
win.webContents.print(options, (success, errorType) => {
  if (!success) console.log(errorType)
})
```
me
```
                const webview = document.querySelector(""webview"")
                webview.addEventListener('ipc-message', (event) => {
                    if (event.channel === 'webview-print-do') {
                        let options = {
                            silent: true,
                            copies: 2,
                            printBackground: true,
                            deviceName: 'MyPrinterName'
                        }
                        webview.print(options, (success) => {
                            console.log('callback', success);
                        })
                    }
                })
```
when i change the options object params into an Array like this [options ].
it work but the slient printing and callback is still not work(it also the same in version 4.0.0)
",codebytere,component/printing;bug :beetle:;platform/all;blocked/need-repro;9-x-y,2020-08-19T07:09:55Z,2020-12-28T22:27:54Z,xxxace,codebytere;xxxace;jiyarong;zhangxu924,codebytere,,codebytere,,codebytere,
electron/electron,25062,"Notification reply stop working after click on notification <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 8.5.0
* **Operating System:**
  * macOS 10.15.5
* **Last Known Working Electron version:**
  * none

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
After `click` on the notification that is in the reply mode one of the following should apply:
- don't destroy notification and provide additional property with `event`, that includes information if notification is in the reply mode or not.
- close notification completely (remove it from the screen)

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Clicking on notification when in reply ""mode"", doesn't remove notification from the screen, but all the listeners are destroyed.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Issues is reproducible with `NSUserNotificationAlertStyle` set to `alert` or `banner`

Main Process:
```ts
let notification;
app.on('ready', () => {
  notification = new Notification({
    title: 'Title',
    body: 'Notification body',
    hasReply: true,
  });
  notification.on('reply', (ev, reply) => {
    console.log('Reply: ', reply);
  });
  notification.show();
});
```

1. When notification appears click on the `reply` button.
2. Start typing text
3. Click on the notification body
4. Click `reply` to send text from input

Result:
`reply` callback is not executed.
Nothing appears in the console.

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
Notification in reply mode (waiting for input):
<img width=""358"" alt=""Screenshot 2020-08-20 at 14 29 33"" src=""https://user-images.githubusercontent.com/27143015/90770210-b9c65500-e2f1-11ea-98c9-111fbb74a0a1.png"">

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;component/notifications;status/confirmed;8-x-y,2020-08-20T13:00:03Z,2020-08-24T04:27:47Z,Artemyanen,SimplyAhmazing;codebytere,ckerr;codebytere,,codebytere,,codebytere,
electron/electron,25115,"Electron 10.0.0 App Store Rejected - Private API - Framework/_CGFontRenderingGetFontSmoothingDisabled <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.

### Issue Details

* **Electron Version:** 
  * 10.0.0

### Rejection Email
Guideline 2.5.1 - Performance - Software Requirements

Your app includes a version of an SDK from Electron that violates the App Store Review Guidelines. The version of the Electron SDK you are using in your app attempts to hide the use of private APIs. This is a violation Section 2.5.1 of the App Store Review Guidelines.

閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/_CGFontRenderingGetFontSmoothingDisabled

Guideline 2.5.1: Apps may only use public APIs.

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;app-store,2020-08-25T00:05:30Z,2020-08-26T04:13:43Z,bkervaski,,codebytere,,codebytere,,codebytere,
electron/electron,25127,"v10.0.0: cannot compile wasm when contextIsolation is enabled <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [ x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 --> 10.0.0
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> macOS 10.14.6
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> 9.2.1

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Wasm should be allowed to compile when contextIsolation is enabled, as it did in v9.2.1.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

Wasm compilation fails:

<img width=""1125"" alt=""Screen Shot 2020-08-25 at 4 24 19 PM"" src=""https://user-images.githubusercontent.com/3028875/91225978-63db1e00-e6f2-11ea-9a70-7595d51969f9.png"">

Turning off contextIsolation fixes the problem.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->

Note that this error is different from #25066, in which it was clarified that Node is not available to the web page and emscripten when contextIsolation is turned on. In this case, it looks like the browser is not permitting wasm compilation at all.",codebytere,platform/macOS;bug :beetle:;10-x-y,2020-08-25T20:55:35Z,2020-10-08T19:26:02Z,ericmandel,quanglam2807;codebytere;ericmandel;saghul;poiru;nornagon,sofianguy;codebytere,nornagon,codebytere,,codebytere,
electron/electron,25152,"Save dialog: cannot provide a extension to pick when specifying multiple ### Issue Details

* **Electron Version:**
  * `9.2.1`
* **Operating System:**
  * `macOS 10.15`

### Expected Behavior
I can specify an extension to pick in the save dialog when multiple are provided.

### Actual Behavior
A random extension is picked from the list.

### To Reproduce
Bring up a dialog on macOS like this:

```js
dialog.showSaveDialog(mainWindow, {
    filters: [
      {
        name: 'Python',
        extensions: [
          'py',  'rpy',
          'pyw', 'cpy',
          'gyp', 'gypi',
          'pyi', 'ipy'
        ]
      },
    ]
  });
```

I would expect that the first extension is picked (`py`) and not `gyp`.

### Screenshots
![image](https://user-images.githubusercontent.com/900690/91400284-ac542200-e83f-11ea-81bb-2f987099b6d7.png)

",codebytere,platform/macOS;bug :beetle:;component/dialog;status/confirmed,2020-08-27T06:31:34Z,2020-08-28T16:40:48Z,bpasero,bpasero;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,25153,"[v10.0.0] Failure of transparent in Linux 
### Preflight Checklist
* [ x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [ x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
Transparent failed in v10.0.0 and v11.0.0-beta. 1, but normal in v4-v9.
```js
const onAppReady = () =>{
  let parent = new BrowserWindow({
    width: 300,
    height: 300,
    transparent: true,
    frame: true
  })
  parent.loadFile('main.html')
}

app.on('ready', () =>setTimeout(onAppReady, 500))
```

* **Electron Version:**
v10.0.0 and v11.0.0-beta.1
* **Operating System:**
x86_64 Linux version 5.4.50-amd64-desktop (deepin@deepin-PC)
(gcc version 8.3.0 (Uos 8.3.0.3-3+rebuild))

* **Last Known Working Electron version:**
v9.2.1

### Screenshots
v9.2.1
![image](https://user-images.githubusercontent.com/24741025/91416281-c151a500-e881-11ea-862c-730e7fb769f4.png)
v10.0.0
![image](https://user-images.githubusercontent.com/24741025/91416474-02e25000-e882-11ea-96d4-a5a60e2e4c73.png)

### Additional Information
I have tested v4/v5/v9 are normal, only v10 - v11 failed.
",ckerr;codebytere,platform/linux;component/transparent;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;10-x-y;has-repro-gist;11-x-y;12-x-y;stale,2020-08-27T08:34:33Z,2022-11-06T02:23:02Z,yodagg,yodagg;NyaomiDEV;marius851000;Xaryphon;bundyo;davidcann;sudo-bcli;nikitalita;ckerr;DimPaDev;shubham-root,codebytere;ckerr,,codebytere;sofianguy,,,
electron/electron,25184,"Second socket on a session does not send Proxy-Authenticate for ntlm ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
* 9.0.0, 9.2.0, 9.2.1 0 All broken

* **Operating System:**
  * Windows 10 (1809)
* **Last Known Working Electron version:**
  * 8.5.0

### Expected Behavior
When requesting url's and having a socket connect, when it is rejected with proxy authentication required, consistently try again with the proxy authentication credentials.

### Actual Behavior
See logs - good and bad.
In the good logs, electron always makes a 2nd socket request with the proxy authentication headers and succeeds. In the bad logs, electron does not make a 2nd socket request.
Note that for the first socket request on a web page, it works, but when a second socket is opened to make requests it seems to fail.

### To Reproduce
Be behind a NTLM proxy that requires authentication for a domain
Visit a website that makes multiple requests so that multiple sockets are opened.
",miniak,bug :beetle:;9-x-y;10-x-y;11-x-y;12-x-y;13-x-y;14-x-y,2020-08-28T07:49:19Z,2021-06-21T05:06:52Z,lukeapage,lukeapage;cifratila;miniak;jkleinsc;Priyanka1709;nornagon;sofianguy,sofianguy;nornagon,,,,sofianguy,
electron/electron,25248,"AudioWorklet hangs UI when `nodeIntegrationInWorker` is enabled <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.0.1
  * 10.0.0-beta.10
  * 9.2.1
* **Operating System:**
  * Windows 10 (2004)
  * macOS 10.15.6
* **Last Known Working Electron version:**
  * 10.0.0-beta.9
  * Issue is seen in 10.0.0-beta.10

### Expected Behavior
AudioWorklets can be created and destroyed multiple times while `nodeIntegrationInWorker` is enabled.

### Actual Behavior
AudioWorklet can only be created and destroyed once. Upon creating a second AudioWorklet, the UI hangs indefinitely.

### To Reproduce
Electron Fiddle: https://gist.github.com/samuelmaddock/5430479c0a08eca3f693df2518c9887d

1. Load Audio Worklet examples directory: https://googlechromelabs.github.io/web-audio-samples/audio-worklet/
2. Open a demo and click start.
3. Navigate back and return to the demos directory.
4. Open another demo and click start.

UI should no longer be responsive.
",codebytere,platform/windows;platform/macOS;platform/linux;bug :beetle:;status/confirmed;10-x-y,2020-09-01T01:15:44Z,2020-10-14T03:58:40Z,samuelmaddock,ckerr;codebytere,sofianguy;ckerr,,sofianguy,,codebytere,
electron/electron,25253,"ready-to-show event is not fired and app window doesn't show <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.1.1
* **Operating System:**
  * Windows 10 (20H2)
* **Last Known Working Electron version:**
  * 9.0.0

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Calling `mainWindow.once('ready-to-show' ...)` and inside it `mainWindow.show()` after creating a new BrowserWindow() on windows shouldshow the main window when it is ready to show.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
The `mainWindow.once('ready-to-show' ...)` is not fired and window doesn't show.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
- Clone my [boilerplate](https://github.com/alexdevero/electron-react-webpack-boilerplate).
- Update electron to +10.0.0
- Start the app with `npm run`

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Additional Information

Content of `main.js`.

```
'use strict'

// Import parts of electron to use
const { app, BrowserWindow } = require('electron')
const path = require('path')
const url = require('url')

// Keep a global reference of the window object, if you don't, the window will
// be closed automatically when the JavaScript object is garbage collected.
let mainWindow

// Keep a reference for dev mode
let dev = false

// Broken:
// if (process.defaultApp || /[\\/]electron-prebuilt[\\/]/.test(process.execPath) || /[\\/]electron[\\/]/.test(process.execPath)) {
//   dev = true
// }

if (process.env.NODE_ENV !== undefined && process.env.NODE_ENV === 'development') {
  dev = true
}

// Temporary fix broken high-dpi scale factor on Windows (125% scaling)
// info: https://github.com/electron/electron/issues/9691
if (process.platform === 'win32') {
  app.commandLine.appendSwitch('high-dpi-support', 'true')
  app.commandLine.appendSwitch('force-device-scale-factor', '1')
}

function createWindow() {
  // Create the browser window.
  mainWindow = new BrowserWindow({
    width: 1024,
    height: 768,
    show: false,
    webPreferences: {
      nodeIntegration: true
    }
  })

  // and load the index.html of the app.
  let indexPath

  if (dev && process.argv.indexOf('--noDevServer') === -1) {
    indexPath = url.format({
      protocol: 'http:',
      host: 'localhost:8080',
      pathname: 'index.html',
      slashes: true
    })
  } else {
    indexPath = url.format({
      protocol: 'file:',
      pathname: path.join(__dirname, 'dist', 'index.html'),
      slashes: true
    })
  }

  mainWindow.loadURL(indexPath)

  // Don't show until we are ready and loaded
  mainWindow.once('ready-to-show', () => {
    mainWindow.show()

    // Open the DevTools automatically if developing
    if (dev) {
      const { default: installExtension, REACT_DEVELOPER_TOOLS } = require('electron-devtools-installer')

      installExtension(REACT_DEVELOPER_TOOLS)
        .catch(err => console.log('Error loading React DevTools: ', err))
      mainWindow.webContents.openDevTools()
    }
  })

  // Emitted when the window is closed.
  mainWindow.on('closed', function() {
    // Dereference the window object, usually you would store windows
    // in an array if your app supports multi windows, this is the time
    // when you should delete the corresponding element.
    mainWindow = null
  })
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)

// Quit when all windows are closed.
app.on('window-all-closed', () => {
  // On macOS it is common for applications and their menu bar
  // to stay active until the user quits explicitly with Cmd + Q
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', () => {
  // On macOS it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (mainWindow === null) {
    createWindow()
  }
})
```
",zcbenz,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;10-x-y,2020-09-01T09:07:06Z,2020-09-15T18:48:40Z,alexdevero,andmm;zcbenz;quanglam2807;ToldFable;ArtimesT,sofianguy,,sofianguy,,codebytere,
electron/electron,25264,"white border on top in aero peek when frameless window is maximized Follow up to https://github.com/electron/electron/pull/25052

![screen_2 (2)](https://user-images.githubusercontent.com/964386/91898177-32ada100-ec50-11ea-8da7-5a4f7f14d8a3.png)


Resolution: 1920 x 1080 @ 100% scaling

Another side effect of rounding error from GetBoundsForClientView",zcbenz,platform/windows;bug :beetle:;stale,2020-09-01T19:37:09Z,2022-11-06T02:22:50Z,deepak1556,,deepak1556,,deepak1556,,,
electron/electron,25287,"Missing focus event on app activation, for window created with show: false ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.1.1
* **Operating System:**
  * macOS 10.15.4

We recently started launching as hidden on macOS (that is, `show: false` or `browserWindow.hide()` while loading the page, followed by `browserWindow.show()` when the dock icon is clicked). This results in some busted focus behavior on the first activation of the window. The second activation restores it.

### Expected Behavior
The guest page receives a `focus` event on the first activation of the app, when created with `show: false`.

### Actual Behavior
The guest page doesn't receive the first `focus` event. Subsequent activations do trigger a `focus` event.

### To Reproduce
[Electron Fiddle](https://gist.github.com/CharlieHess/c507468cd40630d04f58c6514100b997)
",MarshallOfSound,platform/macOS;bug :beetle:;10-x-y,2020-09-02T19:00:02Z,2020-09-04T06:57:31Z,CharlieHess,,sofianguy,,MarshallOfSound,,zcbenz,
electron/electron,25311,"Node integration: timers/promises/async callbacks stop working randomly in renderer process ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** v10.1.1 (also present in v9)
* **Operating System:** macOS 10.15.5

### Actual Behavior

Node.js timers stop working indefinitely after running Electron for a while. This breaks all async Node.js functions like `fs.readFile`, `fs.promises.readFile`, and `http.get`:

<img width=""869"" alt="""" src=""https://user-images.githubusercontent.com/1093313/92156093-196e4580-ee46-11ea-9665-773db9f7ffd6.png"">

In case it's not clear in the screenshot, `window.setTimeout` works but the Node.js version of `setTimeout` doesn't.

`fs.readFileSync` and synchronous functions continue to work fine:
<img width=""869"" alt="""" src=""https://user-images.githubusercontent.com/1093313/92156278-5d614a80-ee46-11ea-81b2-4f9d8d67dc96.png"">

### To Reproduce

It's hard to reproduce. This issue happens randomly but frequently enough. It could happen after 10 seconds of launching Electron or after 1 hour.

### Additional Information

`allowRendererProcessReuse` is set to `true`. I use 3 native modules in the renderer process: [`keytar`](https://github.com/atom/node-keytar), [`node-mac-contacts`](https://github.com/codebytere/node-mac-contacts/) and [`node-mac-permissions`](https://github.com/codebytere/node-mac-permissions). All 3 modules are up to date.

Only refreshing (閳 R) fixes this and gets everything to work again.",codebytere,platform/macOS;bug :beetle:;blocked/need-repro;9-x-y;10-x-y,2020-09-03T19:11:03Z,2020-09-28T00:31:14Z,KishanBagaria,nornagon;KishanBagaria;aabuhijleh;codebytere,codebytere,,codebytere,,codebytere,electron/electron#22119;
electron/electron,25314,"setImmediate works only on first page load, but not after subsequent reloads. <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->10.1.0
* **Operating System:** 
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->windows 10
* **Last Known Working Electron version:** 
  * <!-- (if applicable) e.g. 3.1.0 -->unknown

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

`setImmediate` works the same regardless of whether you have loaded a page for the first time, or after a reload.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
`setImmediate` does execute on first page load, and does not after reloads.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

I've created an [electron fiddle gist](https://gist.github.com/affedc59a009210f18d3d396bb9cc425) which shows the problem. The essence is that on first page load, setImmediate properly executes the given function, however, after reloading the page, with the same code, the invocation gets lost internally and never happens.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->
",codebytere,platform/windows;bug :beetle:;10-x-y,2020-09-03T21:28:33Z,2020-10-13T16:19:46Z,valyrie97,nornagon,sofianguy,,codebytere,,codebytere,
electron/electron,25368,"win.setVisibleOnAllWorkspaces(true) prevents app.dock.hide() from working <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 9.3.0
* **Operating System:** macOS 10.15.6
* **Last Known Working Electron version:** 9.2.1

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Dock icon is hidden after calling `app.dock.hide()`. Calling `win.setVisibleOnAllWorkspaces(true)` won't cause the dock icon to resurface.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Dock icon is shown after calling `win.setVisibleOnAllWorkspaces(true)`. 

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Use the following code:
```js
const { app, BrowserWindow, BrowserView } = require('electron');

app.on('ready', () => {
	app.dock.hide();
	const win = new BrowserWindow({ show: true, frame: false, width: 400, height: 400 });
	win.setVisibleOnAllWorkspaces(true);
});
```
The dock icon will be hidden with Electron 9.2.1 but won't with Electron 9.3.0. 

I've created 3 simple Electron apps for testing:
[9.2.1.zip](https://github.com/electron/electron/files/5188589/9.2.1.zip)  (Electron 9.2.1 with `win.setVisibleOnAllWorkspaces(true)`)
[9.3.0-not-working.zip](https://github.com/electron/electron/files/5188587/9.3.0-not-working.zip) (Electron 9.3.0 with `win.setVisibleOnAllWorkspaces(true)`)
[9.3.0-working.zip](https://github.com/electron/electron/files/5188588/9.3.0-working.zip) (Electron 9.3.0 without `win.setVisibleOnAllWorkspaces(true)`)


<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->



### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
Related to https://github.com/maxogden/menubar/issues/296

Calling `app.dock.hide()` after `win.setVisibleOnAllWorkspaces(true)` is not a good solution. As even though it works, sometimes, the dock icon still resurfaces. I haven't managed to figure out when it happens exactly. Very randomly.",codebytere,platform/macOS;bug :beetle:;9-x-y,2020-09-08T13:39:23Z,2021-09-08T06:37:55Z,quanglam2807,quanglam2807;taras-slapdash;codebytere;mathieulj;arantes555;fanlion;dennisfyodorov;jetlej;YoucefHQ;dmamie;xinger;sbannigan,sofianguy,,codebytere,,codebytere,
electron/electron,25426,"Native close window button disappears on mac after fullscreen off/on  <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->v10.1.1
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS 10.15.6
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->don't know

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

sequence of:

window.setFullScreen(false);
window.setFullScreen(true);

does not lead to missing native window control buttons.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

sequence of:

window.setFullScreen(false);
window.setFullScreen(true);

leads to missing native window control buttons.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
updated electron quick start app:
[no-native-window-buttons.zip](https://github.com/electron/electron/files/5209788/no-native-window-buttons.zip)

this will start app in fullscreen mode. Do Bug button just set fullscreen true and false consequentially.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
<img width=""1920"" alt=""Screenshot 2020-09-11 at 17 53 12"" src=""https://user-images.githubusercontent.com/6457945/92941323-e7b63980-f458-11ea-9c28-695ca03c4afb.png"">

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;10-x-y,2020-09-11T15:02:47Z,2021-04-21T14:56:25Z,kirille,,codebytere,,codebytere,,codebytere,
electron/electron,25427,"Exit from HTML fullscreen and enter native fullscreen leads to appearance of unclickable fantom window image. <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->v10.1.1
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS 10.15.6
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->consecutive exit from HTML fullscreen and enter native fullscreen do not create unclickable and indestructible fantom window image.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->consecutive exit from HTML fullscreen and enter native fullscreen create unclickable and indestructible fantom window image.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Modified electron quick-start project:

[kirille/electron-fullscreen-fantom-issue](https://github.com/kirille/electron-fullscreen-fantom-issue)

on start, opens app in html-fullscreen, on click on Do Bug button, exit html-fullscreen, wait for exit, enter native fullscreen.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
<img width=""1143"" alt=""Screenshot 2020-09-11 at 18 19 32"" src=""https://user-images.githubusercontent.com/6457945/92944398-97d97180-f45c-11ea-973f-58cf68c9dd42.png"">

### Additional Information
<!-- Add any other context about the problem here. -->
",codebytere,platform/macOS;bug :beetle:;10-x-y;11-x-y;12-x-y,2020-09-11T15:28:46Z,2021-04-21T14:56:25Z,kirille,hovancik;kirille;codebytere,codebytere;sofianguy,,codebytere,,codebytere,
electron/electron,25465,"TouchBar: emoji button appears and cannot be removed ### Issue Details

* **Electron Version:**
  * `9.x`
* **Operating System:**
  * `macOS 10.15.x`
* **Last Known Working Electron version:**
  * `7.x`

### Expected Behavior
All touchbar buttons can be controlled by the app.

### Actual Behavior
An emoji picker appears on the touchbar that cannot be removed taking valuable space.

### To Reproduce
Start Electron Fiddle on a macBook with touchbar.",codebytere,platform/macOS;bug :beetle:;9-x-y,2020-09-15T05:49:56Z,2021-03-12T06:26:09Z,bpasero,bpasero;codebytere;deepak1556,codebytere,,codebytere,,deepak1556,
electron/electron,25498,"webContents.print() fails with 'No valid printers available' <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  10.1.1
* **Operating System:**
  Ubuntu 20.04 + Linux 5.4.0-47-generic
* **Last Known Working Electron version:**
 7.1.2

### Expected Behavior
`webContents.getPrinters()` returns one printer. Besides, the OS provides additional virtual devices.
`webContents.print()` should open the print dialog and show those devices for selection.

### Actual Behavior
`webContents.print()` fails silently; in the print callback, `failureReason` is 'No valid printers available'

### To Reproduce
Just run `webContents.print()`

Electron fiddle: https://gist.github.com/35c5067af8ec104f86bd0cdd4a95b1f5

### Screenshots
![electron-issue](https://user-images.githubusercontent.com/5503002/93387857-3fc9b300-f840-11ea-9335-bf32a3ddea08.png)
![electron-issue](https://user-images.githubusercontent.com/5503002/93387860-40fae000-f840-11ea-938e-09c62f06f06b.gif)


### Additional Information
Upgrading an app built on Electron 7.1.2 that had printing working before
",codebytere,component/printing;bug :beetle:;10-x-y;11-x-y,2020-09-16T20:19:50Z,2020-09-21T20:42:28Z,andsmedeiros,andsmedeiros,codebytere,,codebytere,,codebytere,
electron/electron,25547,"BrowserWindow transparency/vibrancy is lost after refresh when `app.allowRendererProcessReuse = false` ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 10.1.1
* **Operating System:** macOS 10.15
* **Last Known Working Electron version:** None

### Actual Behavior
Vibrancy and transparency is lost after refreshing (閳 R) when `app.allowRendererProcessReuse = false`

This also happens in certain unknown cases without refreshing.

It doesn't happen when `app.allowRendererProcessReuse = true`

### Screencast

![electron-vibrancy-bug](https://user-images.githubusercontent.com/1093313/93717408-46835d80-fb93-11ea-914d-8b6ad1232c5f.gif)

### To Reproduce

`main.js`:
```js
const {app, BrowserWindow} = require('electron')

app.allowRendererProcessReuse = false

function createWindow () {
  const mainWindow = new BrowserWindow({
    width: 800,
    height: 600,
    // titleBarStyle: 'hiddenInset',
    // vibrancy: 'sidebar',
    transparent: true,
    backgroundColor: '#00000000',
    webPreferences: {
      nodeIntegration: true
    }
  })
  mainWindow.loadFile('index.html')
}
app.on('ready', createWindow)

app.on('window-all-closed', function () {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', function () {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow()
  }
})
```

`index.html`:
```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <style>
      html { -webkit-app-region: drag; height: 100% }
      body { margin: 2em }
    </style>
  </head>
  <body>
    We are using Node.js <script>document.write(process.versions.node)</script>,
    Chromium <script>document.write(process.versions.chrome)</script>,
    and Electron <script>document.write(process.versions.electron)</script>.
  </body>
</html>
```

### Additional Information

Likely related to #8310.

I'd keep `allowRendererProcessReuse = true` but then I encounter #25311 ",codebytere,platform/macOS;bug :beetle:;10-x-y;11-x-y;stale,2020-09-20T17:20:41Z,2022-11-06T02:22:22Z,KishanBagaria,TanninOne,codebytere;nornagon,,codebytere,,,
electron/electron,25595,"Electron desktopCapturer.getSources().then is not resolved <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.1.2
* **Operating System:**
  * Ubuntu 18.04.5 LTS

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
`desktopCapturer.getSources().then` should be resolved

### Actual Behavior
`desktopCapturer.getSources().then` is not resolved after 1 minute

### To Reproduce
```js
const { app, desktopCapturer, screen } = require('electron');

const fs = require('fs')
const path = require('path')


function takeScreenshot() {
	console.log('Gathering screens...')
	const thumbSize = determineScreenShotSize()
	const options = { types: ['screen'], thumbnailSize: thumbSize }

	desktopCapturer.getSources(options).then((sources) => {
		console.log('Sources received:'+sources.length);
		sources.forEach(function (source) {
			const sourceName = source.name.toLowerCase();
			console.log(sourceName);
			if ( ['entire screen', 'screen 1'].includes(sourceName)) {
				const screenshotPath = path.join(app.getPath('pictures'), 'screenshot-' + new Date().toJSON() + '.png')
				fs.writeFile(screenshotPath, source.thumbnail.toPNG(), function (error) {
					if (error) return console.log(error)
					console.log('Saved screenshot to: ' + screenshotPath);
				})
			}
		})
	}).catch(console.error);
}

function determineScreenShotSize() {
	var screenSize = screen.getPrimaryDisplay().workAreaSize
	return {
		width: screenSize.width,
		height: screenSize.height
	}
}
setInterval(takeScreenshot, 15000);
```

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

```sh
git clone git@bitbucket.org:praveen-knackforge/electron-boilerplate.git -b screenshot
npm install
npm start || electron .
```

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![image](https://user-images.githubusercontent.com/14850417/94028581-93587580-fdd9-11ea-9adb-52d6ab5e92f8.png)


### Additional Information
I used `desktopCapturer` API from the main process",samuelmaddock,platform/windows;platform/linux;bug :beetle:;10-x-y;has-repro-gist;11-x-y;12-x-y;13-x-y,2020-09-23T14:50:26Z,2021-03-18T20:43:36Z,pravintamil,codebytere;alectrocute;ibc;leandrogomide;samuelmaddock;lmcarreiro,codebytere;samuelmaddock,,codebytere,,MarshallOfSound,
electron/electron,25613,"Frameless window show the trafficLight when exit full screen Electron Version:
v9.0 or v7.1

Operating System:
macOS 10.15

Expected Behavior:
window.setSimpleFullScreen(true);
window.setSimpleFullScreen(false);
frameless window don't show the traffic light when leave full screen.

Actual Behavior:
frameless window should not have the traffic light, but switch full screen, the hidden traffic light appears. ",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;9-x-y,2020-09-24T02:11:37Z,2020-10-23T06:04:54Z,liuzhenyilang,,codebytere,,codebytere,,zcbenz,
electron/electron,25618,"Electron has lots of issues with Windows UNC paths ### Issue Details

* **Electron Version:**
  * 9.x
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * ???

### Expected Behavior
You can start an Electron app from UNC path and things work.

### Actual Behavior
Things do not work, like rendering or dev tools.

### To Reproduce
* open PowerShell
* `cd \\localhost\c$\Users\<username>\AppData\Local\electron-fiddle`
* run `electron-fiddle.exe` from there

You can see that the main window stays empty. You can also not open dev tools.

![image](https://user-images.githubusercontent.com/900690/94142047-f09e0680-fe6d-11ea-9d48-a6830fd4c25e.png)

We are seeing the same with VSCode, but I thought I report this with Electron Fiddle for easier reproduction.",zcbenz,platform/windows;status/wontfix 棣冩瘒;bug :beetle:,2020-09-24T11:57:03Z,2021-04-05T23:50:00Z,bpasero,bpasero;zcbenz,VerteDinde;zcbenz,,zcbenz,,zcbenz,
electron/electron,25649,"mouse events in 'drag' and 'no-drag' unaligned after 10.1.1 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  10.1.2
* **Operating System:**
  Windows 10 (2004)
* **Last Known Working Electron version:**
  10.1.0

### Expected Behavior
mouse events aligned to the element

### Actual Behavior
elements with 'drag' and 'no-drag' inside a 'drag' region are 'vertically unaligned' by 8 pixels for mouse hover, click, etc when window is maximized

### To Reproduce
https://gist.github.com/rafma0/e7bc9ad86c17e79b25130b4399d72506
double click any appbar to maximize
move your mouse to the bottom of any button, it wont change color until you go 8 pixels up
you can also click and drag from 8 pixels outside the top of the middle or bottom appbar and it will unmaximize

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

",zcbenz,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;10-x-y;11-x-y,2020-09-27T06:17:16Z,2020-10-15T21:05:45Z,rafma0,nornagon,VerteDinde;zcbenz,,deepak1556,,deepak1556,
electron/electron,25695,"Electron apps based are not accessible via MacOS ""Hover Text"" unless Voice Over is turned on **Issue: Electron apps based are not accessible via Hover Text unless Voice Over is turned on.**

### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
* **Electron Version:**
  * All versions
* **Operating System:**
  * MacOS Catalina
* **Last Known Working Electron version:**
  * None

### Expected Behavior
Hover Text appears for the text in the Electron app

### Actual Behavior
Hover Text does not appear (but it does on Chromium)

### To Reproduce
1. Install any Electron app.
2. Launch the Electron app.
3. In MacOS System Preferences, go to Accessibility > Zoom, and enable Hover Text.
4. Hover over text in the Electron app.

Now observe what happens when we enable Voice Over...

5. Turn on Voice Over
6. Hover over text in the Electron app.
7. Observe that Hover Text shows for the text in the Electron app now that Voice Over is enabled

### Additional resources
https://support.apple.com/guide/mac-help/use-hover-text-mchlb203bc78/mac#:~:text=%20%20%201%20On%20your%20Mac%2C%20choose,menu%2C%20then%20choose%20a%20location.%20If...%20More%20",codebytere,platform/macOS;bug :beetle:;a11y,2020-09-29T22:44:29Z,2020-10-29T03:24:38Z,rfairweather,,VerteDinde;codebytere,codebytere,codebytere,,codebytere,
electron/electron,25728,"BrowserView's setAutoResize no longer works (since Electron 10.1.3) ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 10.1.3
* **Operating System:** Windows 10
* **Last Known Working Electron version:** 10.1.2

### Expected Behavior
I expect that a BrowserView that's set up to auto resize, will do so

### Actual Behavior
No auto-resizing happens

### To Reproduce
1. start the app below
2. when the page loads in the browserview, resize the window
3. notice the black background. browser view doesn't resize

main.js:
```
const { app, BrowserWindow, BrowserView } = require('electron')

async function createWindow() {
  const mainWindow = new BrowserWindow({ backgroundColor: ""#000"" });
  const view = new BrowserView();
  mainWindow.setBrowserView(view);

  const contentBounds = mainWindow.getContentBounds();
  view.setBounds({ x: 0, y: 0, width: contentBounds.width, height: contentBounds.height });
  view.setAutoResize({ width: true, height: true });

  await view.webContents.loadURL(""https://google.com"");
}

app.on('ready', createWindow)
```",mlaurencin,platform/windows;bug :beetle:;component/BrowserView;9-x-y;10-x-y;11-x-y,2020-10-01T19:31:25Z,2020-10-19T16:26:39Z,pushkin-,pejman1;codebytere;ChALkeR,zcbenz;codebytere;sofianguy,,codebytere,,codebytere,
electron/electron,25781,"Segfault in SerialChooserController Observed in CI: https://app.circleci.com/pipelines/github/electron/electron/30672/workflows/69ab6601-3698-411b-8906-93c9aca28870/jobs/675633

```
Received signal 11 SEGV_MAPERR 000000000048
0   Electron Framework                  0x0000000116967079 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x0000000116861a13 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x0000000116966f41 base::debug::(anonymous namespace)::StackDumpSignalHandler(int, __siginfo*, void*) + 2385
3   libsystem_platform.dylib            0x00007fff68c005fd _sigtramp + 29
4   ???                                 0x00000001026a2a00 0x0 + 4335479296
5   Electron Framework                  0x0000000111155798 base::ObserverList<content::SerialDelegate::Observer, false, true, base::internal::CheckedObserverAdapter>::RemoveObserver(content::SerialDelegate::Observer const*) + 104
6   Electron Framework                  0x0000000111158b20 electron::SerialChooserController::~SerialChooserController() + 256
7   Electron Framework                  0x00000001111535fc electron::ElectronSerialDelegate::~ElectronSerialDelegate() + 124
8   Electron Framework                  0x00000001110ed524 electron::ElectronBrowserClient::~ElectronBrowserClient() + 132
9   Electron Framework                  0x00000001110ed5ee electron::ElectronBrowserClient::~ElectronBrowserClient() + 14
10  Electron Framework                  0x0000000110fdbde7 ElectronMain + 151
```",jkleinsc,crash :boom:;bug :beetle:,2020-10-05T22:13:07Z,2020-10-19T14:51:26Z,nornagon,,zcbenz,,nornagon,,jkleinsc,
electron/electron,25801,"webContents.print success callback is not triggered. ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
`v10.1.3`
* **Operating System:**
`Windows 10`
* **Last Known Working Electron version:**
`2.0.4`

### Expected Behavior
When a file is printed, the callback of `webContents.print` should be trigger and `success` should be `true`

### Actual Behavior
The callback is not triggered (though it is when the print fails). + If tested with a FileToPDF printer, it prints an empty PDF.

### To Reproduce
```javascript
printWindow.webContents.print(
 {
 deviceName: printerName,
 silent: true
 },
  (ok, failureReason) => {
    if (ok) {
      success();
     } else {
      console.log(failureReason);
       failure();
    }
  }
 );
```

This is tested with a custom FileToPDF printer, and it seems that electron might be blocked in the printing process as the PDF output is empty? Could be related to #14705",codebytere,component/printing;bug :beetle:;blocked/need-repro;10-x-y;11-x-y,2020-10-07T12:51:42Z,2021-03-04T20:26:22Z,alevani,alevani;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,25811,"Will-move event listener newBounds parameter incorrect value I have created simple window and add `will-move` listener. After moving window little bit down (few pixels only in vertical direction), `will-move` listener is called with `newBounds` parameter object, that contains incorrect values (`x`, `width`, `height` changed). Please look at simple demonstation:

Script:
```
mainWindow.once('will-move', (e, newBounds) => {
   console.log('Window current bounds: ', mainWindow.getBounds());
   console.log('Window newBounds', newBounds);
})
```
Result (logs in terminal after moving window little bit down (few pixels only in vertical direction)):

![image](https://user-images.githubusercontent.com/12056012/95378841-28d12a80-08ed-11eb-9722-40d4df087953.png)

As you can see, here `x` property changed (but it should not, because i'm moving window only in vertical direction), `height` and `width` also changed (but it should not, because i'm not resizing window, i'm just moving it).

<!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.1.1
* **Operating System:**
  * Windows 10 (version 1903, 18362.1082)
* **Last Known Working Electron version:**
  * -





### Expected Behavior
`newBounds` parameter value should have `x`, `width` and `height` values same as in bounds returned by `mainWindow.getBounds()` but only `y` value should be different (because i'm moving window little bit down).
<!-- A clear and concise description of what you expected to happen. -->

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
As you can see, here after moving window little bit down (few pixels only in vertical direction), `x`, `width` and `height` properties values in `newBounds` is not same as the corresponding properties values in bounds object returned by `mainWindow.getBounds()`.

### To Reproduce
I have created demo branch from quick start repo: [demo commit](https://github.com/bohdanzhylavskyi/electron-quick-start/commit/fa8f3ef0713b6476eb18d47ad762fc47f2fb0f22). To reproduce please run application `npm start`, try to move window and look at terminal log.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->
",samuelmaddock,platform/windows;bug :beetle:;status/confirmed;10-x-y;has-repro-gist;11-x-y;12-x-y;13-x-y;14-x-y,2020-10-07T19:55:18Z,2021-05-19T01:34:41Z,bohdanzhylavskyi,samuelmaddock,zcbenz;samuelmaddock,,samuelmaddock,,zcbenz,
electron/electron,25971,"The tooltip of the button for annotations is ""undefined"" in PDF  There is one button which tooltip displays ""undefined""

### Preflight Checklist
* [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [X] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.2.1
* **Operating System:**
  * Windows 10 

### Expected Behavior
To be not undefined

### Actual Behavior
It is undefined

### To Reproduce
Open PDF and hover it
### Screenshots
![image](https://user-images.githubusercontent.com/5815794/96174391-eaadb980-0f31-11eb-9fa1-fd60ecbb1624.png)",codebytere,bug :beetle:;platform/all;component/pdf-viewer,2020-10-15T19:01:48Z,2020-10-19T20:02:48Z,gdavidkov,MarshallOfSound;codebytere;gdavidkov,MarshallOfSound;codebytere,codebytere,codebytere,,codebytere,
electron/electron,25984,"Custom caption controls are not accessibility friendly <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [ ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.0.4
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * unknown

### Expected Behavior
Even with custom caption controls, on cursor hover Electron needs to respond to the WM_NCHITTEST window message with the appropriate parts. For example, Electron needs to respond to WM_NCHITTEST with HTMAXIMIZE for the maximize button so that we know when the mouse is over it

### Actual Behavior
Custom caption controls are not accessibility friendly because they are not properly labelled. For example, it doesn't respond to the WM_NCHITTEST window message with HTMAXIMIZE which leaves us with no way to reliable way to detect the maximize button. Apart from causing developer complications, this also causes some glaring accessibility issues that need to be dealt with. Users using a screen reader cannot identify custom caption controls.

### To Reproduce
This issue can be seen in any Electron app with custom caption controls (for example Microsoft Teams, Microsoft Office applications, Microsoft Edge, Visual Studio Code...)

The window control buttons are rendered using HTML, the window does not have a standard titlebar. The whole window is client area, that閳ユ獨 why it does not report HTMAXIMIZE, HTMINBUTTON or HTCLOSE in WM_NCHITTEST handler.

In the Electron code https://github.com/electron/electron/search?q=PreHandleMSG&unscoped_q=PreHandleMSG it looks like NativeWindowViews::PreHandleMSG gets called by Chromium for every window message.PreHandleMSG calls NotifyWindowMessage which is a multiplexer that notifies any listeners about the message but does not provide a mechanism to return a result. PreHandleMSG also does a bit of handling of some messages itself but does not handle WM_NCHITTEST. From that perspective, it looks like Electron would need to be updated to handle this case.
 
In the Chromium code: https://source.chromium.org/chromium/chromium/src/+/master:ui/views/win/hwnd_message_handler.cc;l=2246 it looks like it will call in to Electron via GetNonClientComponent(point) which would be another opportunity to return the correct HT value. It does not look like Electron handles that at all unfortunately.

### Screenshots
![image](https://user-images.githubusercontent.com/12780104/96189144-d26b7980-0ef4-11eb-9808-74cb790e79d2.png)
Logging is on the left. The Hello World! App uses the standard window titlebar which is why GetDwmAdornmentInfoRect returns success. It isn閳ユ獩 until apps start customizing their titlebar that we run into problems.

### Additional Information
Feel free to reach out to me with questions / if clarification is needed",ckerr;mlaurencin,platform/windows;component/accessibility;bug :beetle:;a11y;9-x-y;has-repro-gist;stale,2020-10-15T22:55:14Z,2022-11-06T02:21:32Z,pananapread,codebytere;ckerr;mlaurencin;pananapread;TheMrJukes,ckerr,ckerr,mlaurencin,,,
electron/electron,26300,"Open Dev Tools error: Uncaught TypeError: Cannot read property 'setDockSide' of undefined ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
`webContents.openDevTools();` produces error:
`[12703:1102/100312.745262:ERROR:CONSOLE(1)] ""Uncaught TypeError: Cannot read property 'setDockSide' of undefined"", source: devtools://devtools/bundled/devtools_app.html?remoteBase=https://chrome-devtools-frontend.appspot.com/serve_file/@1eb8474cd7e4fccfbfa8048eceda1eab8b4d394/&can_dock=true&toolbarColor=rgba(223,223,223,1)&textColor=rgba(0,0,0,1)&experiments=true (1)`

Opening dev tools via these methods also produces the same error:
* Right click background > Inspect element
* Ctrl-Shift-I

* **Electron Version:**
  * 11.0.0-beta.18
* **Operating System:**
  * Debian 10 Buster x64, KDE Plasma
* **Last Known Working Electron version:**
  * 10.1.4

### Expected Behavior
Dev tools should open without error.

### Actual Behavior
Above error appears in the terminal.

### To Reproduce
Running this code will probably do it, although I'm opening a URL, but that shouldn't matter.
https://www.electronjs.org/docs/tutorial/quick-start#create-a-basic-application

### Additional Information
I need the beta because the stable version's node is too old.",codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;11-x-y,2020-11-02T08:15:31Z,2020-11-16T18:26:36Z,softwarecreations,ckerr,ckerr,,codebytere,,codebytere,
electron/electron,26419,"getSystemVersion returns wrong version for Big Sur  <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 10.1.5
* **Operating System:**
  * macOS 10.16 
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
On Big Sur, Apple changed the versioning from 10.x.y to 11.x.y
https://en.wikipedia.org/wiki/MacOS_Big_Sur

Expected to get 11.0.1 from calling  _getSystemVersion_ 


### Actual Behavior
Calling  _getSystemVersion_  returns 10.16

This is true for an Intel based machine,  I haven't tried it with Apple Silicon which requires electron v11.


### To Reproduce

On Big Sur system, run electron and call to  _getSystemVersion_  

### Screenshots
N/A

### Additional Information
N/A",ckerr,platform/macOS;bug :beetle:;status/confirmed;10-x-y,2020-11-10T10:37:46Z,2021-03-03T06:17:48Z,idanwork,ckerr;idanwork;nornagon,ckerr,ckerr,ckerr,,idanwork,
electron/electron,26443,"LC_ALL set to invalid value <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 9.3.4
* **Operating System:**
  * Arch Linux
* **Last Known Working Electron version:**
  * 9.3.3

### Expected Behavior
```
閴 echo lang: $LANG lc_all: $LC_ALL
lang: en_US.UTF-8 lc_all:
閴 electron9 -i                    
> process.env.LC_ALL
undefined
```

### Actual Behavior
```
閴 echo lang: $LANG lc_all: $LC_ALL
lang: en_US.UTF-8 lc_all:
閴 electron9 -i                    
> process.env.LC_ALL
'en_US'
```

`en_US` is not a valid locale閳ユ攰t has to be `en_US.UTF-8`, however, Electron overrides this, even if `--lang=en_US.UTF-8` is passed or `LC_ALL` is set correctly when invoking Electron. With this invalid value, many C programs fail to run.

### To Reproduce
Run the above commands.

### Additional Information
Problem introduced in  #26242",zcbenz,platform/linux;bug :beetle:;9-x-y;10-x-y;11-x-y,2020-11-11T02:12:50Z,2020-11-18T02:13:02Z,lights0123,codebytere;klarkc;angelsl;jorgelaranjo,codebytere,,zcbenz,,zcbenz,
electron/electron,26480,"Your app includes a version of an SDK from Electron that violates the App Store Review Guidelines.  <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.

### Issue Details

* **Electron Version:** 
  *  11.0.0-beta.22

### Rejection Email
<!-- Paste the contents of your rejection email here, censoring any private information such as app names.-->
Your app includes a version of an SDK from Electron that violates the App Store Review Guidelines. The version of the Electron SDK you are using in your app attempts to hide the use of private APIs. This is a violation Section 2.5.1 of the App Store Review Guidelines.
```
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__CFCopySystemVersionDictionary
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__kCFSystemVersionBuildVersionKey
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__kCFSystemVersionProductNameKey
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__kCFSystemVersionProductVersionExtraKey
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/_CTFontDescriptorIsSystemUIFont
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__CFCopyServerVersionDictionary
閳 Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework/__kCFSystemVersionProductVersionKey
```
Guideline 2.5.1: Apps may only use public APIs.

Next Steps

To resolve this issue, please either remove the Electron SDK entirely from your app, or revise your app to utilize a corrected version of the Electron SDK.


### Additional Information
<!-- Add any other context about the problem here. -->
We need to use electron 11 to support apple silicon
",MarshallOfSound,platform/macOS;bug :beetle:;app-store;11-x-y,2020-11-13T02:37:05Z,2020-11-16T17:47:10Z,gaodeng,MarshallOfSound;gaodeng,ckerr,,ckerr,,ckerr,
electron/electron,26488,"BrowserWindow.fromBrowserView throws exception when there are multiple BrowserViews in a window <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
BrowserWindow.fromBrowserView throws an exception when a window has multiple BrowserViews:
```
  '(node:19920) UnhandledPromiseRejectionWarning: Error: BrowserWindow have multiple BrowserViews, Use getBrowserViews() 
instead\r\n' +
    '    at Function.i.fromBrowserView
```

* **Electron Version:**
  * 10.1.4
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * None

### Expected Behavior
BrowserWindow.fromBrowserView should return the correct window regardless of the number of browserviews in it.

### Actual Behavior
An exception is thrown

### To Reproduce
GitHub Gist from Electron Fiddle:
https://gist.github.com/f2def961729571f8bbfbd89584693ee1

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",nornagon,platform/windows;bug :beetle:;10-x-y;has-repro-gist,2020-11-13T19:49:01Z,2020-11-17T19:12:03Z,sgd2z,sgd2z,ckerr,,ckerr,,nornagon,
electron/electron,26561,"Uncaught TypeError: Cannot read property 'forEach' of undefined in dispatchEvent on render process crash <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 11.0.0
* **Operating System:**
  * NixOS 21.03 x86_64
* **Last Known Working Electron version:**
  * 9.0.5?

### Expected Behavior

A `<webview>` render process crash is handled gracefully.

### Actual Behavior

When a `<webview>` render process crashes, this `TypeError` shows up in the developer console:

```
Uncaught TypeError: Cannot read property 'forEach' of undefined
    at dispatchEvent (electron/js2c/renderer_init.js:119)
    at electron/js2c/renderer_init.js:119
    at EventEmitter.<anonymous> (electron/js2c/renderer_init.js:103)
    at EventEmitter.emit (events.js:315)
    at Object.onMessage (electron/js2c/renderer_init.js:91)
```

### To Reproduce

Minimal example at andersk/electron-quick-start@41af45c0237680ca9c88bc202fb20eaa964d6f1d:

```sh
$ git clone https://github.com/andersk/electron-quick-start.git -b webview-crash
$ npm install
$ npm start
```

Then observe the error in View 閳 Toggle Developer Tools.

### Additional Information

The `forEach` in question is this one:

https://github.com/electron/electron/blob/387a15f5829f623c9366d0a4625cc33f5a4758d4/lib/renderer/web-view/guest-view-internal.ts#L55-L57

I think the problem is that the `render-process-gone` event was added in v10.0.0 (#23560) and backported to v9.1.0 and v8.4.0, but it was not added to [`WEB_VIEW_EVENTS`](https://github.com/electron/electron/blob/387a15f5829f623c9366d0a4625cc33f5a4758d4/lib/renderer/web-view/guest-view-internal.ts#L7-L41) until #25697, which is not in any release and has not been backported.",miniak,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;status/confirmed;has-repro-gist;11-x-y,2020-11-18T09:20:49Z,2020-11-19T19:35:46Z,andersk,ckerr,ckerr,,miniak,,ckerr,
electron/electron,26562,"BrowserView draggable area not working in windows exclusively on BrowserViews ### Issue Details
in frameless windows 
While setting browserview style to draggable by webkit-app-region : drag. the area won't be draggable after that
and it can not move main window 
### Electron Version:
11.0.1
### Operating System:
Windows 10 (1803)
Last Known Working Electron version:
not found
### Expected Behavior
Browser view moves the main window while I set the style of the body or one of the area to
-webkit-app-region: drag;

### Actual Behavior
nothing happen in browserview after styling -webkit-app-region: drag;

I know it is mention that in 11 version it is fixed. but it still dosn't work 

### To Reproduce
https://gist.github.com/pejmanpesyan/8540aad65e7c6980c45f23e5eaafafb9
",codebytere,platform/windows;bug :beetle:;11-x-y,2020-11-18T10:26:34Z,2020-12-01T23:03:01Z,pejman1,ckerr;pejman1;codebytere,ckerr,codebytere,codebytere,,codebytere,
electron/electron,26588,"Draggable region in BrowserWindow causes BrowserView to become draggable <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 10.1.6
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->
* **Operating System:** macOS Big Sur 11.0.1
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:** 10.1.5
  * <!-- (if applicable) e.g. 3.1.0 -->

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
`BrowserView` is not draggable.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
`BrowserView` is draggable. 

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
From my test, if I creates a draggable region on the left side of `BrowserWindow` (let's say with width 100px), and then add a `BrowserView` to the right side of the window, the 100px part on the right side of BrowserWindow/BrowserView will become draggable. 

You can reproduce the bugs using the following code (modified from `electron-quick-start`).
[electron-1015.zip](https://github.com/electron/electron/files/5564422/electron-1015.zip) (electron@10.1.5)
[electron-1016.zip](https://github.com/electron/electron/files/5564423/electron-1016.zip) (electron@10.1.6)

The files have identical code, except for the Electron version. It works properly in v10.1.5 but doesn't in v10.1.6

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->


### Additional Information
<!-- Add any other context about the problem here. -->
Potentially related to https://github.com/electron/electron/pull/26145

",codebytere,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;10-x-y;has-repro-gist,2020-11-19T04:49:43Z,2020-12-01T05:02:04Z,quanglam2807,ckerr;artoriasless,ckerr,,codebytere,,codebytere,
electron/electron,26717,"Menubar not clickable on Electron 12 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 12.0.0-beta.1 to 12.0.0-beta.6
* **Operating System:**
  * Windows 10 (2004) 
* **Last Known Working Electron version:**
  * 11.x.x (all of them)

### Expected Behavior
Click on Menu Item opens the submenu of this item

### Actual Behavior
Clicking on menu set with Menu.setApplicationMenu(Menu.buildFromTemplate(topLevelItems)); is not possible. Pressing ""ALT"" Highlights the menu but nothing more happens

### To Reproduce
Build Application with menu",zcbenz,platform/windows;platform/linux;component/menu;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;12-x-y,2020-11-27T13:31:39Z,2021-01-29T20:43:52Z,coolsurfer,ckerr;coolsurfer,ckerr;zcbenz,sofianguy,sofianguy,,MarshallOfSound,
electron/electron,26824,"webContents.mainFrame can be undefined ### Issue Details

* **Electron Version:**
  * 13.0.0-nightly.20201203
* **Operating System:**
  * macOS
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
`WebFrameMain.frames` should never contain undefined

### Actual Behavior
```
Uncaught Exception:
TypeError: Cannot read property 'processId' of undefined
    at id (/private/var/folders/_7/jm5cr84j7jd4v7btf2d3bqwm0000gn/T/tmp-59557-p4DTr3KWOsNk/main.js:4:38)
    at pft (/private/var/folders/_7/jm5cr84j7jd4v7btf2d3bqwm0000gn/T/tmp-59557-p4DTr3KWOsNk/main.js:6:36)
    at Timeout._onTimeout (/private/var/folders/_7/jm5cr84j7jd4v7btf2d3bqwm0000gn/T/tmp-59557-p4DTr3KWOsNk/main.js:27:5)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)
```

### To Reproduce
Run https://gist.github.com/f46823470955034b4a456b6275862bfb for a short while and you'll observe the above error.

cc @samuelmaddock 
",miniak;samuelmaddock,bug :beetle:;status/confirmed;has-repro-gist;12-x-y,2020-12-04T00:26:53Z,2021-02-08T19:30:19Z,nornagon,nornagon;miniak;ckerr;samuelmaddock,codebytere;ckerr;samuelmaddock,nornagon,miniak;samuelmaddock,,nornagon,
electron/electron,26863,"Electron crashes when opening and closing windows (while window loads?) ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 11.0.3
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * -

### Expected Behavior
No crash

### Actual Behavior
error code is logged
![grafik](https://user-images.githubusercontent.com/10595986/101361362-29f7e700-389f-11eb-8ef0-34c11055f368.png)


### To Reproduce
```
const { app, BrowserWindow } = require(""electron"");

const init = () => {
	for (let i = 0; i < 100; i++) {
		let browserWindow = new BrowserWindow({
			show: true
		});
		browserWindow.webContents.loadURL(""http://www.google.com"");
		setTimeout(() => {
			browserWindow.close()
		}, 10);
	}
};

app.on(""ready"", () => {
	init();
});
```
Also see: https://github.com/electron/electron/issues/26864
I believe the issue might be that the window is closed while loading
",codebytere,platform/windows;crash :boom:;bug :beetle:;11-x-y;12-x-y;stale,2020-12-07T14:16:56Z,2022-10-06T19:07:42Z,t57ser,codebytere;t57ser;pushkin-,zcbenz,,sofianguy,,codebytere,
electron/electron,26883,"Eyedropper does not work  ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 12.0.0-beta.7
* **Operating System:**
  * macOS / Window
* **Last Known Working Electron version:**
  * 8

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
1. Add `<input type=""color"" />` in HTML code
2. Run the app
3. Click on input - color picker is opening
4. Pick color by Eyedropper
5. Input should be updated by selected color

### Actual Behavior
The eyedropper is not started

### To Reproduce
For reproduce you can use electron fiddle and simply add `<input type=""color"" />`  in HTML code
 
### Screenshots
![5ZqhvTeI95](https://user-images.githubusercontent.com/8972979/101465241-fa4ceb80-393f-11eb-950f-152f736e127e.gif)

",mlaurencin,platform/windows;platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;11-x-y;12-x-y,2020-12-08T09:28:02Z,2021-01-21T21:02:30Z,robhil,mlaurencin,zcbenz;mlaurencin;codebytere,,codebytere,,codebytere,
electron/electron,26888,"Accelerators in menus no longer reflect keyboard layout on Windows <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * `3.0.0-beta.1` and above
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * `2.0.18`

### Expected Behavior
* When using a keyboard layout like German (QWERTZ) on Windows, `VKEY_OEM_2` should be rendered as `#` in the menu, not as `/` (like on the US keyboard layout)

### Actual Behavior
* `VKEY_OEM_2` is always renderer as `/` even if pressing `VKEY_OEM_2` produces `#`

### To Reproduce
* Electron Fiddle that uses `ctrl+/` as an accelerator: https://gist.github.com/eda6786c4f94483bf58aaa3147f1548f
* Switch the keyboard layout to German (QWERTZ) on Windows


relevant code snippet:
```
const template = [
  {
    label: 'Edit',
    submenu: [
      { label: 'Test', accelerator: 'Ctrl+/' },
    ]
  }
]

const menu = Menu.buildFromTemplate(template)
Menu.setApplicationMenu(menu)
```

### Screenshots
* `2.0.18` (last known good version):
![image](https://user-images.githubusercontent.com/5047891/101508514-0f457100-3978-11eb-9338-f258ee13738e.png)


* `3.0.0-beta.1` (first bad version):
![image](https://user-images.githubusercontent.com/5047891/101508406-ec1ac180-3977-11eb-84b4-bc7d6a0ef370.png)


### Additional Information
* From what I can tell, `ctrl+/` is parsed [here](https://github.com/electron/electron/blob/462de5f97a302987dc5fa5c222781ceed040f390/shell/common/keyboard_util.cc#L289-L290) as `ui::VKEY_OEM_2` correctly.
* Another example is `ctrl+\` which should be rendered as `Ctrl+鑺抈 on the Romanian keyboard layout.",zcbenz,platform/windows;component/menu;bug :beetle:;11-x-y;12-x-y;13-x-y,2020-12-08T16:12:15Z,2021-06-02T07:32:49Z,alexdima,VerteDinde;alexdima,zcbenz;deepak1556,,zcbenz,,zcbenz,
electron/electron,26899,"Frozen window appears when app is closed to tray and resolution is changed <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 11.0.4 and 12.0.0-beta.7
* **Operating System:**
  * Windows 10 and 8.1
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
Window does not re-open itself or become unusable.

### Actual Behavior
When you maximize and then close an Electron App to the system tray, and then change the display resolution in Settings, the Electron app will re-open the app window, and that window will be unusable. 

### To Reproduce
Here's a gist: https://gist.github.com/devinfoley/7888802bc7f6597f703646a5263d4662

1. Start the application.
2. Maximize the window.
3. Close the window with X.
4. Enter Settings and change your display resolution.

You may need to change the application icon referenced in the above fiddle. It's hardcoded to a location on my machine.

### Screenshots

Open and maximize the app, then close it to system tray by clicking the X button.
<img width=""1241"" alt=""Maximized App"" src=""https://user-images.githubusercontent.com/139239/101559151-6564e500-3975-11eb-985e-f33a309b9af2.png"">

Go into settings and change your resolution.
<img width=""1241"" alt=""Changing Resolution in Settings"" src=""https://user-images.githubusercontent.com/139239/101559149-6433b800-3975-11eb-820c-919c376b452b.png"">

After the resolution is changed, an unusable Electron window will be displayed fullscreen.
<img width=""1264"" alt=""A Broken Window Appears!"" src=""https://user-images.githubusercontent.com/139239/101559142-6138c780-3975-11eb-81a3-84a4ec72e0ee.png"">

### Additional Information
I was able to repro this issue in Parallels, but not VirtualBox.




",VerteDinde,platform/windows;bug :beetle:;11-x-y;12-x-y,2020-12-09T00:53:30Z,2021-02-05T20:11:26Z,devinfoley,graphixillusion;yossizahn,zcbenz,,VerteDinde,,MarshallOfSound,
electron/electron,26900,"The object returned by remote.protocol lacks many methods <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->11.0.4
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 --> Windows 10(1909) x64
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 --> 9.3.5

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
![image](https://user-images.githubusercontent.com/37071716/101567358-a14a8980-3a0b-11eb-9be9-6d5e7362ae0c.png)


### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
![image](https://user-images.githubusercontent.com/37071716/101567284-80823400-3a0b-11eb-8725-7f87ac0bd729.png)


### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Additional Information
<!-- Add any other context about the problem here. -->
",zcbenz,component/protocol;bug :beetle:;11-x-y;12-x-y,2020-12-09T02:45:48Z,2020-12-16T07:56:54Z,Tzott,,zcbenz,,sofianguy,,zcbenz,
electron/electron,26975,"BrowserWindow.addBrowserView doesn't remove BrowserView from old owner window ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v11.1.0
* **Operating System:**
  * 閳
* **Last Known Working Electron version:**
  * 閳
* **Place in code:**
  * [atom/browser/api/atom_api_top_level_window.cc:696](https://github.com/electron/electron/blob/5ae3d1a1b2dbe11d3091d366467591d9cb21fdfe/atom/browser/api/atom_api_top_level_window.cc#L696)
  * [atom/browser/api/atom_api_top_level_window.cc:709](https://github.com/electron/electron/blob/5ae3d1a1b2dbe11d3091d366467591d9cb21fdfe/atom/browser/api/atom_api_top_level_window.cc#L709)

### Expected Behavior

When `BrowserWindow#addBrowserView` got called, the BrowserView, passed as argument, receives new BrowserWindow and old BrowserWindow could be closed and has no control over BrowserView anymore.

### Actual Behavior

If BrowserView changes owner window (by `BrowserView#addBrowserView` call) and then old parent window closes, then BrowserView disappears from the new parent window.

### To Reproduce

```js
const {app, BrowserWindow, BrowserView} = require('electron')
const {once} = require('events')

async function main () {
  await app.whenReady()

  const width = 400
  const height = 300

  // Open two windows
  const win1 = new BrowserWindow({
    title: 'Window-1',
    x: 300,
    y: 300,
    width,
    height,
  })

  const win2 = new BrowserWindow({
    title: 'Window-2',
    y: 300,
    x: 300 + width,
    width,
    height,
  })

  // Create BrowserView and append it to Window-1
  const view = new BrowserView()
  win1.addBrowserView(view)
  view.setBounds({
    x: 0, y: 0, width, height,
  })
  // Change BrowserView's owner window to Window-2 (e.g. to move tab between windows)
  win2.addBrowserView(view)

  view.webContents.loadURL('https://electronjs.org')
  await once(view.webContents, 'did-finish-load')

  view.webContents.executeJavaScript('alert(""Close this window"")')
}

main()
.catch(error => {
  console.error(error)
  app.exit(1)
})
```

### Additional Information

`TopLevelWindow::AddBrowserView` method should check if WebContents has an owner parent and detach the view. IMO there should be private method like `detachBrowserView` which does it.
",codebytere,bug :beetle:;component/BrowserView;10-x-y;11-x-y;12-x-y,2020-12-12T21:12:20Z,2021-01-05T00:34:23Z,rumkin,rumkin;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,27112,"Why is the BrowserView being dragged? <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [v] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [v] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [v] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * <!-- (output of `node_modules/.bin/electron --version`) e.g. 4.0.3 -->11.1.1
* **Operating System:**
  * <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->macOS 11.1
* **Last Known Working Electron version:**
  * <!-- (if applicable) e.g. 3.1.0 -->9.0.0

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->It shouldn't be dragged, it should be a click.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->It is dragged in BrowserView and cannot be clicked.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
```
// main.js
const findInpage = new BrowserView({
  webPreferences: {
    nodeIntegration: true,
  },
});

const [viewWidth] = mainWindow.getContentSize();
mainwindow.setBrowserView(findInPage);
findInPage.setBounds({
  x: viewWidth - 406,
  y: 2,
  width: 402,
  height: 42,
});
findInPage.webContents.loadURL('..find-in-page.html');


// find-in-page.html
<html>
<head><style>...</style></head>
<body style=""-webkit-app-region: no-drag;"">
<div>
  <input /><span>0/0</span>
  <button>Aa</button>
  <button>up</button>
  <button>down</button>
  <button>close</button>
</div>
</body>
</html>
```


<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
https://user-images.githubusercontent.com/11021464/103020822-7bd18a00-458c-11eb-99ca-a31b4d837c8f.mov

### Additional Information
<!-- Add any other context about the problem here. -->



",codebytere,platform/macOS;bug :beetle:;component/BrowserView;11-x-y,2020-12-23T17:23:11Z,2021-01-04T22:01:33Z,ssoju,taras-slapdash;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,27131,"Top right part of BrowserView in frameless BrowserWindow is not clickable <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
Top right part of BrowserView in frameless BrowserWindow is not clickable

* **Electron Version:** 11.1.1 (broken with >= 11.0.4)
* **Operating System:** Windows & Linux (tested on Windows 10 20H2, reported by a Linux Mint user)
* **Last Known Working Electron version:** 11.0.3

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
Buttons in `BrowserView` should be clickable.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
Buttons in `BrowserView` are not clickable.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Replace `main.js` in `electron-quick-start` with the following code.
```js
// Modules to control application life and create native browser window
const {app, BrowserWindow, BrowserView} = require('electron')
const path = require('path')

function createWindow () {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    width: 800,
    height: 600,
    frame: false,
    webPreferences: {
      preload: path.join(__dirname, 'preload.js')
    }
  })

  const view = new BrowserView({})
  view.webContents.loadURL('https://discordapp.com/login')
  mainWindow.setBrowserView(view)
  view.setBounds({
    x: 0,
    y: 0,
    height: 600,
    width: 800,
  })
  view.setAutoResize({ width: true, height: true })


  // Open the DevTools.
  view.webContents.openDevTools({ mode: 'detach' })
}


// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.whenReady().then(() => {
  createWindow()
  
  app.on('activate', function () {
    // On macOS it's common to re-create a window in the app when the
    // dock icon is clicked and there are no other windows open.
    if (BrowserWindow.getAllWindows().length === 0) createWindow()
  })
})

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('window-all-closed', function () {
  if (process.platform !== 'darwin') app.quit()
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and require them here.
```

Login with your Discord account. The top right part of the UI won't be clickable (see screenshot).

Downgrade to Electron 11.0.3 and it will work normally. Upgrade to Electron 11.0.4 and it will break.

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
![Capture](https://user-images.githubusercontent.com/1548835/103154871-567f8e80-47cd-11eb-99c0-08e9c31cc3db.PNG)

### Additional Information
<!-- Add any other context about the problem here. -->
Likely to be regression of https://github.com/electron/electron/pull/26738
@codebytere ",codebytere,platform/windows;platform/linux;bug :beetle:;11-x-y,2020-12-26T15:55:28Z,2021-01-04T19:22:15Z,quanglam2807,quanglam2807;codebytere,codebytere,,codebytere,,codebytere,
electron/electron,27149,"-webkit-app-region ""drag"" vs ""non-drag"" problem Here is how to quickly reproduce the bug: Electron fiddle: https://gist.github.com/josephernest/f3db7d319af407b2dcef04c7c1c514ee

____

I have a `#topleft` red title bar containing multiple ""tab"" buttons that should fill all the available space *except* a `#topright` blue block.  
It is possible to move the main Electron window by click-and-dragging on `#topleft`'s red background, thanks to `-webkit-app-region: drag;`. This works.

[![enter image description here][1]][1]

**Problems**: 

1. clicks on `#topright` are ignored: `alert()` is not triggered  (same problem for child elements of this block)
2. `#topright span:hover { background-color: black; }` is ignored 
3. `#topright { -webkit-app-region: no-drag; }` is ignored: we can still move the window by click-and-dragging on `#topright` whereas it should not

However if we run the same HTML code *in a browser*, all is working correctly.

  [1]: https://i.stack.imgur.com/ZZPsJ.png",codebytere,platform/windows;bug :beetle:;component/BrowserView,2020-12-29T18:16:17Z,2021-01-04T19:22:15Z,josephernest,StaZhu,codebytere,,codebytere,,codebytere,
electron/electron,27246,"The resized event doesn't fire when maximizing/unmaximizing the window ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 11.1.1
* **Operating System:** Windows 10

### Expected Behavior
I expect that the window's resized event fires when the window is maximized or unmaximized

### Actual Behavior
`resized` never fires, only `resize` fires

### To Reproduce
1. npm start main.js and wait until the window is maximized
2. seconds later you'll see a message box telling you that the resized event never fired

main.js:
```
const {app, BrowserWindow, dialog} = require('electron')

function createWindow () {
  const mainWindow = new BrowserWindow()

  mainWindow.loadURL('https://google.com')

  let resizeFired = false;
  mainWindow.on(""resize"", () => {
    resizeFired = true;
  })
  let resizedFired = false;
  mainWindow.on(""resized"", () => {
    resizedFired = true;
  });

  setTimeout(() => {
    mainWindow.maximize();
    setTimeout(() => {
        dialog.showErrorBox("""", `resize: ${resizeFired}; resized: ${resizedFired}`);
    }, 2000);
  }, 5000)
}

app.whenReady().then(createWindow)

app.on('window-all-closed', function () {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})
```",codebytere,bug :beetle:;component/BrowserWindow,2021-01-08T22:15:23Z,2021-01-13T00:39:31Z,pushkin-,codebytere,codebytere,,codebytere,,codebytere,
electron/electron,27341,"debugger.attach throws error FATAL:devtools_agent.cc(183)  Check failed: !associated_receiver_.is_bound() ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

`webContents.debugger.attach` throws error when some websites are loaded in webContents (for example github.com or edition.cnn.com)
On release electron build it just silently fails and as a result any `debugger.sendCommand` does not work

* **Electron Version:**
  * v12.0.0-beta.14 ('testing' build from source, not 'release')
* **Operating System:**
  * macOS Catalina 10.15.7 (19H15)


### Expected Behavior
`webContents.debugger.attach / webContents.debugger.sendCommand`  should not throw an error

### Actual Behavior
Currently it throws errorr
`[69427:0117/132541.676363:FATAL:devtools_agent.cc(183)] Check failed: !associated_receiver_.is_bound(). 
0   Electron Framework                  0x000000011e5b9779 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x000000011e4a8ad3 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x000000011e4c995f logging::LogMessage::~LogMessage() + 175
3   Electron Framework                  0x000000011e4ca7fe logging::LogMessage::~LogMessage() + 14
4   Electron Framework                  0x0000000121765fea blink::DevToolsAgent::BindReceiver(mojo::PendingAssociatedRemote<blink::mojom::blink::DevToolsAgentHost>, mojo::PendingAssociatedReceiver<blink::mojom::blink::DevToolsAgent>, scoped_refptr<base::SingleThreadTaskRunner>) + 90
5   Electron Framework                  0x00000001229dc143 blink::WebDevToolsAgentImpl::BindReceiver(mojo::PendingAssociatedRemote<blink::mojom::blink::DevToolsAgentHost>, mojo::PendingAssociatedReceiver<blink::mojom::blink::DevToolsAgent>) + 99
6   Electron Framework                  0x000000012151332d blink::WebLocalFrameImpl::BindDevToolsAgent(blink::CrossVariantMojoAssociatedRemote<blink::mojom::DevToolsAgentHostInterfaceBase>, blink::CrossVariantMojoAssociatedReceiver<blink::mojom::DevToolsAgentInterfaceBase>) + 157
7   Electron Framework                  0x0000000123daab9e non-virtual thunk to content::RenderFrameImpl::BindDevToolsAgent(mojo::PendingAssociatedRemote<blink::mojom::DevToolsAgentHost>, mojo::PendingAssociatedReceiver<blink::mojom::DevToolsAgent>) + 110
8   Electron Framework                  0x000000011a438a6f content::mojom::FrameNavigationControlStubDispatch::Accept(content::mojom::FrameNavigationControl*, mojo::Message*) + 1247`

On release electron build it just silently fails


### To Reproduce
Simple snippet to reproduce issues on testing build

`
const { app, BrowserWindow } = require('electron');

app.once('ready', () => {
  const window = new BrowserWindow({
    width: 800,
    height: 900,
  });

  // window.loadURL('https://www.electronjs.org/'); // working
  // window.loadURL('https://example.com/'); // working

  // window.loadURL('https://edition.cnn.com/'); // throws error
  window.loadURL('https://github.com/'); // throws error

  window.webContents.debugger.attach('1.1');

});

`

",codebytere,platform/macOS;bug :beetle:;blocked/need-repro;12-x-y;stale,2021-01-17T11:55:05Z,2022-10-06T19:08:36Z,sh0cked,codebytere;sh0cked;utkarsh-dixit;nornagon,codebytere;nornagon,,codebytere,,codebytere,
electron/electron,27378,"BrowserView: flickers when switching between view <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 10.1.7 and beyond (I tested on latest 11.2.0 too)
* **Operating System** macOS 10.15.7
* **Last Known Working Electron version:** 10.1.6

NOTE: tested in windows, the bug is not present.

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->

Switching browser view should **not flickers**.

### Actual Behavior
<!-- A clear and concise description of what actually happened. -->

Switching browser view **flickers**.

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Load electron fiddle friendly gist here https://gist.github.com/kevinlinv/eada1e5bdd1282db338971c4c42c671e

<details>
<summary>Collapse here for the code in case gist is not loading</summary>

`index.html`
```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
    <link rel=""stylesheet"" type=""text/css"" href=""./styles.css"">
  </head>
  <body>
    <div style=""display:flex"">
      <p style=""margin:0px; padding: 5px"">MyApp</p>
      <button id=""tab1"">tab1</button>
      <button id=""tab2"">tab2</button>
    </div>
    <script>
      // You can also require other files to run in this process
      require('./renderer.js')
    </script>
  </body>
</html>
```

`main.js`
```js
const {app, ipcMain, BrowserView, BrowserWindow} = require('electron')

function createWindow () {
  const mainWindow = new BrowserWindow({
    width: 1080,
    height: 720,
    webPreferences: { nodeIntegration: true }
  })
  

  const views = [
    createView({ backgroundColor: '#ddd', url: 'https://www.youtube.com/watch?v=RDfjXj5EGqI' }),
    createView({ backgroundColor: '#000', url: 'https://electronjs.org' }),
  ];
  const focusView = (id) => {
    const { width, height } = mainWindow.getContentBounds();
    const windowContentHeight = 40;
    mainWindow.setBrowserView(views[id]);
    views[id].setBounds({
      x: 0,
      y: windowContentHeight, 
      width,
      height: height - windowContentHeight,
    });
  }
  ipcMain.handle('onTabClick', (_, id) => focusView(id))

  focusView(0)
  mainWindow.loadFile('index.html')
}

function createView({ backgroundColor, url }) {
  const browserView = new BrowserView();
  browserView.setBackgroundColor(backgroundColor);
  browserView.setAutoResize({
    width: true,
    height: true,
    horizontal: false,
    vertical: false,
  });
  browserView.webContents.loadURL(url);
  return browserView;
}
app.whenReady().then(createWindow)

app.on('window-all-closed', app.quit)
```

`renderer.js`
```js
const {ipcRenderer} = require('electron')
const handleClick = id => ipcRenderer.invoke('onTabClick', id)

document.getElementById('tab1').addEventListener('click', () => handleClick(0))
document.getElementById('tab2').addEventListener('click', () => handleClick(1))
```


</details>

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

The first part: the problem
The second part: expected behavior

https://user-images.githubusercontent.com/44967897/105120572-93b61280-5b26-11eb-8a18-0846939d0625.mp4

",codebytere,platform/macOS;bug :beetle:;10-x-y;has-repro-gist;11-x-y,2021-01-20T02:52:51Z,2021-02-08T17:14:48Z,kevinlinv,ckerr;kevinlinv;poisonReact,codebytere;ckerr,ckerr,codebytere,,codebytere,
electron/electron,27497,"Apple Silicon 11.x web assembly fails to load ### Preflight Checklist

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 11.2.1
* **Operating System:**
  * macOS 11.1 - M1, Apple Silicon, ARM64

### Expected Behavior

Web Assembly should work or at the very least throw a relevant error message

### Actual Behavior

Creating a new WebAssembly.Module instance causes a complete loading failure of electron and does not provide any sort of relevant error message.

### To Reproduce

Electron Fiddle with gist https://gist.github.com/34ba76d876169d5a101362f47451fba3

```javascript
const wasmObjectCode = Buffer.from('0061736d01000000018580808000016000017f0382808080000100048480808000017000000583808080000100010681808080000007988080800002066d656d6f727902000b5f5a37676574466976657600000a8a808080000184808080000041050b', 'hex');

const wasmModule = new WebAssembly.Module(wasmObjectCode);
```

### Additional Information

This only fails on 11.x on the m1 chip.

* m1 chip electron 12.x: success
* **m1 chip electron 11.x: failure**
* x86 chip electron 12.x: success
* x86 chip electron 11.x: success

This is likely a node issue according to https://github.com/dcodeIO/long.js/issues/95",deepak1556,platform/macOS;bug :beetle:;Apple Silicon 棣冨磿;has-repro-gist;11-x-y,2021-01-26T19:39:30Z,2022-04-26T19:56:10Z,wizebin,jupp0r;alectrocute;deepak1556;Serena-zlh;KishanBagaria;clavin;ghost,ckerr,,,,clavin,
electron/electron,27605,"Calling printToPDF with cross origin iframe blocks all calls to printToPDF ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 11.2.2
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * Unknown

### Expected Behavior
printToPDF should finish

### Actual Behavior
Calling printToPDF in a window that contains a cross origin iframe will never resolve.
**Additionally all other calls to printToPDF never resolve as well, even for other windows and other partitions**

### To Reproduce
```
const electron = require(""electron"");
function init() {
	let browserWindow3 = new electron.BrowserWindow({
		show: true,
		x: 500,
		y: 100,
		width: 900,
		height: 900,
		webPreferences: {
			partition: ""persist:test1""
		}
	});
	let browserWindow2 = new electron.BrowserWindow({
		show: true,
		x: 500,
		y: 100,
		width: 900,
		height: 900,
		webPreferences: {
			partition: ""persist:test2""
		}
	});
	browserWindow2.webContents.loadURL(""http://www.google.com"")
	browserWindow3.webContents.loadURL(""http://localhost:9000/index.html"").then(() => {
		setTimeout(() => {
			console.log(""calling print to pdf"");

			// Comment out this one to make the other one work
			browserWindow3.webContents.printToPDF({
			}).then(() => {
				console.log(""done 1"");
			})

			setTimeout(() => {
				browserWindow2.webContents.printToPDF({
				}).then(() => {
					console.log(""done 2"");
				})
			}, 2000);
		}, 2000);
	});
}
electron.app.on(""ready"", () => {
	init();
});
```
**index.html**
```
<!DOCTYPE html>
<html>
<body>
    <iframe src=""http://www.orf.at""/>
</body>
<script>
</script>
</html>
```",codebytere,component/printing;bug :beetle:;has-repro-gist;11-x-y,2021-02-03T11:43:43Z,2022-05-31T06:21:26Z,t57ser,ckerr;mikkorantalainen,ckerr,,codebytere,,codebytere,
electron/electron,27719,"iframe inside a webview doesn't maximize on requestFullScreen <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 12.0.0-beta.21, though as far back as 5.0.13
* **Operating System:**
  * Windows 10
* **Last Known Working Electron version:**
  * N/A

### Expected Behavior
1. Put an iframe inside of a webview
2. Call requestFullScreen on the inner iframe
3. Expect the iframe to expand and take up the entire window

### Actual Behavior
For step 3, neither the iframe nor the webview expand fully. Only the window itself becomes full-screen.

### To Reproduce
Check the ""iframe inside webview"" case of this minimal repro:
[fiddle.zip](https://github.com/electron/electron/files/5968821/fiddle.zip)

<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
On an earlier version of the fiddle attached above:
<!-- If applicable, add screenshots to help explain your problem. -->
![electron-iframe-webview](https://user-images.githubusercontent.com/7199958/107708227-0030b700-6c78-11eb-9c2b-cddd1d0a3cee.gif)
",zcbenz,component/webview;bug :beetle:;12-x-y;13-x-y;14-x-y,2021-02-11T22:50:03Z,2021-07-02T00:56:29Z,rzhao271,miniak;zcbenz,zcbenz;codebytere,,zcbenz,,jkleinsc,
electron/electron,27721," Loading PDF shows a grey screen only * **Electron Version:** v12.0.0-beta.25 (also tested different v12.0.0-beta versions - all affected)
* **Operating System:** Linux (not tested on other systems)
* **Last Known Working Electron version:** 11.2.3

### Expected Behavior
The PDF content should be displayed.

### Actual Behavior
Only the gray screen is displayed.

### To Reproduce

Load any PDF file using `browserWindowInstance.loadURL / browserWindowInstance.loadFile` methods.

Main process code sample if needed:
```javascript
const {app, BrowserWindow} = require(""electron"");

app.whenReady().then(() => {
  app.on(""web-contents-created"", (...[, webContents]) => {
    webContents.on(""did-fail-load"", (...[, errorCode, errorDescription, validatedURL, isMainFrame]) => {
      console.log({errorCode, errorDescription, validatedURL, isMainFrame});
    });
  });

  // loading via ""loadURL"" call also affected
  new BrowserWindow().loadFile(""path-to-pdf-file.pdf"");
});
```

### Additional Information
Possibly similar to #22286. CC @nornagon.
",codebytere,platform/linux;bug :beetle:;12-x-y,2021-02-12T18:40:26Z,2021-02-17T23:50:46Z,vladimiry,vladimiry;codebytere;nornagon,codebytere,,codebytere,,codebytere,
electron/electron,27722,"will-prevent-unload doesn't fire for BrowserView ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:** 11.2.1
* **Operating System:** Windows 10

### Expected Behavior
I expect that `will-prevent-unload` will fire when closing a BrowserView with a page that cancels the `beforeunload` event

### Actual Behavior
`will-prevent-unload` never fires. It only fires for BrowserWindows.

### To Reproduce
1. start main.js
2. in the devtools, execute: `onbeforeunload = (e) => { e.preventDefault(); e.returnValue = false; }`
3. Close the window.
4. The window does close, but the `will-prevent-unload` handler never executes

```
const { app, BrowserWindow, BrowserView } = require('electron')

async function createWindow () {
  const win = new BrowserWindow();
  const view = new BrowserView();

  view.setBounds({x: 0, y: 0, width: 600, height: 600});
  win.setBrowserView(view);

  await view.webContents.loadURL('https://google.com')
  view.webContents.openDevTools();

  view.webContents.on(""will-prevent-unload"", (e) => {
    e.preventDefault();
  });
}

app.whenReady().then(createWindow)

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
});
```

Related (if not a dupe) of [this issue](https://github.com/electron/electron/issues/19194)",codebytere,bug :beetle:;component/BrowserView,2021-02-12T18:55:41Z,2021-04-07T07:16:11Z,pushkin-,pushkin-,zcbenz,,codebytere,,codebytere,electron/electron#19194;
electron/electron,27837,"DCHECK failure dialog.showOpenDialog crashes with ""Check failed: !g_blocking_disallowed.Get().Get()"" ### Preflight Checklist
* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * v11.2.3 (Chromium v87.0.4280.141, Node v12.18.3, v8 v8.7.220.31-electron.0)
* **Operating System:**
  * Linux
* **Last Known Working Electron version:**
  * unknown

### Expected Behavior
A call to `dialog.showOpenDialog({defaultPath: "".""});` shows a file picker dialog.

### Actual Behavior
Electron crashes with the following message:
```
[8880:0220/194105.782938:FATAL:thread_restrictions.cc(78)] Check failed: !g_blocking_disallowed.Get().Get(). Function marked as blocking was called from a scope that disallows blocking! If this task is running inside the ThreadPool, it needs to have MayBlock() in its TaskTraits. Otherwise, consider making this blocking work asynchronous or, as a last resort, you may use ScopedAllowBlocking (see its documentation for best practices).
g_blocking_disallowed currently set to true by
```

Backtrace from gdb:
```
#0  __restore_sigs (set=set@entry=0x7fffffff8920) at ./arch/x86_64/syscall_arch.h:40
#1  0x00007ffff7fad50d in raise (sig=sig@entry=6) at src/signal/raise.c:11
#2  0x00007ffff7f83f25 in abort () at src/exit/abort.c:11
#3  0x000055555a60d345 in base::debug::BreakDebugger() () at ../../base/debug/debugger_posix.cc:344
#4  0x000055555a57145e in logging::LogMessage::~LogMessage() (this=0x7fffe3150500)
    at ../../base/logging.cc:879
#5  0x000055555a57180e in logging::LogMessage::~LogMessage() (this=0x7fffe3150500)
    at ../../base/logging.cc:554
#6  0x000055555a5fb602 in base::internal::AssertBlockingAllowed() ()
    at ../../base/threading/thread_restrictions.cc:78
#7  0x000055555a5f38ac in base::ScopedBlockingCall::ScopedBlockingCall(base::Location const&, base::BlockingType) (this=<optimized out>, from_here=..., blocking_type=<optimized out>)
    at ../../base/threading/scoped_blocking_call.cc:44
#8  0x000055555a61534e in base::DirectoryExists(base::FilePath const&) (path=...)
    at ../../base/files/file_util_posix.cc:488
#9  0x0000555556429185 in file_dialog::(anonymous namespace)::FileChooserDialog::FileChooserDialog(GtkFileChooserAction, file_dialog::DialogSettings const&)
    (this=0x7fffe2055e90, action=<optimized out>, settings=...)
    at ../../electron/shell/browser/ui/file_dialog_gtk.cc:78
#10 0x0000555556429565 in file_dialog::ShowOpenDialog(file_dialog::DialogSettings const&, gin_helper::Promise<gin_helper::Dictionary>) (settings=..., promise=...)
    at ../../electron/shell/browser/ui/file_dialog_gtk.cc:310
#11 0x000055555629f71c in (anonymous namespace)::ShowOpenDialog(file_dialog::DialogSettings const&, gin::Arguments*) (settings=..., args=<optimized out>) at ../../electron/shell/browser/api/electron_api_dialog.cc:66
#12 0x00005555562a1c8b in base::RepeatingCallback<v8::Local<v8::Promise> (file_dialog::DialogSettings const&, gin::Arguments*)>::Run(file_dialog::DialogSettings const&, gin::Arguments*) const &
    (this=0x7fffffff9250, args=..., args=0x7fffffff9260) at ../../base/callback.h:135
#13 gin_helper::Invoker<gin_helper::IndicesHolder<0ul, 1ul>, file_dialog::DialogSettings const&, gin::Arguments*>::DispatchToCallback<v8::Local<v8::Promise> >(base::RepeatingCallback<v8::Local<v8::Promise> (file_dialog::DialogSettings const&, gin::Arguments*)>) (this=0x7fffffff9280, callback=...)
    at ../../electron/shell/common/gin_helper/function_template.h:220
#14 0x00005555562a1b2f in gin_helper::Dispatcher<v8::Local<v8::Promise> (file_dialog::DialogSettings const&, gin::Arguments*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) (info=<optimized out>)
    at ../../electron/shell/common/gin_helper/function_template.h:262
#15 0x00005555578d1c81 in v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo)
    (this=0x7fffffff94d8, handler=...) at ../../v8/src/api/api-arguments-inl.h:158
#16 0x00005555578d043c in v8::internal::(anonymous namespace)::HandleApiCallHelper<false>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, v8::internal::BuiltinArguments)
    (isolate=<optimized out>, function=..., new_target=..., fun_data=..., receiver=..., args=...)
    at ../../v8/src/builtins/builtins-api.cc:111
#17 0x00005555578ce66e in v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments, v8::internal::Isolate*) (args=..., isolate=0x3eca00000000) at ../../v8/src/builtins/builtins-api.cc:141
#18 0x00005555578ce11b in v8::internal::Builtin_HandleApiCall(int, unsigned long*, v8::internal::Isolate*)
    (args_length=6, args_object=0x7fffffff96b0, isolate=0x3eca00000000)
    at ../../v8/src/builtins/builtins-api.cc:129
#19 0x0000555558b2e1bf in Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit ()
#20 0x00005555588971d8 in Builtins_InterpreterEntryTrampoline ()
```

### To Reproduce
I've compiled Electron 11.2.3 from source and reduced the crash to [this minimal example in a gist](https://gist.github.com/mkaesberger/107ca937bdf4cc94ac01a1f4605e7985). I execute the example with `electron index.js`. The crash only occurs when `defaultPath` parameter is passed _and_ a `BrowserWindow` exists. Especially if no `BrowserWindow` was created then the dialog opens and does not crash Electron.

",codebytere,platform/linux;bug :beetle:;status/confirmed;has-repro-gist;11-x-y;12-x-y,2021-02-21T04:15:33Z,2021-04-06T06:54:59Z,mkaesberger,ckerr;mkaesberger,ckerr,ckerr,codebytere,,codebytere,
electron/electron,27895,"net.request response is missing content-type header in 304 responses ### Preflight Checklist

* [x ] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [ x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [ x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
10.1.7
* **Operating System:**
Windows 10 Enterprise 1909

When making a request with `net.request`, I can see that my response has a `content-type` header of `application/json; charset=utf-8` inside of my `webRequest.onHeadersReceived` handler:

```
electron.session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  // details.responseHeaders['content-type'] === 'application/json; charset=utf-8'
});
```

But by the time the `net.request` `request.on('response')` handler receives the headers, the content-type is gone.

```
request.on('response', (response) => {
  /* 
  response.headers === {
    // no content-type
  };
  */
});
```

I haven't tested if this is an issue in all types of responses, but I can tell you this is occurring without fail for the case when the `response.statusCode === 200`, but the `response.headers.status === 304`.

### Expected Behavior
For `net.request` response handler to receive the content-type that clearly should exist on the response (proved by `webRequest.onHeadersReceived`).

### Actual Behavior
`net.request` response handler is receiving what seems to be a cached set of headers (or something?), which do not match what is seen in `webRequest.onHeadersReceived`.
",zcbenz;nornagon,blocked/need-info 閴;bug :beetle:;component/net;platform/all;10-x-y;12-x-y;13-x-y,2021-02-24T16:57:50Z,2022-12-21T22:53:30Z,themadtitanmathos,ckerr;Mr-Wallet;arantes555;anderklander;taras-dubyk;RealAlphabet;nornagon;zcbenz,ckerr;nornagon,nornagon,zcbenz,,nornagon,electron/electron#20631;
electron/electron,27967,"The handler of ""setWindowOpenHandler"" not fires on Electron 12.0.0 ### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details

* **Electron Version:**
  * 12.0.0
* **Operating System:**
  * Windows 10 20H2

### Expected Behavior
Handler fires and no new window opens 

### Actual Behavior
Handler fails and a new window opens

### To Reproduce
1. Write this code:

```javascript
window.webContents.setWindowOpenHandler(() => ({ action: ""deny"" }));
```

2. Debug or run the application.
3. Press Alt + LMB (or Scroll) on any <a> link in app.",nornagon,bug :beetle:;platform/all;12-x-y,2021-03-02T17:41:47Z,2021-04-06T08:04:14Z,PurpleHorrorRus,idanwork;PurpleHorrorRus;andreasdj;WildXBird;CoryDAsana;phosphore;Delagen;VerteDinde;ikkisoft,sofianguy;nornagon,nornagon,nornagon,,codebytere,
electron/electron,27995,"Uncaught Illegal access error in circumstances of #27457 <!--  As an open source project with a dedicated but small maintainer team, it can sometimes take a long time for issues to be addressed so please be patient and we will get back to you as soon as we can.
-->

### Preflight Checklist
<!-- Please ensure you've completed the following steps by replacing [ ] with [x]-->

* [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
* [x] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
* [x] I have searched the issue tracker for an issue that matches the one I want to file, without success.

### Issue Details
This issue is closely related to #27457, which seems to have been partially, but not entirely fixed by #27582. Specifically, the renderer no longer entirely hangs as it used to, but still reports the error `Uncaught illegal access`, and this prevents the execution of some of the asynchronous scripts on the page.
* **Electron Version:**
  * Any version that's recieved the partial fix of #27582, including the 12.0.0 release, the 13.0.0 nightly releases, and the current master branch of 10.x and 11.x. The issue in its original, worse, form affects every other version of electron from 9.x on.
* **Operating System:**
  * Verified on MacOS 10.14.6, 10.15.7, 11.2, and on Linux Debian 4.19.160-2, and Debian 5.9.15
  <!-- (Platform and Version) e.g. macOS 10.13.6 / Windows 10 (1803) / Ubuntu 18.04 x64 -->
* **Last Known Working Electron version:**
  * Electron 8.5.5 did not experience this issue. 

### Expected Behavior
<!-- A clear and concise description of what you expected to happen. -->
The app runs normally.
### Actual Behavior
<!-- A clear and concise description of what actually happened. -->
The app runs, but reports `Uncaught illegal access` on line 1 of the html page it's loading, and some script execution stops, such as receiving messages from node-ipc.
### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
The [original bug's example repo](https://github.com/Patronics/example-electron-hang) has been updated to use the new releases of electron, and to better demonstrate the current issue. It also demonstrates the error message in the console. The comments in index.html describe which lines are specifically related to the bug, and which are just to better demonstrate its effects.
<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone https://github.com/Patronics/example-electron-hang.git
$ npm install
$ npm start
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
The screenshot in #27457 may still be relevant, but the current version of the issue only outputs the error `Uncaught illegal access` on line 1, without a similar stack trace
### Additional Information
<!-- Add any other context about the problem here. -->
To clarify, commit #27582 did not 'cause' this issue per se, but did not fully fix the issue either. ",codebytere,platform/macOS;platform/linux;bug :beetle:;12-x-y,2021-03-04T00:39:53Z,2021-05-14T11:36:16Z,Patronics,codebytere,sofianguy,,codebytere,,codebytere,
electron/electron,28154,"[Bug]: Renderer Promise API stops working after page reload when allowRendererProcessReuse is true ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.0

### What operating system are you using?

Windows

### Operating System Version

10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

From the reproduce steps, expecting to see local files printed in the console:

...
preload.js:11 Reading file .gitignore
preload.js:11 Reading file index.html
preload.js:11 Reading file LICENSE.md
preload.js:11 Reading file main.js
preload.js:11 Reading file package-lock.json
...

### Actual Behavior

List is printed the first time the app loads. Hit Ctrl+R and observe only one line printed, or none at all.

### Testcase Gist URL

https://gist.github.com/e0d8e593f6f2d737a795d8e20ab5a37d

### Additional Information

It might be related to issue #22119",codebytere,platform/windows;bug :beetle:;component/node-integration;12-x-y,2021-03-12T08:55:28Z,2021-03-22T20:11:03Z,VeryCrazyDog,codebytere;lishid;aabuhijleh,codebytere,,codebytere,,codebytere,electron/electron#22119;
electron/electron,28185,"[Bug]: Bluetooth requestDevice not working on 12.0.0/12.0.1 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

Windows

### Operating System Version

Version: Home 2004 / OS build: 19041.867

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

`navigator.bluetooth.requestDevice({acceptAllDevices: true});` in a renderer JS file should trigger the `select-bluetooth-device` event registered in an electron/main JS file.

### Actual Behavior

Does not trigger the event.

### Testcase Gist URL

https://gist.github.com/910403defe0696032c1f5ccb1a9b1d7e

",jkleinsc,platform/windows;bug :beetle:;12-x-y;13-x-y,2021-03-14T20:09:50Z,2021-06-09T14:48:18Z,Inari-Whitebear,jkleinsc;Pign;illysky;mlynch;bierzorutas;piyushrathodIn,Inari-Whitebear;jkleinsc;sofianguy,,jkleinsc,,jkleinsc,
electron/electron,28200,"[Bug]: Crash when Using mpv.js on Latest Version of Electron ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 2020

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

The app works perfectly fine with an embedded video player.

### Actual Behavior

The app crashes when creating an element with an embedded video player.

### Testcase Gist URL

https://github.com/pavladan/mpv.js-on-react

Change the version of electron to 12.0.1 to see the crash, 11.3.0 works perfectly fine.

Note: In order to see the crash on 12.0.1, adjustments to the settings must be made
```
const win = new BrowserWindow({
    width: 1280,
    height: 574,
    autoHideMenuBar: true,
    useContentSize: process.platform !== ""linux"",
    title: ""mpv.js example player"",
    webPreferences: {
      nodeIntegration: true,
      plugins: true,
      enableRemoteModule: true,
      nodeIntegrationInSubFrames: true,
      contextIsolation: false,
      worldSafeExecuteJavaScript: false
    },
  });
```
",nornagon,bug :beetle:;platform/all;12-x-y,2021-03-15T18:32:20Z,2021-03-24T18:11:26Z,NADESHIKON,nornagon;NADESHIKON,NADESHIKON;nornagon,nornagon,nornagon,,nornagon,
electron/electron,28228,"[Bug]: BrowserView still has a hidden dragging area while y is non-zero ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.x 13.x

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.2

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

12.x

### Expected Behavior

BrowserView with non-zero y bound setting should not being able to drag in the bottom area.

### Actual Behavior

If set BrowserView with bounds `{ x: 0, y: 40, width: 300, height: 100 }`.
This BrowserView will has a hidden dragging-area in its bottom.
Problem occurred while the `y` is non-zero.

### Testcase Gist URL

https://gist.github.com/c138020abbb7d949608c3c11b1cad253

As in https://github.com/electron/electron/issues/27884, the dragging problem in BrowserView still exists.
Have tested in v12.x and v13.x.
The dragging area is actually 2x of the BrowserView's `y` setting (red area in test case).",codebytere,platform/macOS;bug :beetle:;component/BrowserView;12-x-y;13-x-y,2021-03-17T03:15:25Z,2021-03-19T13:22:05Z,gucheen,,gucheen;sofianguy;codebytere,,codebytere,,codebytere,
electron/electron,28261,"[Bug]: setImmediate does not make a new task ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.0

### What operating system are you using?

macOS

### Operating System Version

macos catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Run the following snippet in renderer process with Node.js enabled:

```js
let resolve;
const promise = new Promise(x => resolve = x);
promise.then(() => console.log('task1: promise resolved'));

setImmediate(() => {
  console.log('task1: setimmediate');
  resolve();
});
setImmediate(() => console.log('task2: setimmediate'));
```

In Node.js v14, this returns the following - and this is **EXPECTED BEHAVIOR**:

```
task1: setimmediate
task1: promise resolved
task2: setimmediate
```

### Actual Behavior

In electron v12 in renderer process with node.js and context isolation disabled, this returns the following:

```
task1: setimmediate
task2: setimmediate
task1: promise resolved
```

### Testcase Gist URL

~~https://gist.github.com/aslushnikov/ab5045bf485389136e03e72360bcae33~~
https://gist.github.com/codebytere/6dbecc4f8e142e893454f8fe9d07cb6c

",codebytere,platform/macOS;bug :beetle:;component/node-integration;has-repro-gist;12-x-y,2021-03-18T02:20:53Z,2021-07-22T11:27:35Z,aslushnikov,codebytere;aslushnikov,aslushnikov;codebytere,,codebytere,,codebytere,
electron/electron,28301,"[Bug]: Electron sandbox_bundle.js script failed to run ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

No Error

### Actual Behavior

```
Electron sandbox_bundle.js script failed to run
(anonymous) @ VM97 sandbox_bundle.js:formatted:4795


VM97 sandbox_bundle.js:formatted:4796 TypeError: object null is not iterable (cannot read property Symbol(Symbol.iterator))
    at Object.invokeSync (VM97 sandbox_bundle.js:formatted:1085)
    at Object.<anonymous> (VM97 sandbox_bundle.js:formatted:2349)
    at Object../lib/sandboxed_renderer/init.ts (VM97 sandbox_bundle.js:formatted:2459)
    at __webpack_require__ (VM97 sandbox_bundle.js:formatted:13)
    at VM97 sandbox_bundle.js:formatted:73
    at ___electron_webpack_init__ (VM97 sandbox_bundle.js:formatted:74)
    at VM97 sandbox_bundle.js:formatted:4793
```

### Testcase Gist URL

_No response_

I always try to report issues with a reproducible test case. But this just randomly happened immediately after I had opened a window (which had `win.webContents.openDevTools()` right after creation). Also this was a child window opened via native `window.open`. This did not happen again. I assume there might be a rare race-condition that causes this script to fail?

Options were:

```js
{
    backgroundColor: nativeTheme.shouldUseDarkColors ? '#1B1D28' : '#ffffff',
    title: '',
    webPreferences: {
      preload: path.join(__dirname, 'src', 'preload.js'),
      nativeWindowOpen: true,
      enableRemoteModule: false,
      contextIsolation: true,
      sandbox: true,
    },
  }
```

What I'm mostly curious about and what concerns me is: what is this about? **Does this in some way or another affect the functionality of the `sandbox`**? I can find some references to `sandbox_bundle.js` in other issues, but no issue is about the bundle itself not loading but exception that happen inside of it. Maybe #21112 comes close.

I absolutely understand if this is getting closed due to lack of reproducible steps. But if this can affect the security of sandboxing the I need to know.

![Selection_835](https://user-images.githubusercontent.com/679144/111817391-41069600-88de-11eb-8e45-e8b581780305.png)
",MarshallOfSound,bug :beetle:;has-repro-gist;12-x-y;stale,2021-03-19T17:18:27Z,2022-10-06T14:09:50Z,Prinzhorn,Prinzhorn;MarshallOfSound;nornagon;thorsent,Prinzhorn;ckerr,,MarshallOfSound,,Prinzhorn,
electron/electron,28317,"[Bug]: Cannot access webview preload globals from page ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 19042.867

### What arch are you using?

x64

### Last Known Working Electron version

11.0.0

### Expected Behavior

Preload globals are accessible from page.

### Actual Behavior

Preload globals are not accessible from page.

### Testcase Gist URL

https://gist.github.com/theArina/3956d7ef31119559d4219ade2bc4cd74

I've upgraded to v12 from v11.
I've read about [changes](https://www.electronjs.org/releases/stable#breaking-changes) and assumed that setting `contextIsolation` explicitly to `false` will solve the issue, but the issue remains. 

In my gist try to access the property `preloadTest` of a `window` manually, you will see that it is `undefined` instead of an actual value that I've set. I was able to do that in v11 and earlier.",codebytere,platform/windows;bug :beetle:;blocked/need-repro;12-x-y,2021-03-21T11:20:44Z,2021-03-30T09:30:19Z,theArina,codebytere;theArina;MarshallOfSound;stclairdaniel,theArina;codebytere,,codebytere,,codebytere,
electron/electron,28319,"[Bug]: Thumbar disappears after win.hide() is called - and can't be displayed again afterwards ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

11.2.3

### What operating system are you using?

Windows

### Operating System Version

Windows 10 v19042

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

After calling setThumbarButtons() and then `window.hide()`  and then `window.show() ` 
I should be able to set thumbar buttons back to their original state (or create new)

### Actual Behavior

Thumbar function seems to break completely after `window.hide()` is called
(It wont display anymore, calling `setThumbarButtons([...])` returns true but wont actually display anything
閳跨媴绗 The bug can also be replicated by just creating the thumbar while the window is already hidden

### Testcase Gist URL

https://gist.github.com/883fa102da7c81e47bb866aa20089292

 -----

#12240 #22081 seems to have the same issue on older Electron versions

I encountered this bug while working on [youtube-music](https://github.com/th-ch/youtube-music/pull/200/files)

[EDIT]: I made the whole thing work by using 
  `win.minimize(); win.setSkipTaskbar(true);`
  instead of
  `window.hide();`
  but still, the original bug exists",codebytere,platform/windows;bug :beetle:;11-x-y;12-x-y;13-x-y,2021-03-21T19:39:36Z,2021-03-25T11:02:48Z,Araxeus,ckerr;Araxeus,Araxeus;ckerr;codebytere,codebytere,codebytere,,codebytere,
electron/electron,28327,"[Bug]: ""Uncaught Error:"" added to message of errors thrown in a function defined in preload script ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

macOS

### Operating System Version

11.2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

`error.message` shouldn't be prefixed with ""Uncaught Error:""

### Actual Behavior

`error.message` is prefixed with ""Uncaught Error:"" when an error is thrown in a function defined in the preload script and caught in the renderer process. This only happens when `contextIsolation` is enabled.

### Testcase Gist URL

https://gist.github.com/f11c77f9bc2cbf98d42a9fcaf477c80a

",codebytere,bug :beetle:;platform/all;status/confirmed;has-repro-gist;12-x-y,2021-03-22T12:50:31Z,2021-03-30T07:26:50Z,raksooo,codebytere;MarshallOfSound,raksooo;ckerr,ckerr,codebytere,,codebytere,
electron/electron,28348,"[Bug]: App Crashes when a new foreground tab is opened from a webview with nativeWindowOpen and allowPopups ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

macOS

### Operating System Version

11.2

### What arch are you using?

x64

### Last Known Working Electron version

11.x

### Expected Behavior

The app should not crash, and the new-window event should be fired

### Actual Behavior

The app crashes 

### Testcase Gist URL

https://gist.github.com/ae7fdfd99a5d755a5ae4323c46a4e833

",codebytere,platform/macOS;component/webview;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;12-x-y;13-x-y,2021-03-23T11:09:29Z,2021-06-30T01:10:18Z,praneetrohida,praneetrohida;codebytere;nornagon;agata;PauIGB;jpschw,praneetrohida;sofianguy;codebytere;nornagon,nornagon,codebytere,,deepak1556,
electron/electron,28359,"[Bug]: ""Community Discussions"" goes to discuss.atom.io ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 21337.1010

### What arch are you using?

x64

### Last Known Working Electron version

N/A

### Expected Behavior

That the ""Community Discussion"" link in the Help context menu does not point to discuss.atom.io anymore. Perhaps the Discord would be a good substitute. If it's unnecessary, just put removing it would be a relatively good alternative.

### Actual Behavior

The ""Community Discussion"" link in the Help context menu points to discuss.atom.io

### Testcase Gist URL

_No response_

",erickzhao,beginner friendly;component/menu;bug :beetle:;platform/all;12-x-y,2021-03-23T20:09:26Z,2021-03-31T06:22:55Z,bnb,,bnb;codebytere;sofianguy,,erickzhao,,codebytere,
electron/electron,28392,"[Bug]: btoa causes SIGSEGV when decoding large base64 string that encodes binary data ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When passing a large base64 string with non-latin characters, electron will crash. As shown when opening attached test case and pressing the 'Go' button a few times. 

`btoa` should  never die Electron, but give encoding error (e.g. no Latin characters) or produce gibberish

(Not super relevant background: Obviously this usage of `btoa` wasn't correct, but since in the original context we generally received base64 strings that encode utf-8 strings, and occasionally binary data, we didn't catch this early, causing users to experience quite random Electron crashes (since this was happening in some background process, and a `try / catch` didn't pick it up!). Because the crash doesn't leave any trail in, for example, the console in the debugger, it was pretty hard to pinpoint this.)

### Actual Behavior

Calling `btoa` with a large base64 string that was encoded from binary data (few MB), it will crash Electron, with exceptions like

```
Crashed Thread:        363

Exception Type:        EXC_GUARD
Exception Codes:       0x6000000000000012, 0x0000000000000002
Exception Note:        EXC_CORPSE_NOTIFY

Termination Reason:    LIBSYSTEM, [0x2]

Thread 0:: CrRendererMain
0   libsystem_kernel.dylib        	0x00007fff6a33bdfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff6a33c170 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff30113ef5 __CFRunLoopServiceMachPort + 247
3   com.apple.CoreFoundation      	0x00007fff301129c2 __CFRunLoopRun + 1319
4   com.apple.CoreFoundation      	0x00007fff30111e3e CFRunLoopRunSpecific + 462
5   com.apple.Foundation          	0x00007fff327ad1d8 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x000000010a5669c4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6135828
7   com.github.Electron.framework 	0x000000010a565a62 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6131890
```

Or:

```

Crashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000050000000
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [28957]

VM Regions Near 0x50000000:
--> 
    __TEXT                 0000000100aae000-0000000100ae2000 [  208K] r-x/r-x SM=COW  /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)

Thread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread
0   libsystem_pthread.dylib       	0x00007fff6a3fa5ad pthread_mutex_lock + 0
1   com.github.Electron.framework 	0x0000000102c7e180 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 22324592
2   com.github.Electron.framework 	0x0000000102c81811 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 22338561
3   com.github.Electron.framework 	0x0000000102f05e62 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 24978002
4   com.github.Electron.framework 	0x0000000101155660 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 14944
5   com.github.Electron.framework 	0x00000001011552b5 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 14005
6   com.github.Electron.framework 	0x0000000101154933 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 11571
7   com.github.Electron.framework 	0x00000001017a1f58 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 451400
```

### Testcase Gist URL

https://gist.github.com/a94398a36d2346f8d8bba8e74c50245d

*edit(ckerr):* gist with package.json: https://gist.github.com/ckerr/7a4d22bcb17713641dcb092db921d0e7",VerteDinde,bug :beetle:;component/node-integration;status/confirmed;has-repro-gist;11-x-y;12-x-y;stale,2021-03-25T11:14:47Z,2022-11-05T02:24:05Z,mweststrate,ckerr;mweststrate;nornagon,mweststrate;ckerr;nornagon,,VerteDinde,,,
electron/electron,28405,"[Bug][macOS]: browser window drag for non-zero x,y browser view bounds  ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.2

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.1

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

Despite the `x, y` bounds provided for a browser view, the whole browser window should not be draggable by clicking inside its browser view itself

### Actual Behavior

For browser views with both `x, y` bounds coordinates, such that `x > 0` or `y > 0`, if I click inside the browser view the entire browser window starts dragging

### Testcase Gist URL

https://github.com/b3ll00z/electron-quick-start-typescript

### To Reproduce
```
$ git clone https://github.com/b3ll00z/electron-quick-start-typescript
$ cd electron-quick-start-typescript
$ npm install ; npm start
```
https://user-images.githubusercontent.com/16275841/112603502-654dff80-8e15-11eb-8d97-c142adc46afd.mov
",codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;has-repro-gist;11-x-y;12-x-y;13-x-y,2021-03-26T08:39:30Z,2021-05-05T16:38:00Z,b3ll00z,praneetrohida;Kilian,b3ll00z;VerteDinde;Kilian,,codebytere,,ckerr,electron/electron#28228;
electron/electron,28407,"[Bug]: Crash when loading iframe with custom protocol from file:// ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.2
""electron-packager"": ""^15.2.0"",

### What operating system are you using?

Windows

### Operating System Version

Windows 10 20H2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Electron should not crash

### Actual Behavior

Electron crashes when adding iframe

### Testcase Gist URL

_No response_

[app.zip](https://github.com/electron/electron/files/6211709/app.zip)

I've the following component wich crashes electron:

	export class SimpleReportViewer extends HTMLElement {
		constructor() {
			super();
			this.attachShadow({ mode: 'open' });
			this.container = document.createElement('div');
			this.shadowRoot.appendChild(this.container);
		}
		loadIframe() {
			if (this.isConnected) {
				this._iframe = document.createElement(""iframe"");
				this._iframe.style.width = ""100%"";
				this._iframe.style.height = ""100%"";
				this._iframe.src = '/iframe.html';
				this.container.appendChild(this._iframe);
			}
		}
		connectedCallback() {
			this.loadIframe();
		}
	}
	customElements.define('simple-report-viewer', SimpleReportViewer);
",VerteDinde,crash :boom:;component/protocol;bug :beetle:;platform/all;status/confirmed;has-repro-gist;12-x-y;17-x-y;18-x-y,2021-03-26T12:16:37Z,2022-08-31T08:08:13Z,jogibear9988,jogibear9988;nornagon;mahnunchik;kwyntes;george-thomas-hill;ccrpr;JoeyIsAPanda;ckerr,jogibear9988;ckerr;nornagon,nornagon,,,codebytere,
electron/electron,28500,"[Bug]: select-serial-port callback crashes when called with an invalid serial port ID ### Preflight Checklist

I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.2

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Returning an invalid serial port ID in the callback of the `select-serial-port` event handler of `session` should not crash Electron.

### Actual Behavior

Returning an invalid serial port ID in the callback of the `select-serial-port` event handler of `session` crashes Electron with a SIGSEGV. Calling the callback with `""foo""` or any string that is clearly not a valid serial port ID is enough to trigger the bug. Valid serial port IDs and empty strings work as expected.

### Testcase Gist URL

_No response_

",codebytere,platform/macOS;crash :boom:;bug :beetle:;has-repro-gist;12-x-y,2021-04-03T13:48:52Z,2021-04-12T13:18:40Z,ntamas,ckerr;ntamas,ntamas;ckerr;codebytere,codebytere,codebytere,,codebytere,
electron/electron,28572,"[Bug]: SharedWorker fails to load from asar ### Preflight Checklist

I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.3

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

A renderer should be able to `new SharedWorker()` or `new Worker()` with a URL pointing to a script inside the asar.

### Actual Behavior

A regular `Worker` script can be loaded from the asar, but a `SharedWorker` can not. A `SharedWorker` works properly when running via `electron .webpack`, but fails to load when packaged into an app with `.asar`.

Limited error information is available, because the worker doesn't appear in `webContents.getAllSharedWorkers()` so dev tools cannot be opened (possibly related: #25512). The worker's `onerror` event is triggered with an error, but the error contains little information. Here is an example screenshot where I reproduced the issue in the developer console. The Network tab doesn't include any info about the worker script we're trying to load.

![](https://user-images.githubusercontent.com/14237/113946383-076dd000-97a4-11eb-9d78-85c6d1802563.png)


On the other hand, I am able to `fetch` the URL directly. So if I run this in the dev console:
```js
const w = new SharedWorker(URL.createObjectURL(await (await fetch(""...app.asar/..."")).blob()));
w.onerror = (e) => console.log(""worker error"", e);
```
then the worker does load and I can open its dev tools (although it soon encounters an error when the webpack-bundled worker script tries to use `importScripts` with a relative URL that doesn't work on my `blob:` url.)

### Testcase Gist URL

https://gist.github.com/jtbandes/c339b490fb4914c54d61d6fda9134096

I found a similar issue discussed [on Stack Overflow](https://stackoverflow.com/q/59254016/23649), but it seems these people are trying to use a SharedWorker in node, but I'm trying to use it in the renderer.",zcbenz,bug :beetle:;12-x-y,2021-04-07T23:17:14Z,2021-04-27T16:07:06Z,jtbandes,jtbandes;zcbenz,jtbandes;sofianguy,,zcbenz,,jkleinsc,
electron/electron,28577,"[Bug]: render process trigger a CHECK at message_pump_kqueue.cc(387) on M1 macos ### Preflight Checklist

I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

11.4.1

### What operating system are you using?

macOS

### Operating System Version

macOS 11.0 (20A2411)

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

electron render may crash sometimes. I have found this issue was fixed by chromium, I hope electron could cherry pick this patch. 
Thanks.

https://bugs.chromium.org/p/chromium/issues/detail?id=1119292
https://bugs.chromium.org/p/chromium/issues/detail?id=1195337

### Actual Behavior

the crash looks like

```
Thread 1 Crashed:: ThreadPoolServiceThread
0   [Electron Framework]   logging::LogMessage::~LogMessage() (in Electron Framework) (logging.cc:878) [0x00000001094650e4] parsed
1   [Electron Framework]   logging::ErrnoLogMessage::~ErrnoLogMessage() (in Electron Framework) (logging.cc:1022) [0x000000010c89ebf0] parsed
2   [Electron Framework]   logging::ErrnoLogMessage::~ErrnoLogMessage() (in Electron Framework) (logging.cc:1016) [0x000000010c89ec2e] parsed
3   [Electron Framework]   base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) (in Electron Framework) (message_pump_kqueue.cc:387) [0x00000001094e0819] parsed
4   [Electron Framework]   base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) (in Electron Framework) (message_pump_kqueue.cc:170) [0x00000001094e0670] parsed
5   [Electron Framework]   base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (in Electron Framework) (thread_controller_with_message_pump_impl.cc:454) [0x00000001094a0341] parsed
6   [Electron Framework]   base::RunLoop::Run() (in Electron Framework) (run_loop.cc:126) [0x000000010947ea79] parsed
7   [Electron Framework]   base::internal::ServiceThread::Run(base::RunLoop*) (in Electron Framework) (service_thread.cc:0) [0x00000001094a8e4d] parsed
8   [Electron Framework]   base::Thread::ThreadMain() (in Electron Framework) (thread.cc:385) [0x00000001094b82e9] parsed
9   [Electron Framework]   base::(anonymous namespace)::ThreadFunc(void*) (in Electron Framework) (platform_thread_posix.cc:89) [0x00000001094cd0e3] parsed
10  libsystem_pthread.dylib         0x00007fff20426950 _pthread_start + 224
11  libsystem_pthread.dylib         0x00007fff2042247b thread_start + 15
```

### Testcase Gist URL

_No response_

",zcbenz;nornagon,platform/macOS;crash :boom:;bug :beetle:;arch/arm64,2021-04-08T09:05:41Z,2021-04-20T22:04:15Z,yaohy0819,zcbenz;Serena-zlh;nornagon,yaohy0819;zcbenz,,zcbenz,,nornagon,
electron/electron,28579,"[Bug]: registerStringProtocol crashes the entry app ### Preflight Checklist

I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

9.4.4, 10.4.2, 11.4.2, 12.0.2

### What operating system are you using?

macOS

### Operating System Version

11.2.2

### What arch are you using?

x64

### Last Known Working Electron version

-

### Expected Behavior

App works

### Actual Behavior

App crashes

### Testcase Gist URL

https://gist.github.com/mahnunchik/aaef0dffd6c03020b80c58925f31d2af

But removing callback call from the `registerStringProtocol` handler keeps app working.",codebytere,component/protocol;bug :beetle:;platform/all,2021-04-08T11:39:51Z,2021-04-08T15:43:14Z,mahnunchik,mahnunchik;codebytere;pfrazee,mahnunchik;codebytere,,codebytere,,codebytere,electron/electron#28407;
electron/electron,28658,"[Bug]: Dialog disappear and doesn't appear again after call hide(). ### Preflight Checklist

I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.1

### What operating system are you using?

macOS

### Operating System Version

Big Sur 11.1

### What arch are you using?

x64

### Last Known Working Electron version

8.2.0

### Expected Behavior

Open the dialog -> hide() it (by clicking tray icon for me) the window shouldn't be hided -> show() it again, the dialog should stays the same.

### Actual Behavior

the dialog disappear when call .show().
then click the button to trigger the dialog, it wont show
https://www.loom.com/share/dd840b58c32f4f2b8834ecd965fd9691

Open the dialog -> hide() it (by clicking tray icon for me) -> show() it again, the dialog disappear and can't trigger it 

### Testcase Gist URL

https://github.com/tsminh/electron-dialog-missing-after-hide",codebytere,platform/macOS;bug :beetle:;component/dialog;component/BrowserWindow;11-x-y;12-x-y;13-x-y,2021-04-14T12:36:23Z,2021-04-16T15:42:09Z,tsminh,,tsminh;codebytere,,codebytere,,codebytere,
electron/electron,2867,"Windows 10: Window is not put to front on focus() I am hitting an issue where a window (in Windows 10) is not being put to the front when I call focus() on it. The same code brings the window to the front on Windows 8 and below, so something must have changed in Windows 10 with regards to window management.

What I see happening is that the task bar is flashing in orange, so there is some indication. Just the window does not get focussed properly.
",codebytere,platform/windows;status/wontfix 棣冩瘒;bug :beetle:,2015-09-22T09:49:15Z,2018-09-23T18:16:32Z,bpasero,OlsonDev;zcbenz;antoinepairet;bpasero;jorangreef;tyv;friksa;felixtosh;ro78;mrtdeh;anaisbetts,zcbenz,,,,codebytere,
electron/electron,28686,"[Bug]: roundedCorners: false and frame: false make Electron unable to quit ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0-beta14

### What operating system are you using?

macOS

### Operating System Version

macOS 11.2.3

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Start Electron with a `BrowserWindow` in frameless mode (`frame: false`), with `roundedCorners` to `false` and quit the program correctly with `Cmd + Q` or Menu > Electron > Quit.

### Actual Behavior

Start Electron with a `BrowserWindow` in frameless mode (`frame: false`), with `roundedCorners` to `false`. Quitting with `Cmd + Q` or Menu > Electron > Quit just make the app bug with bug sound, and make unable to quit Electron. We're force to kill it with force quit or `kill pid` or `ctrl-c` in CLI.

### Testcase Gist URL

https://gist.github.com/ghivert/5dea26ec97a73fcda55ddb069fccb459",zcbenz,platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;13-x-y;16-x-y;17-x-y,2021-04-16T09:34:51Z,2022-01-25T14:51:54Z,ghivert,nornagon;timothylui;TomaterID;BitesPotatoBacks;Maqsim,ghivert;sofianguy;nornagon,,sofianguy,,jkleinsc,
electron/electron,28699,"[Bug]: maximize and unmaximize events don't fire for browserwindow ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.4

### What operating system are you using?

Other Linux

### Operating System Version

Fedora

### What arch are you using?

x64

### Last Known Working Electron version

11.4.3

### Expected Behavior

Events should fire for maximizing or unmaximizing a browserwindow.

### Actual Behavior

They don't, since the V12 release. It works fine in Electron 11 and below. See the fiddle console, it should log `max` and `unmax` when you toggle the maximization state, but it doesn't in Electron 12. One weird thing is, that when you maximize the window, and then go to fullscreen, it will emit `max`, but even when leaving fullscreen or unmaximizing the window, you will never see `unmax`. Not that fullscreen should have anything to do with the maximize event, but I noticed it does, so I thought I would mention that. You can see in the screenshot below that it only logs `max` (after going fullscreen), which shouldn't be possible if the events would fire correctly, as it should alternate `max`, `unmax`, `max` etc.
![image](https://user-images.githubusercontent.com/1696674/115083591-e75ab100-9f07-11eb-9334-5b65f80a0567.png)
And this is what happens in Electron 11.4.3:
![image](https://user-images.githubusercontent.com/1696674/115083718-1d983080-9f08-11eb-92af-ce8e6742b769.png)
When not entering fullscreen in V12, the logs remains empty, the ONLY way to make it trigger the `max` event is by maximizing and then going fullscreen, but it never triggers `unmax`.

### Testcase Gist URL

https://gist.github.com/Jelmerro/5a5a8b0cfcf69a24993b47bd7526d242",codebytere,platform/linux;bug :beetle:;status/confirmed;has-repro-gist;12-x-y,2021-04-16T21:06:05Z,2022-01-17T07:46:53Z,Jelmerro,ckerr;Computroniks;ccrpr;mlaurencin;jsebean;PalmerAL;AlekEagle;kharratahmed;davidwinter;yarinsa,Jelmerro;mlaurencin;ckerr,,codebytere,,zcbenz,
electron/electron,28749,"Crash when throwing an error in app.on('web-contents-created') Repro gist: https://gist.github.com/2b0373a300af0931c0c29b0e8dff8b73

Stack trace:

```
[39005:0420/121556.035182:FATAL:electron_api_browser_window.cc(71)] Check failed: web_contents_view.get(). 
0   Electron Framework                  0x000000010ba38aa9 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x000000010b955563 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x000000010b96e07f logging::LogMessage::~LogMessage() + 175
3   Electron Framework                  0x000000010b96ef4e logging::LogMessage::~LogMessage() + 14
4   Electron Framework                  0x0000000106cdffdd electron::api::BrowserWindow::BrowserWindow(gin::Arguments*, gin_helper::Dictionary const&) + 765
5   Electron Framework                  0x0000000106ce24c0 electron::api::BrowserWindow::New(gin_helper::ErrorThrower, gin::Arguments*) + 368
6   Electron Framework                  0x0000000106ce2b42 base::internal::Invoker<base::internal::BindState<gin_helper::WrappableBase* (*)(gin_helper::ErrorThrower, gin::Arguments*)>, gin_helper::WrappableBase* (gin_helper::ErrorThrower, gin::Arguments*)>::Run(base::internal::BindStateBase*, gin_helper::ErrorThrower&&, gin::Arguments*) + 34
7   Electron Framework                  0x0000000106ce2af8 gin_helper::WrappableBase* gin_helper::internal::InvokeFactory<gin_helper::ErrorThrower, gin::Arguments*>(gin::Arguments*, base::RepeatingCallback<gin_helper::WrappableBase* (gin_helper::ErrorThrower, gin::Arguments*)> const&) + 152
8   Electron Framework                  0x0000000106ce29b1 void gin_helper::internal::InvokeNew<gin_helper::WrappableBase* (gin_helper::ErrorThrower, gin::Arguments*)>(base::RepeatingCallback<gin_helper::WrappableBase* (gin_helper::ErrorThrower, gin::Arguments*)> const&, v8::Isolate*, gin_helper::Arguments*) + 81
9   Electron Framework                  0x0000000106cd0624 gin_helper::Dispatcher<void (v8::Isolate*, gin_helper::Arguments*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 356
10  Electron Framework                  0x00000001088fc1a2 v8::internal::FunctionCallbackArguments::Call(v8::internal::CallHandlerInfo) + 994
11  Electron Framework                  0x00000001088f9bd0 v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<true>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, v8::internal::BuiltinArguments) + 928
12  Electron Framework                  0x00000001088f8d1f v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments, v8::internal::Isolate*) + 383
13  Electron Framework                  0x00000001088f890d v8::internal::Builtin_HandleApiCall(int, unsigned long*, v8::internal::Isolate*) + 109
14  ???                                 0x0000004600318bdf 0x0 + 300650957791
```

it's a DCHECK, but I'm pretty sure it will crash later if this is null.",VerteDinde,crash :boom:;bug :beetle:;platform/all;has-repro-gist;12-x-y;13-x-y,2021-04-20T19:16:36Z,2021-05-11T20:57:11Z,nornagon,codebytere;VerteDinde;MarshallOfSound,codebytere,,sofianguy,,MarshallOfSound,
electron/electron,28765,"[Bug]: Crash when loading a window with baseURLForDataURL ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0-nightly.20210413

### What operating system are you using?

macOS

### Operating System Version

10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

v5.0.0-beta.2

### Expected Behavior

Loading a data URL with baseURLForDataURL should not crash

### Actual Behavior

CHECK()s with the following stack trace:

```
[90108:0421/104536.738461:FATAL:navigation_request.cc(5374)] Check failed: policy->CanAccessDataForOrigin(process_id, origin). 
0   Electron Framework                  0x00000001089df1a9 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x00000001088fbc63 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x000000010891477f logging::LogMessage::~LogMessage() + 175
3   Electron Framework                  0x000000010891564e logging::LogMessage::~LogMessage() + 14
4   Electron Framework                  0x00000001079be535 content::NavigationRequest::GetOriginForURLLoaderFactory() + 773
5   Electron Framework                  0x00000001079b04c4 content::NavigationRequest::CommitNavigation() + 948
6   Electron Framework                  0x00000001079bc5b5 content::NavigationRequest::OnWillProcessResponseChecksComplete(content::NavigationThrottle::ThrottleCheckResult) + 581
7   Electron Framework                  0x00000001079c058d content::NavigationRequest::OnWillProcessResponseProcessed(content::NavigationThrottle::ThrottleCheckResult) + 717
8   Electron Framework                  0x00000001079bfa28 content::NavigationRequest::OnNavigationEventProcessed(content::NavigationThrottleRunner::Event, content::NavigationThrottle::ThrottleCheckResult) + 424
9   Electron Framework                  0x00000001079ceee1 content::NavigationThrottleRunner::ProcessInternal() + 1249
10  Electron Framework                  0x00000001079ce9f0 content::NavigationThrottleRunner::ProcessNavigationEvent(content::NavigationThrottleRunner::Event) + 160
11  Electron Framework                  0x00000001079b8c23 content::NavigationRequest::WillProcessResponse() + 211
12  Electron Framework                  0x00000001079b844a content::NavigationRequest::OnResponseStarted(mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool, blink::NavigationDownloadPolicy, net::NetworkIsolationKey, base::Optional<content::SubresourceLoaderParams>, content::NavigationURLLoaderDelegate::EarlyHints) + 8666
13  Electron Framework                  0x00000001077f876f content::NavigationURLLoaderImpl::NotifyResponseStarted(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool) + 463
14  Electron Framework                  0x00000001077fc648 void base::internal::FunctorTraits<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), void>::Invoke<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool>(void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>&&, mojo::StructPtr<network::mojom::URLResponseHead>&&, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>&&, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>&&, content::GlobalRequestID&&, bool&&) + 200
15  Electron Framework                  0x00000001077fc568 base::internal::Invoker<base::internal::BindState<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool>, void ()>::RunOnce(base::internal::BindStateBase*) + 72
16  Electron Framework                  0x00000001077fcee4 _ZN4base8internal7InvokerINS0_9BindStateIZN7content23NavigationURLLoaderImpl12ParseHeadersERK4GURLPN7network5mojom15URLResponseHeadENS_12OnceCallbackIFvvEEEE3$_0JSE_SB_EEEFvN4mojo9StructPtrINS9_13ParsedHeadersEEEEE7RunOnceEPNS0_13BindStateBaseEOSK_ + 180
17  Electron Framework                  0x00000001041442b6 network::mojom::NetworkContext_ParseHeaders_ForwardToCallback::Accept(mojo::Message*) + 214
18  Electron Framework                  0x0000000108d9b182 mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) + 1634
19  Electron Framework                  0x0000000108d9e72f mojo::MessageDispatcher::Accept(mojo::Message*) + 271
[...]
```

Here's the crash dump: [43f50dbe-d3b5-406f-a75b-d36ebfe17edc.dmp.zip](https://github.com/electron/electron/files/6352953/43f50dbe-d3b5-406f-a75b-d36ebfe17edc.dmp.zip)

Bisected to https://github.com/electron/electron/compare/v5.0.0-beta.2...v5.0.0-beta.3

### Testcase Gist URL

https://gist.github.com/86a781b5cdbb6df877e6cfadc8602f68",codebytere,crash :boom:;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all,2021-04-21T17:51:44Z,2022-08-26T08:38:44Z,nornagon,gpetrov;codebytere,nornagon,,codebytere,,codebytere,
electron/electron,28782,"[Bug]: macOS window shadow weirdness ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0-beta.16

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.1

### What arch are you using?

x64

### Last Known Working Electron version

12.0.5

### Expected Behavior

When viewing a window in mission control the shadow shouldn't change.

### Actual Behavior

When viewing a window with vibrancy set to 'under-window' and titleBarStyle set to 'hidden' or 'hiddenInset' in mission control the shadow of the window is too small. 

It only seems to happen when the window is in focus and when there are multiple windows on the screen. The behaviour can sometimes persist when going from mission control to normal view. 

See the window at the bottom left in the screenshot.

<img width=""1195"" alt=""Screenshot"" src=""https://user-images.githubusercontent.com/54709288/115758066-a397f980-a396-11eb-9ecc-c97e670b3b82.png"">



### Testcase Gist URL

_No response_",zcbenz,platform/macOS;bug :beetle:;13-x-y,2021-04-22T17:15:45Z,2021-05-14T09:05:35Z,robin-fowler,MarshallOfSound;robin-fowler,robin-fowler;mlaurencin,,MarshallOfSound,,codebytere,
electron/electron,28850,"[Bug]: Cannot get a file path from a save dialog with * and simple name (Windows) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.5

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 19042.870

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

A file path can be retrieved from the file save dialog.

### Actual Behavior

An error shows ""The file name is not valid""

![image](https://user-images.githubusercontent.com/900690/116086742-6ab29a00-a6a0-11eb-9d0b-1fc0d0b20210.png)


### Testcase Gist URL

https://gist.github.com/1fd53f68835a6b320a97eda5005e109b

### Additional Information

Steps:
* run the fiddle
* from the dropdown select ""All Files""
* in the input field type ""whatever""
* hit OK",codebytere,status/wontfix 棣冩瘒;bug :beetle:,2021-04-26T13:05:30Z,2021-04-27T12:06:44Z,bpasero,codebytere,bpasero;codebytere,,codebytere,,codebytere,
electron/electron,28927,"[Bug]: Quit does not work anymore when a window has a modal dialog open ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.5

### What operating system are you using?

macOS

### Operating System Version

11.3

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Quit should work always.

### Actual Behavior

Quit does not work if a window has a modal dialog open. After closing the modal dialog you cannot click quit anymore.

Steps:
* run the fiddle
* quit (e.g. `Cmd+Q`)
* close the modal dialog
* quit again 

=> 棣冩偘 it does not work

### Testcase Gist URL

https://gist.github.com/5f332310d6c0ebdea3bee907cc1be2fc

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;component/dialog;component/BrowserWindow;has-repro-gist;12-x-y;13-x-y,2021-04-29T08:04:12Z,2021-05-04T10:11:16Z,bpasero,bpasero,bpasero;mlaurencin;codebytere,,codebytere,,codebytere,
electron/electron,28966,"[Bug]: Unable to detect Cmd+C/V/X ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0-beta.18

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.3

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

13.0.0-beta.13

### Expected Behavior

The <kbd>cmd + c</kbd> keyboard event is captured. For example, in the provided gist, this is logged to the console.

### Actual Behavior

<kbd>cmd + c</kbd> does not log anything. Nor does <kbd>cmd + x</kbd> or <kbd>cmd + v</kbd>. However it seems all other keyboard events are logged, e.g. <kbd>cmd + b</kbd>

### Testcase Gist URL

https://gist.github.com/will-stone/b0baae4c6db206026316e09c83d7451f

### Additional Information

I just wanted to say thank you very much to the Electron team. It's a great project and I've really enjoyed the 4+ years I've been using it. Keep up the good work 棣冩",VerteDinde,bug :beetle:;13-x-y,2021-05-03T07:06:43Z,2021-05-06T09:14:03Z,will-stone,VerteDinde;will-stone,will-stone;VerteDinde,VerteDinde,VerteDinde,,will-stone,
electron/electron,29051,"[Bug]: Slow IO performance in Electron ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

8.5.5

### What operating system are you using?

macOS

### Operating System Version

MacOS Big Sur 11.3.1 (20E241)

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Given is a custom function called `writeFiles`, which executes `fs.copyFile` for around 500 files. The function takes around 4 seconds to execute. 

```typescript 
function writeFiles(files: string[]) {
     return performFileAccessCheck(files)
     .then(() => ... copy files ... );
}
```


### Actual Behavior

If the same function is executed by Electron in the BrowserWindow context, the function takes more than 60 seconds. I profiled both, the execution under node-cli and within Electron. Below are the results. As you can see from the Electron profile, there are thousands of `splitPath`, `nextTick`, `copyFileOut` executions.

## node-cli sample

Partial snapshot of the profile of node. A clean call-stack with the expected function calls

![image](https://user-images.githubusercontent.com/12844423/117373794-f3e48080-ae99-11eb-8197-236cd50e83cc.png)


## Electron

In node however, the function `performFileAccessCheck` takes much longer and contains way more sub-calls.

![image](https://user-images.githubusercontent.com/12844423/117373814-fcd55200-ae99-11eb-9867-0dbd6d6ac1a1.png)

Close-up of the Electron profile:

![image](https://user-images.githubusercontent.com/12844423/117373829-03fc6000-ae9a-11eb-89f9-5454f4c102b1.png)



### Testcase Gist URL

_No response_

### Additional Information

_No response_",MarshallOfSound,bug :beetle:;blocked/need-repro,2021-05-06T22:38:16Z,2021-06-29T23:06:33Z,sebastianrath,MarshallOfSound;sebastianrath,sebastianrath;MarshallOfSound,,MarshallOfSound,,MarshallOfSound,
electron/electron,29061,"[Bug]: White Corners on Window using Vibrancy ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0-beta.20

### What operating system are you using?

macOS

### Operating System Version

11.3.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Naturally, the window's borders should be rounded, with nothing obscure protruding amongst them--And they should stay that way _after_ maximization, like so:
![Screen Shot 2021-05-07 at 2 48 02 PM](https://user-images.githubusercontent.com/83843298/117511979-8d1ba180-af43-11eb-99f6-5163877619f4.png)


### Actual Behavior

But, for some weird reason, after (and while) the window is maximized, weird looking white corners appear on every point of the window's border radius...
![Screen Shot 2021-05-07 at 2 49 47 PM](https://user-images.githubusercontent.com/83843298/117512201-074c2600-af44-11eb-9f20-3017207cbea5.png)


### Testcase Gist URL

https://gist.github.com/TurnipTotSoftware/74db97bee9b29183006fd1204cfff746

### Additional Information

This glitch also happens after my Mac sleeps for a bit...
Hopefully this problem is an easy fix!

Good day棣冩啢",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;12-x-y;13-x-y,2021-05-07T22:10:56Z,2021-05-11T07:45:21Z,BitesPotatoBacks,codebytere,BitesPotatoBacks;codebytere,,codebytere,,codebytere,
electron/electron,29119,"[Bug]: Auto updater consumes 100% percent CPU when waiting on user password ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.6

### What operating system are you using?

macOS

### Operating System Version

Big Slur 11.3.1

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

I have several apps that use electron (Slack, Draw.io, Visual Studio Code, Atom), every time there is an update, a dialog pops asking for admin/sudo password to install. The update dialog should *not* consume 100% CPU. 


### Actual Behavior

The app process runs at 100 percent CPU while waiting for user input confirmation. This happens quite frequently as I use many electron app that have frequent updates, and the high CPU happens for extended periods of time as I am not always present at my computer when the auto update pop up happens.

### Testcase Gist URL

_No response_

### Additional Information

This appears to be a problem with an underlying dependency on [Squirrel.Mac](https://github.com/Squirrel/Squirrel.Mac) that Electron uses however it would appear that library is no longer maintained - See https://github.com/Squirrel/Squirrel.Mac/issues/256#issue-750706358.

There is also a related issue in Squirrel, and comment by jspahrsummers (original author I believe), that he has not worked on with the code base in 6+ years and no longer familiar with it - See  https://github.com/Squirrel/Squirrel.Mac/issues/247#issuecomment-757210176 

An example of an update popup dialog below:
![Screen Shot 2021-05-12 at 5 35 36 pm](https://user-images.githubusercontent.com/5567550/117940700-7e205f00-b348-11eb-8520-9985ce154ef4.png)

Below a screenshot of `htop` showing Atom running at 100%.
![Screen Shot 2021-05-12 at 5 47 49 pm](https://user-images.githubusercontent.com/5567550/117942582-5c27dc00-b34a-11eb-9cf7-397930c7e4cd.png)


Below is the output from `sample 9096` showing a profile of Atom
[Atom_2021-05-12_174109_EbSY.sample.txt](https://github.com/electron/electron/files/6464575/Atom_2021-05-12_174109_EbSY.sample.txt)

Other related issues:
  - https://github.com/microsoft/vscode/issues/95534

",MarshallOfSound,platform/macOS;bug :beetle:;12-x-y,2021-05-12T08:29:04Z,2021-06-21T05:02:21Z,tmoschou,codesimplicity,tmoschou;jkleinsc,jkleinsc,MarshallOfSound,,zcbenz,
electron/electron,29159,"[Bug]: Some of developer tools region also drag the electron app ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.5

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 21.04 x86_64 5.11.0-16-generic

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

All clicking inside the developer tool works well and not being interrupted by dragging the electron app.

### Actual Behavior

When I click the `option` and `close` tool inside the developer tool, it drags the electron app.

https://user-images.githubusercontent.com/61906684/118137437-666fd600-b42f-11eb-9443-ea1ebad1d0ec.mp4



### Testcase Gist URL

_No response_

### Additional Information

This bug only occurs if the dock position is on the left.",codebytere,platform/windows;platform/linux;bug :beetle:;component/drag-and-drop;12-x-y,2021-05-13T14:09:58Z,2021-06-16T16:58:30Z,kimlimjustin,codebytere;kimlimjustin,kimlimjustin;jkleinsc;codebytere,codebytere,codebytere,,MarshallOfSound,
electron/electron,29160,"[Bug]: Crash when loading pages with Electron 13 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0 beta 26

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

12

### Expected Behavior

I expect to be able to load a page without a crash

### Actual Behavior

When loading a simple page into a BrowserWindow, devtools shows:

>VM95 worker.js:82 Uncaught ReferenceError: SharedArrayBuffer is not defined
    at VM95 worker.js:82
    at NativeModule.compileForInternalLoader (VM10 loaders.js:283)
    at nativeModuleRequire (VM10 loaders.js:312)
    at VM94 worker_threads.js:9
    at NativeModule.compileForInternalLoader (VM10 loaders.js:283)
    at nativeModuleRequire (VM10 loaders.js:312)
    at VM93 inspector.js:30
    at NativeModule.compileForInternalLoader (VM10 loaders.js:283)
    at NativeModule.compileForPublicLoader (VM10 loaders.js:225)
    at loadNativeModule (VM50 helpers.js:35)

### Testcase Gist URL

_No response_

### Additional Information

1. start main.js and look at devtools:

main.js:
```
const { app, BrowserWindow } = require(""electron"");

(async () =>
{
	await app.whenReady();
	const win = new BrowserWindow();
	await win.loadURL(""https://example.com"");
	win.webContents.openDevTools();
})();
```

In my actual app, my preload script appears to not load at all. Possibly related. Similar issue [here](https://github.com/electron/electron/issues/28865).

In my case though it's actually crashing, which it doesn't do in Electron 12.",VerteDinde,platform/windows;crash :boom:;bug :beetle:;13-x-y,2021-05-13T22:23:08Z,2021-06-04T20:47:50Z,pushkin-,VerteDinde;pushkin-;be-dcodeit,pushkin-;codebytere,,VerteDinde;MarshallOfSound,VerteDinde,pushkin-,
electron/electron,29191,"[Bug]: PDF Viewer is broken on latest v13.x betas and master ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

master

### What operating system are you using?

Other (specify below)

### Operating System Version

All

### What arch are you using?

Other (specify below)

### Last Known Working Electron version

_No response_

### Expected Behavior

PDF Viewer should load arbitrary PDF files.

### Actual Behavior

PDF viewer is no longer working on latest betas of v13 and master.

Broken as of https://github.com/electron/electron/pull/28462 - [Log](https://chromium.googlesource.com/chromium/src/+log/91.0.4448.0..91.0.4472.33?n=10000&pretty=fuller)

Error is 
```
[7225:0517/163141.223358:INFO:CONSOLE(6)] ""Not allowed to load local resource: chrome://resources/css/text_defaults_md.css"", source: chrome-extension://mhjfbmdgcfjbbpaeojofohoefgiehjai/index.html (6)
[7225:0517/163141.254576:INFO:CONSOLE(0)] ""Not allowed to load local resource: chrome://resources/js/load_time_data.m.js"", source: chrome-extension://mhjfbmdgcfjbbpaeojofohoefgiehjai/index.html (0)
[7225:0517/163141.254661:INFO:CONSOLE(0)] ""Not allowed to load local resource: chrome://resources/js/cr.m.js"", source: chrome-extension://mhjfbmdgcfjbbpaeojofohoefgiehjai/index.html (0)
[7225:0517/163141.254724:INFO:CONSOLE(0)] ""Not allowed to load local resource: chrome://resources/polymer/v3_0/polymer/polymer_bundled.min.js"", source: chrome-extension://mhjfbmdgcfjbbpaeojofohoefgiehjai/index.html (0)
[7225:0517/163141.254875:INFO:CONSOLE(0)] ""Not allowed to load local resource: chrome://resources/js/assert.m.js"", source: chrome-extension://mhjfbmdgcfjbbpaeojofohoefgiehjai/index.html (0)
```

which originates [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/weborigin/security_origin.cc;l=411-414;drc=e713e4b5b963cbaaf643c070273860317b58051b) so it's likely an AllowList related issue.

### Testcase Gist URL

https://gist.github.com/80a9108e271ca83c82cc4a8772e371fc

### Additional Information

_No response_",jkleinsc,bug :beetle:;component/pdf-viewer;13-x-y,2021-05-17T14:35:58Z,2021-05-19T23:08:24Z,codebytere,,codebytere,,codebytere,codebytere,MarshallOfSound,
electron/electron,29260,"[Bug]: Crash on `app.exit()` ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.8

### What operating system are you using?

macOS

### Operating System Version

10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

App normally quits without an error.

### Actual Behavior

App crashes:

<img width=""986"" alt=""閵堝箍鍋楅妷閵夌哄厒閵堟灚鍎抽妷鍐﹀創 2021-05-20 19 49 34"" src=""https://user-images.githubusercontent.com/823277/118966272-87db3f80-b9a4-11eb-91e8-ae3d5ac012da.png"">


### Testcase Gist URL

_No response_

### Additional Information

### How to reproduce

I tried to minimize reproduction, but I could not. Very simple program did not cause this issue. So I describe how I caused this issue with my application. Frequency is 100%.

At first, please fetch my app repository and build the app.

```sh
git clone https://github.com/rhysd/tweet-app.git
cd ./tweet-app
git checkout ef03e5311c1ee5e29750f730daa934cacb0adc03
npm install
npm run build
```

Launch the application.

```sh
npm run app
```

Find 'Quit' menu item in menu bar and click it. App will crash immediately.

Here is a full text of crash report:

<details>
<pre>
Process:               Electron [54917]
Path:                  /Users/USER/*/Electron.app/Contents/MacOS/Electron
Identifier:            com.github.Electron
Version:               12.0.8 (12.0.8)
Code Type:             X86-64 (Native)
Parent Process:        node [54890]
Responsible:           iTerm2 [616]
User ID:               501

Date/Time:             2021-05-20 19:45:02.713 +0900
OS Version:            Mac OS X 10.15.7 (19H1030)
Report Version:        12
Bridge OS Version:     5.3 (18P4556)
Anonymous UUID:        642738B3-B784-E97D-1869-C94CE5350670

Sleep/Wake UUID:       B3C7C804-F908-4EE3-B334-A95FBEA9B73D

Time Awake Since Boot: 360000 seconds
Time Since Wake:       37000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x000007fd12148d98
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [54917]

VM Regions Near 0x7fd12148d98:
    Memory Tag 255         00000045d4274000-00000045d42f0000 [  496K] ---/rwx SM=ZER  
--> 
    STACK GUARD            000070000eae6000-000070000eae7000 [    4K] ---/rwx SM=NUL  stack guard for thread 1

Application Specific Information:
objc_msgSend() selector name: invalidate


Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   libobjc.A.dylib               	0x00007fff6699081d objc_msgSend + 29
1   com.apple.AppKit              	0x00007fff2af5952e +[NSEvent removeMonitor:] + 30
2   com.github.Electron.framework 	0x00000001049d2074 ElectronInitializeICUandStartNode + 1665332
3   com.apple.CoreFoundation      	0x00007fff2da9b2ef __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12
4   com.apple.CoreFoundation      	0x00007fff2da9b283 ___CFXRegistrationPost1_block_invoke + 63
5   com.apple.CoreFoundation      	0x00007fff2da9b1f8 _CFXRegistrationPost1 + 372
6   com.apple.CoreFoundation      	0x00007fff2da9ae64 ___CFXNotificationPost_block_invoke + 80
7   com.apple.CoreFoundation      	0x00007fff2da6afdd -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1554
8   com.apple.CoreFoundation      	0x00007fff2da6a489 _CFXNotificationPost + 1351
9   com.apple.Foundation          	0x00007fff300e85f6 -[NSNotificationCenter postNotificationName:object:userInfo:] + 59
10  com.apple.AppKit              	0x00007fff2b5b1953 -[NSWindow _finishClosingWindow] + 185
11  com.apple.AppKit              	0x00007fff2b08d175 -[NSWindow _close] + 352
12  com.github.Electron.framework 	0x00000001049c491b ElectronInitializeICUandStartNode + 1610203
13  com.github.Electron.framework 	0x000000010495bed0 ElectronInitializeICUandStartNode + 1181584
14  com.github.Electron.framework 	0x00000001048f91fb ElectronInitializeICUandStartNode + 776891
15  com.github.Electron.framework 	0x000000010710663e node::SetTracingController(v8::TracingController*) + 992942
16  com.github.Electron.framework 	0x0000000107106558 node::SetTracingController(v8::TracingController*) + 992712
17  com.github.Electron.framework 	0x0000000104e89380 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 14832
18  com.github.Electron.framework 	0x0000000104e88fd5 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 13893
19  com.github.Electron.framework 	0x0000000104e88653 v8::internal::ClassScope::ResolvePrivateNamesPartially() + 11459
20  com.github.Electron.framework 	0x00000001054e0018 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 451416
21  com.github.Electron.framework 	0x0000000105479e8f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 33231
22  com.github.Electron.framework 	0x00000001054a7081 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 218049
23  com.github.Electron.framework 	0x0000000105529e7b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 754107
24  com.github.Electron.framework 	0x0000000105499fb7 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 164599
25  com.github.Electron.framework 	0x0000000105477a58 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 23960
26  com.github.Electron.framework 	0x0000000104ee3041 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 2705
27  com.github.Electron.framework 	0x0000000104ee3833 v8::internal::Execution::TryCall(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*, v8::internal::Execution::MessageHandling, v8::internal::MaybeHandle<v8::internal::Object>*, bool) + 355
28  com.github.Electron.framework 	0x0000000104ee3910 v8::internal::Execution::TryCall(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*, v8::internal::Execution::MessageHandling, v8::internal::MaybeHandle<v8::internal::Object>*, bool) + 576
29  com.github.Electron.framework 	0x0000000104efb4c6 v8::internal::MicrotaskQueue::RunMicrotasks(v8::internal::Isolate*) + 422
30  com.github.Electron.framework 	0x0000000104efb2f0 v8::internal::MicrotaskQueue::PerformCheckpoint(v8::Isolate*) + 32
31  com.github.Electron.framework 	0x0000000106ec435a node::CallbackScope::~CallbackScope() + 1146
32  com.github.Electron.framework 	0x0000000106ec470c node::CallbackScope::~CallbackScope() + 2092
33  com.github.Electron.framework 	0x0000000106ec49b6 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context) + 182
34  com.github.Electron.framework 	0x0000000104986e7c ElectronInitializeICUandStartNode + 1357628
35  com.github.Electron.framework 	0x000000010485e227 ElectronInitializeICUandStartNode + 142055
36  com.github.Electron.framework 	0x0000000104856ace ElectronInitializeICUandStartNode + 111502
37  com.github.Electron.framework 	0x0000000104856cc9 ElectronInitializeICUandStartNode + 112009
38  com.github.Electron.framework 	0x00000001049185ce ElectronInitializeICUandStartNode + 904846
39  com.github.Electron.framework 	0x00000001049d207d ElectronInitializeICUandStartNode + 1665341
40  com.apple.CoreFoundation      	0x00007fff2da9b2ef __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12
41  com.apple.CoreFoundation      	0x00007fff2da9b283 ___CFXRegistrationPost1_block_invoke + 63
42  com.apple.CoreFoundation      	0x00007fff2da9b1f8 _CFXRegistrationPost1 + 372
43  com.apple.CoreFoundation      	0x00007fff2da9ae64 ___CFXNotificationPost_block_invoke + 80
44  com.apple.CoreFoundation      	0x00007fff2da6afdd -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1554
45  com.apple.CoreFoundation      	0x00007fff2da6a489 _CFXNotificationPost + 1351
46  com.apple.Foundation          	0x00007fff300e85f6 -[NSNotificationCenter postNotificationName:object:userInfo:] + 59
47  com.apple.AppKit              	0x00007fff2b5b1953 -[NSWindow _finishClosingWindow] + 185
48  com.apple.AppKit              	0x00007fff2b08d175 -[NSWindow _close] + 352
49  com.github.Electron.framework 	0x00000001049c491b ElectronInitializeICUandStartNode + 1610203
50  com.github.Electron.framework 	0x0000000104868dc6 ElectronInitializeICUandStartNode + 185990
51  com.github.Electron.framework 	0x00000001048c3771 ElectronInitializeICUandStartNode + 557105
52  com.github.Electron.framework 	0x000000010588eeb7 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 4313591
53  com.github.Electron.framework 	0x0000000104d2f280 electron::fuses::IsRunAsNodeEnabled() + 3362480
54  com.github.Electron.framework 	0x0000000105ba8d1c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7565404
55  com.github.Electron.framework 	0x0000000105ce891f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 8875103
56  com.github.Electron.framework 	0x0000000105ce6c8f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 8867791
57  com.github.Electron.framework 	0x0000000105a1c1b9 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5940473
58  com.github.Electron.framework 	0x0000000105a2a7fe v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5999422
59  com.github.Electron.framework 	0x0000000105a2a31e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5998174
60  com.github.Electron.framework 	0x0000000105a5ea13 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6212947
61  com.github.Electron.framework 	0x0000000105a5b4aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6199274
62  com.github.Electron.framework 	0x0000000105a5e3df v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6211359
63  com.apple.CoreFoundation      	0x00007fff2daa5832 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
64  com.apple.CoreFoundation      	0x00007fff2daa57d1 __CFRunLoopDoSource0 + 103
65  com.apple.CoreFoundation      	0x00007fff2daa55eb __CFRunLoopDoSources0 + 209
66  com.apple.CoreFoundation      	0x00007fff2daa431a __CFRunLoopRun + 927
67  com.apple.CoreFoundation      	0x00007fff2daa391e CFRunLoopRunSpecific + 462
68  com.apple.HIToolbox           	0x00007fff2c6cfabd RunCurrentEventLoopInMode + 292
69  com.apple.HIToolbox           	0x00007fff2c6cf7d5 ReceiveNextEventCommon + 584
70  com.apple.HIToolbox           	0x00007fff2c6cf579 _BlockUntilNextEventMatchingListInModeWithFilter + 64
71  com.apple.AppKit              	0x00007fff2ad16039 _DPSNextEvent + 883
72  com.apple.AppKit              	0x00007fff2ad14880 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1352
73  com.apple.AppKit              	0x00007fff2ad0658e -[NSApplication run] + 658
74  com.github.Electron.framework 	0x0000000105a5efe6 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6214438
75  com.github.Electron.framework 	0x0000000105a5df6b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6210219
76  com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
77  com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
78  com.github.Electron.framework 	0x00000001081297c4 v8::internal::compiler::ZoneStats::GetCurrentAllocatedBytes() const + 1945012
79  com.github.Electron.framework 	0x0000000105687e32 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 2187634
80  com.github.Electron.framework 	0x00000001056837d9 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 2169625
81  com.github.Electron.framework 	0x0000000104deec16 electron::fuses::IsRunAsNodeEnabled() + 4147270
82  com.github.Electron.framework 	0x0000000104dee923 electron::fuses::IsRunAsNodeEnabled() + 4146515
83  com.github.Electron.framework 	0x0000000104ded5f0 electron::fuses::IsRunAsNodeEnabled() + 4141600
84  com.github.Electron.framework 	0x0000000104dedab2 electron::fuses::IsRunAsNodeEnabled() + 4142818
85  com.github.Electron.framework 	0x000000010483b708 ElectronMain + 136
86  com.github.Electron           	0x00000001047c5426 0x1047c2000 + 13350
87  libdyld.dylib                 	0x00007fff67b45cc9 start + 1

Thread 1:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 2:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 3:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 4:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 5:: ThreadPoolServiceThread
0   libsystem_kernel.dylib        	0x00007fff67c8fb96 kevent64 + 10
1   com.github.Electron.framework 	0x0000000105a6ea9a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278618
2   com.github.Electron.framework 	0x0000000105a6e9be v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278398
3   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
4   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
5   com.github.Electron.framework 	0x0000000105a3405d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6038429
6   com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
7   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
8   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
9   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 6:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
5   com.github.Electron.framework 	0x0000000105a3c3ad v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072045
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 7:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
5   com.github.Electron.framework 	0x0000000105a3c34d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6071949
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 8:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
5   com.github.Electron.framework 	0x0000000105a3c3ad v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072045
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 9:: Chrome_IOThread
0   com.github.Electron.framework 	0x0000000105a64570 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6236336
1   libsystem_malloc.dylib        	0x00007fff67cfca1c free + 107
2   com.github.Electron.framework 	0x0000000104e01d21 electron::fuses::IsRunAsNodeEnabled() + 4225361
3   com.github.Electron.framework 	0x0000000104e022c9 electron::fuses::IsRunAsNodeEnabled() + 4226809
4   com.github.Electron.framework 	0x0000000106376de9 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 15749417
5   com.github.Electron.framework 	0x0000000106376c1f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 15748959
6   com.github.Electron.framework 	0x0000000104e00821 electron::fuses::IsRunAsNodeEnabled() + 4219985
7   com.github.Electron.framework 	0x0000000104dfcfa0 electron::fuses::IsRunAsNodeEnabled() + 4205520
8   com.github.Electron.framework 	0x0000000104df19fe electron::fuses::IsRunAsNodeEnabled() + 4159022
9   com.github.Electron.framework 	0x0000000105ba6a60 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7556512
10  com.github.Electron.framework 	0x0000000105ba9703 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7567939
11  com.github.Electron.framework 	0x0000000104d22f77 electron::fuses::IsRunAsNodeEnabled() + 3312551
12  com.github.Electron.framework 	0x0000000106d4fd87 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 26075335
13  com.github.Electron.framework 	0x0000000104d2367a electron::fuses::IsRunAsNodeEnabled() + 3314346
14  com.github.Electron.framework 	0x0000000106d5222b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 26084715
15  com.github.Electron.framework 	0x0000000105ba8c6f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7565231
16  com.github.Electron.framework 	0x0000000105baae86 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7573958
17  com.github.Electron.framework 	0x0000000105bae356 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7587478
18  com.github.Electron.framework 	0x0000000105badccd v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7585805
19  com.github.Electron.framework 	0x0000000105ba64d0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7555088
20  com.github.Electron.framework 	0x0000000105ba6d8e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7557326
21  com.github.Electron.framework 	0x0000000105bbc871 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7646129
22  com.github.Electron.framework 	0x0000000105bbcc59 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7647129
23  com.github.Electron.framework 	0x0000000105bbbe90 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7643600
24  com.github.Electron.framework 	0x0000000104e0cd6c electron::fuses::IsRunAsNodeEnabled() + 4270492
25  com.github.Electron.framework 	0x0000000104e0c310 electron::fuses::IsRunAsNodeEnabled() + 4267840
26  com.github.Electron.framework 	0x0000000104e085bd electron::fuses::IsRunAsNodeEnabled() + 4252141
27  com.github.Electron.framework 	0x0000000104dfe906 electron::fuses::IsRunAsNodeEnabled() + 4212022
28  com.github.Electron.framework 	0x0000000104def946 electron::fuses::IsRunAsNodeEnabled() + 4150646
29  com.github.Electron.framework 	0x0000000104e10fbe electron::fuses::IsRunAsNodeEnabled() + 4287470
30  com.github.Electron.framework 	0x0000000105a6ff19 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6283865
31  com.github.Electron.framework 	0x0000000105a6eaf7 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278711
32  com.github.Electron.framework 	0x0000000105a6e9be v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278398
33  com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
34  com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
35  com.github.Electron.framework 	0x000000010568844f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 2189199
36  com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
37  com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
38  libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
39  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 10:: MemoryInfra
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a61fee v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6226734
4   com.github.Electron.framework 	0x00000001059f19d0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5766416
5   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
6   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
7   com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
8   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
9   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
10  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 11:
0   libsystem_kernel.dylib        	0x00007fff67c8b766 kevent + 10
1   com.github.Electron.framework 	0x000000010483acea uv_free_interface_addresses + 1322
2   com.github.Electron.framework 	0x0000000104829e0c uv_run + 364
3   com.github.Electron.framework 	0x0000000106fbcb3f node::MultiIsolatePlatform::CancelPendingDelayedTasks(v8::Isolate*) + 687
4   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
5   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 12:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000106fbcd12 node::MultiIsolatePlatform::CancelPendingDelayedTasks(v8::Isolate*) + 1154
4   com.github.Electron.framework 	0x0000000106fba5d7 node::OnFatalError(char const*, char const*) + 438263
5   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
6   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 13:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000106fbcd12 node::MultiIsolatePlatform::CancelPendingDelayedTasks(v8::Isolate*) + 1154
4   com.github.Electron.framework 	0x0000000106fba5d7 node::OnFatalError(char const*, char const*) + 438263
5   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
6   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 14:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000106fbcd12 node::MultiIsolatePlatform::CancelPendingDelayedTasks(v8::Isolate*) + 1154
4   com.github.Electron.framework 	0x0000000106fba5d7 node::OnFatalError(char const*, char const*) + 438263
5   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
6   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 15:
0   libsystem_kernel.dylib        	0x00007fff67c86e36 semaphore_wait_trap + 10
1   com.github.Electron.framework 	0x0000000104836360 uv_sem_wait + 16
2   com.github.Electron.framework 	0x0000000107023dd3 node::SetTracingController(v8::TracingController*) + 65091
3   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
4   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 16:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000104825f60 uv_cancel + 512
4   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
5   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 17:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000104825f60 uv_cancel + 512
4   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
5   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 18:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000104825f60 uv_cancel + 512
4   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
5   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 19:
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000104835db9 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000104825f60 uv_cancel + 512
4   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
5   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 20:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2daa59d5 __CFRunLoopServiceMachPort + 247
3   com.apple.CoreFoundation      	0x00007fff2daa44a2 __CFRunLoopRun + 1319
4   com.apple.CoreFoundation      	0x00007fff2daa391e CFRunLoopRunSpecific + 462
5   com.apple.Foundation          	0x00007fff3013f1a8 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x0000000105a5ef24 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6214244
7   com.github.Electron.framework 	0x0000000105a5df6b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6210219
8   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
9   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
10  com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
11  com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
12  libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
13  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 21:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fff67c8781e read + 10
1   com.github.Electron.framework 	0x00000001049e48cf ElectronInitializeICUandStartNode + 1741199
2   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
3   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
4   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 22:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2daa59d5 __CFRunLoopServiceMachPort + 247
3   com.apple.CoreFoundation      	0x00007fff2daa44a2 __CFRunLoopRun + 1319
4   com.apple.CoreFoundation      	0x00007fff2daa391e CFRunLoopRunSpecific + 462
5   com.apple.Foundation          	0x00007fff3013f1a8 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x0000000105a5ef24 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6214244
7   com.github.Electron.framework 	0x0000000105a5df6b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6210219
8   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
9   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
10  com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
11  com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
12  libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
13  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 23:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
5   com.github.Electron.framework 	0x0000000105a3c3ad v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072045
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 24:: CompositorTileWorker1
0   libsystem_kernel.dylib        	0x00007fff67c89882 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff67d4a425 _pthread_cond_wait + 698
2   com.github.Electron.framework 	0x0000000105a59760 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6191776
3   com.github.Electron.framework 	0x000000010611a815 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 13273941
4   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
5   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
6   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 25:: ThreadPoolSingleThreadForegroundBlocking0
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a61fee v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6226734
4   com.github.Electron.framework 	0x0000000105a3bead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070765
5   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
6   com.github.Electron.framework 	0x0000000105a3c40d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072141
7   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
8   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
9   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 26:
0   libsystem_kernel.dylib        	0x00007fff67c86e36 semaphore_wait_trap + 10
1   com.github.Electron.framework 	0x0000000104836360 uv_sem_wait + 16
2   com.github.Electron.framework 	0x000000010498d0d9 ElectronInitializeICUandStartNode + 1382809
3   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
4   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 27:: ThreadPoolSingleThreadSharedBackgroundBlocking1
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a61fee v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6226734
4   com.github.Electron.framework 	0x0000000105a3bead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070765
5   com.github.Electron.framework 	0x0000000105a3c4d1 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072337
6   com.github.Electron.framework 	0x0000000105a3c37d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6071997
7   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
8   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
9   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 28:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 29:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 30:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 31:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 32:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 33:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 34:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 35:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 36:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 37:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 38:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 39:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 40:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 41:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 42:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 43:
0   libsystem_pthread.dylib       	0x00007fff67d45b68 start_wqthread + 0

Thread 44:: ThreadPoolSingleThreadSharedForegroundBlocking2
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a61fee v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6226734
4   com.github.Electron.framework 	0x0000000105a3bead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070765
5   com.github.Electron.framework 	0x0000000105a3c4d1 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072337
6   com.github.Electron.framework 	0x0000000105a3c3dd v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072093
7   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
8   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
9   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 45:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c4d1 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072337
5   com.github.Electron.framework 	0x0000000105a3c34d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6071949
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 46:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c6aa v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072810
5   com.github.Electron.framework 	0x0000000105a3c3ad v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072045
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 47:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2daa59d5 __CFRunLoopServiceMachPort + 247
3   com.apple.CoreFoundation      	0x00007fff2daa44a2 __CFRunLoopRun + 1319
4   com.apple.CoreFoundation      	0x00007fff2daa391e CFRunLoopRunSpecific + 462
5   com.apple.Foundation          	0x00007fff3013f1a8 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x0000000105a5ef24 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6214244
7   com.github.Electron.framework 	0x0000000105a5df6b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6210219
8   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
9   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
10  com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
11  com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
12  libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
13  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 48:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.github.Electron.framework 	0x0000000105a62167 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6227111
3   com.github.Electron.framework 	0x0000000105a3be9e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6070750
4   com.github.Electron.framework 	0x0000000105a3c4d1 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072337
5   com.github.Electron.framework 	0x0000000105a3c3ad v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6072045
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 49:: CacheThread_BlockFile
0   libsystem_kernel.dylib        	0x00007fff67c8fb96 kevent64 + 10
1   com.github.Electron.framework 	0x0000000105a6ea9a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278618
2   com.github.Electron.framework 	0x0000000105a6e9be v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6278398
3   com.github.Electron.framework 	0x0000000105a2b25f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6002079
4   com.github.Electron.framework 	0x0000000105a08579 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5859513
5   com.github.Electron.framework 	0x0000000105a44679 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6105529
6   com.github.Electron.framework 	0x0000000105a5a188 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6194376
7   libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
8   libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 50:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fff67c86dfa mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff67c87170 mach_msg + 60
2   com.apple.SkyLight            	0x00007fff5cd1f497 CGSSnarfAndDispatchDatagrams + 237
3   com.apple.SkyLight            	0x00007fff5cf4f38d SLSGetNextEventRecordInternal + 83
4   com.apple.SkyLight            	0x00007fff5cdedcce SLEventCreateNextEvent + 136
5   com.apple.HIToolbox           	0x00007fff2c6dccc7 PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) + 45
6   com.apple.HIToolbox           	0x00007fff2c6dcc72 MessageHandler(__CFMachPort*, void*, long, void*) + 48
7   com.apple.CoreFoundation      	0x00007fff2dad45e5 __CFMachPortPerform + 250
8   com.apple.CoreFoundation      	0x00007fff2daa5de4 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ + 41
9   com.apple.CoreFoundation      	0x00007fff2daa5d30 __CFRunLoopDoSource1 + 541
10  com.apple.CoreFoundation      	0x00007fff2daa4859 __CFRunLoopRun + 2270
11  com.apple.CoreFoundation      	0x00007fff2daa391e CFRunLoopRunSpecific + 462
12  com.apple.AppKit              	0x00007fff2aeb7954 _NSEventThread + 132
13  libsystem_pthread.dylib       	0x00007fff67d4a109 _pthread_start + 148
14  libsystem_pthread.dylib       	0x00007fff67d45b8b thread_start + 15

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x00007fd1414d39f8  rbx: 0x00007fd121499880  rcx: 0x000000010c4ccc48  rdx: 0x00007fd121499880
  rdi: 0x00007fd121499880  rsi: 0x00007fff71ec9032  rbp: 0x00007ffeeb438430  rsp: 0x00007ffeeb438418
   r8: 0x00007fff2daa651c   r9: 0x00007ffeeb438b80  r10: 0x000007fd12148d80  r11: 0x00007fff71ec9032
  r12: 0x00007fd1214a05f0  r13: 0x0000000000000028  r14: 0x00007fd1214a0670  r15: 0x0000000000000000
  rip: 0x00007fff6699081d  rfl: 0x0000000000010202  cr2: 0x000007fd12148d98
  
Logical CPU:     4
Error Code:      0x00000004 (no mapping for user data read)
Trap Number:     14


Binary Images:
       0x1047c2000 -        0x104815fdb +com.github.Electron (12.0.8 - 12.0.8) <AA4C61DE-316D-3FF8-A333-BC505E9F229E> /Users/USER/*/Electron.app/Contents/MacOS/Electron
       0x10481e000 -        0x10c285fef +com.github.Electron.framework (12.0.8) <9A268754-8167-3C44-8C09-C30D1329ED85> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x10cabe000 -        0x10caf9fff +com.github.Squirrel (1.0 - 1) <EC76C39B-2BF5-3A47-BE61-361A3CAB7D78> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x10cb10000 -        0x10cb7bff7 +com.electron.reactive (3.1.0 - 0.0.0) <88230766-080F-3E3C-8298-916D321C7C58> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveObjC.framework/Versions/A/ReactiveObjC
       0x10cb9f000 -        0x10cbd2ff7 +org.mantle.Mantle (1.0 - 0.0.0) <F173A036-0D28-36E5-ABE9-4E5F75489BC7> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x10cbe4000 -        0x10ce7bff7 +libffmpeg.dylib (0) <CFEAA727-C365-34C1-850B-10C5E651ADB2> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x10dc11000 -        0x10dc14047  libobjc-trampolines.dylib (787.1) <88F9B648-C455-36F8-BBB9-7D1A9F57D073> /usr/lib/libobjc-trampolines.dylib
       0x10dc6b000 -        0x10dcfcf47  dyld (750.6) <1DCAF85D-70A4-3405-A868-25AF3DC1F32B> /usr/lib/dyld
    0x7fff20aa7000 -     0x7fff20ac2ff7  libJapaneseConverter.dylib (76) <BDBB29D7-3AA5-3BD0-AFFA-374398DEE933> /System/Library/CoreServices/Encodings/libJapaneseConverter.dylib
    0x7fff211d5000 -     0x7fff2144affc  com.apple.AMDRadeonX6000MTLDriver (3.10.19 - 3.1.0) <4B72032C-658F-3164-96E8-18BCBAF84C72> /System/Library/Extensions/AMDRadeonX6000MTLDriver.bundle/Contents/MacOS/AMDRadeonX6000MTLDriver
    0x7fff292c1000 -     0x7fff294bcff8  com.apple.avfoundation (2.0 - 1855.3) <0837D912-3783-35D6-A94A-E474E18600CF> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff294bd000 -     0x7fff29589ffe  com.apple.audio.AVFAudio (1.0 - 415.75) <CAC3CA5F-FCF6-37EB-8F1A-090340E2C38E> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff296a9000 -     0x7fff296a9fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <4F9977AE-DBDB-3A16-A536-AC1F9938DCDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff296aa000 -     0x7fff296c0fef  libCGInterfaces.dylib (524.2.1) <8FD09D09-BB19-36C5-ADE9-4F22DA235AEE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff296c1000 -     0x7fff29d17fff  com.apple.vImage (8.1 - 524.2.1) <EA6F5FF2-7A1B-35D5-A5A3-D2B3386ECB75> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff29d18000 -     0x7fff29f7fff7  libBLAS.dylib (1303.60.1) <C6C2D42F-7456-3DBF-8BE2-9AA06EFC78FD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff29f80000 -     0x7fff2a453fef  libBNNS.dylib (144.100.2) <99C61C48-B14C-3DA6-8C31-6BF72DA0A3A9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff2a454000 -     0x7fff2a7effff  libLAPACK.dylib (1303.60.1) <5E3E3867-50C3-3E6A-9A2E-007CE77A4641> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff2a7f0000 -     0x7fff2a805fec  libLinearAlgebra.dylib (1303.60.1) <3D433800-0099-33E0-8C81-15F83247B2C9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff2a806000 -     0x7fff2a80bff3  libQuadrature.dylib (7) <371F36A7-B12F-363E-8955-F24F7C2048F6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff2a80c000 -     0x7fff2a87cfff  libSparse.dylib (103) <B8A10D0C-4577-343D-B310-A3E81265D107> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff2a87d000 -     0x7fff2a88ffef  libSparseBLAS.dylib (1303.60.1) <B147FEF6-A0DB-3830-BF06-45BEC58DB576> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff2a890000 -     0x7fff2aa67fd7  libvDSP.dylib (735.140.1) <D63DC0A5-B8B4-3562-A574-E73BC3B57407> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff2aa68000 -     0x7fff2ab2afef  libvMisc.dylib (735.140.1) <3601FDE3-B142-398D-987D-8151A51F0A96> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff2ab2b000 -     0x7fff2ab2bfff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <F6C5613D-2284-342B-9160-9731F78B4DE5> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff2ab2c000 -     0x7fff2ab8bff0  com.apple.Accounts (113 - 113) <E2438070-30AB-3B89-AE63-1E485B92D108> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts
    0x7fff2acd5000 -     0x7fff2ba95ff2  com.apple.AppKit (6.9 - 1894.60.100) <763827BC-780B-30A9-B067-B04D8E90910B> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff2bae5000 -     0x7fff2bae5fff  com.apple.ApplicationServices (48 - 50) <4758C933-0823-3B84-8E68-03DA706CC208> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff2bae6000 -     0x7fff2bb51fff  com.apple.ApplicationServices.ATS (377 - 493.0.4.1) <87EA5DE1-506A-39FD-88BE-D8A3416C9012> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff2bbea000 -     0x7fff2bc28ff0  libFontRegistry.dylib (274.0.5.1) <F3461C05-0370-359B-9F03-5C1C1F7763EC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff2bc83000 -     0x7fff2bcb2fff  com.apple.ATSUI (1.0 - 1) <5F513967-DDD7-3F22-AD14-8A38ABD9F2D0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI
    0x7fff2bcb3000 -     0x7fff2bcb7ffb  com.apple.ColorSyncLegacy (4.13.0 - 1) <72EE68DB-F069-37F5-AA2A-40D5FCF139F4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff2bd51000 -     0x7fff2bda8ffa  com.apple.HIServices (1.22 - 676) <14DF4D42-E24D-3EBD-9A9D-93124D8D6AA1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff2bda9000 -     0x7fff2bdb7fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <01B8B6B3-E2C3-3607-B34A-8283A7E0E924> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff2bdb8000 -     0x7fff2bdfdffa  com.apple.print.framework.PrintCore (15.4 - 516.2) <437BCF12-48D2-3770-8BC9-567718FB1BCA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff2bdfe000 -     0x7fff2be08ff7  com.apple.QD (4.0 - 413) <27A36D07-B5E9-32E6-87B6-3127F260F48D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff2be09000 -     0x7fff2be16ffc  com.apple.speech.synthesis.framework (9.0.24 - 9.0.24) <75344F8F-32CA-3558-B4E6-F56D498250E4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff2be17000 -     0x7fff2bef8ff2  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <3A7E709F-DE6E-313B-82A1-1E9C8B734CF5> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff2befa000 -     0x7fff2befafff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <76010435-2167-3B23-9E2A-E73F7F6C1B25> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff2c291000 -     0x7fff2c61fffa  com.apple.CFNetwork (1128.1 - 1128.1) <81AE2F6D-46E2-36D9-ADCE-E79E7A869D1D> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff2c69b000 -     0x7fff2c69bfff  com.apple.Carbon (160 - 162) <49582194-AEFB-3FE9-B9D0-DB4AD24EFEDC> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff2c69c000 -     0x7fff2c69fff3  com.apple.CommonPanels (1.2.6 - 101) <9F6E13D9-374B-386F-8E15-FDD6CE967859> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff2c6a0000 -     0x7fff2c994ff3  com.apple.HIToolbox (2.1.1 - 994.6) <EAF2DAC3-66B1-30BF-AF10-72DDA90D1044> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff2c995000 -     0x7fff2c998ff3  com.apple.help (1.3.8 - 71) <36483951-6F3E-3F7E-8A5B-191C2357EF17> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff2c999000 -     0x7fff2c99eff7  com.apple.ImageCapture (9.0 - 1600.65) <1A1F320E-3E85-3F3D-8AE0-B238C4E92D40> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff2c99f000 -     0x7fff2c99ffff  com.apple.ink.framework (10.15 - 227) <284507AE-EF47-3ABC-86A4-669243DB1D33> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff2c9a0000 -     0x7fff2c9baffa  com.apple.openscripting (1.7 - 185.1) <B6E28747-5FC7-3461-8A71-864A969ED022> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff2c9db000 -     0x7fff2c9dbfff  com.apple.print.framework.Print (15 - 271) <0D9FB08F-EA87-3BE7-821B-C61BA5601050> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff2c9dc000 -     0x7fff2c9deff7  com.apple.securityhi (9.0 - 55008) <390C6FAA-99BF-3924-9180-9EAE41D9C6BE> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff2c9df000 -     0x7fff2c9e5fff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <9614A01E-8303-3422-A3BA-6CE27540E09A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff2c9e6000 -     0x7fff2cb7effa  com.apple.cloudkit.CloudKit (867 - 867) <1B851180-FC00-357F-B6C1-BB0EA7D6D5CA> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
    0x7fff2cb7f000 -     0x7fff2cb7ffff  com.apple.Cocoa (6.11 - 23) <4C81A68B-4967-3688-BB6C-7C19E78EA20F> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff2cb8d000 -     0x7fff2cc83fff  com.apple.ColorSync (4.13.0 - 3394.9) <A126406C-DA38-3FFE-8B25-BB9859EFD159> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff2cd75000 -     0x7fff2ceaeff6  com.apple.contacts (1.0 - 3455.18) <57696192-BF9D-3946-8C78-35FCEF406B00> /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts
    0x7fff2cf6e000 -     0x7fff2d477ffb  com.apple.audio.CoreAudio (5.0 - 5.0) <47923B12-3D14-328A-9C86-27A3A2A73068> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff2d4ca000 -     0x7fff2d502fff  com.apple.CoreBluetooth (1.0 - 1) <23DBB313-A082-3C08-8E1F-2D31EE4247EF> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff2d503000 -     0x7fff2d8edfe8  com.apple.CoreData (120 - 977.3) <49AE61CA-C91E-31FE-9BD0-1AACFFB5181E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff2d8ee000 -     0x7fff2da20ff6  com.apple.CoreDisplay (1.0 - 186.6.15) <213D7011-8180-3CF4-9BE7-FB8F75DCDB95> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff2da21000 -     0x7fff2dea1ff2  com.apple.CoreFoundation (6.9 - 1677.205) <83F301FE-DE7E-315D-B4EA-CDA62F114F0A> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff2dea3000 -     0x7fff2e518fe8  com.apple.CoreGraphics (2.0 - 1355.24) <041366C9-FE91-3B58-95DD-5800A817BAB6> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff2e526000 -     0x7fff2e881ff0  com.apple.CoreImage (15.0.0 - 940.9) <69361069-01AB-342E-862B-73A74271A765> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff2e882000 -     0x7fff2e8ebff0  com.apple.corelocation (2394.0.22 - 2394.0.22) <75966124-2FB7-33C3-BE49-3DD5F327F911> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation
    0x7fff2e8ec000 -     0x7fff2e93cff6  com.apple.audio.midi.CoreMIDI (1.10 - 88) <017B0334-8AC4-304B-A5E2-C82C51BE1917> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff2e93f000 -     0x7fff2ec41ff2  com.apple.CoreML (1.0 - 1) <FD17F9EB-1930-314C-B6B4-2A2E643AC771> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML
    0x7fff2ec42000 -     0x7fff2ed1dffc  com.apple.CoreMedia (1.0 - 2625.9) <A3FF3AFC-8C1C-36E5-9179-66D8F075EE35> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff2ed1e000 -     0x7fff2ed80ffe  com.apple.CoreMediaIO (1000.0 - 5125.6) <EE8EEB82-D382-3A18-BD4E-9896B7F5A9BA> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff2ee0a000 -     0x7fff2ee0afff  com.apple.CoreServices (1069.24 - 1069.24) <C7B6191A-C8E2-3BBF-B678-93C2E2AEBC9A> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff2ee0b000 -     0x7fff2ee90fff  com.apple.AE (838.1 - 838.1) <2E5FD5AE-8A7F-353F-9BD1-0241F3586181> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff2ee91000 -     0x7fff2f172ff7  com.apple.CoreServices.CarbonCore (1217 - 1217) <BE379206-99FA-30CD-8391-2708473A633F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff2f173000 -     0x7fff2f1c0ffd  com.apple.DictionaryServices (1.2 - 323.6) <26B70C82-25BC-353A-858F-945B14C803A2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff2f1c1000 -     0x7fff2f1c9ff7  com.apple.CoreServices.FSEvents (1268.100.1 - 1268.100.1) <FC84DB48-A3CE-30F7-A918-B3587731ACC7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff2f1ca000 -     0x7fff2f404ff6  com.apple.LaunchServices (1069.24 - 1069.24) <9A5359D9-9148-3B18-B868-56A9DA5FB60C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff2f405000 -     0x7fff2f49dff1  com.apple.Metadata (10.7.0 - 2076.7) <0973F7E5-D58C-3574-A3CE-4F12CAC2D4C7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff2f49e000 -     0x7fff2f4cbfff  com.apple.CoreServices.OSServices (1069.24 - 1069.24) <0E4F48AD-402C-3E9D-9CA9-6DD9479B28F9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff2f4cc000 -     0x7fff2f533fff  com.apple.SearchKit (1.4.1 - 1.4.1) <2C5E1D85-E8B1-3DC5-91B9-E3EDB48E9369> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff2f534000 -     0x7fff2f558ff5  com.apple.coreservices.SharedFileList (131.4 - 131.4) <02DE0D56-E371-3EF5-9BC1-FA435451B412> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff2f559000 -     0x7fff2f5cafff  com.apple.CoreSpotlight (1.0 - 2076.7) <30F95EA5-8DB6-39D9-BF46-C486CAC7AA7B> /System/Library/Frameworks/CoreSpotlight.framework/Versions/A/CoreSpotlight
    0x7fff2f7b5000 -     0x7fff2f87cffc  com.apple.CoreTelephony (113 - 7560.1) <31D93EB1-0A20-3383-9680-090E441F25D8> /System/Library/Frameworks/CoreTelephony.framework/Versions/A/CoreTelephony
    0x7fff2f87d000 -     0x7fff2fa34ffc  com.apple.CoreText (643.1.5.5 - 643.1.5.5) <8573E719-F71C-3123-8394-701E4989E34A> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff2fa35000 -     0x7fff2fa79ffb  com.apple.CoreVideo (1.8 - 344.3) <5314E70D-325F-3E98-99FC-00FDF520747E> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff2fa7a000 -     0x7fff2fb07ffc  com.apple.framework.CoreWLAN (13.0 - 1601.2) <6223BFD5-D451-3DE9-90F6-F609AC0B0027> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff2fb3e000 -     0x7fff2fb7eff5  com.apple.CryptoTokenKit (1.0 - 1) <85B4A992-8B61-39FB-BCDE-05A2D5989D74> /System/Library/Frameworks/CryptoTokenKit.framework/Versions/A/CryptoTokenKit
    0x7fff2fcc3000 -     0x7fff2fcceff7  com.apple.DirectoryService.Framework (10.15 - 220.40.1) <6EACB7D0-A013-3D2B-93D2-5113F7C2559D> /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService
    0x7fff2fccf000 -     0x7fff2fd79ff0  com.apple.DiscRecording (9.0.3 - 9030.4.5) <BCF3AFB0-6E1A-3F28-A575-1FD2D74E7C19> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff2fd9e000 -     0x7fff2fda4fff  com.apple.DiskArbitration (2.7 - 2.7) <14572D3E-7743-31E3-8777-A7BE2EAF518F> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff2fdcb000 -     0x7fff2ff78ffc  com.apple.ical.EventKit (3.0 - 1370.5.1) <E15BB2B5-C1AE-3084-99C0-5F432D80CBC2> /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
    0x7fff2ff99000 -     0x7fff300c7ff6  com.apple.FileProvider (304.1 - 304.1) <E8BB1D4B-05D6-386C-865C-F8C750CEC308> /System/Library/Frameworks/FileProvider.framework/Versions/A/FileProvider
    0x7fff300dc000 -     0x7fff300deff3  com.apple.ForceFeedback (1.0.6 - 1.0.6) <9B324178-4FAA-3686-9E01-634607F38493> /System/Library/Frameworks/ForceFeedback.framework/Versions/A/ForceFeedback
    0x7fff300df000 -     0x7fff304a4fff  com.apple.Foundation (6.9 - 1677.205) <1D3A7414-141E-3170-9D18-69A53F1ACAAC> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff30511000 -     0x7fff30561ff7  com.apple.GSS (4.0 - 2.0) <1B6FCC64-7ED0-30E4-AD2D-AD35D621981D> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff30562000 -     0x7fff3058aff4  com.apple.GameController (1.0 - 1) <2B7F0994-4B32-3B08-B58A-3FA5A5E65AF4> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff3069e000 -     0x7fff307b2ff3  com.apple.Bluetooth (7.0.6 - 7.0.6f8) <C7AF719C-51B4-3727-A947-EB01204272D9> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff30818000 -     0x7fff308bcff3  com.apple.framework.IOKit (2.0.2 - 1726.148.1) <0A9D244C-AECC-3D29-86DE-4F3B04F8DD25> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff308be000 -     0x7fff308cfffb  com.apple.IOSurface (269.11 - 269.11) <BCD744D4-E17E-3C2E-B69C-F69C789892E9> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff308ed000 -     0x7fff3094dff5  com.apple.ImageCaptureCore (1.0 - 1600.65) <281CE141-B350-30E2-B345-FC7E7DF1AA3A> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff3094e000 -     0x7fff30aabfe6  com.apple.ImageIO.framework (3.3.0 - 1976.11.6) <1B271746-8BFA-382B-A223-4D4B4AD12504> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff30aac000 -     0x7fff30aaffff  libGIF.dylib (1976.11.6) <F6721850-6AEC-3C70-B90B-FBF7CB3C1265> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff30ab0000 -     0x7fff30b69fe7  libJP2.dylib (1976.11.6) <56C503FB-B37D-352D-B77A-D8BF1160289B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff30b6a000 -     0x7fff30b8dfe3  libJPEG.dylib (1976.11.6) <B82AC9B8-3416-3E16-AF45-5F1B96FDB38F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff30e0a000 -     0x7fff30e24fef  libPng.dylib (1976.11.6) <7C2D2001-B75A-33AF-A498-0B7B0C5E4DAD> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff30e25000 -     0x7fff30e26fff  libRadiance.dylib (1976.11.6) <1BA2051B-890C-39B8-9489-6187D1C2F404> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff30e27000 -     0x7fff30e6dfff  libTIFF.dylib (1976.11.6) <A3AA8DCA-A06E-33A3-9EC0-9D9BAE6A9531> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff30e86000 -     0x7fff31315ff8  com.apple.Intents (1.0 - 1) <B2884C7F-0D08-3E3C-91A3-7FB755BB5CB1> /System/Library/Frameworks/Intents.framework/Versions/A/Intents
    0x7fff31318000 -     0x7fff323b8ff1  com.apple.JavaScriptCore (15609 - 15609.4.1) <18766B97-AB12-331C-984C-F1C7C9363E8B> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff323cf000 -     0x7fff323e1ff3  com.apple.Kerberos (3.0 - 1) <03BB492B-016E-37BF-B020-39C2CF7487FE> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff323e2000 -     0x7fff323e2fff  libHeimdalProxy.dylib (77) <0A2905EE-9533-3345-AF9B-AAC71513BDFD> /System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib
    0x7fff323e3000 -     0x7fff32419ff7  com.apple.LDAPFramework (2.4.28 - 194.5) <020B3FA5-C305-3B13-9DFB-1D526EC3C96F> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP
    0x7fff3252d000 -     0x7fff3254fffc  com.apple.CoreAuthentication.SharedUtils (1.0 - 693.140.3) <A3F9CE45-4F7A-3F5D-865C-6EB9B6C3B3B4> /System/Library/Frameworks/LocalAuthentication.framework/Support/SharedUtils.framework/Versions/A/SharedUtils
    0x7fff32550000 -     0x7fff32566ff2  com.apple.LocalAuthentication (1.0 - 693.140.3) <5D391FD1-391B-390A-BBC1-62A537C8DAFE> /System/Library/Frameworks/LocalAuthentication.framework/Versions/A/LocalAuthentication
    0x7fff32774000 -     0x7fff3277effb  com.apple.MediaAccessibility (1.0 - 125.1) <98065EA1-3484-3A5A-B05C-D2FABED8CEA4> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff32792000 -     0x7fff32849ff7  com.apple.MediaPlayer (1.0 - 1.0) <FE739C02-1000-36C8-9FAD-26FF3D8240CB> /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer
    0x7fff3284a000 -     0x7fff32f97ff2  com.apple.MediaToolbox (1.0 - 2625.9) <3A848992-9182-382A-BF7D-5CB9707BE27B> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff32f99000 -     0x7fff33063fff  com.apple.Metal (212.8 - 212.8) <98C944D6-62C8-355E-90F8-C1CA2429EF24> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff33065000 -     0x7fff3307fff5  com.apple.MetalKit (141.2 - 141.2) <FAACD940-5CF2-300A-83F3-86ABA7FDC531> /System/Library/Frameworks/MetalKit.framework/Versions/A/MetalKit
    0x7fff33080000 -     0x7fff330bdff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <7EBAC15D-7837-395D-B405-1E29F7DA68FA> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff330be000 -     0x7fff33148fe2  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <B424FE0C-6E90-3BFA-A6E7-DD86C735AE90> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff33149000 -     0x7fff3316eff4  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <02006D92-E2AB-3892-A96B-37F6520C19BA> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff3316f000 -     0x7fff33184ffb  com.apple.MetalPerformanceShaders.MPSNDArray (1.0 - 1) <CAA5A368-DB71-34F6-AEF9-27A8BC298F53> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray
    0x7fff33185000 -     0x7fff332e3ffc  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <05612E06-50CB-318F-9F8E-EF4D49FAB3B0> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff332e4000 -     0x7fff33333ff4  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <B0B591F8-6875-351E-867F-8EB3CD38CD52> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector
    0x7fff33334000 -     0x7fff33335ff5  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <F2921F9A-3041-3495-878D-64134267B847> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff343d5000 -     0x7fff343e1ffe  com.apple.NetFS (6.0 - 4.0) <57CABC68-0585-3989-9161-157DBB544B82> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff343e2000 -     0x7fff34539ff3  com.apple.Network (1.0 - 1) <4A0F3B93-4D23-3E74-9A3D-AD19E9C0E59E> /System/Library/Frameworks/Network.framework/Versions/A/Network
    0x7fff3453a000 -     0x7fff3479affa  com.apple.NetworkExtension (1.0 - 1) <3ED35C5A-B170-373E-8277-D4198E408810> /System/Library/Frameworks/NetworkExtension.framework/Versions/A/NetworkExtension
    0x7fff36f6b000 -     0x7fff36fc3fff  com.apple.opencl (3.5 - 3.5) <C4847D3F-8BBB-3B6A-A997-C16042DCE2FA> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff36fc4000 -     0x7fff36fe0fff  com.apple.CFOpenDirectory (10.15 - 220.40.1) <7E6C88EB-3DD9-32B0-81FC-179552834FA9> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff36fe1000 -     0x7fff36fecffd  com.apple.OpenDirectory (10.15 - 220.40.1) <4A92D8D8-A9E5-3A9C-942F-28576F6BCDF5> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff37952000 -     0x7fff37954fff  libCVMSPluginSupport.dylib (17.10.22) <50071DF6-251A-3F7E-A9EC-0625BDD24F7F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff37955000 -     0x7fff3795afff  libCoreFSCache.dylib (176.16.1) <BAE3602F-5452-323B-B696-C049F64A2D60> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff3795b000 -     0x7fff3795ffff  libCoreVMClient.dylib (176.16.1) <B41FD53F-5730-3832-BC45-12E3101FF5BE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff37960000 -     0x7fff37968ff7  libGFXShared.dylib (17.10.22) <7358D2D6-F046-3DA7-B80A-039F950BF484> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff37969000 -     0x7fff37973fff  libGL.dylib (17.10.22) <E5190CA0-0D87-3B0B-8D3C-B60C42BC18DA> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff37974000 -     0x7fff379a8ff7  libGLImage.dylib (17.10.22) <FB5A6177-F299-371C-9296-71F60E6B3CF3> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff37b3e000 -     0x7fff37b7afff  libGLU.dylib (17.10.22) <66BCAD33-0264-31AB-966C-66DD4359EAF4> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff385b6000 -     0x7fff385c5ff7  com.apple.opengl (17.10.22 - 17.10.22) <5B337C5E-F97E-32F0-AD50-2C293BFCA7FB> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff38777000 -     0x7fff3886aff5  com.apple.PDFKit (1.0 - 845.4.1) <A58B3E4C-6B27-32A7-AC6E-35BCB5A45944> /System/Library/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff3886b000 -     0x7fff38982ff9  com.apple.PencilKit (1.0 - 1) <95301D00-CE35-3F53-BAE1-6E6217706702> /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
    0x7fff38c23000 -     0x7fff38c29ff6  com.apple.PushKit (1.0 - 1) <AD547A25-1A0B-3FA6-8676-82C37F267A4A> /System/Library/Frameworks/PushKit.framework/Versions/A/PushKit
    0x7fff38d4a000 -     0x7fff38f90ff7  com.apple.imageKit (3.0 - 1081) <5F086EE2-5745-3E28-B292-1DE5E0652E36> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff38f91000 -     0x7fff39450fff  com.apple.QuartzComposer (5.1 - 378) <9C10ADF7-94B0-3779-AD44-5AF6394A32AF> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff39451000 -     0x7fff39476ffc  com.apple.quartzfilters (1.10.0 - Tag) <876E8B28-9500-34C6-B297-EA404D89C903> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff39477000 -     0x7fff39581ff7  com.apple.QuickLookUIFramework (5.0 - 906.3) <7128FB8C-83B0-3250-BF86-E8A1772CF1F5> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff39582000 -     0x7fff39582fff  com.apple.quartzframework (1.5 - 23) <0E9BC89B-B86F-3E94-866A-AC0863522BF5> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff39583000 -     0x7fff39806ffb  com.apple.QuartzCore (1.11 - 841.5) <26281BD1-499F-37C0-885C-58DD9245525D> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff39807000 -     0x7fff39860ff5  com.apple.QuickLookFramework (5.0 - 906.3) <959CE934-B541-3172-846F-4D1709353526> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff39861000 -     0x7fff39896ffc  com.apple.QuickLookThumbnailing (1.0 - 1) <9CCB50D8-AA39-3744-93FB-7B5B65467AB3> /System/Library/Frameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff39d67000 -     0x7fff39d81ff2  com.apple.SafariServices.framework (15610 - 15610.2.11.51.10) <15E5509B-9AE4-3980-971A-74E9E80996FB> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff3a389000 -     0x7fff3a6d2ff1  com.apple.security (7.0 - 59306.140.6) <A896EE58-D7EA-34E4-8832-93E38EA47831> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff3a6d3000 -     0x7fff3a75bffb  com.apple.securityfoundation (6.0 - 55236.60.1) <CCF58C3E-8953-3952-863B-0235054F0D40> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff3a75c000 -     0x7fff3a789ff7  com.apple.securityinterface (10.0 - 55139.120.1) <72DC3440-6D3E-39DF-B8A8-85ADAE8D38FC> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff3a78a000 -     0x7fff3a78eff8  com.apple.xpc.ServiceManagement (1.0 - 1) <0065A95F-0AEB-306D-94DC-6E7F70AA6EBD> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff3aac2000 -     0x7fff3aadfff9  com.apple.StoreKit (1.0 - 1) <D39EA2FD-A7E7-341F-80BD-18912272CAFE> /System/Library/Frameworks/StoreKit.framework/Versions/A/StoreKit
    0x7fff3b43a000 -     0x7fff3b4b4ff7  com.apple.SystemConfiguration (1.19 - 1.19) <84F9B3BB-F7AF-3B7C-8CD0-D3C22D19619F> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff3b67d000 -     0x7fff3b6b2ff2  com.apple.UserNotifications (1.0 - ???) <8DB163D1-66F0-3B52-933F-48F945E3FF4D> /System/Library/Frameworks/UserNotifications.framework/Versions/A/UserNotifications
    0x7fff3b734000 -     0x7fff3bab7ff4  com.apple.VideoToolbox (1.0 - 2625.9) <6CF18E28-A7A8-3952-8171-7E4FF4FB37FA> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff3bab8000 -     0x7fff3bd3bfff  com.apple.VN (3.0.97 - 3.0.97) <078CA4E3-B131-306F-A760-D45CB3F1AD0D> /System/Library/Frameworks/Vision.framework/Versions/A/Vision
    0x7fff3f424000 -     0x7fff3f4e9fe7  com.apple.APFS (1412.141.2 - 1412.141.2) <FC81D7DC-5760-384E-A8FA-3CA56B8C1EE8> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff3fe39000 -     0x7fff3feeaff6  com.apple.accounts.AccountsDaemon (113 - 113) <F8B91912-80AD-34C0-99CC-4A3569D9F6FD> /System/Library/PrivateFrameworks/AccountsDaemon.framework/Versions/A/AccountsDaemon
    0x7fff4048d000 -     0x7fff405e2ff2  com.apple.AddressBook.core (1.0 - 1) <56464766-2D02-3795-92C5-E5DB6DDA6D38> /System/Library/PrivateFrameworks/AddressBookCore.framework/Versions/A/AddressBookCore
    0x7fff405fe000 -     0x7fff405ffff1  com.apple.AggregateDictionary (1.0 - 1) <95A291F5-B69F-3C37-9483-C3B2EBF52AC1> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary
    0x7fff40a4d000 -     0x7fff40b98ff5  com.apple.AnnotationKit (1.0 - 325.9) <9BB0EDB6-3808-30FC-B0ED-764DE5AAB893> /System/Library/PrivateFrameworks/AnnotationKit.framework/Versions/A/AnnotationKit
    0x7fff40b99000 -     0x7fff40bb6ff4  com.apple.AppContainer (4.0 - 448.100.6) <87CEE13C-8585-3EFB-92CD-0852DFF0921B> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff40c0b000 -     0x7fff40c19ff7  com.apple.AppSandbox (4.0 - 448.100.6) <0F49AA04-3400-349A-9096-6D4D7ED61027> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff40c1c000 -     0x7fff40c7aff5  com.apple.AppStoreDaemon (1.0 - 1) <5A01D730-DB70-3441-ADC1-D7DF17E39578> /System/Library/PrivateFrameworks/AppStoreDaemon.framework/Versions/A/AppStoreDaemon
    0x7fff41004000 -     0x7fff41069ff7  com.apple.AppSupport (1.0.0 - 29) <7408886B-B0CC-3EF0-9F11-9088DEE266ED> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport
    0x7fff41095000 -     0x7fff410b9ffb  com.apple.framework.Apple80211 (13.0 - 1610.1) <D94E03E8-4C38-3B2F-8DF4-473ACC5A7D71> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff410ba000 -     0x7fff411edff3  com.apple.AppleAccount (1.0 - 1.0) <939881CD-B6FE-36F7-AE17-602329EE352D> /System/Library/PrivateFrameworks/AppleAccount.framework/Versions/A/AppleAccount
    0x7fff41377000 -     0x7fff41386fd7  com.apple.AppleFSCompression (119.100.1 - 1.0) <466ABD77-2E52-36D1-8E39-77AE2CC61611> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff41485000 -     0x7fff41490ff7  com.apple.AppleIDAuthSupport (1.0 - 1) <74F6CD9C-27A7-39C7-A7EB-47E60D2517EB> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport
    0x7fff41491000 -     0x7fff414d1ff1  com.apple.AppleIDSSOAuthentication (1.0 - 1) <C185B6DB-B784-3C52-983B-EA9B866327B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication
    0x7fff414d2000 -     0x7fff4151aff7  com.apple.AppleJPEG (1.0 - 1) <6DE30A07-C627-319B-A0DE-EB7A832BEB88> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff4151b000 -     0x7fff4152bff7  com.apple.AppleLDAP (10.15 - 52) <E21B4A50-7102-3C35-8852-338E7E3CC4E2> /System/Library/PrivateFrameworks/AppleLDAP.framework/Versions/A/AppleLDAP
    0x7fff4152c000 -     0x7fff418d0ffd  com.apple.AppleMediaServices (1.0 - 1) <533DB7DE-4799-3A05-B75F-AEE8B45FF6F5> /System/Library/PrivateFrameworks/AppleMediaServices.framework/Versions/A/AppleMediaServices
    0x7fff418dd000 -     0x7fff41903ffb  com.apple.aps.framework (4.0 - 4.0) <3ED300B6-43E3-31DC-B3C6-6A0FF41A2595> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService
    0x7fff41904000 -     0x7fff41908ff7  com.apple.AppleSRP (5.0 - 1) <70C25EA9-F7A7-366C-97C6-EEE7845FFCC3> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP
    0x7fff41909000 -     0x7fff4192bfff  com.apple.applesauce (1.0 - 16.25) <68E0364C-AEA7-3654-A030-136BF3CD92F3> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff419ea000 -     0x7fff419edfff  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <67255151-F989-39F0-BC87-0C0BDAE70730> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff419ee000 -     0x7fff41a3eff7  com.apple.AppleVAFramework (6.1.2 - 6.1.2) <E8540613-F9C7-3665-AB6E-EA43A05B83B4> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff41a87000 -     0x7fff41a96ff9  com.apple.AssertionServices (1.0 - 223.140.2) <48AD21CA-B81D-380E-A04F-90C48FDA5203> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices
    0x7fff41fd9000 -     0x7fff423d4ff8  com.apple.audio.AudioResourceArbitration (1.0 - 1) <2BD68521-C19C-3D67-B5EB-DE3E9A4DAF0A> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
    0x7fff4262a000 -     0x7fff4286aff8  com.apple.audio.AudioToolboxCore (1.0 - 1104.97) <E3B9D2AD-F256-38B5-93AC-6591E3787F7F> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore
    0x7fff4286e000 -     0x7fff4298afff  com.apple.AuthKit (1.0 - 1) <DC1A27C5-0172-3C72-9B24-06996D0B6207> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit
    0x7fff42b47000 -     0x7fff42b50ff7  com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <A6877DAD-8F47-363C-983A-DC8DDE83B7B5> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff42b51000 -     0x7fff42bf2ff5  com.apple.backup.framework (1.11.7 - 1298.7.1) <C9DC35FA-E69F-3C64-9519-494126096337> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff42bf3000 -     0x7fff42c7fff6  com.apple.BaseBoard (466.3 - 466.3) <10D0F3BB-E8F3-365E-8528-6AC996A9B0E7> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard
    0x7fff42d50000 -     0x7fff42d80ffa  com.apple.BoardServices (1.0 - 466.3) <95D829A0-6339-35F7-BC46-5A54AE62DB30> /System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices
    0x7fff42d81000 -     0x7fff42dbdff7  com.apple.bom (14.0 - 219.2) <79CBE5E7-054F-377B-9566-A86A9F120CF1> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
    0x7fff42edb000 -     0x7fff42f12ff5  com.apple.C2 (1.3 - 495) <4A7E2A63-E19A-3936-92F5-03F2FD602172> /System/Library/PrivateFrameworks/C2.framework/Versions/A/C2
    0x7fff4303e000 -     0x7fff43098ff2  com.apple.CalDAV (8.0 - 790.4.1) <E5983EF6-0462-3EB6-8F28-B14EAC3B7B63> /System/Library/PrivateFrameworks/CalDAV.framework/Versions/A/CalDAV
    0x7fff43248000 -     0x7fff43273fff  com.apple.CalendarAgentLink (8.0 - 250) <57225073-4A73-3AB8-849A-47C0E90B04BF> /System/Library/PrivateFrameworks/CalendarAgentLink.framework/Versions/A/CalendarAgentLink
    0x7fff4328c000 -     0x7fff43304ff4  com.apple.CalendarFoundation (8.0 - 1140.6.1) <F051C149-562B-36F4-BF8F-CE66B5D6E360> /System/Library/PrivateFrameworks/CalendarFoundation.framework/Versions/A/CalendarFoundation
    0x7fff4333b000 -     0x7fff43633ffe  com.apple.CalendarPersistence (8.0 - 1040.5.1) <38A88B23-3389-3C3A-AEDE-D42A5F5267C6> /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
    0x7fff4393d000 -     0x7fff4398cfff  com.apple.ChunkingLibrary (307 - 307) <5B09C30D-FD2B-3E98-8B64-C5EF470FC13C> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff4398d000 -     0x7fff439fbff9  com.apple.ClassKit (1.2 - 145.6.1) <1AD3AB3B-11A1-3BA6-82F3-CF1A7BAE6E47> /System/Library/PrivateFrameworks/ClassKit.framework/Versions/A/ClassKit
    0x7fff43ae7000 -     0x7fff43b72ff8  com.apple.CloudDocs (1.0 - 698.17) <900567ED-DEA4-30D5-A1C0-78BD53C58CD6> /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs
    0x7fff44839000 -     0x7fff44849ffb  com.apple.CommonAuth (4.0 - 2.0) <7A6E5A56-7929-3E44-8FCC-FE1DC6751082> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff4485d000 -     0x7fff44874fff  com.apple.commonutilities (8.0 - 900) <F4C97244-E5D8-3F7D-8D94-4B6841C5A4EC> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities
    0x7fff44b08000 -     0x7fff44b44ffa  com.apple.contacts.ContactsAutocomplete (1.0 - 1138) <7355EC48-BA3B-333E-A2DD-C7622382FAE4> /System/Library/PrivateFrameworks/ContactsAutocomplete.framework/Versions/A/ContactsAutocomplete
    0x7fff44b75000 -     0x7fff44bf9ff9  com.apple.AddressBook.ContactsFoundation (8.0 - 1118.9) <D508D709-2D18-3BB7-9AD1-5FF4D114F8B8> /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation
    0x7fff44bfa000 -     0x7fff44c37ff0  com.apple.contacts.ContactsPersistence (1.0 - 3455.18) <7597C280-EED8-313F-BE2F-72FAD1CB090F> /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence
    0x7fff44f7b000 -     0x7fff45350fc8  com.apple.CoreAUC (283.0.0 - 283.0.0) <4341271C-D270-3F9F-8464-31A20D15158D> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff45351000 -     0x7fff4537eff7  com.apple.CoreAVCHD (6.1.0 - 6100.4.1) <C3CFDC68-C7D9-3C44-9E7C-801D45575C10> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff453a1000 -     0x7fff453c2ff4  com.apple.analyticsd (1.0 - 1) <7BAD537E-C905-330D-BABF-AA0AA0FE0E27> /System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics
    0x7fff454cb000 -     0x7fff45541ff7  com.apple.corebrightness (1.0 - 1) <BE927D79-1C49-3C0B-B8AD-055F34A35AE3> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff4563b000 -     0x7fff456ccffe  com.apple.coredav (1.0.1 - 870.4.1) <62E621B9-DA73-371A-9B39-FFDE54AED5B1> /System/Library/PrivateFrameworks/CoreDAV.framework/Versions/A/CoreDAV
    0x7fff456cd000 -     0x7fff456d8ff7  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <BB7D67B1-2102-3D71-9BB6-AEB8C6A6EBB2> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon
    0x7fff456d9000 -     0x7fff458e4ff1  com.apple.CoreDuet (1.0 - 1) <F899F217-FC31-3140-A0EB-92EAD22EEF71> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet
    0x7fff458e5000 -     0x7fff45932ff3  com.apple.coreduetcontext (1.0 - 1) <72341E86-6921-35FE-89CA-7B04725ECC0F> /System/Library/PrivateFrameworks/CoreDuetContext.framework/Versions/A/CoreDuetContext
    0x7fff45933000 -     0x7fff45943ffe  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <5E31B761-4B30-39A8-9084-97ECFD268B6F> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol
    0x7fff45946000 -     0x7fff45948fff  com.apple.CoreDuetDebugLogging (1.0 - 1) <6D0113DB-61D8-3A21-95CB-9E30D8F929F9> /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging
    0x7fff45959000 -     0x7fff45969ff3  com.apple.CoreEmoji (1.0 - 107.1) <7C2B3259-083B-31B8-BCDB-1BA360529936> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff45b1f000 -     0x7fff45c6cfff  com.apple.CoreHandwriting (161 - 1.2) <21DAD964-51A7-3F38-9C91-EF46C0CFF12D> /System/Library/PrivateFrameworks/CoreHandwriting.framework/Versions/A/CoreHandwriting
    0x7fff45fa9000 -     0x7fff46013ff0  com.apple.CoreNLP (1.0 - 213) <E70E2505-8078-324E-BAE1-01A2DA980E2C> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP
    0x7fff462d6000 -     0x7fff4635effe  com.apple.CorePDF (4.0 - 518.4.1) <8F94505C-96C2-3694-BEC7-F3B5581A7AB9> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff46441000 -     0x7fff46449ff8  com.apple.CorePhoneNumbers (1.0 - 1) <E4DAD514-0B3B-3E0B-8AEA-39B320FAAF03> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers
    0x7fff46d5d000 -     0x7fff46d68ffa  com.apple.corerecents (1.0 - 1) <57697048-D149-34D0-9499-05821C791EA2> /System/Library/PrivateFrameworks/CoreRecents.framework/Versions/A/CoreRecents
    0x7fff46e36000 -     0x7fff46e59fff  com.apple.CoreSVG (1.0 - 129.3) <F38189F9-C8F9-3D62-9D5F-3F520FB81724> /System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG
    0x7fff46e5a000 -     0x7fff46e8dfff  com.apple.CoreServicesInternal (446.7 - 446.7) <65F53A22-6B61-382C-AAC2-B2C53F8FFB44> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff46e8e000 -     0x7fff46ebcffd  com.apple.CSStore (1069.24 - 1069.24) <C2D67667-FA0B-3DB6-AA34-6999EE4346A0> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore
    0x7fff47041000 -     0x7fff470e4fff  com.apple.CoreSuggestions (1.0 - 1052.34) <6F34A41F-04D1-35A5-8EBC-D5EBC2BCB3D6> /System/Library/PrivateFrameworks/CoreSuggestions.framework/Versions/A/CoreSuggestions
    0x7fff473e1000 -     0x7fff47477ff7  com.apple.CoreSymbolication (11.4 - 64535.33.2) <0B3BF87A-7F95-3D79-B4F8-421D6FAC4A6C> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff4750f000 -     0x7fff4763bff6  com.apple.coreui (2.1 - 609.4) <788818B7-7EBC-316D-9464-D12E365E3791> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff4763c000 -     0x7fff477f5ffa  com.apple.CoreUtils (6.2.4 - 624.7) <A74A1C65-6695-3F57-B703-0DEDE13E66C1> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff4792f000 -     0x7fff47942ff1  com.apple.CrashReporterSupport (10.13 - 15016.1) <D584FFA6-32C5-328B-BE77-2C256B2B116C> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff479fb000 -     0x7fff47a0dff8  com.apple.framework.DFRFoundation (1.0 - 252.50.1) <8162057E-E856-3451-9160-04AEDDECFFA4> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff47a0e000 -     0x7fff47a13fff  com.apple.DSExternalDisplay (3.1 - 380) <31ECB5FD-7660-33DB-BC5B-2B2A2AA7C686> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff47a9d000 -     0x7fff47b17ff0  com.apple.datadetectorscore (8.0 - 659) <B1534796-1000-3520-A641-A97A4AC5D39B> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff47b19000 -     0x7fff47b62ffe  com.apple.DataDetectorsNaturalLanguage (1.0 - 154) <ED7F55BC-D479-39A8-9993-E505651FF1EC> /System/Library/PrivateFrameworks/DataDetectorsNaturalLanguage.framework/Versions/A/DataDetectorsNaturalLanguage
    0x7fff47b63000 -     0x7fff47ba0ff8  com.apple.DebugSymbols (194 - 194) <040AE30B-CF2C-3798-A289-0929B8CAB10D> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff47ba1000 -     0x7fff47d29ff6  com.apple.desktopservices (1.14.6 - 1281.6.1) <C2355E6B-C5F7-3E39-B778-B117BD4652C6> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff47fd8000 -     0x7fff480a0ffe  com.apple.DiskImagesFramework (559.100.2 - 559.100.2) <65F24DF5-1B62-3F6B-9188-ED39634D2AE7> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages
    0x7fff480a1000 -     0x7fff48174ff1  com.apple.DiskManagement (13.0 - 1648.140.2) <640DBACE-B6EC-3C72-9F73-F484E891534E> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement
    0x7fff48175000 -     0x7fff48179ff1  com.apple.DisplayServicesFW (3.1 - 380) <4D71ADB3-B29D-3D20-B6DE-9E94061F86AC> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff481d3000 -     0x7fff481f7ff7  com.apple.DuetActivityScheduler (1.0 - 1) <188C6793-A94C-3B49-A9F4-AF8A348C7E62> /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/Versions/A/DuetActivityScheduler
    0x7fff48221000 -     0x7fff48256ff7  com.apple.SystemConfiguration.EAP8021X (14.0.0 - 14.0) <D3F76E01-2F9F-33E1-B5C9-CAC6E01724C2> /System/Library/PrivateFrameworks/EAP8021X.framework/Versions/A/EAP8021X
    0x7fff48257000 -     0x7fff4825bff9  com.apple.EFILogin (2.0 - 2) <3BFE697B-469F-38F4-B380-4A4F4A37C836> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff48d8f000 -     0x7fff48da4ff2  com.apple.Engram (1.0 - 1) <83200CE7-9D5C-32B8-90B9-D762AC748D8B> /System/Library/PrivateFrameworks/Engram.framework/Versions/A/Engram
    0x7fff48da5000 -     0x7fff4940fff9  com.apple.vision.EspressoFramework (1.0 - 188.4) <70B1521B-1B24-3DA4-A41B-E727CF140F1F> /System/Library/PrivateFrameworks/Espresso.framework/Versions/A/Espresso
    0x7fff49458000 -     0x7fff494b5ff2  com.apple.ExchangeWebServices (8.0 - 807) <7CA35906-0702-37D4-BE2B-C75EA6B1490C> /System/Library/PrivateFrameworks/ExchangeWebServices.framework/Versions/A/ExchangeWebServices
    0x7fff496ea000 -     0x7fff49b05ff1  com.apple.vision.FaceCore (4.3.0 - 4.3.0) <5D32F65D-2CD7-3204-975C-F4C9256E505F> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff4a1a4000 -     0x7fff4a2daffc  libFontParser.dylib (277.2.6.6) <FABE97A5-398F-3015-B132-7DACC33344A2> /System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib
    0x7fff4a2db000 -     0x7fff4a30ffff  libTrueTypeScaler.dylib (277.2.6.6) <653F9E57-5337-35CD-B1BE-165052FC9CF1> /System/Library/PrivateFrameworks/FontServices.framework/libTrueTypeScaler.dylib
    0x7fff4a373000 -     0x7fff4a383ff6  libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <202E45A7-B23F-3873-87CA-5D39D30D757F> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib
    0x7fff4a3ff000 -     0x7fff4a415ffb  com.apple.Futhark (1.0 - 1) <FA2EC92C-5509-392F-8E30-FA5BE0D87615> /System/Library/PrivateFrameworks/Futhark.framework/Versions/A/Futhark
    0x7fff4d864000 -     0x7fff4d865fff  libmetal_timestamp.dylib (902.14.11) <C29C7125-A894-3718-8E1D-249C53BCC0B8> /System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/3902/Libraries/libmetal_timestamp.dylib
    0x7fff4ef1f000 -     0x7fff4ef25fff  com.apple.GPUWrangler (5.2.7 - 5.2.7) <FA34760B-4E5C-3A18-A6C3-DBA68F9D1220> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff4f244000 -     0x7fff4f26aff1  com.apple.GenerationalStorage (2.0 - 314) <54483E50-20BB-3AF8-900F-992320C109B0> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff4f283000 -     0x7fff5026cff1  com.apple.GeoServices (1.0 - 1624.26.4.26.9) <F735575F-7DEF-3202-9151-589BEB162596> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
    0x7fff50398000 -     0x7fff503a6ffb  com.apple.GraphVisualizer (1.0 - 100.1) <507D5812-9CB4-3C94-938C-59ED2B370818> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff5040f000 -     0x7fff5041cff9  com.apple.HID (1.0 - 1) <0C27FC33-B645-3B7B-AAB5-E6F8F3A0A34D> /System/Library/PrivateFrameworks/HID.framework/Versions/A/HID
    0x7fff50545000 -     0x7fff50603ff4  com.apple.Heimdal (4.0 - 2.0) <6F292E47-3C40-33ED-9AD7-18FC9939E2CF> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff51da6000 -     0x7fff51ea4ffd  com.apple.ids (10.0 - 1000) <3C63AA92-553A-397B-B84A-BE3F443C3CEF> /System/Library/PrivateFrameworks/IDS.framework/Versions/A/IDS
    0x7fff51ea5000 -     0x7fff51fe1ff5  com.apple.idsfoundation (10.0 - 1000) <B89E8F6E-DDA6-3766-997C-14663C658A8C> /System/Library/PrivateFrameworks/IDSFoundation.framework/Versions/A/IDSFoundation
    0x7fff525ff000 -     0x7fff5265fff2  com.apple.imfoundation (10.0 - 1000) <BAEB40B7-908F-3D97-9BE9-5EAB83930543> /System/Library/PrivateFrameworks/IMFoundation.framework/Versions/A/IMFoundation
    0x7fff52785000 -     0x7fff5278effe  com.apple.IOAccelMemoryInfo (1.0 - 1) <ECAB1FBF-4756-3437-8C72-0F89294510CA> /System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo
    0x7fff5278f000 -     0x7fff52797ff5  com.apple.IOAccelerator (438.7.4 - 438.7.4) <3C973800-3AE0-3908-9922-EFBC57C3F5B2> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff527a4000 -     0x7fff527bbfff  com.apple.IOPresentment (47.10 - 37) <C97340B5-C71D-32CC-A519-30A5D7184BD3> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff52b43000 -     0x7fff52b8eff1  com.apple.IconServices (438.3 - 438.3) <0DADB4C3-46FF-3FDB-8A86-51E2067FC7F4> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff52d2b000 -     0x7fff52d39fff  com.apple.IntentsFoundation (1.0 - 1) <1BC7D355-E136-391A-8215-6982742645DD> /System/Library/PrivateFrameworks/IntentsFoundation.framework/Versions/A/IntentsFoundation
    0x7fff52d4c000 -     0x7fff52d53ff9  com.apple.InternationalSupport (1.0 - 45.4) <8D8D4A7D-FD35-36B8-A456-7C93030EDAB3> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff52d54000 -     0x7fff52d56ff3  com.apple.InternationalTextSearch (1.0 - 1) <0BB2FA58-04BD-31FB-9F8B-D57ADF9E4BB2> /System/Library/PrivateFrameworks/InternationalTextSearch.framework/Versions/A/InternationalTextSearch
    0x7fff52fd3000 -     0x7fff52fdfff7  com.apple.KerberosHelper (4.0 - 1.0) <7556CA39-95FC-32A4-9A0C-E42C5497A43B> /System/Library/PrivateFrameworks/KerberosHelper.framework/Versions/A/KerberosHelper
    0x7fff52fe0000 -     0x7fff52fffffd  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <23F39683-FE1E-3295-BE65-2FB6694B7CBF> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle
    0x7fff53134000 -     0x7fff53202ffd  com.apple.LanguageModeling (1.0 - 215.1) <C456087D-5B3A-390E-A665-862FA284C59C> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff53203000 -     0x7fff5324bfff  com.apple.Lexicon-framework (1.0 - 72) <41F208B9-8255-3EC7-9673-FE0925D071D3> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff53252000 -     0x7fff53257ff3  com.apple.LinguisticData (1.0 - 353.18) <3B92F249-4602-325F-984B-D2DE61EEE4E1> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff5327e000 -     0x7fff532a2ffe  com.apple.locationsupport (2394.0.22 - 2394.0.22) <CA6C86FD-051A-31BB-B3AF-3D02D6FD94B6> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport
    0x7fff532fb000 -     0x7fff53300ff7  com.apple.LoginUICore (4.0 - 4.0) <25CA17AF-8A74-3CE3-84D8-67B4A2B76FEA> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore
    0x7fff53af0000 -     0x7fff53af3fff  com.apple.Mangrove (1.0 - 25) <482F300F-9B70-351F-A4DF-B440EEF7368D> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff53cb0000 -     0x7fff53cb0ff5  com.apple.marco (10.0 - 1000) <CBC576AC-3AB9-349E-A0DF-4CDC4AB30A37> /System/Library/PrivateFrameworks/Marco.framework/Versions/A/Marco
    0x7fff53cb1000 -     0x7fff53cd7ffc  com.apple.MarkupUI (1.0 - 325.9) <A596E8D7-6DBD-3F01-89AD-B296C9D3B61E> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI
    0x7fff53d5c000 -     0x7fff53de6ff8  com.apple.MediaExperience (1.0 - 1) <0203AF27-AB5E-32FA-B529-AB7F29EEB887> /System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience
    0x7fff53de7000 -     0x7fff53e1afff  com.apple.MediaKit (16 - 923) <09FEE738-41E4-3A9C-AF1E-1DD00C56339D> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff53edf000 -     0x7fff54275ff9  com.apple.MediaRemote (1.0 - 1) <A0FF8D18-8BD3-3497-A53E-53CA3A072D5B> /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
    0x7fff54276000 -     0x7fff542b2ffc  com.apple.MediaServices (1.0 - 1) <EA82F76E-BF9B-37C3-9C8F-BEBC7D87D0CE> /System/Library/PrivateFrameworks/MediaServices.framework/Versions/A/MediaServices
    0x7fff545c0000 -     0x7fff5460cfff  com.apple.spotlight.metadata.utilities (1.0 - 2076.7) <0237323B-EC78-3FBF-9FC7-5A1FE2B5CE25> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities
    0x7fff5460d000 -     0x7fff546deffa  com.apple.gpusw.MetalTools (1.0 - 1) <99876E08-37D7-3828-8796-56D90C9AFBDB> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff5473c000 -     0x7fff54755ff4  com.apple.MobileAssets (1.0 - 619.120.1) <07E116E6-7EBC-39F2-B5B4-31BAB6BAF852> /System/Library/PrivateFrameworks/MobileAsset.framework/Versions/A/MobileAsset
    0x7fff54912000 -     0x7fff54930fff  com.apple.MobileKeyBag (2.0 - 1.0) <D5FA7041-297F-3ADC-8C7A-6EAAAB82EB68> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff549fc000 -     0x7fff54b92ffd  com.apple.Montreal (1.0 - 121.1) <E7881020-FCA6-3DFC-B0EB-9E539F80E821> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal
    0x7fff54b93000 -     0x7fff54bc3ff7  com.apple.MultitouchSupport.framework (3440.1 - 3440.1) <6794E1C8-9627-33DF-84F4-FDD02C97F383> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff54e43000 -     0x7fff54f2dffe  com.apple.NLP (1.0 - 202) <D657EC20-2475-3D89-9F80-03F1F04B0B89> /System/Library/PrivateFrameworks/NLP.framework/Versions/A/NLP
    0x7fff550c3000 -     0x7fff550cdfff  com.apple.NetAuth (6.2 - 6.2) <B0C03C41-87A3-352B-B130-96E1A6F94B47> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff5518f000 -     0x7fff551abff0  com.apple.network.statistics.framework (1.2 - 1) <B2F29251-A67A-36A9-B1E8-8652C59BADA1> /System/Library/PrivateFrameworks/NetworkStatistics.framework/Versions/A/NetworkStatistics
    0x7fff5583a000 -     0x7fff5583cffe  com.apple.OAuth (25 - 25) <7C2D9BA1-E683-3257-8ADB-A4846C8D42F2> /System/Library/PrivateFrameworks/OAuth.framework/Versions/A/OAuth
    0x7fff55ae4000 -     0x7fff55b2fffb  com.apple.OTSVG (1.0 - 643.1.5.5) <01218F85-C43B-37A0-B124-90D0FA342210> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG
    0x7fff56d4c000 -     0x7fff56d57ff2  com.apple.PerformanceAnalysis (1.243.3 - 243.3) <7B2C4193-68D7-3B95-ACA3-0FDD33A74D45> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff56d58000 -     0x7fff56d80ffb  com.apple.persistentconnection (1.0 - 1.0) <5B2D87A8-2641-3F6D-ACEA-96B00F85AAB5> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection
    0x7fff56d81000 -     0x7fff56d8fffe  com.apple.PersonaKit (1.0 - 1) <38A5F809-8A7E-355C-AED6-2923F7FF34D4> /System/Library/PrivateFrameworks/PersonaKit.framework/Versions/A/PersonaKit
    0x7fff56f39000 -     0x7fff56f39ffa  com.apple.PhoneNumbers (1.0 - 1) <8FC8870C-4F82-36F2-8456-A4A990E3F2A4> /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers
    0x7fff587fb000 -     0x7fff5882bff7  com.apple.pluginkit.framework (1.0 - 1) <EFBD7FE7-02CC-3E30-999D-B036F252F805> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit
    0x7fff58856000 -     0x7fff58869ffc  com.apple.PowerLog (1.0 - 1) <50B94781-D5BA-3F71-AFD4-583BD61F19F8> /System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog
    0x7fff594ef000 -     0x7fff5950fff1  com.apple.proactive.support.ProactiveEventTracker (1.0 - 258.5) <5F4988E6-45D7-31BE-9665-BBC3CBE790D3> /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/Versions/A/ProactiveEventTracker
    0x7fff59596000 -     0x7fff595ffff2  com.apple.proactive.support.ProactiveSupport (1.0 - 258.5) <82C04814-76A3-394E-AA5F-921E25402B6B> /System/Library/PrivateFrameworks/ProactiveSupport.framework/Versions/A/ProactiveSupport
    0x7fff596e5000 -     0x7fff5973fff6  com.apple.ProtectedCloudStorage (1.0 - 1) <6F271388-3817-336D-9B96-08C7AAC4BA39> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fff59740000 -     0x7fff59759ffb  com.apple.ProtocolBuffer (1 - 274.24.9.16.3) <5A020941-C43C-303E-8DE8-230FC6A84DBC> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff59793000 -     0x7fff59810fff  com.apple.Quagga (1.0 - 1) <BA80A025-9F81-3933-9224-833F371A4DDB> /System/Library/PrivateFrameworks/Quagga.framework/Versions/A/Quagga
    0x7fff5986b000 -     0x7fff5986eff4  com.apple.QuickLookNonBaseSystem (1.0 - 1) <8563CD18-DCFE-3868-912F-053FC8C34B9C> /System/Library/PrivateFrameworks/QuickLookNonBaseSystem.framework/Versions/A/QuickLookNonBaseSystem
    0x7fff5986f000 -     0x7fff59892ff0  com.apple.quicklook.QuickLookSupport (1.0 - 1) <AFB0DFCC-6580-30E5-8984-831985F37A2C> /System/Library/PrivateFrameworks/QuickLookSupport.framework/Versions/A/QuickLookSupport
    0x7fff598d9000 -     0x7fff59952ff3  com.apple.Rapport (1.9.5 - 195.2) <AF01D899-3BF9-3586-860A-D95A837101DF> /System/Library/PrivateFrameworks/Rapport.framework/Versions/A/Rapport
    0x7fff59bb9000 -     0x7fff59be2ff1  com.apple.RemoteViewServices (2.0 - 148) <D3AAC2BE-3423-3F18-9654-E35F1DD8DDB3> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff59c66000 -     0x7fff59cb0ffa  com.apple.ResponseKit (1.0 - 148.2) <32703B82-A948-3876-B46D-D86B60EF5076> /System/Library/PrivateFrameworks/ResponseKit.framework/Versions/A/ResponseKit
    0x7fff59d47000 -     0x7fff59d82ff0  com.apple.RunningBoardServices (1.0 - 223.140.2) <96BB04BD-D6E0-3D70-8F36-89B46DA1DA30> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices
    0x7fff5b663000 -     0x7fff5b666ff5  com.apple.SecCodeWrapper (4.0 - 448.100.6) <C4BF691D-A09E-37E8-A6CC-1145B79B8722> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fff5b7d9000 -     0x7fff5b900fff  com.apple.Sharing (1526.37 - 1526.37) <CBDA0ADD-F1E7-3B06-9118-C5E183F0D3D6> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff5b978000 -     0x7fff5b998ff5  com.apple.sidecar-core (1.0 - 209.40.4) <469E5222-A5C7-3B09-B617-EDB6E9E46B93> /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore
    0x7fff5b999000 -     0x7fff5b9abff0  com.apple.sidecar-ui (1.0 - 209.40.4) <5CA517E3-4B92-30B1-96EF-77A7A2FBBEE4> /System/Library/PrivateFrameworks/SidecarUI.framework/Versions/A/SidecarUI
    0x7fff5cd15000 -     0x7fff5d00bfff  com.apple.SkyLight (1.600.0 - 451.5) <8847E3D3-C246-3D2E-9D04-48BBD71FCEDC> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff5d858000 -     0x7fff5d866ffb  com.apple.SpeechRecognitionCore (6.0.91.2 - 6.0.91.2) <4D6CAC2A-151B-3BBE-BDB7-E2BE72128691> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff5d928000 -     0x7fff5dbb4ffe  com.apple.spotlight.index (10.7.0 - 2076.7) <932C7705-353B-395F-9A23-09D62EAFAD81> /System/Library/PrivateFrameworks/SpotlightIndex.framework/Versions/A/SpotlightIndex
    0x7fff5df42000 -     0x7fff5df83ff9  com.apple.StreamingZip (1.0 - 1) <72CA32F8-4C96-3264-A655-623329EB3A28> /System/Library/PrivateFrameworks/StreamingZip.framework/Versions/A/StreamingZip
    0x7fff5e09a000 -     0x7fff5e0a3ff7  com.apple.SymptomDiagnosticReporter (1.0 - 1238.120.2) <C3D66901-7E31-3FDB-BD7A-441EB0520D1D> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter
    0x7fff5e114000 -     0x7fff5e13effe  com.apple.framework.SystemAdministration (1.0 - 1.0) <087553CB-5BF3-3D3D-B620-CA36AD334D92> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration
    0x7fff5e35a000 -     0x7fff5e36aff3  com.apple.TCC (1.0 - 1) <C9EB52E3-099B-3597-9623-067C403FA525> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff5e711000 -     0x7fff5e86cff5  com.apple.TextRecognition (1.0 - 157) <24CFAE81-8D0D-39A8-A2F8-3BCFAA93DC1F> /System/Library/PrivateFrameworks/TextRecognition.framework/Versions/A/TextRecognition
    0x7fff5e88f000 -     0x7fff5e955ff0  com.apple.TextureIO (3.10.9 - 3.10.9) <EEDAB753-329A-396A-8119-5BEDF7DB5A56> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff5eaec000 -     0x7fff5eaedfff  com.apple.TrustEvaluationAgent (2.0 - 33) <10E56F70-E234-31E0-9286-96D93A8ED17E> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff5eb25000 -     0x7fff5ed7dff0  com.apple.UIFoundation (1.0 - 662) <EC55B9E5-7E62-380A-9AB1-FC7BEF663653> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff5ee14000 -     0x7fff5ee1affe  com.apple.URLFormatting (119 - 119.18) <7F99D166-86DC-3F77-A34A-2DA7183D7160> /System/Library/PrivateFrameworks/URLFormatting.framework/Versions/A/URLFormatting
    0x7fff5fa0c000 -     0x7fff5fa2cffc  com.apple.UserManagement (1.0 - 1) <9F00880E-6EA6-3684-B208-455E14EC07C8> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement
    0x7fff607d8000 -     0x7fff608c3ff2  com.apple.ViewBridge (468 - 468) <C02D0559-9C21-39C8-9E4B-E866CDBFD746> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff60a69000 -     0x7fff60a6afff  com.apple.WatchdogClient.framework (1.0 - 67.120.2) <FFA17DA1-F6DD-34D3-A708-1F73C8BA7EA7> /System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient
    0x7fff60df9000 -     0x7fff60e34fff  libAWDSupport.dylib (949) <EBE20139-E443-30DF-BCAD-2A6A8470F631> /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupport.dylib
    0x7fff60e35000 -     0x7fff61115ff7  libAWDSupportFramework.dylib (3541.2) <D1EA2A4B-BC59-3FE2-BAA9-4448D6F8393F> /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libAWDSupportFramework.dylib
    0x7fff61116000 -     0x7fff61127fff  libprotobuf-lite.dylib (3541.2) <578CA7D8-149E-3643-937B-DAD5501E4575> /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libprotobuf-lite.dylib
    0x7fff61128000 -     0x7fff61181ffb  libprotobuf.dylib (3541.2) <0CDB164D-E7C3-3D4F-BF11-47402D67D7B0> /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/Libraries/libprotobuf.dylib
    0x7fff61182000 -     0x7fff611c6ff6  com.apple.awd (1.0 - 949) <9DA8A821-4354-3E24-BAA1-4519D2279F2B> /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/Versions/A/WirelessDiagnostics
    0x7fff6169a000 -     0x7fff6169dffa  com.apple.dt.XCTTargetBootstrap (1.0 - 16091) <D459D628-58C5-39A6-B7E8-B691CBEECEC1> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap
    0x7fff61717000 -     0x7fff61725ff5  com.apple.audio.caulk (1.0 - 32.3) <06D695EA-E2BC-31E4-9816-9C12542BA744> /System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk
    0x7fff618ed000 -     0x7fff61922ffe  com.apple.iCalendar (7.0 - 810.6.1) <21E0DCF2-0B67-3E0C-8D4E-3A81CAB1964E> /System/Library/PrivateFrameworks/iCalendar.framework/Versions/A/iCalendar
    0x7fff61a67000 -     0x7fff61a69ff3  com.apple.loginsupport (1.0 - 1) <12F77885-27DC-3837-9CE9-A25EBA75F833> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff61a6a000 -     0x7fff61a7dffd  com.apple.login (3.0 - 3.0) <C68367BA-2225-31DD-B2D8-16AC0A44421F> /System/Library/PrivateFrameworks/login.framework/Versions/A/login
    0x7fff61aaf000 -     0x7fff61abbffd  com.apple.perfdata (1.0 - 51.100.6) <21760CFD-62FF-3466-B3AD-191D02411DA0> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata
    0x7fff61abc000 -     0x7fff61aedffd  com.apple.contacts.vCard (1.0 - 3455.18) <2662D17A-7BC0-39FF-8550-8AEDF548AAB8> /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard
    0x7fff64540000 -     0x7fff6454cff9  libAudioStatistics.dylib (1104.97) <910E0D16-7267-3B47-81F6-1420864A316C> /usr/lib/libAudioStatistics.dylib
    0x7fff6454d000 -     0x7fff64580ffa  libAudioToolboxUtility.dylib (1104.97) <8B76C584-A8B0-3599-A7D4-8BD75A11FEFF> /usr/lib/libAudioToolboxUtility.dylib
    0x7fff64587000 -     0x7fff645bbfff  libCRFSuite.dylib (48) <5E5DE3CB-30DD-34DC-AEF8-FE8536A85E96> /usr/lib/libCRFSuite.dylib
    0x7fff645be000 -     0x7fff645c8fff  libChineseTokenizer.dylib (34) <7F0DA183-1796-315A-B44A-2C234C7C50BE> /usr/lib/libChineseTokenizer.dylib
    0x7fff645c9000 -     0x7fff64651fff  libCoreStorage.dylib (551) <A457B0FE-D77F-30AA-99A4-70F6A98DFE59> /usr/lib/libCoreStorage.dylib
    0x7fff64654000 -     0x7fff64656ff7  libDiagnosticMessagesClient.dylib (112) <C94F3B7B-1854-38EB-9778-834501C53B3F> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff6469c000 -     0x7fff64853ffb  libFosl_dynamic.dylib (100.4) <737573B2-190A-3BA1-8220-807AD0A2CE5E> /usr/lib/libFosl_dynamic.dylib
    0x7fff6487a000 -     0x7fff64880ff3  libIOReport.dylib (54) <75D177C4-BAD7-3285-B8E1-3019F49B3178> /usr/lib/libIOReport.dylib
    0x7fff64962000 -     0x7fff64969fff  libMatch.1.dylib (36) <5C6F3971-9D9E-3630-BDB6-60BFC5A665E0> /usr/lib/libMatch.1.dylib
    0x7fff64998000 -     0x7fff649b8ff7  libMobileGestalt.dylib (826.140.5) <2BE94E6A-FA61-312F-84A1-F764D71B7E39> /usr/lib/libMobileGestalt.dylib
    0x7fff64a38000 -     0x7fff64b15ff7  libSMC.dylib (20) <5C9C17F2-1E6F-3A19-A440-86F74D82284F> /usr/lib/libSMC.dylib
    0x7fff64b2a000 -     0x7fff64b2bfff  libSystem.B.dylib (1281.100.1) <79E1F5B4-8B47-3718-A611-F9D14F3FB537> /usr/lib/libSystem.B.dylib
    0x7fff64b2c000 -     0x7fff64bb7ff7  libTelephonyUtilDynamic.dylib (5017.1) <174030B2-E35F-3F17-A9EF-DF8631F30CCF> /usr/lib/libTelephonyUtilDynamic.dylib
    0x7fff64bb8000 -     0x7fff64bb9fff  libThaiTokenizer.dylib (3) <4F4ADE99-0D09-3223-B7C0-C407AB6DE8DC> /usr/lib/libThaiTokenizer.dylib
    0x7fff64bd1000 -     0x7fff64be7fff  libapple_nghttp2.dylib (1.39.2) <07FEC48A-87CF-32A3-8194-FA70B361713A> /usr/lib/libapple_nghttp2.dylib
    0x7fff64c1c000 -     0x7fff64c8eff7  libarchive.2.dylib (72.140.2) <F9EA2883-5D5C-3FA6-B3F8-C5031BF88ABD> /usr/lib/libarchive.2.dylib
    0x7fff64c8f000 -     0x7fff64d28fe5  libate.dylib (3.0.1) <76EA60FB-748C-313F-8951-B076540BEA97> /usr/lib/libate.dylib
    0x7fff64d2c000 -     0x7fff64d2cff3  libauto.dylib (187) <B6124448-7690-34AE-8939-ED84AAC630CE> /usr/lib/libauto.dylib
    0x7fff64d2d000 -     0x7fff64df1ffe  libboringssl.dylib (283.120.1) <935DDB00-6514-3D0C-AEA5-C5FE6BCC0B61> /usr/lib/libboringssl.dylib
    0x7fff64df2000 -     0x7fff64e02ffb  libbsm.0.dylib (60.100.1) <00BFFB9A-2FFE-3C24-896A-251BC61917FD> /usr/lib/libbsm.0.dylib
    0x7fff64e03000 -     0x7fff64e0ffff  libbz2.1.0.dylib (44) <14CC4988-B6D4-3879-AFC2-9A0DDC6388DE> /usr/lib/libbz2.1.0.dylib
    0x7fff64e10000 -     0x7fff64e62fff  libc++.1.dylib (902.1) <59A8239F-C28A-3B59-B8FA-11340DC85EDC> /usr/lib/libc++.1.dylib
    0x7fff64e63000 -     0x7fff64e78ffb  libc++abi.dylib (902) <E692F14F-C65E-303B-9921-BB7E97D77855> /usr/lib/libc++abi.dylib
    0x7fff64e79000 -     0x7fff64e79fff  libcharset.1.dylib (59) <72447768-9244-39AB-8E79-2FA14EC0AD33> /usr/lib/libcharset.1.dylib
    0x7fff64e7a000 -     0x7fff64e8bfff  libcmph.dylib (8) <E72A20DB-2E86-378D-A237-EB9A1370F989> /usr/lib/libcmph.dylib
    0x7fff64e8c000 -     0x7fff64ea3fd7  libcompression.dylib (87) <64C91066-586D-38C0-A2F3-3E60A940F859> /usr/lib/libcompression.dylib
    0x7fff6517d000 -     0x7fff65193ff7  libcoretls.dylib (167) <770A5B96-936E-34E3-B006-B1CEC299B5A5> /usr/lib/libcoretls.dylib
    0x7fff65194000 -     0x7fff65195fff  libcoretls_cfhelpers.dylib (167) <940BF370-FD0C-30A8-AA05-FF48DA44FA4C> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff65638000 -     0x7fff6573cfef  libcrypto.44.dylib (47.140.1) <CB6B188A-1ADC-3C5D-AFFC-2ACD86E235EE> /usr/lib/libcrypto.44.dylib
    0x7fff6573f000 -     0x7fff6574afff  libcsfde.dylib (551) <CEE22AEF-4E77-36B1-B007-00303819965F> /usr/lib/libcsfde.dylib
    0x7fff65752000 -     0x7fff657b1ff7  libcups.2.dylib (483.7) <821ED293-B7B3-3B37-88C9-7B6CA91DA7FA> /usr/lib/libcups.2.dylib
    0x7fff657b3000 -     0x7fff65818ff7  libcurl.4.dylib (118.120.5) <854B4C52-1E58-3A61-A73D-431C5C65D8F9> /usr/lib/libcurl.4.dylib
    0x7fff658bb000 -     0x7fff658bbfff  libenergytrace.dylib (21) <162DFCC0-8F48-3DD0-914F-FA8653E27B26> /usr/lib/libenergytrace.dylib
    0x7fff658bc000 -     0x7fff658d4fff  libexpat.1.dylib (19.60.2) <FED7C38B-92D8-342D-AED7-871B12D1F7E7> /usr/lib/libexpat.1.dylib
    0x7fff658e2000 -     0x7fff658e4fff  libfakelink.dylib (149.1) <36146CB2-E6A5-37BB-9EE8-1B4034D8F3AD> /usr/lib/libfakelink.dylib
    0x7fff658f3000 -     0x7fff658f8fff  libgermantok.dylib (24) <D2AE5AC0-EDCE-3216-B8C9-CF59292A545F> /usr/lib/libgermantok.dylib
    0x7fff658f9000 -     0x7fff65902ff7  libheimdal-asn1.dylib (564.140.2) <F42CB310-DA54-3EF9-BFE3-0667E14E0133> /usr/lib/libheimdal-asn1.dylib
    0x7fff65903000 -     0x7fff659f3fff  libiconv.2.dylib (59) <18311A67-E4EF-3CC7-95B3-C0EDEE3A282F> /usr/lib/libiconv.2.dylib
    0x7fff659f4000 -     0x7fff65c4bfff  libicucore.A.dylib (64260.0.1) <8AC2CB07-E7E0-340D-A849-186FA1F27251> /usr/lib/libicucore.A.dylib
    0x7fff65c65000 -     0x7fff65c66fff  liblangid.dylib (133) <30CFC08C-EF36-3CF5-8AEA-C1CB070306B7> /usr/lib/liblangid.dylib
    0x7fff65c67000 -     0x7fff65c7fff3  liblzma.5.dylib (16) <C131EF18-2CDD-3271-8A30-A8760D4FE166> /usr/lib/liblzma.5.dylib
    0x7fff65c97000 -     0x7fff65d3eff7  libmecab.dylib (883.11) <0D5BFD01-D4A7-3C8D-AA69-C329C1A69792> /usr/lib/libmecab.dylib
    0x7fff65d3f000 -     0x7fff65fa1ff1  libmecabra.dylib (883.11) <E31DE74D-1B88-377F-ACD3-D789D29C3AE7> /usr/lib/libmecabra.dylib
    0x7fff6630e000 -     0x7fff6633dfff  libncurses.5.4.dylib (57) <995DFEEA-40F3-377F-B73D-D02AC59D591F> /usr/lib/libncurses.5.4.dylib
    0x7fff6646d000 -     0x7fff668e9ff5  libnetwork.dylib (1880.120.4) <BA294A54-F309-398D-B308-F97032AFF555> /usr/lib/libnetwork.dylib
    0x7fff668ea000 -     0x7fff66901fff  libnetworkextension.dylib (1095.140.2) <D0E8454C-33A9-3F96-B3A0-EDB12C32283A> /usr/lib/libnetworkextension.dylib
    0x7fff6698a000 -     0x7fff669bdfde  libobjc.A.dylib (787.1) <6DF81160-5E7F-3E31-AA1E-C875E3B98AF6> /usr/lib/libobjc.A.dylib
    0x7fff669be000 -     0x7fff669bfff7  libodfde.dylib (26) <33F49412-5106-35B8-AA60-5A497C3967E6> /usr/lib/libodfde.dylib
    0x7fff669d0000 -     0x7fff669d4fff  libpam.2.dylib (25.100.1) <0502F395-8EE6-3D2A-9239-06FD5622E19E> /usr/lib/libpam.2.dylib
    0x7fff669d7000 -     0x7fff66a0dfff  libpcap.A.dylib (89.120.2) <86DAA475-805A-3E01-86C5-6CAE4D1D9BC6> /usr/lib/libpcap.A.dylib
    0x7fff66a4d000 -     0x7fff66a5bff9  libperfcheck.dylib (37.100.2) <9D9C4879-8A80-34C4-B0D2-BE341FD6D321> /usr/lib/libperfcheck.dylib
    0x7fff66a5c000 -     0x7fff66a5fff3  libpmenergy.dylib (214.120.1) <B33FB1C8-EACB-39C5-9B71-283EAB72E7E2> /usr/lib/libpmenergy.dylib
    0x7fff66a60000 -     0x7fff66a62fff  libpmsample.dylib (214.120.1) <F12D8EE0-9284-3E57-AE73-414266E11586> /usr/lib/libpmsample.dylib
    0x7fff66a91000 -     0x7fff66aa9fff  libresolv.9.dylib (67.40.1) <C57EDFEF-D36A-310B-8D14-8C68A625B1E8> /usr/lib/libresolv.9.dylib
    0x7fff66aab000 -     0x7fff66aefff7  libsandbox.1.dylib (1217.141.2) <E8BA5E84-66AF-3995-8F8E-DDC93B0A88E1> /usr/lib/libsandbox.1.dylib
    0x7fff66af0000 -     0x7fff66b02ff7  libsasl2.2.dylib (213.120.1) <E7573AC1-83FD-305A-8FB8-03145BDA286B> /usr/lib/libsasl2.2.dylib
    0x7fff66b03000 -     0x7fff66b04ff7  libspindump.dylib (281.3) <AE8C1AE9-5CBC-332F-BBE8-370A2A19FED6> /usr/lib/libspindump.dylib
    0x7fff66b05000 -     0x7fff66cefff7  libsqlite3.dylib (308.6) <33057143-AB4E-348B-9650-98BC48866F34> /usr/lib/libsqlite3.dylib
    0x7fff66de3000 -     0x7fff66e10ffb  libssl.46.dylib (47.140.1) <06932872-13DA-33E3-8C28-7B49FC582039> /usr/lib/libssl.46.dylib
    0x7fff66e92000 -     0x7fff66ec3ff7  libtidy.A.dylib (17.2) <41B15FFB-6FD2-3E1B-A1F8-E6B12EF3C1EE> /usr/lib/libtidy.A.dylib
    0x7fff66ee5000 -     0x7fff66f3fff8  libusrtcp.dylib (1880.120.4) <05346A91-737C-33D0-B21B-F040950DFB28> /usr/lib/libusrtcp.dylib
    0x7fff66f40000 -     0x7fff66f43ffb  libutil.dylib (57) <F01467F6-23A7-37EE-A170-33CE1577B41D> /usr/lib/libutil.dylib
    0x7fff66f44000 -     0x7fff66f51ff7  libxar.1.dylib (425.2) <EE964412-9E25-30B3-BCC0-CCEFBCC8094B> /usr/lib/libxar.1.dylib
    0x7fff66f57000 -     0x7fff67039fff  libxml2.2.dylib (33.8) <FE38B007-24AF-310D-B834-2C9466154CEC> /usr/lib/libxml2.2.dylib
    0x7fff6703d000 -     0x7fff67065fff  libxslt.1.dylib (16.11) <B2F38A15-4D4A-30F9-9660-F5738DE14BC2> /usr/lib/libxslt.1.dylib
    0x7fff67066000 -     0x7fff67078ff3  libz.1.dylib (76) <793D9643-CD83-3AAC-8B96-88D548FAB620> /usr/lib/libz.1.dylib
    0x7fff67927000 -     0x7fff6792cff3  libcache.dylib (83) <AF488D13-9E89-35E0-B078-BE37CC5B8586> /usr/lib/system/libcache.dylib
    0x7fff6792d000 -     0x7fff67938fff  libcommonCrypto.dylib (60165.120.1) <C7912BE5-993E-3581-B2A0-6AABDC8C5562> /usr/lib/system/libcommonCrypto.dylib
    0x7fff67939000 -     0x7fff67940fff  libcompiler_rt.dylib (101.2) <49B8F644-5705-3F16-BBE0-6FFF9B17C36E> /usr/lib/system/libcompiler_rt.dylib
    0x7fff67941000 -     0x7fff6794aff7  libcopyfile.dylib (166.40.1) <3C481225-21E7-370A-A30E-0CCFDD64A92C> /usr/lib/system/libcopyfile.dylib
    0x7fff6794b000 -     0x7fff679ddfdb  libcorecrypto.dylib (866.140.2) <C2CFE656-BFA7-36E0-B8BB-1579F51AB6CF> /usr/lib/system/libcorecrypto.dylib
    0x7fff67aea000 -     0x7fff67b2aff0  libdispatch.dylib (1173.100.2) <CD9C059C-91D9-30E8-8926-5B9CD0D5D4F5> /usr/lib/system/libdispatch.dylib
    0x7fff67b2b000 -     0x7fff67b61fff  libdyld.dylib (750.6) <789A18C2-8AC7-3C88-813D-CD674376585D> /usr/lib/system/libdyld.dylib
    0x7fff67b62000 -     0x7fff67b62ffb  libkeymgr.dylib (30) <DB3337BE-01CA-3425-BD0C-87774FC0CDC0> /usr/lib/system/libkeymgr.dylib
    0x7fff67b63000 -     0x7fff67b6fff3  libkxld.dylib (6153.141.28.1) <D0CD88A4-D750-384C-AEF4-463BE5D606B1> /usr/lib/system/libkxld.dylib
    0x7fff67b70000 -     0x7fff67b70ff7  liblaunch.dylib (1738.140.3) <0A07A8E8-EDA1-30C7-9414-0FCC070A45D8> /usr/lib/system/liblaunch.dylib
    0x7fff67b71000 -     0x7fff67b76ff7  libmacho.dylib (959.0.1) <AA613A9C-961A-3B67-B696-4622FA59FC4E> /usr/lib/system/libmacho.dylib
    0x7fff67b77000 -     0x7fff67b79ff3  libquarantine.dylib (110.40.3) <F234E51D-FD0B-3EE4-B679-AE3EE9C536C3> /usr/lib/system/libquarantine.dylib
    0x7fff67b7a000 -     0x7fff67b7bff7  libremovefile.dylib (48) <7C7EFC79-BD24-33EF-B073-06AED234593E> /usr/lib/system/libremovefile.dylib
    0x7fff67b7c000 -     0x7fff67b93ff3  libsystem_asl.dylib (377.60.2) <1563EE02-0657-3B78-99BE-A947C24122EF> /usr/lib/system/libsystem_asl.dylib
    0x7fff67b94000 -     0x7fff67b94ff7  libsystem_blocks.dylib (74) <0D53847E-AF5F-3ACF-B51F-A15DEA4DEC58> /usr/lib/system/libsystem_blocks.dylib
    0x7fff67b95000 -     0x7fff67c1cfff  libsystem_c.dylib (1353.100.2) <BBDED5E6-A646-3EED-B33A-91E4331EA063> /usr/lib/system/libsystem_c.dylib
    0x7fff67c1d000 -     0x7fff67c20ffb  libsystem_configuration.dylib (1061.141.1) <0EE84C33-64FD-372B-974A-AF7A136F2068> /usr/lib/system/libsystem_configuration.dylib
    0x7fff67c21000 -     0x7fff67c24fff  libsystem_coreservices.dylib (114) <A199156E-058D-3ABB-BCE9-4B9F20DCED0F> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff67c25000 -     0x7fff67c2dfff  libsystem_darwin.dylib (1353.100.2) <5B12B5DB-3F30-37C1-8ECC-49A66B1F2864> /usr/lib/system/libsystem_darwin.dylib
    0x7fff67c2e000 -     0x7fff67c35fff  libsystem_dnssd.dylib (1096.100.3) <EBB4C2C2-E031-3094-B40A-E67BF261D295> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff67c36000 -     0x7fff67c37ffb  libsystem_featureflags.dylib (17) <29FD922A-EC2C-3F25-BCCC-B58D716E60EC> /usr/lib/system/libsystem_featureflags.dylib
    0x7fff67c38000 -     0x7fff67c85ff7  libsystem_info.dylib (538) <8A321605-5480-330B-AF9E-64E65DE61747> /usr/lib/system/libsystem_info.dylib
    0x7fff67c86000 -     0x7fff67cb2ff7  libsystem_kernel.dylib (6153.141.28.1) <B3DC3FBB-4304-338C-A1E0-CAAFA78CDE2B> /usr/lib/system/libsystem_kernel.dylib
    0x7fff67cb3000 -     0x7fff67cfafff  libsystem_m.dylib (3178) <00F331F1-0D09-39B3-8736-1FE90E64E903> /usr/lib/system/libsystem_m.dylib
    0x7fff67cfb000 -     0x7fff67d22fff  libsystem_malloc.dylib (283.100.6) <8549294E-4C53-36EB-99F3-584A7393D8D5> /usr/lib/system/libsystem_malloc.dylib
    0x7fff67d23000 -     0x7fff67d30ffb  libsystem_networkextension.dylib (1095.140.2) <F06C65C5-2CBE-313C-96E1-A09240F9FE57> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff67d31000 -     0x7fff67d3aff7  libsystem_notify.dylib (241.100.2) <FA22F928-D91B-3AA5-96BB-3186AC0FB264> /usr/lib/system/libsystem_notify.dylib
    0x7fff67d3b000 -     0x7fff67d43fef  libsystem_platform.dylib (220.100.1) <009A7C1F-313A-318E-B9F2-30F4C06FEA5C> /usr/lib/system/libsystem_platform.dylib
    0x7fff67d44000 -     0x7fff67d4efff  libsystem_pthread.dylib (416.100.3) <62CB1A98-0B8F-31E7-A02B-A1139927F61D> /usr/lib/system/libsystem_pthread.dylib
    0x7fff67d4f000 -     0x7fff67d53ff3  libsystem_sandbox.dylib (1217.141.2) <051C4018-4345-3034-AC98-6DE42FB8273B> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff67d54000 -     0x7fff67d56fff  libsystem_secinit.dylib (62.100.2) <F80872AA-E1FD-3D7E-8729-467656EC6561> /usr/lib/system/libsystem_secinit.dylib
    0x7fff67d57000 -     0x7fff67d5effb  libsystem_symptoms.dylib (1238.120.2) <702D0910-5C34-3D43-9631-8BD215DE4FE1> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff67d5f000 -     0x7fff67d75ff2  libsystem_trace.dylib (1147.120.1) <BC141783-66D9-3137-A783-211B38E49ADB> /usr/lib/system/libsystem_trace.dylib
    0x7fff67d77000 -     0x7fff67d7cff7  libunwind.dylib (35.4) <42B7B509-BAFE-365B-893A-72414C92F5BF> /usr/lib/system/libunwind.dylib
    0x7fff67d7d000 -     0x7fff67db2ffe  libxpc.dylib (1738.140.3) <A3F5B6A0-DD96-3AC2-B610-F62E242F477C> /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 2
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 33609034
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=826.6M resident=0K(0%) swapped_out_or_unallocated=826.6M(100%)
Writable regions: Total=1.8G written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=1.8G(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Accelerate framework               768K        6 
Activity Tracing                   256K        1 
CG backing stores                 3272K        6 
CG image                          8320K        5 
CoreAnimation                      380K       11 
CoreGraphics                         8K        1 
CoreImage                           32K        4 
CoreServices                        92K        1 
CoreUI image data                 1236K       10 
Dispatch continuations            40.0M        1 
Foundation                          28K        2 
IOKit                             23.3M        3 
Kernel Alloc Once                    8K        1 
MALLOC                           213.7M       84 
MALLOC guard page                   48K        9 
MALLOC_MEDIUM (reserved)           1.3G       11         reserved VM address space (unallocated)
Mach message                        32K        5 
Memory Tag 255                     4.0G       18 
STACK GUARD                       56.2M       51 
Stack                            234.9M       51 
VM_ALLOCATE                       6896K       33 
__DATA                            56.3M      448 
__DATA_CONST                        20K        1 
__FONT_DATA                          4K        1 
__LINKEDIT                       391.0M       10 
__OBJC_RO                         32.3M        1 
__OBJC_RW                         1908K        2 
__TEXT                           435.6M      435 
__UNICODE                          564K        1 
mapped file                       86.5M       34 
shared memory                      640K       14 
===========                     =======  ======= 
TOTAL                              6.8G     1261 
TOTAL, minus reserved VM space     5.6G     1261 
</pre>
</details>

At first I thought this is the same issue as #25983 but it seems a different issue as far as looking at stacktrace.

Note that replacing `app.exit` with `app.quit` can avoid this crash at [this line](https://github.com/rhysd/tweet-app/blob/ef03e5311c1ee5e29750f730daa934cacb0adc03/main/index.ts#L65).",codebytere,platform/macOS;bug :beetle:;12-x-y;13-x-y;14-x-y;stale,2021-05-20T10:55:25Z,2022-10-06T12:54:29Z,rhysd,nornagon;rhysd;codebytere,rhysd;codebytere,,codebytere,,codebytere,
electron/electron,29326,"[Bug]: PDF viewer displays blank pages on Windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 20H2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

PDF viewer should display content of the PDF file.

### Actual Behavior

![image](https://user-images.githubusercontent.com/617641/119561748-dc682b80-bda5-11eb-8a4a-66a96cc3e6a8.png)

All PDFs are affected.

Interestingly PDF viewer displays number of pages correctly so it seems to read the PDF file, but then fails to render it.

There does not seem to be anything of interest in the console.

This bug seems to affect Windows specifically, on Ubuntu the PDFs are rendered correctly.

### Testcase Gist URL

_No response_

### Additional Information

_No response_",VerteDinde,platform/windows;bug :beetle:;component/pdf-viewer;has-repro-gist;13-x-y;14-x-y,2021-05-25T20:11:11Z,2021-06-22T03:46:54Z,zadam,ailin92;Simolation;KasperSommer;VerteDinde;webdevmario,zadam;VerteDinde;nornagon,,VerteDinde,,VerteDinde,
electron/electron,29334,"[Bug]:  Print options not work when silent true ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.x

### What operating system are you using?

Other (specify below)

### Operating System Version

both in win and mac

### What arch are you using?

x64

### Last Known Working Electron version

11.4.3

### Expected Behavior

print options
``` 
{
  silent: true,
  deviceName: 'actual printer name',
  landscape: true,
  copies: 2,
  pageRanges: [{from: 1, to: 1}],
  pageSize: 'A5'
}
``` 

all of the options would be honored when silent true

### Actual Behavior

all of the options above not honored

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/windows;platform/macOS;bug :beetle:;12-x-y,2021-05-26T09:40:08Z,2021-10-25T15:52:53Z,sunchanglong,sunchanglong;Linbubin;pushkin-;k2s;Hedwig188,sunchanglong;sofianguy,,codebytere,,jkleinsc,
electron/electron,29335,"[Bug]: Electron 13 crashes when running on system with intel 11th generation cpu (cetcompat) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0

### What operating system are you using?

Windows

### Operating System Version

19042.985

### What arch are you using?

x64

### Last Known Working Electron version

12

### Expected Behavior

no crash

### Actual Behavior

I have not yet managed to create a reproducable example since the app code is quite large and the crash seems to happen randomly based on what gets executed. (I.e. there is a function that compares 2 objects, executing that 66 times will eventually lead to a crash, but only executing it 65 times does not lead to the crash)
This is happening because Chrome introduced CET support https://bugs.chromium.org/p/chromium/issues/detail?id=1131225
when disabling it on the machine the crash does not happen.
Also more info on CET here: https://www.offensive-security.com/offsec/intel-cet-in-action/
Note that this is only happening when using a supported CPU and newer windows version.
Considering that there is only javascript code running from the app side I do not see how this could be an issue within the app code at all. So this is likely on the electron side.
Since electron is anyway building from chrome source I would recommend disabling the flag.
See: https://chromium.googlesource.com/chromium/src/+/ea32df5c92d67c4c8c3cfffb2fd6ee2609da04f0/build/config/compiler/compiler.gni
`enable_cet_shadow_stack = target_cpu == ""x64""`
The only workaround I see at the moment is to use x32 builds of electron

### Testcase Gist URL

_No response_

### Additional Information
Also see: https://github.com/electron/electron/issues/29160#issuecomment-848065956",VerteDinde,bug :beetle:;13-x-y;14-x-y,2021-05-26T11:26:03Z,2021-06-04T17:51:55Z,t57ser,t57ser;VerteDinde;MarshallOfSound;vladimiry,t57ser;VerteDinde,,MarshallOfSound,,MarshallOfSound,electron/electron#29160;
electron/electron,29340,"[Bug]: app.getPath('logs') points to the wrong directory ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When not setting any path manually `app.getPath('logs')` returns the actual path used for logging, which includes only one `<appname>`
* Windows - `C:\Users\<user>\AppData\Roaming\<appname>\logs`
* Linux - `/home/<user>/.config/<appname>/logs`




### Actual Behavior

When not setting any path manually `app.getPath('logs')` returns the path used for logging, but contains `<appname>` twice.
* Windows - `C:\Users\<user>\AppData\Roaming\<appname>\<appname>\logs`
* Linux - `/home/<user>/.config/<appname>/<appname>/logs`



### Testcase Gist URL

_No response_

### Additional Information

I tested this under Windows 10, as well as Ubuntu 20.04 and 21.04 using electron 10.1.3 and 13.0.1.
",nornagon,bug :beetle:;status/confirmed;blocked/need-repro;13-x-y;14-x-y,2021-05-26T16:33:15Z,2021-06-15T00:32:57Z,meidlinga,,meidlinga;VerteDinde;nornagon,,nornagon,,zcbenz,
electron/electron,29343,"[Bug]: Geolocation crashes 13.0.1 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

macOS

### Operating System Version

11.4

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

12.0.7

### Expected Behavior

Electron shouldn't crash.

### Actual Behavior

Electron crashes.

### Testcase Gist URL

https://gist.github.com/omarkilani/f0c264e278b04575a381d1eadc930514

### Additional Information

Electron 13.x crashes on any geolocation use. Backtrace attached.",MarshallOfSound,platform/macOS;bug :beetle:;has-repro-gist;13-x-y;14-x-y,2021-05-26T17:36:56Z,2021-06-29T03:26:58Z,omarkilani,omarkilani;andrewpaprotsky;MarshallOfSound;TheCleric;Eneris;xssc;d4kris;dsanders11;hvaoc,omarkilani;VerteDinde,,,,deepak1556,
electron/electron,29366,"[Bug]: navigator.serial.getPorts() returns an empty list if device is unplugged and replugged ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.7

### What operating system are you using?

Ubuntu

### Operating System Version

5.4.0-73-generic #82~18.04.1-Ubuntu

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

`const existingPermissions = await navigator.serial.getPorts();` should return a list of serial ports for which permission has already been granted, even when a device has been unplugged and plugged back in again.

### Actual Behavior

The list is empty, even when the same code works in the browser (Chromium v90.0.4430.93).

### Testcase Gist URL

https://gist.github.com/gniezen/34950a5fa84dcf000e2b55a8d599ecd6

### Additional Information

To reproduce using gist:

- Replace `usbVendorId` and `usbProductId` with that of your test device.
- Click the `Connect` button. It should show up in the port list on the main console.
- Click the `Get Ports` button. It should show the existing permission in the developer console.
- Unplug and re-plug the device.
- Click the `Get Ports` button. It should show the existing permissions, but returns an empty list.",jkleinsc,platform/linux;bug :beetle:;has-repro-gist;12-x-y,2021-05-27T14:18:36Z,2021-07-26T17:10:57Z,gniezen,gniezen;nornagon;jkleinsc,gniezen;jkleinsc;sofianguy,,jkleinsc,,jkleinsc,
electron/electron,29458,"[Bug]: Black Video When getUserMedia with chromeMediaSourceId === window.getMediaSourceId() ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

macOS

### Operating System Version

macos BigSur 11.4 

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

12.0.9

### Expected Behavior

I'm using this function to capture my window (window which start app), it work ok on Windows (same electron version) but not working on mac
```js
 await navigator.mediaDevices.getUserMedia({
    video: {
      mandatory: {
        chromeMediaSource: 'desktop',
        chromeMediaSourceId: sourceId,
      },
    })
```
`sourceId` value === `window.getMediaSourceId()`

### Actual Behavior

Black video

### Testcase Gist URL

_No response_

### Additional Information

_No response_",VerteDinde,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;13-x-y;14-x-y,2021-06-01T11:31:54Z,2021-08-13T20:23:56Z,phanmn,nornagon;phanmn;VerteDinde,phanmn;VerteDinde,sofianguy,VerteDinde,,VerteDinde,
electron/electron,29459,"[Bug]: Electron window overlap input method candidate popup in macOS when setAlwaysOnTop(true, 'screen-saver') ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

all version

### What operating system are you using?

macOS

### Operating System Version

11.3

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Show the input candidate popup above the Electron app window.

### Actual Behavior

Show the input candidate popup below the Electron app window, 
<img width=""1028"" alt=""閹寸仦2021-06-01 娑撳宕8 24 26"" src=""https://user-images.githubusercontent.com/1138688/120322828-6caeef00-c317-11eb-86f5-ce240c1f20c2.png"">
Try to build a macOS native app, and set the NSWindow.level = NSWindow.Level.screenSaver, the candidate popup show correct
<img width=""590"" alt=""閹寸仦2021-06-01 娑撳宕8 25 45"" src=""https://user-images.githubusercontent.com/1138688/120322970-9405bc00-c317-11eb-8052-5b5b58eeb5ce.png"">


### Testcase Gist URL

https://gist.github.com/f4d58e47448eea5e67a09cdb6b3434c4

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;13-x-y;14-x-y;stale,2021-06-01T12:26:10Z,2022-11-06T02:20:12Z,TangKe,codebytere;TangKe;nornagon,TangKe;codebytere,codebytere,codebytere,,nornagon,
electron/electron,29463,"Microtasks policy incorrect, leading to DCHECK, when calling `window.open` from `setImmediate` To repro, run this fiddle under a debug build: https://gist.github.com/b72948eafa5a2f61acf9f4718ff09259

```
#
# Fatal error in ../../v8/src/api/api-inl.h, line 183
# Debug check failed: microtask_queue->GetMicrotasksScopeDepth() || !microtask_queue->DebugMicrotasksScopeDepthIsZero().
#
#
#
#FailureMessage Object: 0x7ffeebb54620
0   Electron Framework                  0x000000010c472bb9 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x000000010c38e243 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x000000010e820ffd gin::(anonymous namespace)::PrintStackTrace() + 45
3   Electron Framework                  0x000000010e1f7136 V8_Fatal(char const*, int, char const*, ...) + 326
4   Electron Framework                  0x000000010e1f6b15 v8::base::(anonymous namespace)::DefaultDcheckHandler(char const*, int, char const*) + 21
5   Electron Framework                  0x0000000109695f11 v8::CallDepthScope<true>::~CallDepthScope() + 865
6   Electron Framework                  0x0000000109653283 v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 835
7   Electron Framework                  0x00000001118657e2 node::InternalMakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context) + 738
8   Electron Framework                  0x0000000111865aab node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context) + 187
9   Electron Framework                  0x00000001118aebf5 node::Environment::CheckImmediate(uv_check_s*) + 181
10  Electron Framework                  0x0000000107c458ad uv__run_check + 157
11  Electron Framework                  0x0000000107c3f7e1 uv_run + 369
12  Electron Framework                  0x0000000107e0964c electron::NodeBindings::UvRunOnce() + 348
13  Electron Framework                  0x0000000107e0ae04 base::internal::Invoker<base::internal::BindState<void (electron::NodeBindings::*)(), base::WeakPtr<electron::NodeBindings> >, void ()>::RunOnce(base::internal::BindStateBase*) + 148
14  Electron Framework                  0x000000010c40a190 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 400
15  Electron Framework                  0x000000010c42e292 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) + 994
16  Electron Framework                  0x000000010c42dab8 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 88
17  Electron Framework                  0x000000010c489d71 base::MessagePumpCFRunLoopBase::RunWork() + 65
18  Electron Framework                  0x000000010c4829a2 base::mac::CallWithEHFrame(void () block_pointer) + 10
19  Electron Framework                  0x000000010c48979f base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63
20  CoreFoundation                      0x00007fff2f446832 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
21  CoreFoundation                      0x00007fff2f4467d1 __CFRunLoopDoSource0 + 103
22  CoreFoundation                      0x00007fff2f4465eb __CFRunLoopDoSources0 + 209
23  CoreFoundation                      0x00007fff2f44531a __CFRunLoopRun + 927
24  CoreFoundation                      0x00007fff2f44491e CFRunLoopRunSpecific + 462
25  Foundation                          0x00007fff31ae01a8 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
26  Electron Framework                  0x000000010c48a3ae base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 126
27  Electron Framework                  0x000000010c48914c base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 140
28  Electron Framework                  0x000000010c42ee5b base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 651
29  Electron Framework                  0x000000010c3e2d6a base::RunLoop::Run(base::Location const&) + 890
30  Electron Framework                  0x00000001115efc1b content::RendererMain(content::MainFunctionParams const&) + 1611
31  Electron Framework                  0x00000001095d3c27 content::ContentMainRunnerImpl::Run(bool) + 503
32  Electron Framework                  0x00000001095d2b32 content::RunContentProcess(content::ContentMainParams const&, content::ContentMainRunner*) + 2658
33  Electron Framework                  0x00000001095d2c1c content::ContentMain(content::ContentMainParams const&) + 44
34  Electron Framework                  0x0000000107c52297 ElectronMain + 135
35  Electron Helper (Renderer)          0x00000001040ad1b7 main + 439
36  libdyld.dylib                       0x00007fff694e6cc9 start + 1
```

I believe this is due to the hack in `UvRunOnce` being insufficient to swap between `kExplicit` and `kScoped` microtask policies when a new node environment is created during execution of `UvRunOnce`. i.e. this:

https://github.com/electron/electron/blob/fa703016f0fcaebed611b23700558fd0fcf064ff/shell/common/node_bindings.cc#L580-L586

sets the policy to `kExplicit`, but then `CreateEnvironment` is called during the tick, and subsequently this:

https://github.com/electron/electron/blob/fa703016f0fcaebed611b23700558fd0fcf064ff/shell/common/node_bindings.cc#L518

is called, which sets the policy back to `kScoped`, due to:

https://github.com/electron/electron/blob/fa703016f0fcaebed611b23700558fd0fcf064ff/shell/common/node_bindings.cc#L490-L492

Since the policy is now `kScoped`, the DCHECK in question triggers the next time a JS function is called, which is in the `CheckImmediate` code in Node.

cc @codebytere ",codebytere,bug :beetle:;component/node-integration,2021-06-01T21:09:01Z,2021-06-21T05:06:17Z,nornagon,codebytere;indutny;indutny-signal,codebytere,,codebytere,,zcbenz,
electron/electron,29541,"[Bug]: BrowserView cover the TrafficLightButton of the BrowserWindow ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.3 (20D91)

### What arch are you using?

x64

### Last Known Working Electron version

12.0.10

### Expected Behavior

![image](https://user-images.githubusercontent.com/19370201/120759983-2d1a1a00-c546-11eb-934e-33114a678193.png)


### Actual Behavior

![image](https://user-images.githubusercontent.com/19370201/120760015-37d4af00-c546-11eb-9bf2-acbd0566fa2d.png)


### Testcase Gist URL

_No response_

### Additional Information

```js
const { app, BrowserWindow, BrowserView } = require('electron')

function createWindow () {
    const win = new BrowserWindow({ width: 300, height: 300, titleBarStyle: 'hidden' })
    const view = new BrowserView()
    win.addBrowserView(view)
    view.setBounds({ x: 0, y: 0, width: 300, height: 40 })
    view.setBackgroundColor('#000000')
    win.loadFile('index.html')
}

app.whenReady().then(() => {
    createWindow()
})
```",codebytere,platform/macOS;bug :beetle:;component/BrowserView;13-x-y;14-x-y,2021-06-04T07:05:50Z,2021-06-10T12:52:23Z,weifeiyue,,weifeiyue;codebytere,,codebytere,,codebytere,
electron/electron,29543,"[Bug]: Using setDevToolsWebContents results in DevTools window with no menu triggering ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

unknown

### Expected Behavior

A fully functional DevTools window,  including menus.

### Actual Behavior

No pulldown menus will show in Devtools, either 'right click' menus or menu triggers in Devtools. Since much of the functionality of Devtools is behind menus (right clicking to set conditional breakpoints, navigate to open files that don't currently have a tab, to restart the stack when debugging, enable/disable/clear breakpoints, etc. this is quite a crippling situation.

### Testcase Gist URL

_No response_

### Additional Information

At first, I thought this might be related to #10862, but now I'm not sure.",codebytere,bug :beetle:;status/confirmed;has-repro-gist;13-x-y;14-x-y,2021-06-04T10:54:11Z,2021-06-24T18:36:23Z,bedney,codebytere;bedney;nornagon,bedney;codebytere;nornagon,nornagon,codebytere,,codebytere,
electron/electron,29626,"[Bug]: crash on browserView.webContents.destroy() call ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.2

### What operating system are you using?

Other Linux

### Operating System Version

kernel 5.12.8

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

- The app doesn't crash.
- The BrowserView process gets properly destroyed.

### Actual Behavior

The app crashing if `browserView.webContents.destroy()` called to destroy the browserView-related process (memory releasing). It doesn't crash on first call but on 5-10th `browserView.create() => browserView.destroy()` sequential scenario execution (in my case create/destroy calls get triggered by hotkey, so I just hit the respective hotkeys in sequence).

### Testcase Gist URL

_No response_

### Additional Information

See the attached [crash stack](https://github.com/electron/electron/files/6630760/dump.txt).

Related issue: https://github.com/electron/electron/issues/26929.

As pointed in https://github.com/electron/electron/issues/26929#issuecomment-763837953 wrapping the `destroy()` call into `setImmediate` prevents the app from crash. So this is a workaround.",VerteDinde,platform/windows;platform/linux;bug :beetle:;status/confirmed;13-x-y;has-repro-comment,2021-06-10T11:07:33Z,2021-11-15T15:23:31Z,vladimiry,zcbenz;vladimiry;nornagon;pushkin-;abacaj;08132337381,vladimiry;nornagon,,,,zcbenz,
electron/electron,29653,"[Bug]: Application crashes on macOS < Catalina, related to Window Vibrancy ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS High Sierra

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

I'd expect the app to launch normally.

### Actual Behavior

The app launches for a second, then crashes. I get a crashdump with the following stack:

![CleanShot 2021-06-12 at 11 30 01](https://user-images.githubusercontent.com/541628/121771739-949d1e80-cb71-11eb-990c-381ce89bcb4f.png)

### Testcase Gist URL

_No response_

### Additional Information

On first launch, my app (https://ableset.app) opens two windows. One with vibrancy set to `window` and the other with vibrancy `popover`.

Unfortunately, I don't have a High Sierra machine, so I can't test it myself, but I've had multiple customers report this to me and couldn't find any related issues on here yet, so I thought it might be worth looking into.",codebytere,platform/macOS;crash :boom:;bug :beetle:;12-x-y;13-x-y;14-x-y,2021-06-12T09:33:14Z,2021-06-16T06:39:20Z,leolabs,dsanders11;leolabs,leolabs;codebytere,,codebytere,,zcbenz,
electron/electron,29665,"[Bug]: HTML select tag not rendering the dropdown ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.x & 15.x

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro version 21H1

### What arch are you using?

x64

### Last Known Working Electron version

13.1.2

### Expected Behavior

When you add a select tag to your HTML and you click on it should open a dropdown with the options.

![image](https://user-images.githubusercontent.com/22801379/121824219-ccf44800-ccaa-11eb-967d-0e1f4543a03a.png)


### Actual Behavior

Beyond version 13.1.2 when you click the select but no dropdown appears.

![image](https://user-images.githubusercontent.com/22801379/121824232-f6ad6f00-ccaa-11eb-961f-ed4508111dbd.png)


### Testcase Gist URL

https://gist.github.com/4573db9b87615a897a731b573a16ae1e

### Additional Information

Electron v13.1.2 uses Chromium 91.0.4472.77
Electron v14.0.0-beta.1 uses Chromium 92.0.4511.0

Maybe this issue has something to do with Chromium 92.0 and beyond?

For the Testcase I used the default code adding a simple select to the HTML.

```html
<select name=""select"">
    <option value=""value1"">Value 1</option>
    <option value=""value2"" selected>Value 2</option>
    <option value=""value3"">Value 3</option>
</select>
```",codebytere,platform/windows;bug :beetle:;14-x-y;15-x-y,2021-06-13T23:00:02Z,2021-06-18T07:05:19Z,sertxudev,soumyag123;sertxudev;nornagon;tonyxforce,sertxudev;zcbenz;codebytere,,codebytere,,codebytere,
electron/electron,29685,"[Bug]: Empty dictionarySuggestions on Windows since electron 13.x ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.2

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 2004

### What arch are you using?

x64

### Last Known Working Electron version

12.0.11

### Expected Behavior

`dictionarySuggestions` is expected to have suggestions.

### Actual Behavior

`dictionarySuggestions` is empty.

### Testcase Gist URL

_No response_

### Additional Information

Reminiscent of #24455, but it probably is a different issue given the difference of how spellchecking works on each platform.

### electron 12
```
electron 12.0.11
chrome 89.0.4389.128

misspelledWord: Houuse
dictionarySuggestions: [ 'House', 'Housed', 'Houses', 'Housel', 'Houser' ]
session.getSpellCheckerLanguages: [ 'en-GB', 'en-US' ]
```

### electron 13
```
electron 13.1.2
chrome 91.0.4472.77

misspelledWord: Houuse
dictionarySuggestions: []
session.getSpellCheckerLanguages: [ 'en-GB', 'en-US' ]
```",VerteDinde,platform/windows;bug :beetle:;13-x-y;14-x-y,2021-06-14T16:19:28Z,2021-06-15T16:11:49Z,EtienneLem,MarshallOfSound;EtienneLem;Jelmerro;VerteDinde,EtienneLem;VerteDinde;zcbenz,,VerteDinde,,VerteDinde,
electron/electron,29732,"[Bug]: Wrong main window hidden state on macOS when using 'parent' option ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.2

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.4

### What arch are you using?

x64

### Last Known Working Electron version

11.4.5

### Expected Behavior

  - create the main window with `show: false` option
  - create the child window with a loading spinner and show it immediately
  - after 10 sec hide the child window and show the main one

### Actual Behavior

The main window is shown along with the child window, disregarding the `show: false` flag. This behavior is seen only on macOS.

### Testcase Gist URL

https://gist.github.com/f2a3a5e8d9130223f18b8ddade390f20

### Additional Information

_No response_",codebytere,platform/macOS;status/wontfix 棣冩瘒;bug :beetle:;has-repro-gist,2021-06-16T16:17:15Z,2021-06-22T10:13:09Z,ZIMkaRU,nornagon;codebytere;ZIMkaRU,ZIMkaRU;nornagon;codebytere,codebytere,codebytere,,codebytere,
electron/electron,29758,"[Bug]: App hijacks focus from `win.previewFile` since v12.0.9 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.9

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.4

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

12.0.8

### Expected Behavior

When using [`win.previewFile`](https://www.electronjs.org/docs/api/browser-window#winpreviewfilepath-displayname-macos), it is expected that pressing spacebar or escape would dismiss the preview window.

### Actual Behavior

Nothing happens, or rather your app is still receiving the shortcuts and the preview window is not.

### Testcase Gist URL

_No response_

### Additional Information

Given the very small [v12.0.9](https://www.electronjs.org/releases/stable?version=12#12.0.9) update, it would be safe to assume that #29235 is responsible for this regression.

Not sure if relevant, but:

**Before**
When calling `win.previewFile` it used to trigger a `blur` followed by an immediate `focus` event on `window`:

<img width=""165"" alt=""CleanShot 2021-06-17 at 14 09 45@2x"" src=""https://user-images.githubusercontent.com/436043/122451016-b0d7fb80-cf75-11eb-83f2-f9672f41d93e.png"">


**Now**
When calling `win.previewFile` it triggers this pair of events 4 times in a row:

<img width=""188"" alt=""CleanShot 2021-06-17 at 14 08 50@2x"" src=""https://user-images.githubusercontent.com/436043/122450921-96058700-cf75-11eb-8be4-7ab4c2650474.png"">
",deepak1556,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;12-x-y;13-x-y;14-x-y,2021-06-17T18:12:24Z,2021-07-09T20:38:26Z,EtienneLem,nornagon,EtienneLem;deepak1556,,deepak1556,,deepak1556,
electron/electron,29778,"[Bug]: Setting the BackgroundColor to the BrowserView doesn't work on Windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

11.*,  12.*,   13.*

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

`setBackgroundColor()` should set the background to the browser view. 

### Actual Behavior

The content of the BrowserView is still transparent.

![image](https://user-images.githubusercontent.com/2891206/122588825-d7726100-d05f-11eb-93d2-935eb93801c8.png)


### Testcase Gist URL

https://gist.github.com/ddramone/712a2fde2757736c9dbf6c3e7e0aa18b

### Additional Information



### Additional unusual behavior:

I tried to remove the background color from the parent BrowserWindow.  As a result

* **BrowserView that is fully visible** in the screen _(right)_ picks up its own background. But it is blended through the renderer content. 

* Another **BrowserView that is partially visible** on the screen _(left)_ still doesn't pick up its own background.

see the screenshot:

![image](https://user-images.githubusercontent.com/2891206/122589135-2d470900-d060-11eb-8ef2-ec4aa53a240e.png)


--- 
_figma.com is the example that doesn't have the background color to the document body._",codebytere,bug :beetle:;component/BrowserView;has-repro-gist;11-x-y;12-x-y;13-x-y,2021-06-18T16:17:05Z,2021-08-16T10:26:59Z,ddramone,weifeiyue;codebytere,ddramone;nornagon,,codebytere,,codebytere,
electron/electron,29891,"[Bug]: Frameless window can't receive events on elements with `-webkit-app-region: drag` (Windows only) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Home

### What arch are you using?

x64

### Last Known Working Electron version

Tested everything till 8.X, nothing works

### Expected Behavior

When a user clicks on input (without dragging) with `-webkit-app-region: drag` the input is focused and a click event is passed through to JavaScript. Same as MacOS. Alternatively, please provide a workaround.

### Actual Behavior

If an input (or any element) is marked with `-webkit-app-region: drag` it does not receive any events when the user clicks/drags it.


### Testcase Gist URL

https://gist.github.com/1db66b2afe7e7f5f5c4a93fc788705f4

### Additional Information

Works amazingly on MacOS, does not work on Windows.

**Demo Windows:**
![2021-06-24 22 19 35](https://user-images.githubusercontent.com/73438352/123360703-c338d300-d53b-11eb-9f14-8d75d8853eb1.gif)
**Demo Mac:**
![2021-06-24 22 19 05](https://user-images.githubusercontent.com/73438352/123360717-c764f080-d53b-11eb-8a30-97f12972e46c.gif)
",codebytere,platform/windows;status/wontfix 棣冩瘒;bug :beetle:;13-x-y,2021-06-25T02:30:44Z,2021-07-13T16:39:15Z,oleg-slapdash,weifeiyue;nornagon;oleg-slapdash;czzonet,oleg-slapdash;sofianguy;nornagon,,codebytere,,nornagon,
electron/electron,29893,"[Bug]: Link error for native c++ modules ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.4

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Home (19042)

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

The native module in the testcase gist should be able to link.
The problematic part is the function v8::ArrayBuffer::GetBackingStore()

### Actual Behavior

Linking fails with the error
`error LNK2019: unresolved external symbol ""__declspec(dllimport) public: class std::shared_ptr<class v8::BackingStore> __cd ecl v8::ArrayBuffer::GetBackingStore(void)"" (__imp_?GetBackingStore@ArrayBuffer@v8@@QEAA?AV?$shared_ptr@VBackingStore@v8@@@std@@XZ) re ferenced in function ""void __cdecl foobar(class v8::FunctionCallbackInfo<class v8::Value> const &)"" (?foobar@@YAXAEBV?$FunctionCallbac kInfo@VValue@v8@@@v8@@@Z) [c:\Work\repro_bug_arraybuffer\build\foobar.vcxproj]`


### Testcase Gist URL

https://gist.github.com/TanninOne/d321ab1676798647cf672f08e78b88d8

### Additional Information

Building the same module for node 14.17.1 works fine.

The error message, although cryptic, is correct: the header and link library shipped do not seem to match. the header declares GetBackingStore like this:
`std::shared_ptr<BackingStore> GetBackingStore();`
but the library exports this:
`?GetBackingStore@ArrayBuffer@v8@@QEAA?AV?$shared_ptr@VBackingStore@v8@@@__1@std@@XZ`
which demangles to
`public: class std::__1::shared_ptr<class v8::BackingStore> __cdecl v8::ArrayBuffer::GetBackingStore(void) __ptr64`

so as far as I understand it the namespace is different and thus the linker doesn't find the function.
node.exe version 14.17.1 otoh exports
`?GetBackingStore@ArrayBuffer@v8@@QEAA?AV?$shared_ptr@VBackingStore@v8@@@std@@XZ`
aka
`public: class std::shared_ptr<class v8::BackingStore> __cdecl v8::ArrayBuffer::GetBackingStore(void) __ptr64`

which matches the declaration in v8.h exactly.

With prior versions of electron (up to 12 I think) we could use the deprecated function GetContent to get at the content of an ArrayBuffer but that function has been removed so until this is fixed, if I'm not completely mistaken, any native module that requires access to the content of an ArrayBuffer, including helper libraries like nan or nbind and all modules that depend on _those_ will be broken.",VerteDinde,platform/windows;bug :beetle:;13-x-y;14-x-y;stale,2021-06-25T09:44:35Z,2022-11-07T02:16:17Z,TanninOne,miniak;kjvalencik;mmomtchev;dogeFu;lygstate;GitMurf;MarshallOfSound;nornagon;TanninOne;somanuell,TanninOne;VerteDinde,,VerteDinde,,,
electron/electron,29901,"[Bug]: Second of two successive HTTP requests is not executed (Ubuntu) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

* Electron 13.1.4
* Ubuntu 16.04, Ubuntu 20.04 x64

### Synopsis

I'm making two successive HTTP requests immediately after each other: the second one is fired when the response of the first one comes in. However, the second HTTP request is not made right away, but ""hangs"" until other traffic pushes it through.

### Expected Behavior

When running the reproducer, the DevTools console should print

```
CONNECT 0
1st HTTP request: 200
2nd HTTP request: 200

CONNECT 1
1st HTTP request: 200
2nd HTTP request: 200

CONNECT 2
1st HTTP request: 200
2nd HTTP request: 200

..
```

### Actual Behavior

The second request does not go through immediately. Instead, it is fired as soon as the next 1st request is made.

```
CONNECT 0
1st HTTP request: 200

CONNECT 1
2nd HTTP request: 200
1st HTTP request: 200
2nd HTTP request: 200

CONNECT 2
1st HTTP request: 200

CONNECT 3
2nd HTTP request: 200
1st HTTP request: 200

CONNECT 4
2nd HTTP request: 200
1st HTTP request: 200

..
```

### Testcase Gist URL

https://github.com/ValentinSteiner/bug-successive-http-requests

### Additional Information

* It seems to be some sort of timing error, I've seen it work differently upon app startup as opposed to later.
* If the second connection is not established right away, it is pushed through on the next 1st HTTP request.
* I first noticed the issue when using the request library. To drill down, I switched to the native http module, the error remained.
* The issue may have to do with accessing a local HTTP server. Running against a server on the internet works most of the time.
* The issue only appears if we read the response body in myreq.js (by attaching a handler to the 'data' event).
* The bug is NOT reproducible on Windows 10, macOS 10.13.
* The bug is reproducible on Ubuntu 16.04, 20.04.
* Note that running `node client.js` exhibits the correct behavior.

### Workaround
* Delaying the second request using `setTimeout` is a workaround to get the desired behavior.",codebytere,platform/linux;bug :beetle:;component/node-integration;13-x-y,2021-06-25T23:49:07Z,2022-10-13T21:04:19Z,ValentinSteiner,que1414;ValentinSteiner;nornagon,ValentinSteiner;nornagon;sofianguy,,codebytere,,ValentinSteiner,
electron/electron,29909,"[Bug]: GetDefaultDownloadDirectory doesn't honour the user-defined Downloads directory ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

main

### What operating system are you using?

All OSes.

### What arch are you using?

All archs.

### Last Known Working Electron version

N/A

### Expected Behavior

[`ElectronBrowserClient::GetDefaultDownloadDirectory()`](https://github.com/electron/electron/blob/main/shell/browser/electron_browser_client.cc#L1013-L1019) is hardcoded to return `~/Downloads`. However, this might not be the actual downloads directory path (eg: if the user has changed it or on OSes which translate user directory names).

The proper way to get the current user's downloads directory is OS-dependent:
- On Linux it is set in the env var `$XDG_DOWNLOAD_DIR` 
- On Windows it is returned by [`SHGetKnownFolderPath`](https://docs.microsoft.com/en-us/windows/win32/api/shlobj_core/nf-shlobj_core-shgetknownfolderpath) passing in `FOLDERID_Downloads`
- On MacOS it is returned by [`URLForDirectory`](https://developer.apple.com/documentation/foundation/nsfilemanager/1407693-urlfordirectory) passing in `NSDownloadsDirectory`

### Current Behavior

`~/Downloads` is [hardcoded](https://github.com/electron/electron/blob/main/shell/browser/electron_browser_client.cc#L1013-L1019).
",codebytere,bug :beetle:;platform/all,2021-06-27T17:06:49Z,2021-06-30T20:54:03Z,albertvaka,nornagon,albertvaka;codebytere,,codebytere,,codebytere,
electron/electron,29915,"[Bug]: query string missed when form submit get in browserview ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.3

### What operating system are you using?

Windows

### Operating System Version

Windows 7 

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

when i use browserview load a page which has a form(method=""get"" target=""_blank""),  I intercept the new-window event of webcontents and the parameter url does not have querystring

### Actual Behavior

new-window event parameter url with querystring

### Testcase Gist URL

_No response_

### Additional Information

_No response_",clavin,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;9-x-y;10-x-y;has-repro-gist;11-x-y;12-x-y;13-x-y;14-x-y,2021-06-28T02:36:14Z,2021-09-21T23:55:23Z,lazyManLearn,Prinzhorn;nornagon;lzdyes;clavin;lazyManLearn,lazyManLearn;nornagon,nornagon,clavin,,clavin,
electron/electron,29920,"[Bug]: Renderer crashes when using fsPromises.readFile in a native child window ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.0.12

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.4

### What arch are you using?

x64

### Last Known Working Electron version

12.0.11

### Expected Behavior

`fsPromises.readFile` should resolve with data or reject with an error.

### Actual Behavior

The child and its parent renderer crashes.

### Testcase Gist URL

https://github.com/Maxime117/fsPromises-readFile-crash

### Additional Information

Non-promise version of readFile is working as well as fsPromises.stat for example.

Main process log:

```
~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)[87938]: ../../third_party/electron_node/src/api/callback.cc:62:node::InternalCallbackScope::InternalCallbackScope(node::Environment *, Local<v8::Object>, const node::async_context &, int): Assertion `(Environment::GetCurrent(env->isolate())) == (env)' failed.
 1: 0x1174bbca5 node::Buffer::New(v8::Isolate*, char*, unsigned long, void (*)(char*, void*), void*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 2: 0x1174bbabb node::Buffer::New(v8::Isolate*, char*, unsigned long, void (*)(char*, void*), void*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 3: 0x1174307db node::CallbackScope::~CallbackScope() [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 4: 0x11743083e node::CallbackScope::~CallbackScope() [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 5: 0x1174bf349 node::OnFatalError(char const*, char const*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 6: 0x1174d419a node::OnFatalError(char const*, char const*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 7: 0x114d911a8 uv_random [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 8: 0x114d94f40 uv_async_send [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
 9: 0x114da6659 uv_free_interface_addresses [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
10: 0x114d9538c uv_run [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
11: 0x114ef88f4 ElectronInitializeICUandStartNode [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
12: 0x115f87b99 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
13: 0x115f961de v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
14: 0x115f95cfe v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
15: 0x115fca3c3 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
16: 0x115fc6e5a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
17: 0x115fc9d8f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
18: 0x7fff206ae97c __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ [/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation]
19: 0x7fff206ae8e4 __CFRunLoopDoSource0 [/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation]
20: 0x7fff206ae664 __CFRunLoopDoSources0 [/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation]
21: 0x7fff206ad08c __CFRunLoopRun [/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation]
22: 0x7fff206ac64c CFRunLoopRunSpecific [/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation]
23: 0x7fff2143a647 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] [/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation]
24: 0x115fca8d4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
25: 0x115fc991b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
26: 0x115f96c3f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
27: 0x115f73f59 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
28: 0x1173f0668 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
29: 0x11535a47a electron::fuses::IsRunAsNodeEnabled() [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
30: 0x115359170 electron::fuses::IsRunAsNodeEnabled() [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
31: 0x115359632 electron::fuses::IsRunAsNodeEnabled() [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
32: 0x114da6c88 ElectronMain [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework]
33: 0x10fb02d49  [~/fsPromises-readFile-crash/node_modules/electron/dist/Electron.app/Contents/Frameworks/Electron Helper (Renderer).app/Contents/MacOS/Electron Helper (Renderer)]
34: 0x7fff205d0f5d start [/usr/lib/system/libdyld.dylib]
35: 0x17 
```",codebytere,bug :beetle:;component/node-integration;12-x-y;13-x-y,2021-06-28T17:45:24Z,2021-08-09T13:03:56Z,Maxime117,nornagon;codebytere,Maxime117;codebytere,,codebytere,,codebytere,
electron/electron,29969,"Segfault when calling `BrowserWindow::DidFirstVisuallyNonEmptyPaint` Test case: https://gist.github.com/c45a3d632e1740fad6d3d8bb351af654. Reproduces on macOS 100% of the time.

```
2:03:30 PM Received signal 11 SEGV_MAPERR 000000000018
2:03:30 PM 0   Electron Framework                  0x0000000115292649 base::debug::CollectStackTrace(void**, unsigned long) + 9
2:03:30 PM 1   Electron Framework                  0x00000001151ab783 base::debug::StackTrace::StackTrace() + 19
2:03:30 PM 2   Electron Framework                  0x00000001152925a1 base::debug::(anonymous namespace)::StackDumpSignalHandler(int, __siginfo*, void*) + 1329
2:03:30 PM 3   libsystem_platform.dylib            0x00007fff696df5fd _sigtramp + 29
2:03:30 PM 4   ???                                 0x00000000000005d5 0x0 + 1493
2:03:30 PM 5   Electron Framework                  0x00000001109cf2d8 non-virtual thunk to electron::api::BrowserWindow::DidFirstVisuallyNonEmptyPaint() + 24
2:03:30 PM 6   Electron Framework                  0x00000001144d9f9b void content::WebContentsImpl::WebContentsObserverList::NotifyObservers<void (content::WebContentsObserver::*)()>(void (content::WebContentsObserver::*)()) + 475
2:03:30 PM 7   Electron Framework                  0x0000000114500156 content::WebContentsImpl::DidFirstVisuallyNonEmptyPaint(content::RenderViewHostImpl*) + 102
2:03:30 PM 8   Electron Framework                  0x0000000112037738 blink::mojom::FrameWidgetHostStubDispatch::Accept(blink::mojom::FrameWidgetHost*, mojo::Message*) + 1928
2:03:30 PM 9   Electron Framework                  0x000000011569a5ef mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) + 623
2:03:30 PM 10  Electron Framework                  0x00000001156a0a6f mojo::MessageDispatcher::Accept(mojo::Message*) + 271
2:03:30 PM 11  Electron Framework                  0x000000011569c15d mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) + 61
2:03:30 PM 12  Electron Framework                  0x0000000115a2ce96 IPC::(anonymous namespace)::ChannelAssociatedGroupController::AcceptOnEndpointThread(mojo::Message) + 710
2:03:30 PM 13  Electron Framework                  0x0000000115a29b0c base::internal::Invoker<base::internal::BindState<void (IPC::(anonymous namespace)::ChannelAssociatedGroupController::*)(mojo::Message), scoped_refptr<IPC::(anonymous namespace)::ChannelAssociatedGroupController>, mojo::Message>, void ()>::RunOnce(base::internal::BindStateBase*) + 140
2:03:30 PM 14  Electron Framework                  0x0000000115229c6b base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 411
2:03:30 PM 15  Electron Framework                  0x000000011524e35e base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) + 974
2:03:30 PM 16  Electron Framework                  0x000000011524dacb base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 107
2:03:30 PM 17  Electron Framework                  0x000000011524e982 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 18
2:03:30 PM 18  Electron Framework                  0x00000001152a9703 base::MessagePumpCFRunLoopBase::RunWork() + 83
2:03:30 PM 19  Electron Framework                  0x00000001152a24c2 base::mac::CallWithEHFrame(void () block_pointer) + 10
2:03:30 PM 20  Electron Framework                  0x00000001152a911f base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63
2:03:30 PM 21  CoreFoundation                      0x00007fff2f446832 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
2:03:30 PM 22  CoreFoundation                      0x00007fff2f4467d1 __CFRunLoopDoSource0 + 103
2:03:30 PM 23  CoreFoundation                      0x00007fff2f4465eb __CFRunLoopDoSources0 + 209
2:03:30 PM 24  CoreFoundation                      0x00007fff2f44531a __CFRunLoopRun + 927
2:03:30 PM 25  CoreFoundation                      0x00007fff2f44491e CFRunLoopRunSpecific + 462
2:03:30 PM 26  HIToolbox                           0x00007fff2e070abd RunCurrentEventLoopInMode + 292
2:03:30 PM 27  HIToolbox                           0x00007fff2e0707d5 ReceiveNextEventCommon + 584
2:03:30 PM 28  HIToolbox                           0x00007fff2e070579 _BlockUntilNextEventMatchingListInModeWithFilter + 64
2:03:30 PM 29  AppKit                              0x00007fff2c6b7039 _DPSNextEvent + 883
2:03:30 PM 30  AppKit                              0x00007fff2c6b5880 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1352
2:03:30 PM 31  AppKit                              0x00007fff2c6a758e -[NSApplication run] + 658
2:03:30 PM 32  Electron Framework                  0x00000001152aa2ec base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*) + 348
2:03:30 PM 33  Electron Framework                  0x00000001152a8ab3 base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 131
2:03:30 PM 34  Electron Framework                  0x000000011524eeeb base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 651
2:03:30 PM 35  Electron Framework                  0x00000001152027c0 base::RunLoop::Run(base::Location const&) + 880
2:03:30 PM 36  Electron Framework                  0x0000000113ddb396 content::BrowserMainLoop::RunMainMessageLoop() + 246
2:03:30 PM 37  Electron Framework                  0x0000000113ddd112 content::BrowserMainRunnerImpl::Run() + 82
2:03:30 PM 38  Electron Framework                  0x0000000113dd860b content::BrowserMain(content::MainFunctionParams const&) + 251
2:03:30 PM 39  Electron Framework                  0x00000001123587bb content::ContentMainRunnerImpl::RunBrowser(content::MainFunctionParams&, bool) + 1419
2:03:30 PM 40  Electron Framework                  0x00000001123581c0 content::ContentMainRunnerImpl::Run(bool) + 528
2:03:30 PM 41  Electron Framework                  0x00000001123570bd content::RunContentProcess(content::ContentMainParams const&, content::ContentMainRunner*) + 2653
2:03:30 PM 42  Electron Framework                  0x00000001123571ac content::ContentMain(content::ContentMainParams const&) + 44
2:03:30 PM 43  Electron Framework                  0x0000000110993ef7 ElectronMain + 135
2:03:30 PM 44  Electron                            0x0000000109933cea main + 298
2:03:30 PM 45  libdyld.dylib                       0x00007fff694e6cc9 start + 1
2:03:30 PM 46  ???                                 0x0000000000000004 0x0 + 4
```",codebytere,platform/macOS;crash :boom:;bug :beetle:,2021-06-30T21:04:42Z,2021-07-22T13:38:12Z,nornagon,codebytere;nornagon,codebytere,,codebytere,,codebytere,
electron/electron,30026,"[Bug]: Traffic lights re-appear in fullscreen on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.5

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina version 10.15.7 

### What arch are you using?

x64

### Last Known Working Electron version

11.2.0

### Expected Behavior

Creating a `browserWindow` with `titleBarStyle: ""hidden""` , then going into full screen mode, then setting a browserView on the window, should not change the way traffic lights are displayed.

### Actual Behavior

When using a `browserWindow` with `titleBarStyle: ""hidden""` , going into full screen, and then setting a `browserView` on that window, the traffic lights will re-appear.

### Testcase Gist URL

https://gist.github.com/45f0a58d69bec2834535e57768363572

### Additional Information

It also is problematic because after leaving the full screen, we end up with 2 sets of traffic lights, but that is just a consequence of the initial bug I think:
![image](https://user-images.githubusercontent.com/15836571/124578993-06097d80-de4f-11eb-8790-7d3fba48846d.png)
",codebytere,platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;13-x-y;14-x-y,2021-07-06T09:42:12Z,2021-07-14T23:45:12Z,antoineduban,clavin,antoineduban;VerteDinde,,codebytere,,codebytere,
electron/electron,30028,"[Bug]: Webview gets all the way zoomed in and its `zoomFactor` is set to `NaN` ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.6

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 21.04

### What arch are you using?

x64

### Last Known Working Electron version

None. Electron 10, 11, 12, 14 are all affected, too.

### Expected Behavior

Nothing should happen

### Actual Behavior

1. Have a page with a webview with a link which includes a `#` (e.g. `<a href=""#"">Test link</a>`)
2. Zoom the page in via `webContents.setZoomFactor(1.1)`
3. Reset the zoom via `webContents.setZoomFactor(1.0)`
4. Click the link

The page itself stays normal while the webview gets all the way zoomed in and its `zoomFactor` is set to `NaN`.

### Testcase Gist URL

https://gist.github.com/ffflorian/2c60315bfafed606723887a7b2f21010

### Additional Information

![image](https://user-images.githubusercontent.com/5497598/125257302-93d8e300-e2fd-11eb-9a1a-a0a9fbdca258.png)",jkleinsc,component/webview;bug :beetle:;platform/all;status/confirmed;has-repro-gist;13-x-y;14-x-y;17-x-y,2021-07-06T12:07:56Z,2022-01-25T20:54:49Z,ffflorian,VerteDinde;ffflorian;jkleinsc;ivan1fun;bavulapati;nornagon,ffflorian;VerteDinde;nornagon,VerteDinde;nornagon,,,nornagon,
electron/electron,30039,"[Bug]: Using `titleBarStyle` to anything except `default` breaks the `documentEdited` status indicator on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.6

### What operating system are you using?

macOS

### Operating System Version

Big Sur 11.4

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

12.0.7

### Expected Behavior

Using any of the documented `titleBarStyle`s such as `hiddenInset` allows me to use `setDocumentEdited(true)` on a `BrowserWindow` instance yielding a black dot inside the ""close"" button of the window to indicate that the document inside the window has been edited.

### Actual Behavior

Using a `titleBarStyle` of any documented value *except* `default` breaks the `documentEdited` indicator in the ""close"" button on macOS. Irrespective of the value of the `documentEdited` flag, the black dot indicator does *not* appear.

### Testcase Gist URL

https://gist.github.com/b7a57c14511499bbec3da70be76b567f

### Additional Information

You can test out how this works by commenting/uncommenting the `titleBarStyle` value I've added in the gist.

> The ""last known electron version"" has been sourced from the version VS Code currently uses, and they use a titleBarStyle of hidden. That works flawlessly.",zcbenz,platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;13-x-y,2021-07-07T10:55:34Z,2021-08-04T00:31:12Z,nathanlesage,nornagon,nathanlesage;sofianguy;nornagon,,zcbenz,,zcbenz,
electron/electron,30082,"[Bug]: Transparency/backgroundColor no longer working ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0-beta.12

### What operating system are you using?

Windows

### Operating System Version

10.0.19042 Build 19042

### What arch are you using?

x64

### Last Known Working Electron version

13

### Expected Behavior

Window should be transparent

### Actual Behavior

Open a window with transparency enabled and delete the dom, the window will be white instead of transparent.
**Also seems like settings the backgroundColor property has no longer an effect.** I always see a white window

```
const {app, BrowserWindow} = require('electron')
const path = require(""path"");

function createWindow () {
	const mainWindow = new BrowserWindow({
		transparent: true,
		frame: false,
	})

	mainWindow.loadURL('https://example.com')
	mainWindow.webContents.openDevTools()
}

app.whenReady().then(createWindow)
```

### Testcase Gist URL

https://gist.github.com/e124340107f6c4a3ade8b36d98a16b9a

### Additional Information

_No response_",codebytere,platform/windows;platform/macOS;bug :beetle:;status/confirmed;has-repro-comment;14-x-y,2021-07-12T07:15:35Z,2021-07-15T20:18:40Z,t57ser,sachetsharma1,t57ser;VerteDinde,,codebytere,,codebytere,
electron/electron,30201,"[Bug]: Possibly broken user agent client hint ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 20H2

### What arch are you using?

x64

### Last Known Working Electron version

12.0.15

### Expected Behavior

Checking `navigator.userAgentData` in Chrome 91 returns an array of brands appropriately. Electron 13/14 do not return anything.

This appears to then become a problem for my situation. I am posting a form with hidden variables to a third-party vendor I work with. This form post ultimately loads an iframe.

Expected: As it does in Chrome 91, load the iframe from this third-party vendor.

### Actual Behavior

A header of ""sec-ch-ua"" is included in the request to the third-party vendor and it is blank. They are rejecting the post because of an invalid header. I suspect this is because Chrome 13/14 does not make this hint data made available correctly.

I tried loading various sites in Chrome 91 that do load brand names in Electron 13/14 and they are empty if you review `navigator.userAgentData`.

### Testcase Gist URL

_No response_

### Additional Information

_No response_",nornagon,platform/windows;bug :beetle:;status/confirmed;13-x-y,2021-07-19T21:14:08Z,2022-06-13T16:35:43Z,webdevmario,quanglam2807;Swastyy;nornagon;phryneas;jarek-foksa,webdevmario;nornagon;sofianguy,,nornagon,,nornagon,
electron/electron,30208,"[Bug]: desktopCapturer output is blank when capturing own window. ### Preflight Checklist

- [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

macOS

### Operating System Version

macOS 11.4

### What arch are you using?

x64

### Last Known Working Electron version

12.x

### Expected Behavior

desktopCapturer should be able to capture the output of the current window.

### Actual Behavior

The output is a blank stream of black frames.

### Testcase Gist URL

https://gist.github.com/e40b251b8ec56191ca9df9f568139304

### Additional Information

This happens only for the current window. If you change the name of the target window to the name of any other window open on your machine, it shows the stream correctly. 
This works correctly is 11.x/12.x so it seems to be broken only in 13.x versions. My actual use case is not to show the output of the stream in the UI, but to record it and output a video file.
#29931 is similar to this but a different issue since it is concerned with the source not being available and it affects both 12 and 13, but in this case, the source is always available but does not output anything.",VerteDinde,bug :beetle:;platform/all;status/confirmed;has-repro-gist;13-x-y;14-x-y,2021-07-20T10:05:21Z,2021-07-26T23:53:44Z,praneetrohida,VerteDinde;phanmn;praneetrohida;nornagon,praneetrohida;VerteDinde,,VerteDinde,,nornagon,electron/electron#29458;
electron/electron,30223,"[Bug]: Window alert()/prompt() dialog titles corrupted ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.6

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

ia32

### Last Known Working Electron version

12.0.15

### Expected Behavior

Window alert() and prompt() dialogs titles should be name field specified in package.json

### Actual Behavior

The first 4 characters of the title are always randomised as seen in image below.

![image](https://user-images.githubusercontent.com/32398564/126480681-98849394-355f-40df-a90b-58a2355fbd99.png)


### Testcase Gist URL

https://gist.github.com/CiaranCarroll1/c4e9fdc2db23a649c7f506dc9ac9b411

### Additional Information

_No response_",miniak,platform/windows;bug :beetle:;blocked/need-repro;13-x-y,2021-07-21T11:33:23Z,2022-01-13T21:23:36Z,CiaranCarroll1,codebytere;CiaranCarroll1;my2iu;kku39;andycreeth,CiaranCarroll1;codebytere;sofianguy,,miniak,,jkleinsc,
electron/electron,30230,"[Bug]: incorrect position of traffic lights with custom titlebar ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.4

### What arch are you using?

x64

### Last Known Working Electron version

v13.0.0-nightly.20210129

### Expected Behavior

Traffic lights are drawn at a `y` delta of 6px from the NSWindow top position

### Actual Behavior

Traffic lights are drawn at a `y` delta of 3px from the NSWindow top position

### Testcase Gist URL

https://gist.github.com/deepak1556/5a186ac86082ab07616cc8503bd1a531

### Additional Information

This first regressed in v13.0.0-nightly.20210201 which points to https://github.com/electron/electron/pull/27489

To verify:

* Open the above app with working version
* Open accessibility inspector
* Check the y position of ElectronNSWindow
* Check the y position of minimize button
* Repeat the above steps for regressed electron version

/cc @zcbenz ",zcbenz,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;has-repro-gist;13-x-y;14-x-y;15-x-y,2021-07-21T19:25:51Z,2021-07-26T16:22:22Z,deepak1556,zcbenz,deepak1556,,zcbenz,,deepak1556,
electron/electron,30247,"[Bug]: Button labels in File choosers are untranslated on Linux in e14 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 18.04

### What arch are you using?

x64

### Last Known Working Electron version

13.1.7

### Expected Behavior

The buttons in a (native) file dialog read ""Cancel""  and ""OK""

### Actual Behavior

The buttons in a native file dialog read `gtk-cancel` and `gtk-ok`.

### Testcase Gist URL

https://gist.github.com/Kilian/3de5f404d90d9b12ccaec817fdc4d6da

### Additional Information

Main window has a file input, click it to open the File chooser. Test on Ubuntu between 14.x and 13.x to see the difference. Probably caused by https://github.com/electron/electron/pull/19159

Electron 13.1.7:
![Selection_999(158)](https://user-images.githubusercontent.com/41970/126761063-a5361b8f-d057-406e-bb45-c71d48224b16.png)

Electron 14.0.0-beta.16
![Selection_999(156)](https://user-images.githubusercontent.com/41970/126761068-d6377aee-79f9-47a8-a3b5-f2a96578fda8.png)
",codebytere,platform/linux;bug :beetle:;has-repro-gist;14-x-y,2021-07-23T09:09:41Z,2021-09-22T18:12:50Z,Kilian,tristan957;Kilian;codebytere,Kilian;clavin,,codebytere,,jkleinsc,
electron/electron,30277,"[Bug]: Aspect ratio not respected on maximise/zoom on Mac M1 , gets extra width equivalent to window title bar ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

macOS

### Operating System Version

macOs Big Sur version 11.2(20D64)

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Aspect ratio should be maintained if we maximise  window.

### Actual Behavior

I have created a new BrowserWindow with ```fullscreenable: false```  & ```win.setAspectRatio(1)``` so that window shouldn't be able to have 'full screen mode' to make sure it maintains aspect ratio of 1, while once i  click on maximise button or double click on title bar it looses aspect ration of <b>1</b> as window width increases(28px) equivalent to height of window title bar(title bar is not hidden/auto-hide mode).Every time i resize window with cursor, it always maintains aspect ratio.

### Testcase Gist URL

https://gist.github.com/wasitshafi/68086a64c780040628aea3c071350390

### Additional Information

I have also tried to use ```event.preventDefault()``` on maximize event, but found later it's not working on  maximize/minimize unlike close event whose default behaviour can be prevented.",codebytere,bug :beetle:,2021-07-26T20:57:26Z,2021-07-29T21:27:21Z,wasitshafi,codebytere;wasitshafi,wasitshafi,,codebytere,,codebytere,
electron/electron,30287,"[Bug]: Crash in content::WebContentsImpl::GetNativeView() ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

Windows

### Operating System Version

Windows 10 19042.985

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

No crash

### Actual Behavior

Crash

![grafik](https://user-images.githubusercontent.com/10595986/127132915-fe3f483b-2d98-43a6-b312-cb85f372f125.png)
[7c96ff3a-53d7-4590-9456-ced7be095744.zip](https://github.com/electron/electron/files/6884422/7c96ff3a-53d7-4590-9456-ced7be095744.zip)


### Testcase Gist URL

_No response_

### Additional Information

Considering the crash log is mentioning ""UpdateDraggableRegions"". I assume the crash is happening when using drag/drop api (standard browser feature within renderer) and then closing the window. 
The crash happened for the following case:
(app behavior)
- User drags element (standard drag/drop js code is used here)
- Some condition is fullfilled (app logic)
- Window is closed
- => crash",codebytere,platform/windows;crash :boom:;bug :beetle:;13-x-y;14-x-y;15-x-y,2021-07-27T09:45:17Z,2021-07-29T21:27:02Z,t57ser,t57ser;codebytere,t57ser;codebytere,,codebytere,,codebytere,
electron/electron,30340,"[Bug]: Electron JS print is not working with deviceName  ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.17

### What operating system are you using?

Windows

### Operating System Version

win10 20H2

### What arch are you using?

x64

### Last Known Working Electron version

9.0.0

### Expected Behavior

const options = {
           
            deviceName: ""233B"",
            silent: true,
            printBackground: true,
            margins: {
              marginsType: 'custom',
              top: 0,
              bottom: 0,
              left: 0,
              right: 0
            },
            pageSize: {
              width: curTagBaseSet.printSet.width * 1000 - 1000,
              height: curTagBaseSet.printSet.height * 1000,
            }
          }

### Actual Behavior

webview print is not working with deviceName 

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,bug :beetle:,2021-07-30T08:48:45Z,2021-10-25T15:52:53Z,fucktic,veaba;pushkin-;evlquaker;miniak;wwwfkszcom;AkhmedovSH;lauraylq,fucktic,,codebytere,,jkleinsc,electron/electron#29334;
electron/electron,30402,"[Bug]: Mouse doesn't work for frameless browserwindows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0-beta.18

### What operating system are you using?

Other Linux

### Operating System Version

Fedora 34

### What arch are you using?

x64

### Last Known Working Electron version

13.1.8

### Expected Behavior

Frameless windows should have mouse interaction, similar to regular windows.

### Actual Behavior

Every single regular mouse event is completely ignored, on all levels thinkable. Selection doesn't work, double-clicking doesn't, input fields don't work, and even custom events on the window/body don't fire at all.. The keyboard does work as expected, so the app is not frozen and hasn't crashed.

### Testcase Gist URL

_No response_

### Additional Information

No gist needed, just add `""frame"": false` to any basic electron app to break all mouse functionality when using the latest beta.",ckerr,platform/linux;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;14-x-y;15-x-y,2021-08-04T19:57:53Z,2021-08-10T01:01:20Z,Jelmerro,clavin;ckerr;IZUNA894;Hacksore,Jelmerro;clavin,,MarshallOfSound,,zcbenz,
electron/electron,30509,"[Bug]: Webview not emitting leave-html-full-screen when using ESC key to exit webview fullscreen ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.9

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

n/a

### Expected Behavior

the leave-html-full-screen event is emitted upon exiting the webview's fullscreen when pressing the ESC key. Clicking out of fullscreen eimts properly.

### Actual Behavior

The leave-html-full-screen event is not emitted upon exiting the webview's fullscreen when pressing the ESC key. Clicking out of fullscreen emits properly.

### Testcase Gist URL

_No response_

### Additional Information

In addition, I am not sure about other electron users, however I was personally utilizing the webview fullscreen behavior characterized in 3.1.6, and subsequently ""fixed"" in 3.1.7 and 3.1.8 per the following PRs

https://github.com/electron/electron/pull/30128

https://github.com/electron/electron/pull/29987

Upon clicking a fullscreen Webview button, I would like my app to enter fullscreen, while the webview would enter fullscreen in its containing element, as seen prior to the integration of these PRs. Is there a clean way of entering this view instead while staying up to date with the electron version?
",codebytere,component/webview;bug :beetle:;platform/all;13-x-y;14-x-y,2021-08-12T03:42:23Z,2021-08-17T07:03:46Z,ryankashi,,ryankashi;codebytere,,codebytere,,codebytere,
electron/electron,30514,"[Bug]: DCHECK failed: false. Observers can only be added once! ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

current main

### What operating system are you using?

macOS

### Operating System Version

10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Crashing and reloading a page should succeed without tripping any DCHECKs.

### Actual Behavior

```
[51637:0812/154526.721851:FATAL:observer_list.h(272)] Check failed: false. Observers can only be added once!
0   Electron Framework                  0x000000011b949499 base::debug::CollectStackTrace(void**, unsigned long) + 9
1   Electron Framework                  0x000000011b8656a3 base::debug::StackTrace::StackTrace() + 19
2   Electron Framework                  0x000000011b880f5f logging::LogMessage::~LogMessage() + 175
3   Electron Framework                  0x000000011b881ede logging::LogMessage::~LogMessage() + 14
4   Electron Framework                  0x000000011a9df302 base::ObserverList<content::RenderProcessHostObserver, false, true, base::internal::CheckedObserverAdapter>::AddObserver(content::RenderProcessHostObserver*) + 194
5   Electron Framework                  0x000000011a9d7361 content::RenderProcessHostImpl::Init() + 289
6   Electron Framework                  0x000000011a9c1811 content::RenderFrameHostManager::CreateSpeculativeRenderFrameHost(content::SiteInstance*, content::SiteInstance*, bool) + 177
7   Electron Framework                  0x000000011a9c05cd content::RenderFrameHostManager::GetFrameHostForNavigation(content::NavigationRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) + 1821
8   Electron Framework                  0x000000011a947259 content::NavigationRequest::OnResponseStarted(mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool, blink::NavigationDownloadPolicy, net::NetworkIsolationKey, absl::optional<content::SubresourceLoaderParams>, content::NavigationURLLoaderDelegate::EarlyHints) + 5897
9   Electron Framework                  0x000000011a770664 content::NavigationURLLoaderImpl::NotifyResponseStarted(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool) + 436
10  Electron Framework                  0x000000011a774628 void base::internal::FunctorTraits<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), void>::Invoke<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool>(void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>&&, mojo::StructPtr<network::mojom::URLResponseHead>&&, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>&&, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>&&, content::GlobalRequestID&&, bool&&) + 200
11  Electron Framework                  0x000000011a774548 base::internal::Invoker<base::internal::BindState<void (content::NavigationURLLoaderImpl::*)(mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID const&, bool), base::WeakPtr<content::NavigationURLLoaderImpl>, mojo::StructPtr<network::mojom::URLResponseHead>, mojo::StructPtr<network::mojom::URLLoaderClientEndpoints>, mojo::ScopedHandleBase<mojo::DataPipeConsumerHandle>, content::GlobalRequestID, bool>, void ()>::RunOnce(base::internal::BindStateBase*) + 72
12  Electron Framework                  0x000000011a7763e0 _ZN4base8internal7InvokerINS0_9BindStateIZN7content23NavigationURLLoaderImpl12ParseHeadersERK4GURLPN7network5mojom15URLResponseHeadENS_12OnceCallbackIFvvEEEE3$_2JSE_SB_EEEFvN4mojo9StructPtrINS9_13ParsedHeadersEEEEE7RunOnceEPNS0_13BindStateBaseEOSK_ + 176
13  Electron Framework                  0x00000001174e7116 network::mojom::NetworkService_ParseHeaders_ForwardToCallback::Accept(mojo::Message*) + 214
14  Electron Framework                  0x000000011bd21139 mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) + 1705
15  Electron Framework                  0x000000011bd2744f mojo::MessageDispatcher::Accept(mojo::Message*) + 271
16  Electron Framework                  0x000000011bd229ba mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) + 154
17  Electron Framework                  0x000000011bd2cc47 mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) + 1447
18  Electron Framework                  0x000000011bd2c07a mojo::internal::MultiplexRouter::Accept(mojo::Message*) + 394
19  Electron Framework                  0x000000011bd2744f mojo::MessageDispatcher::Accept(mojo::Message*) + 271
20  Electron Framework                  0x000000011bd19f02 mojo::Connector::DispatchMessage(mojo::Message) + 434
21  Electron Framework                  0x000000011bd1a8f7 mojo::Connector::ReadAllAvailableMessages() + 279
22  Electron Framework                  0x000000011bd1a699 mojo::Connector::OnWatcherHandleReady(unsigned int) + 57
23  Electron Framework                  0x0000000116ffb030 mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback<void (unsigned int)> const&, unsigned int, mojo::HandleSignalsState const&) + 80
24  Electron Framework                  0x000000011bd4b115 mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&) + 405
25  Electron Framework                  0x000000011bd4b600 base::internal::Invoker<base::internal::BindState<void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&), base::WeakPtr<mojo::SimpleWatcher>, int, unsigned int, mojo::HandleSignalsState>, void ()>::RunOnce(base::internal::BindStateBase*) + 160
26  Electron Framework                  0x000000011b8e178b base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 411
27  Electron Framework                  0x000000011b9063ce base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) + 974
28  Electron Framework                  0x000000011b905b3b base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 107
29  Electron Framework                  0x000000011b9069f2 non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 18
30  Electron Framework                  0x000000011b960683 base::MessagePumpCFRunLoopBase::RunWork() + 83
31  Electron Framework                  0x000000011b95f9a2 base::mac::CallWithEHFrame(void () block_pointer) + 10
32  Electron Framework                  0x000000011b96009f base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 63
33  CoreFoundation                      0x00007fff39578832 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
34  CoreFoundation                      0x00007fff395787d1 __CFRunLoopDoSource0 + 103
35  CoreFoundation                      0x00007fff395785eb __CFRunLoopDoSources0 + 209
36  CoreFoundation                      0x00007fff3957731a __CFRunLoopRun + 927
37  CoreFoundation                      0x00007fff3957691e CFRunLoopRunSpecific + 462
38  HIToolbox                           0x00007fff381a2abd RunCurrentEventLoopInMode + 292
39  HIToolbox                           0x00007fff381a27d5 ReceiveNextEventCommon + 584
40  HIToolbox                           0x00007fff381a2579 _BlockUntilNextEventMatchingListInModeWithFilter + 64
41  AppKit                              0x00007fff367e9039 _DPSNextEvent + 883
42  AppKit                              0x00007fff367e7880 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1352
43  AppKit                              0x00007fff367d958e -[NSApplication run] + 658
44  Electron Framework                  0x000000011b96113c base::MessagePumpNSApplication::DoRun(base::MessagePump::Delegate*) + 348
45  Electron Framework                  0x000000011b95fa33 base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 131
46  Electron Framework                  0x000000011b906f5b base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 651
47  Electron Framework                  0x000000011b8bb350 base::RunLoop::Run(base::Location const&) + 880
48  Electron Framework                  0x000000011a476e76 content::BrowserMainLoop::RunMainMessageLoop() + 246
49  Electron Framework                  0x000000011a478bf2 content::BrowserMainRunnerImpl::Run() + 82
50  Electron Framework                  0x000000011a47413b content::BrowserMain(content::MainFunctionParams const&) + 251
51  Electron Framework                  0x00000001189d1b14 content::ContentMainRunnerImpl::RunBrowser(content::MainFunctionParams&, bool) + 1460
52  Electron Framework                  0x00000001189d1455 content::ContentMainRunnerImpl::Run(bool) + 389
53  Electron Framework                  0x00000001189cfa6c content::RunContentProcess(content::ContentMainParams const&, content::ContentMainRunner*) + 588
54  Electron Framework                  0x00000001189d055b content::ContentMain(content::ContentMainParams const&) + 59
55  Electron Framework                  0x0000000116faf227 ElectronMain + 135
56  Electron                            0x000000010d58fd5a main + 298
57  libdyld.dylib                       0x00007fff73618cc9 start + 1
58  ???                                 0x0000000000000002 0x0 + 2
Task trace:
0   Electron Framework                  0x000000011bd4b46f mojo::SimpleWatcher::Context::Notify(unsigned int, MojoHandleSignalsState, unsigned int) + 447
```

### Testcase Gist URL

https://gist.github.com/88d2828d06ce1fda4f9c1770db000923

### Additional Information

To reproduce, run the fiddle under a debug build. It will crash immediately.",codebytere,bug :beetle:,2021-08-12T22:48:10Z,2021-08-18T18:23:06Z,nornagon,,nornagon,,codebytere,,nornagon,
electron/electron,30536,"[Bug]: setSimpleFullscreen does not hide native titlebar ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.9

### What operating system are you using?

macOS

### Operating System Version

11.5.2

### What arch are you using?

x64

### Last Known Working Electron version

v13.0.0-nightly.20210129

### Expected Behavior

<img width=""1680"" alt=""Screen Shot 2021-08-15 at 10 28 53 PM"" src=""https://user-images.githubusercontent.com/964386/129515418-58013fe8-3569-4192-a03e-ca49eb5a7730.png"">


### Actual Behavior

<img width=""1680"" alt=""Screen Shot 2021-08-15 at 10 28 12 PM"" src=""https://user-images.githubusercontent.com/964386/129515412-2e013c7b-a168-4ec1-b29b-3417b86aaf8c.png"">


### Testcase Gist URL

https://gist.github.com/deepak1556/122174b84074ca7790f6ee30bd5578e2

### Additional Information

Regressed from https://github.com/electron/electron/pull/27489

/cc @zcbenz ",zcbenz,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;13-x-y;14-x-y;15-x-y,2021-08-16T05:29:57Z,2021-08-25T23:29:34Z,deepak1556,,deepak1556,,zcbenz,,zcbenz,
electron/electron,30543,"[Bug]: Media keys not working with globalShortcuts on macOS 11 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

macOS

### Operating System Version

Big Sur 

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

`globalShortcut.register('MediaPlayPause', ...)` should be working and pressing that key should trigger the callback in the function.

### Actual Behavior

The Music app starts (if not previously started) when this key is pressed.

None of the other media shortcuts seem to work.

### Testcase Gist URL

https://gist.github.com/AxelTerizaki/3e9c08586f7912f347e44e26ad25c3d0

### Additional Information

I tried a few things while fiddling.

I added my app to System Preferences > Security & Privacy > Input Monitoring, but to no avail. I also added the electron.app fiddle downloaded there just to make sure.

Protip: move `~/Library/Application Support/Electron Fiddle/electron-bin` to your home directory and create a symlink from there to the electron fiddle folder in app support so you can browse to the electron-bin folder and add the electron.app to security and privacy. Finder won't allow you to browse through `Library` by default, it's hidden.

There are numerous issues on this topic, namely #24052 where adding the app to input monitoring apparently works with Electron 8. It might be a regression but I am not quite sure : Electron 8 isn't available through fiddle. I went as far back as 11.4.11 and couldn't get it to work.

Note : I tested this on an Apple Silicon but it likely affects Intel versions too.

Any help would be appreciated! :)

",codebytere,platform/macOS;bug :beetle:;13-x-y;14-x-y;15-x-y;component/globalShortcut,2021-08-16T11:38:58Z,2021-08-17T17:44:17Z,AxelTerizaki,codebytere;AxelTerizaki,AxelTerizaki;codebytere,,codebytere,,jkleinsc,
electron/electron,30564,"[Bug]: Toggling `documentEdited` moves `hiddenInset` traffic lights to the `hidden` position and back once the window is blurred ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.9

### What operating system are you using?

macOS

### Operating System Version

Big Sur 11.5.2

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Toggling the `documentEdited` status on a Browser window with `titleBarStyle: 'hiddenInset'` simply sets the black dot indicating an edited document and not move the traffic lights around.

### Actual Behavior

When the `documentEdited` status is toggled, the traffic lights move from the `hiddenInset` position to simply the `hidden` position (that is: slightly less inset).

Interestingly, once I blur the window and re-focus it (i.e. by moving another window on top of it) this resets the traffic lights back to the hidenInset position while retaining the black dot. When the `documentEdited` status is then toggled again, the traffic lights again move to the `hidden` position, and back to `hiddenInset` once the window is blurred.

## Instructions for the Testcase

1. Run the gist in Electron fiddle on either an ARM64 or Intel Mac
2. Click the ""Toggle documentEdited Status""-button
3. Observe that the traffic lights move further into the corner of the window and a black dot appears
4. Blur the window (e.g. by clicking on the Desktop, activating another application, etc)
5. Observe that the traffic lights move back to the correct position while the black dot is being retained
6. Click ""Toggle documentEdited Status"" again
7. Observe the same behavior, now without the black dot

### Testcase Gist URL

https://gist.github.com/166ffcd98c950e6e97fec05ae4f2683b

### Additional Information

I believe this to be a regression bug directly related to a previous issue of mine: https://github.com/electron/electron/issues/30039

That issue has been fixed with this PR: https://github.com/electron/electron/pull/30322

The previous bug from issue 30039 has been fixed in Electron 13.1.8, but that also introduced the moving around of the traffic lights.",codebytere,platform/macOS;bug :beetle:;13-x-y;14-x-y;15-x-y,2021-08-17T08:38:03Z,2021-08-18T19:09:57Z,nathanlesage,codebytere,nathanlesage;codebytere,,codebytere,,MarshallOfSound,electron/electron#30039;
electron/electron,30658,"[Bug]: TouchBarScrubber panics when items list is empty and ... ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

v13.2.1

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur v11.5.2

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

TouchBarScrubber has empty `items` and `showArrowButtons` set to `true`.

When I click on the arrow button, the app is crashing.



### Actual Behavior

It should not crash if TouchBarScrubber has empty items

### Testcase Gist URL

https://gist.github.com/iMro0t/093a43c38e90ae0a9ddbd1db9d04bb3b

### Additional Information

Console error output

```
2021-08-23 13:21:15.572 Electron[53904:1170468] *** Assertion failure in -[NSScrubberDocumentView scrollPointAligningItemAtIndex:toAlignment:forState:], NSScrubberDocumentView.m:1980
```",codebytere,platform/macOS;bug :beetle:;component/touch-bar;13-x-y;14-x-y;15-x-y,2021-08-23T07:53:29Z,2021-08-24T16:28:57Z,iMro0t,,iMro0t;codebytere,,codebytere,,codebytere,
electron/electron,30666,"[Bug]: capturePage doesn't work for a hidden browser view since version 13.0.0-beta.21 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.0.0-beta.21 and newer
12.0.0-beta.21 and newer

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

11.x

### Expected Behavior

A screenshot should be captured successfully

### Actual Behavior

A zero-sized image is returned instead.

### Testcase Gist URL

https://gist.github.com/d4051b57412bf289d3a812d5387179fe

### Additional Information

* `createBrowserView3` works fine with electron 12.x.y on Mac OS X. 
* `createBrowserView2` doesn't work with electron 12.0.0-beta.21 and newer
* `createBrowserView3` doesn't work with electron 13.0.0-beta.21 and newer
* The only difference between createBrowserView2 and createBrowserView3 is the createBrowserView3 loads `about:blank` before loading the target page.
* Periodically reloading the page and capturing the page will break page loading completely, further loading requests will never be finished,  and setting app.allowRendererProcessReuse to false doesn't help.",codebytere,platform/windows;bug :beetle:;component/BrowserView;13-x-y,2021-08-23T14:50:06Z,2022-07-02T13:59:33Z,zeeker999,zeeker999;sanperrier;codebytere;h5nc;miniak,zeeker999;zcbenz,,codebytere,,zeeker999,
electron/electron,30700,"[Bug]: Setting the BackgroundColor to the BrowserView doesn't work on Windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.2.2

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

ia32

### Last Known Working Electron version

_No response_

### Expected Behavior

BackgroundColor to the BrowserView  is ok

### Actual Behavior

BackgroundColor to the BrowserView is not working

### Testcase Gist URL

https://gist.github.com/weifeiyue/3ddde0d19ce942957af6983049fa2764

### Additional Information

```js
const { app, BrowserView, BrowserWindow } = require('electron')

app.on('ready', () => {
  const win = new BrowserWindow({ width: 1000, height: 600 })

  const view1 = new BrowserView()
  win.addBrowserView(view1)
  view1.setBackgroundColor('#FFFFFF')
  view1.setBounds({ x: 0, y: 0, width: 800, height: 600 })
  view1.webContents.loadURL('https://electronjs.org')

  const view2 = new BrowserView()
  win.addBrowserView(view2)
  view2.setBackgroundColor('#FFFFFF')
  view2.setBounds({ x: 200, y: 0, width: 800, height: 600 })
  view2.webContents.loadURL('https://design.google/')
})

```
<img width=""508"" alt=""WX20210826-004703@2x"" src=""https://user-images.githubusercontent.com/19370201/136980651-ad4ac589-ea1c-422b-bdce-6f1757f52c10.png"">

",codebytere,platform/windows;bug :beetle:;component/BrowserView;13-x-y;stale,2021-08-25T16:48:46Z,2022-11-05T02:21:51Z,weifeiyue,codebytere;weifeiyue;samuelmaddock,weifeiyue;codebytere,,codebytere,,codebytere,
electron/electron,30764,"[Bug]: windows overlay control loss hover effect ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 1909

### What arch are you using?

ia32

### Last Known Working Electron version

_No response_

### Expected Behavior

![2](https://user-images.githubusercontent.com/19370201/131465320-9409423d-ca68-49ce-b318-eb9c2700f04d.gif)


### Actual Behavior

![1](https://user-images.githubusercontent.com/19370201/131465334-04df5820-0609-41a5-9e45-ee4f8ff70760.gif)


### Testcase Gist URL

https://gist.github.com/weifeiyue/b4128f21d8d9e4b9da4cef61038281c4

### Additional Information

```js
const { BrowserWindow, app } = require('electron')

app.on('ready', () => {
    const win = new BrowserWindow({
        width: 800,
        height: 600,
        titleBarStyle: 'hidden',
        titleBarOverlay: true
    })
    win.loadFile('index.html')
})
```

just load a file, it will loss hover effect 
```js
win.loadFile('index.html')
```",mlaurencin,platform/windows;bug :beetle:;14-x-y;15-x-y,2021-08-31T08:03:30Z,2022-01-06T00:08:51Z,weifeiyue,weifeiyue;mlaurencin;tctg-bryan,weifeiyue;mlaurencin,,mlaurencin,,mlaurencin,electron/electron#32360;
electron/electron,30797,"[Bug]: worker_threads not work. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0-alpha.10

### What operating system are you using?

Other Linux

### Operating System Version

Linux fedora 5.13.12-200.fc34.x86_64

### What arch are you using?

x64

### Last Known Working Electron version

14.0.0

### Expected Behavior

Should work without error.

### Actual Behavior

In browser console:
```
VM111 renderer_init:81
TypeError: SharedArrayBuffer is not a constructor
    at VM115 worker:96
    at NativeModule.compileForInternalLoader (VM10 loaders:312)
    at nativeModuleRequire (VM10 loaders:341)
    at VM114 node:worker_threads:11
    at NativeModule.compileForInternalLoader (VM10 loaders:312)
    at NativeModule.compileForPublicLoader (VM10 loaders:252)
    at loadNativeModule (VM92 helpers:40)
    at Module._load (VM89 loader:805)
    at Function.c._load (VM108 asar_bundle:5)
    at Function.o._load (VM111 renderer_init:29)
```

### Testcase Gist URL

https://gist.github.com/clavin/0b9f10737f395d36185c71b67c925a49

### Additional Information

[index.html]
```
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
    <meta http-equiv=""Content-Security-Policy"" content=""script-src 'self' 'unsafe-inline';"" />
  </head>
  <body>
    <h1>Hello World!</h1>
  </body>
</html>
```


[main.js]
```
const { app, BrowserWindow } = require('electron')
const path = require('path')

function createWindow () {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      preload: path.join(__dirname, 'preload.js')
    }
  })

  win.loadFile('index.html')
}

app.whenReady().then(() => {
  createWindow()

  app.on('activate', () => {
    if (BrowserWindow.getAllWindows().length === 0) {
      createWindow()
    }
  })
})

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})
```


[preload.js]
`require('worker_threads');`",codebytere,bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;status/confirmed;has-repro-comment;15-x-y;bugbot/maintainer-needed,2021-09-01T14:49:53Z,2021-09-08T23:24:59Z,pool683,clavin;MarshallOfSound,pool683;clavin,,clavin,,MarshallOfSound,
electron/electron,30798,"[Bug]: Full Screen Transparent Windows are White on Windows 10 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro version 20H2, OS build 19042.1110

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

A transparent window should be transparent, no matter its height or width.

### Actual Behavior

**BROKEN**

GIVEN your window is transparent, frameless, and you are running on windows
AND your window's width === monitor width and the window's height === monitor height
AND its top left corner is the top left corner of your monitor
THEN your transparent window will be white and render nothing

GIVEN prereqs above
AND your window's width === monitor width - 1 and the window's height === monitor height
AND its top left corner is the top left corner of your monitor
THEN your transparent window will be white and render nothing

GIVEN prereqs above
AND your window's width === monitor width and the window's height === monitor height
AND its top left corner is the top left corner of your monitor
THEN your transparent window will be white and render nothing


**WORKS**
GIVEN prereqs above
AND your window's width === monitor width and the window's height === monitor height
AND its top left corner is the top left corner of your monitor + 1 px in the X or Y direction
THEN your transparent window will be transparent and perfect

GIVEN prereqs above
AND your window's width === monitor width - 1 and the window's height === monitor height - 1
AND its top left corner is the top left corner of your monitor
THEN your transparent window will be transparent and perfect



### Testcase Gist URL

https://gist.github.com/d52ceca16461bfe12b2bf936bc462412

### Additional Information

If you shift the top left corner of the window by 1 pixel, the bug goes away. I assume there's a falsey check somewhere and 0 is triggering it. I didn't test this on a secondary monitor. ",samuelmaddock,platform/windows;bug :beetle:;status/confirmed;has-repro-gist;12-x-y;13-x-y;14-x-y;15-x-y,2021-09-01T19:21:10Z,2021-09-07T08:18:44Z,carterbs,samuelmaddock;carterbs,carterbs;samuelmaddock,,samuelmaddock,,codebytere,
electron/electron,30807,"[Bug]: Crash in WebContents::RenderFrameHostChanged on line CHECK_EQ(web_frame->render_frame_host(), old_host) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

11.3.0

### Expected Behavior

Electron should not crash

### Actual Behavior

Electron crashes in method `WebContents::RenderFrameHostChanged` on line `CHECK_EQ(web_frame->render_frame_host(), old_host);`

### Testcase Gist URL

_No response_

### Additional Information

Crash Details:
![image](https://user-images.githubusercontent.com/4749907/131809004-03584d1f-3de8-425c-8736-d5045d2a9fa4.png)

Stack Trace:
[stacktrace.txt](https://github.com/electron/electron/files/7097139/stacktrace.txt)

The issue seems to happen when frequently opening /closing BrowserWindows, however we haven't been able yet to find a small reproducible example.
",samuelmaddock,bug :beetle:;status/confirmed;14-x-y;15-x-y,2021-09-02T08:01:35Z,2021-09-08T23:19:50Z,be-dcodeit,be-dcodeit;MarshallOfSound,be-dcodeit;clavin,,samuelmaddock,,MarshallOfSound,
electron/electron,30828,"[Bug]: Window Controls Overlay have an indentation of 1 pixel to the right edge of the screen in `maximized` state ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0-nightly.20210902

### What operating system are you using?

Windows

### Operating System Version

琚欐噲閿岃嶈嬫郴	Windows 10 Pro 21H1 Build 19043.1165

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Window Controls Overlay in the expanded state should be adjacent to the right edge of the screen.

### Actual Behavior

Window Controls Overlay have an indentation of 1 pixel to the right edge of the screen. This means that you cannot close the window with a quick cursor movement because it ""flies"" past the button

### Testcase Gist URL

https://gist.github.com/2b4c2171fc64899bb394d0e83896f853

### Additional Information

![琚熻柂瑜ㄥ睉鑺娉 姊版郴瑜夐偑钖閭 2021-09-03 172148](https://user-images.githubusercontent.com/1662812/132020911-a35a7686-a916-4b2f-943b-421638677ad1.png)
",mlaurencin,platform/windows;bug :beetle:;15-x-y,2021-09-03T14:24:29Z,2021-09-16T00:34:51Z,cawa-93,,cawa-93;mlaurencin,,mlaurencin,,zcbenz,
electron/electron,30858,"[Bug]: Crash on attaching the file using generic input type=""file"" form control ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0-beta.2

### What operating system are you using?

Linux 5.13.13 kernel

### What arch are you using?

x64

### Last Known Working Electron version

14.0.0

### Expected Behavior

The app doesn't crash.

### Actual Behavior

The app crashes.

### Testcase Gist URL

https://github.com/vladimiry/ElectronMail/releases/tag/v4.12.6

### Additional Information

It's not so trivial task to create an isolated repro for the case like this, but link to the app release has been attached as well as the crash stack.

Downgrading `15.0.0-beta.2 => 14.0.0` resolves the issue.

See attached [crash stack](https://github.com/electron/electron/files/7116429/dump.txt).
",VerteDinde,platform/windows;platform/linux;crash :boom:;bug :beetle:,2021-09-06T14:12:23Z,2021-09-13T13:25:13Z,vladimiry,VerteDinde;vladimiry;nornagon;codebytere,vladimiry;VerteDinde,,VerteDinde,,VerteDinde,
electron/electron,30884,"[Bug]: Renderer process crashes after calling navigator.fonts.query() ### Preflight Checklist

- [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0-alpha.10

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.5.2

### What arch are you using?

x64

### Last Known Working Electron version

This feature never worked before

### Expected Behavior

`navigator.fonts.query()` should return a promise which in turn should resolve with a list of fonts provided by the operating system.

### Actual Behavior

`navigator.fonts.query()` causes the renderer process to crash (the window becomes gray and the dev tools are disconnected).

### Testcase Gist URL

_No response_

### Additional Information

`navigator.fonts.query()` is part of the experimental [Local Font Access API](https://www.chromestatus.com/feature/6234451761692672) and it must be first enabled by adding `FontAccess` to `webPreferences.enableBlinkFeatures`.

I was also able to reproduce this bug with Electron 13.2.3. I was unable to reproduce it with Chrome 92.",codebytere,crash :boom:;bug :beetle:;platform/all;has-repro-gist;13-x-y;14-x-y;15-x-y,2021-09-08T09:26:51Z,2021-09-15T13:56:38Z,jarek-foksa,codebytere;gpetrov;jarek-foksa;nornagon,jarek-foksa;codebytere,,codebytere,,codebytere,
electron/electron,30889,"[Bug]: No supported version supports selecting a printer through silent printing ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

12.x, 13.x, 14.x

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

11.x

### Expected Behavior

Printing with `silent: true` should allow us to select a printer though `deviceName`.

### Actual Behavior

Prints using Windows default printer opposed to the one we assigned it to.

### Testcase Gist URL

_No response_

### Additional Information

This is technically a ""duplicate"" as it has been reported before. But since this now affects every supported version of Electron projects cannot move forward with an upgrade if they depend on this feature. In our case it's point of sale system software and our ability to easily maintain a wide range of receipt printers. We strive to make sure all dependencies are the latest with proper security fixes. This and since new versions of Electron will start to trigger the bot to mark the duplicates as outdated/closed I felt like this merited a new issue. Apologies if not the case.",codebytere,platform/windows;bug :beetle:;12-x-y;13-x-y;14-x-y;15-x-y,2021-09-08T22:19:03Z,2021-10-25T15:52:52Z,baconbrad,almassapargali;AkhmedovSH;kerattila;exander77;evlquaker;baconbrad,baconbrad;mlaurencin,,codebytere,,jkleinsc,
electron/electron,30890,"[Bug]: webview stays blank when navigating to facebook and crashes after another navigation ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13, 14, 15, 16, 17

### What operating system are you using?

Windows

### Operating System Version

10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Webview should show the web page, electron should not crash

### Actual Behavior

Navigate to facebook inside a webview, the page stays white, in the devtools of the webview write location='http://www.youtube.com' and electron will crash

### Testcase Gist URL

https://gist.github.com/t57ser/886de25d244907a32c01fb1147d59ce0

### Additional Information

With electron 15 i saw this message in the console after navigating to facebook:
![image](https://user-images.githubusercontent.com/10595986/132595227-41d1ea5b-c0e0-4cbe-a684-bae025f6aa0b.png)
",codebytere,platform/windows;platform/macOS;component/webview;crash :boom:;bug :beetle:;status/confirmed;has-repro-gist;13-x-y;14-x-y;15-x-y;stale,2021-09-08T22:41:27Z,2022-11-05T02:21:24Z,t57ser,clavin;t57ser;KVAnton-WEB;nornagon,t57ser;mlaurencin;clavin,,MarshallOfSound,,,
electron/electron,30915,"[Bug]: Backdrop Filter (Blur) Broken on Body background-color Alpha Value Set to 0 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.5.2

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

I have also noticed something like this back in 13.0.1

### Expected Behavior

When the HTML body's CSS is set as so:
```CSS
body {
    background-color: rgba(255, 255, 255, 0);         /* The alpha value is set to 0 */
}
```
the `blur()` style of `backdrop-filter`, when applied to a DOM, should be (of course) **_NOT_** broken, as it is in this screenshot:

![Screen Shot 2021-09-10 at 10 48 44 AM](https://user-images.githubusercontent.com/83843298/132896896-eb55349c-263a-4ce3-88b1-5fb045217f34.png)
###### but because of the bug, this pic only worked out because I set the alpha to 1


### Actual Behavior

Instead -- when the HTML body's CSS is set with an alpha of 0 -- the `blur()` style of `backdrop-filter` becomes broken.

![Screen Shot 2021-09-10 at 10 47 57 AM](https://user-images.githubusercontent.com/83843298/132897092-65d279ee-fcce-4c10-a0b9-8f95412b5c99.png)

###### with alpha at 0, you can see how the blur effect is more like a glow effect.


### Testcase Gist URL

https://gist.github.com/BitesPotatoBacks/16b9ea6925701b895f512ff92f439ba2

### Additional Information

I originally thought this bug occurred when vibrancy was set on Electron's `BrowserWindow`, but I recently realized it was **actually** due to the alpha channel of the HTML body being set to 0...

Because of this, I don't know whether this is actually just bug of _Chromium_, or if Electron's code itself is the culprit..? 棣",codebytere,platform/macOS;bug :beetle:;14-x-y;15-x-y;stale,2021-09-10T18:08:54Z,2022-11-06T02:19:38Z,BitesPotatoBacks,codebytere;BitesPotatoBacks,BitesPotatoBacks;codebytere,codebytere,codebytere,,,
electron/electron,30979,"[Bug]: maximize behavior exception in case of aspectRatio setting ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

11.0.0 ~ latest (All versions)

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.5.2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

After setting the aspectRatio, maximize and unmaximize events can be listened to normally.

```ts
mainWindow.setAspectRatio(16 / 11);
mainWindow.setFullScreenable(false);

mainWindow.on(""maximize"", () => {
    // ....
});

mainWindow.on(""unmaximize"", () => {
    // ...
});
```

1. Click maximize button in Window
2. trigger `maximize` event
2. move Window or use `mainWindow.center()` function
3. Click maximize button in Window
4. trigger `unmaximize` event

### Actual Behavior

After setting the aspectRatio and maximizing, unmaximize will never be triggered after dragging the window.

```ts
mainWindow.setAspectRatio(16 / 11);
mainWindow.setFullScreenable(false);

mainWindow.on(""maximize"", () => {
    // ....
});

mainWindow.on(""unmaximize"", () => {
    // ...
});
```

1. Click maximize button in Window
2. trigger `maximize` event
3. move Window or use `mainWindow.center()` function
4. Click maximize button in Window
5. trigger `maximize` event (No matter how many times the maximize button is clicked, unmaximize will never be triggered)

https://user-images.githubusercontent.com/8198408/133363284-1287082a-d5d3-4555-bedf-6a0fde4e46fe.mp4



### Testcase Gist URL

https://gist.github.com/BlackHole1/b67e544cfbb397f6bd53ea8ab7008b8c

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;11-x-y;stale,2021-09-15T03:06:18Z,2022-11-06T02:19:30Z,BlackHole1,BlackHole1;codebytere,BlackHole1;codebytere;sofianguy,,codebytere,,,
electron/electron,31018,"[Bug]: ContextIsolation changes page behavior and breaks protonmail login ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

any 15.x.y-beta, including beta.7

### What operating system are you using?

Other Linux

### Operating System Version

Fedora 34

### What arch are you using?

x64

### Last Known Working Electron version

14.0.1

### Expected Behavior

Logins of Protonmail inside webviews should work and decrypt messages after login or show a message that the password was incorrect, regardless of the webpreferences of the webview.

### Actual Behavior

On Electron 14 it works as expected, you can login and it all works. The same is true for Electron 15, but ONLY if you have enabled contextIsolation. I can't do that for my project as I need to overwrite existing window properties, and since the contextBridge doesn't allow this I have contextIsolation disabled. This isn't a big issue, as I only run a specific set of preloads inside the webview, but for some odd reason the protonmail login gives this vague error of ""invalid character"", that I can ONLY reproduce with contextIsolation disabled using the 15 betas. It does not happen in Chromium, it does not happen when enabling contextIsolation and it did not happen in Electron 14 and earlier, where you could just sign in.

### Testcase Gist URL

https://gist.github.com/Jelmerro/65c3cabe4ac91461f382f6b15361b7b5

### Additional Information

_No response_",codebytere,platform/linux;bug :beetle:;15-x-y,2021-09-18T20:17:33Z,2022-08-25T06:55:08Z,Jelmerro,Jelmerro;nornagon;codebytere,Jelmerro;sofianguy,,,,zcbenz,
electron/electron,31019,"[Bug]: Cannot change webview background color anymore ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.1

### What operating system are you using?

Windows

### Operating System Version

10

### What arch are you using?

x64

### Last Known Working Electron version

13.4.0

### Expected Behavior

When the property `backgroundColor` of the BrowserWindow is set with anything than white (eg. red), webviews contained in this BrowserWindow should have their background color set to the same color.
Same for transparency.

### Actual Behavior

When the property `backgroundColor` of the BrowserWindow is set with anything than white (eg. red), webviews contained in this BrowserWindow have their background color stay white.
If transparency is applied on the BrowserWindow, webviews stay opaque.

### Testcase Gist URL

_No response_

### Additional Information

I made sure that the background was set to `transparent` in my CSS webview html page.",miniak,platform/windows;bug :beetle:;blocked/need-repro,2021-09-19T23:23:27Z,2022-01-12T09:22:34Z,Akwd22,hgouveia;ramanjitsingh-hub;arsinclair;KorbsStudio;codebytere;eelco;VerteDinde;miniak;theolivenbaum;hovancik,Akwd22;VerteDinde,,miniak,,codebytere,electron/electron#30759;
electron/electron,31052,"[Bug]: Draggable areas on parent windows are added to their child BrowserViews on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

11.2? and 12.0.1

### Expected Behavior

BrowserViews should not contain a draggable area that isn't explicitly added to it.

### Actual Behavior

When a BrowserView is the child of a window that has a draggable bar at the top, the BrowserView takes on the draggable area as well and the app can be dragged using an area that isn't explicitly defined.

### Testcase Gist URL

_No response_

### Additional Information

Reproduced on `electron-quick-start` branch here:
https://github.com/devinbinnie/electron-quick-start/tree/draggable_areas_bv_macos",codebytere,platform/windows;platform/macOS;bug :beetle:;14-x-y;15-x-y,2021-09-21T19:12:53Z,2021-09-30T09:41:08Z,devinbinnie,,devinbinnie;codebytere,,codebytere,,codebytere,
electron/electron,31058,"[Bug]: Inconsistent window dragging behavior between BrowserWindow / BrowserView ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.1.7

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.5.2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Dragging a `-webkit-app-region: drag` area behaves differently if the `WebContents` are loaded in the `BrowserWindow` vs. a `BrowserView`. There are three noticeable differences; I expected both scenarios to work the way a `BrowserWindow` does, i.e.

- When you drag a draggable region between two monitors, a semi-transparent preview should show up on the ""inactive"" monitor
- When you click and drag a draggable region on a not-focused `BrowserWindow`, the window should reposition itself as expected
- When you're mid-drag and your mouse cursor ""leaves"" a draggable area, the window should smoothly catch up to the new mouse position

### Actual Behavior

Here is a Loom demoing the difference between expected and actual behavior: https://www.loom.com/share/7d28722ac7bb4e1eb37aabc5bae53f8b

- When you drag a `BrowserView`'s draggable region between two monitors, no semi-transparency effects occur and the window ""snaps"" to a newly-active monitor once activated
    - This is especially obvious when two monitors are positioned spatially above / below each other; dragging to the bottom window will snap aggressively such that the top of the window is beneath the ""Apple menu bar"" at the top of the screen.
- When you click and drag a `BrowserView`'s draggable region when its containing window was not focused, it will activate the window and ignore the mouse drag
- When you're mid-drag with a `BrowserView`'s draggable region and your mouse cursor ""leaves"" a draggable area, the window ""stutters"" to the new position, or sometimes even does not move to the new position at all.

### Testcase Gist URL

https://gist.github.com/0a371fe58ff8c8b72287629ab6d76d34

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;13-x-y,2021-09-22T00:51:23Z,2022-01-24T16:08:32Z,anulman,anulman;codebytere,anulman;codebytere,,codebytere,,codebytere,
electron/electron,31064,"[Bug]: crypto JWK Key Export results in SIGSEGV ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0

### What operating system are you using?

macOS

### Operating System Version

Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

not applicable, these crypto APIs did not exist in node until v16 that is now first time bundled

### Expected Behavior

I expect either the import to throw due to an unsupported algorithm, or the export to throw, not to crash the process.

### Actual Behavior

```
Electron exited with signal SIGSEGV
```

### Testcase Gist URL

https://gist.github.com/panva/58dbf863984fbf94a94682efc5d99d8a

### Additional Information

```
Process:               Electron [87607]
Path:                  /Users/USER/*/Electron.app/Contents/MacOS/Electron
Identifier:            com.github.Electron
Version:               15.0.0 (15.0.0)
Code Type:             X86-64 (Native)
Parent Process:        node [87606]
Responsible:           Terminal [1755]
User ID:               501

Date/Time:             2021-09-22 14:26:12.076 +0200
OS Version:            macOS 11.6 (20G165)
Report Version:        12
Bridge OS Version:     5.5 (18P4759a)
Anonymous UUID:        666B8736-E791-2AC2-F6CB-233D2C20FFCB

Sleep/Wake UUID:       344A2A24-30E9-4E4C-9360-3F30B0EEC742

Time Awake Since Boot: 200000 seconds
Time Since Wake:       57000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000008
Exception Note:        EXC_CORPSE_NOTIFY

Termination Signal:    Segmentation fault: 11
Termination Reason:    Namespace SIGNAL, Code 0xb
Terminating Process:   exc handler [87607]

VM Regions Near 0x8:
--> 
    __TEXT                      106048000-106098000    [  320K] r-x/r-x SM=COW  /Users/*/Electron.app/Contents/MacOS/Electron

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.Electron.framework 	0x0000000111aec011 node::SetTracingController(v8::TracingController*) + 348369
1   com.github.Electron.framework 	0x0000000111aea5e1 node::SetTracingController(v8::TracingController*) + 341665
2   com.github.Electron.framework 	0x000000010ebec8e3 v8::internal::baseline::BytecodeOffsetIterator::UpdatePointers() + 9107
3   ???                           	0x000000470007d958 0 + 304943192408
4   ???                           	0x000000470000b6a0 0 + 304942724768
5   ???                           	0x00000047000149b4 0 + 304942762420
6   ???                           	0x0000004700107b13 0 + 304943758099
7   ???                           	0x000000470000b6a0 0 + 304942724768
8   ???                           	0x000000470000b6a0 0 + 304942724768
9   ???                           	0x000000470000b6a0 0 + 304942724768
10  ???                           	0x0000004700009718 0 + 304942716696
11  ???                           	0x00000047000094a7 0 + 304942716071
12  com.github.Electron.framework 	0x000000010ec5cc6c v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 668
13  com.github.Electron.framework 	0x000000010ec3f6b1 v8::internal::DebugEvaluate::Global(v8::internal::Isolate*, v8::internal::Handle<v8::internal::JSFunction>, v8::debug::EvaluateGlobalMode, v8::internal::REPLMode) + 257
14  com.github.Electron.framework 	0x000000010ec3f57c v8::internal::DateCache::LeastRecentlyUsedDST(v8::internal::DateCache::DST*) + 6812
15  com.github.Electron.framework 	0x000000010ec3fce9 v8::debug::EvaluateGlobal(v8::Isolate*, v8::Local<v8::String>, v8::debug::EvaluateGlobalMode, bool) + 201
16  com.github.Electron.framework 	0x000000010f1543ce v8_inspector::V8InspectorSession::canDispatchMethod(v8_inspector::StringView) + 33806
17  com.github.Electron.framework 	0x000000010f117033 v8_inspector::protocol::Runtime::API::StackTraceId::fromBinary(unsigned char const*, unsigned long) + 7827
18  com.github.Electron.framework 	0x000000010f16dbc8 v8_inspector::V8StackTraceId::ToString() + 81192
19  com.github.Electron.framework 	0x000000010f14daad v8_inspector::V8InspectorSession::canDispatchMethod(v8_inspector::StringView) + 6893
20  com.github.Electron.framework 	0x0000000111aa8212 node::SetTracingController(v8::TracingController*) + 70354
21  com.github.Electron.framework 	0x0000000111aa7e5a node::SetTracingController(v8::TracingController*) + 69402
22  com.github.Electron.framework 	0x0000000111aadcc0 node::SetTracingController(v8::TracingController*) + 93568
23  com.github.Electron.framework 	0x000000010ebec8e3 v8::internal::baseline::BytecodeOffsetIterator::UpdatePointers() + 9107
24  ???                           	0x000000470007d958 0 + 304943192408
25  ???                           	0x000000470000b6a0 0 + 304942724768
26  ???                           	0x000000470000b6a0 0 + 304942724768
27  ???                           	0x000000470000b6a0 0 + 304942724768
28  ???                           	0x000000470000b6a0 0 + 304942724768
29  ???                           	0x00000047001ef52d 0 + 304944706861
30  ???                           	0x00000047001e9d52 0 + 304944684370
31  ???                           	0x00000047001e1d09 0 + 304944651529
32  ???                           	0x00000047001e3026 0 + 304944656422
33  ???                           	0x00000047001ece80 0 + 304944696960
34  ???                           	0x00000047001f500b 0 + 304944730123
35  ???                           	0x000000470003ebee 0 + 304942935022
36  ???                           	0x00000047001e597e 0 + 304944667006
37  ???                           	0x000000470000b6a0 0 + 304942724768
38  ???                           	0x000000470000b6a0 0 + 304942724768
39  ???                           	0x000000470000b6a0 0 + 304942724768
40  ???                           	0x000000470000b6a0 0 + 304942724768
41  ???                           	0x000000470000b6a0 0 + 304942724768
42  ???                           	0x000000470000b6a0 0 + 304942724768
43  ???                           	0x00000047001dcbda 0 + 304944630746
44  ???                           	0x0000004700009718 0 + 304942716696
45  ???                           	0x00000047000094a7 0 + 304942716071
46  com.github.Electron.framework 	0x000000010ec5cc6c v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 668
47  com.github.Electron.framework 	0x000000010ebb05d1 v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 689
48  com.github.Electron.framework 	0x0000000111924952 node::CallbackScope::~CallbackScope() + 2098
49  com.github.Electron.framework 	0x000000011193c51f node::EmitAsyncDestroy(node::Environment*, node::async_context) + 72847
50  com.github.Electron.framework 	0x0000000111a85cac node::PromiseRejectCallback(v8::PromiseRejectMessage) + 202908
51  com.github.Electron.framework 	0x0000000111a87f38 node::PromiseRejectCallback(v8::PromiseRejectMessage) + 211752
52  com.github.Electron.framework 	0x0000000111a8d4f0 node::PromiseRejectCallback(v8::PromiseRejectMessage) + 233696
53  com.github.Electron.framework 	0x000000010e34589d uv_signal_stop + 2557
54  com.github.Electron.framework 	0x000000010e34dbdb uv_free_interface_addresses + 2283
55  com.github.Electron.framework 	0x000000010e33c31f uv_run + 319
56  com.github.Electron.framework 	0x000000010e49c3c4 ElectronInitializeICUandStartNode + 1368500
57  com.github.Electron.framework 	0x000000010fe479bf v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10335119
58  com.github.Electron.framework 	0x000000010fe5f97f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10433359
59  com.github.Electron.framework 	0x000000010fe9849e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10665582
60  com.github.Electron.framework 	0x000000010fe949d2 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10650530
61  com.github.Electron.framework 	0x000000010fe97c4f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10663455
62  com.apple.CoreFoundation      	0x00007fff205672bc __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
63  com.apple.CoreFoundation      	0x00007fff20567224 __CFRunLoopDoSource0 + 180
64  com.apple.CoreFoundation      	0x00007fff20566fa4 __CFRunLoopDoSources0 + 242
65  com.apple.CoreFoundation      	0x00007fff205659cc __CFRunLoopRun + 893
66  com.apple.CoreFoundation      	0x00007fff20564f8c CFRunLoopRunSpecific + 563
67  com.apple.HIToolbox           	0x00007fff287ad1f3 RunCurrentEventLoopInMode + 292
68  com.apple.HIToolbox           	0x00007fff287acf55 ReceiveNextEventCommon + 587
69  com.apple.HIToolbox           	0x00007fff287accf3 _BlockUntilNextEventMatchingListInModeWithFilter + 70
70  com.apple.AppKit              	0x00007fff22d6e172 _DPSNextEvent + 864
71  com.apple.AppKit              	0x00007fff22d6c945 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1364
72  com.apple.AppKit              	0x00007fff22d5ec69 -[NSApplication run] + 586
73  com.github.Electron.framework 	0x000000010fe98b86 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10667350
74  com.github.Electron.framework 	0x000000010fe976f2 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10662082
75  com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
76  com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
77  com.github.Electron.framework 	0x000000010f790d85 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 3295061
78  com.github.Electron.framework 	0x000000010f7924e2 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 3301042
79  com.github.Electron.framework 	0x000000010f78e40c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 3284444
80  com.github.Electron.framework 	0x000000010eb6a5d3 electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 6679267
81  com.github.Electron.framework 	0x000000010eb6a06b electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 6677883
82  com.github.Electron.framework 	0x000000010eb68a9b electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 6672299
83  com.github.Electron.framework 	0x000000010eb69339 electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 6674505
84  com.github.Electron.framework 	0x000000010e34e1d6 ElectronMain + 134
85  com.github.Electron           	0x0000000106049666 0x106048000 + 5734
86  libdyld.dylib                 	0x00007fff2048af3d start + 1

Thread 1:
0   libsystem_pthread.dylib       	0x00007fff2046b420 start_wqthread + 0

Thread 2:
0   libsystem_pthread.dylib       	0x00007fff2046b420 start_wqthread + 0

Thread 3:
0   libsystem_pthread.dylib       	0x00007fff2046b420 start_wqthread + 0

Thread 4:
0   libsystem_pthread.dylib       	0x00007fff2046b420 start_wqthread + 0

Thread 5:
0   libsystem_pthread.dylib       	0x00007fff2046b420 start_wqthread + 0

Thread 6:: ThreadPoolServiceThread
0   libsystem_kernel.dylib        	0x00007fff204431d2 kevent64 + 10
1   com.github.Electron.framework 	0x000000010feab3d5 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10743205
2   com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
3   com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
4   com.github.Electron.framework 	0x000000010fe7d4a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555000
5   com.github.Electron.framework 	0x000000010fe6a6dd v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10477741
6   com.github.Electron.framework 	0x000000010fe7d63d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555405
7   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
8   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
9   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 7:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74ead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10520701
5   com.github.Electron.framework 	0x000000010fe7498d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519389
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 8:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74af5 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519749
5   com.github.Electron.framework 	0x000000010fe7492d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519293
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 9:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74ead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10520701
5   com.github.Electron.framework 	0x000000010fe7498d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519389
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 10:: Chrome_IOThread
0   libsystem_kernel.dylib        	0x00007fff204431d2 kevent64 + 10
1   com.github.Electron.framework 	0x000000010feab3d5 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10743205
2   com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
3   com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
4   com.github.Electron.framework 	0x000000010fe7d4a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555000
5   com.github.Electron.framework 	0x000000010f792ebf v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 3303567
6   com.github.Electron.framework 	0x000000010fe7d63d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555405
7   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
8   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
9   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 11:: MemoryInfra
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe9c11e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681070
4   com.github.Electron.framework 	0x000000010fe1756f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10137407
5   com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
6   com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
7   com.github.Electron.framework 	0x000000010fe7d4a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555000
8   com.github.Electron.framework 	0x000000010fe7d63d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555405
9   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
10  libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
11  libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 12:
0   libsystem_kernel.dylib        	0x00007fff2043ec4a kevent + 10
1   com.github.Electron.framework 	0x000000010e34d80e uv_free_interface_addresses + 1310
2   com.github.Electron.framework 	0x000000010e33c31f uv_run + 319
3   com.github.Electron.framework 	0x0000000111a37dbf node::OnFatalError(char const*, char const*) + 444799
4   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
5   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 13:
0   libsystem_kernel.dylib        	0x00007fff2043ccde __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff2046fe49 _pthread_cond_wait + 1298
2   com.github.Electron.framework 	0x000000010e348379 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000111a37f92 node::OnFatalError(char const*, char const*) + 445266
4   com.github.Electron.framework 	0x0000000111a357e7 node::OnFatalError(char const*, char const*) + 435111
5   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
6   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 14:
0   libsystem_kernel.dylib        	0x00007fff2043ccde __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff2046fe49 _pthread_cond_wait + 1298
2   com.github.Electron.framework 	0x000000010e348379 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000111a37f92 node::OnFatalError(char const*, char const*) + 445266
4   com.github.Electron.framework 	0x0000000111a357e7 node::OnFatalError(char const*, char const*) + 435111
5   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
6   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 15:
0   libsystem_kernel.dylib        	0x00007fff2043ccde __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff2046fe49 _pthread_cond_wait + 1298
2   com.github.Electron.framework 	0x000000010e348379 uv_cond_wait + 9
3   com.github.Electron.framework 	0x0000000111a37f92 node::OnFatalError(char const*, char const*) + 445266
4   com.github.Electron.framework 	0x0000000111a357e7 node::OnFatalError(char const*, char const*) + 435111
5   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
6   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 16:
0   libsystem_kernel.dylib        	0x00007fff2043a2f6 semaphore_wait_trap + 10
1   com.github.Electron.framework 	0x000000010e348920 uv_sem_wait + 16
2   com.github.Electron.framework 	0x0000000111aa70a3 node::SetTracingController(v8::TracingController*) + 65891
3   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
4   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 17:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2056749f __CFRunLoopServiceMachPort + 316
3   com.apple.CoreFoundation      	0x00007fff20565b7f __CFRunLoopRun + 1328
4   com.apple.CoreFoundation      	0x00007fff20564f8c CFRunLoopRunSpecific + 563
5   com.apple.Foundation          	0x00007fff212f6607 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x000000010fe98ad9 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10667177
7   com.github.Electron.framework 	0x000000010fe976f2 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10662082
8   com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
9   com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
10  com.github.Electron.framework 	0x000000010fe7d4a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555000
11  com.github.Electron.framework 	0x000000010fe7d63d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555405
12  com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
13  libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
14  libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 18:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fff2043acce read + 10
1   com.github.Electron.framework 	0x000000010e4f6216 ElectronInitializeICUandStartNode + 1736710
2   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
3   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
4   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 19:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2056749f __CFRunLoopServiceMachPort + 316
3   com.apple.CoreFoundation      	0x00007fff20565b7f __CFRunLoopRun + 1328
4   com.apple.CoreFoundation      	0x00007fff20564f8c CFRunLoopRunSpecific + 563
5   com.apple.Foundation          	0x00007fff212f6607 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 212
6   com.github.Electron.framework 	0x000000010fe98ad9 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10667177
7   com.github.Electron.framework 	0x000000010fe976f2 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10662082
8   com.github.Electron.framework 	0x000000010fe60d2a v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10438394
9   com.github.Electron.framework 	0x000000010fe3246c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10247740
10  com.github.Electron.framework 	0x000000010fe7d4a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555000
11  com.github.Electron.framework 	0x000000010fe7d63d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10555405
12  com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
13  libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
14  libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 20:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74ead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10520701
5   com.github.Electron.framework 	0x000000010fe7498d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519389
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 21:: CompositorTileWorker1
0   libsystem_kernel.dylib        	0x00007fff2043ccde __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fff2046fe49 _pthread_cond_wait + 1298
2   com.github.Electron.framework 	0x000000010fe9264b v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10641435
3   com.github.Electron.framework 	0x00000001108dfb35 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 21443845
4   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
5   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
6   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 22:: ThreadPoolSingleThreadForegroundBlocking0
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74ead v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10520701
5   com.github.Electron.framework 	0x000000010fe749ed v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519485
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 23:
0   libsystem_kernel.dylib        	0x00007fff2043a2f6 semaphore_wait_trap + 10
1   com.github.Electron.framework 	0x000000010e348920 uv_sem_wait + 16
2   com.github.Electron.framework 	0x000000010e49c299 ElectronInitializeICUandStartNode + 1368201
3   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
4   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 24:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.apple.CoreFoundation      	0x00007fff2056749f __CFRunLoopServiceMachPort + 316
3   com.apple.CoreFoundation      	0x00007fff20565b7f __CFRunLoopRun + 1328
4   com.apple.CoreFoundation      	0x00007fff20564f8c CFRunLoopRunSpecific + 563
5   com.apple.AppKit              	0x00007fff22ef423a _NSEventThread + 124
6   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
7   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 25:: ThreadPoolSingleThreadSharedBackgroundBlocking1
0   libsystem_kernel.dylib        	0x00007fff2043a2ba mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fff2043a62c mach_msg + 60
2   com.github.Electron.framework 	0x000000010fe9c28f v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10681439
3   com.github.Electron.framework 	0x000000010fe7448e v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10518110
4   com.github.Electron.framework 	0x000000010fe74af5 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519749
5   com.github.Electron.framework 	0x000000010fe7495d v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10519341
6   com.github.Electron.framework 	0x000000010fe93118 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 10644200
7   libsystem_pthread.dylib       	0x00007fff2046f8fc _pthread_start + 224
8   libsystem_pthread.dylib       	0x00007fff2046b443 thread_start + 15

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000001  rbx: 0x00007ffee9ba9f08  rcx: 0x0000004700000000  rdx: 0x0000000000000000
  rdi: 0x00007f99ac895900  rsi: 0x0000000000000000  rbp: 0x00007ffee9ba9e40  rsp: 0x00007ffee9ba9e00
   r8: 0x00007f99aca4a000   r9: 0x00000047080023b5  r10: 0x0000000000000000  r11: 0x0000000000000000
  r12: 0x0000000111aea590  r13: 0x00007ffee9ba9fb0  r14: 0x00007ffee9ba9fb0  r15: 0x00007ffee9ba9f08
  rip: 0x0000000111aec011  rfl: 0x0000000000010206  cr2: 0x0000000000000008
  
Logical CPU:     0
Error Code:      0x00000004 (no mapping for user data read)
Trap Number:     14

Thread 0 instruction stream:
  55 48 89 e5 41 57 41 56-53 48 83 ec 28 48 8b 77  UH..AWAVSH..(H.w
  20[83]7e 08 00 0f 84 bb-01 00 00 49 89 fe 48 83   .~........I..H.	<==
  c6 30 4c 8d 3d 97 c9 d3-04 48 8d 5d c8 4c 89 3b  .0L.=....H.].L.;
  0f 57 c0 0f 11 43 08 48-c7 43 18 00 00 00 00 48  .W...C.H.C.....H
  89 df e8 09 b0 ff ff 48-8b 7b 08 e8 d0 6f 3f fe  .......H.{...o?.
  3d 8f 03 00 00 7e 3f 3d-b4 03 00 00 7e 66 3d b5  =....~?=....~f=.
  03 00 00 0f 84 a4 00 00-00 3d c0 03 00 00 0f 84  .........=......
  ad 00 00 00 3d c1 03 00-00 0f 85 f2 00 00 00 49  ....=..........I
  8b 46 10 48 8b 80 28 01-00 00 4c 8b b0 c8 01 00  .F.H..(...L.....
  00 e9 ec 00 00 00 83 f8-73 7f 52 83 f8 06 0f 84  ........s.R.....
  91 00 00 00 83 f8 1c 0f-85 c4 00 00 00 49 8b 46  .............I.F
  10 48 8b 80 28 01 00 00-4c 8b b0 98 01 00 00 e9  .H..(...L.......
  
Thread 0 last branch register state not available.


Binary Images:
       0x106048000 -        0x106097fff +com.github.Electron (15.0.0 - 15.0.0) <05176914-4F70-39B7-9759-8A643268D25C> /Users/USER/*/Electron.app/Contents/MacOS/Electron
       0x10609e000 -        0x1060b1fff +com.github.Squirrel (1.0 - 1) <4ABF9FC8-9C73-3030-932C-3A5E49AEDA51> /Users/USER/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x1060be000 -        0x106101fff +com.electron.reactive (3.1.0 - 0.0.0) <1168B28F-9709-367A-8EE6-FD62FCB778BE> /Users/USER/*/Electron.app/Contents/Frameworks/ReactiveObjC.framework/Versions/A/ReactiveObjC
       0x10611d000 -        0x106128fff +org.mantle.Mantle (1.0 - 0.0.0) <6A49C105-2564-3C73-B812-C9522DE7FA39> /Users/USER/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x10612f000 -        0x106382fff +libffmpeg.dylib (0) <1F192831-855F-35D1-B933-4D17915DC0B2> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x10de93000 -        0x10dea2fff  libobjc-trampolines.dylib (824) <C1B6BD90-D6AA-388B-B692-D66D512630AA> /usr/lib/libobjc-trampolines.dylib
       0x10e21a000 -        0x10e2b5fff  dyld (852.2) <0CC19410-FD43-39AE-A32A-50273F8303A4> /usr/lib/dyld
       0x10e332000 -        0x116305fff +com.github.Electron.framework (15.0.0) <2120A870-9FB0-30FC-8CF7-5790C3B69E02> /Users/USER/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
    0x7fff201a7000 -     0x7fff201a8fff  libsystem_blocks.dylib (79) <925E3B6D-184D-3E73-97B1-643C4ADB387A> /usr/lib/system/libsystem_blocks.dylib
    0x7fff201a9000 -     0x7fff201defff  libxpc.dylib (2038.120.1) <FFFB49D7-2CA6-3E1F-AE4E-5697B19B7D76> /usr/lib/system/libxpc.dylib
    0x7fff201df000 -     0x7fff201f6fff  libsystem_trace.dylib (1277.120.1) <7E800ECA-DFDB-3737-A3C5-FFDE37E65383> /usr/lib/system/libsystem_trace.dylib
    0x7fff201f7000 -     0x7fff20294fff  libcorecrypto.dylib (1000.140.4) <D211160D-E22F-3440-8054-1F5824519C7F> /usr/lib/system/libcorecrypto.dylib
    0x7fff20295000 -     0x7fff202c1fff  libsystem_malloc.dylib (317.140.5) <050E37E1-1458-3F80-BFA3-F1488570169D> /usr/lib/system/libsystem_malloc.dylib
    0x7fff202c2000 -     0x7fff20306fff  libdispatch.dylib (1271.120.2) <8144B0BD-90D2-3EAE-999F-AB0D14082088> /usr/lib/system/libdispatch.dylib
    0x7fff20307000 -     0x7fff20340fff  libobjc.A.dylib (824) <8C7C49A1-4211-3E4C-BA3D-160D675EEE96> /usr/lib/libobjc.A.dylib
    0x7fff20341000 -     0x7fff20343fff  libsystem_featureflags.dylib (28.60.1) <E5C43AE3-19E7-3DAB-8B5D-D79A4B68B5C0> /usr/lib/system/libsystem_featureflags.dylib
    0x7fff20344000 -     0x7fff203ccfff  libsystem_c.dylib (1439.141.1) <3C273899-4CBE-32D5-BB31-7A449743204F> /usr/lib/system/libsystem_c.dylib
    0x7fff203cd000 -     0x7fff20422fff  libc++.1.dylib (905.6) <FD6DB1CB-B14B-3404-8BEB-B459C2F6C303> /usr/lib/libc++.1.dylib
    0x7fff20423000 -     0x7fff20438fff  libc++abi.dylib (905.6) <D0CDDF98-1C04-300F-B685-4A4C59C04C42> /usr/lib/libc++abi.dylib
    0x7fff20439000 -     0x7fff20468fff  libsystem_kernel.dylib (7195.141.6) <78289AAE-61B5-339F-A485-8819BC2388F2> /usr/lib/system/libsystem_kernel.dylib
    0x7fff20469000 -     0x7fff20474fff  libsystem_pthread.dylib (454.120.2) <1268FF2D-A513-3B51-BA65-AF2FF5789DDB> /usr/lib/system/libsystem_pthread.dylib
    0x7fff20475000 -     0x7fff204b0fff  libdyld.dylib (852.2) <3DE0178A-0AEE-3D08-AE19-6C6403F69BA1> /usr/lib/system/libdyld.dylib
    0x7fff204b1000 -     0x7fff204bafff  libsystem_platform.dylib (254.80.2) <EF52D569-09F5-32E1-B1B3-34E2CA55A017> /usr/lib/system/libsystem_platform.dylib
    0x7fff204bb000 -     0x7fff204e6fff  libsystem_info.dylib (542.40.3) <55B39B7F-957B-3D99-A8DF-7CA80D38155D> /usr/lib/system/libsystem_info.dylib
    0x7fff204e7000 -     0x7fff20984fff  com.apple.CoreFoundation (6.9 - 1778.101) <8CF9D741-ADFF-3D5E-ACDE-DC342701EE0D> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff20985000 -     0x7fff20bbafff  com.apple.LaunchServices (1122.44 - 1122.44) <C285E620-3D2F-3AD0-8A3D-BB1FC540FE44> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff20bbb000 -     0x7fff20c8ffff  com.apple.gpusw.MetalTools (1.0 - 1) <C41024C5-01E7-3A66-A1F8-D7BC767260D8> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
    0x7fff20c90000 -     0x7fff20eecfff  libBLAS.dylib (1336.140.1) <170AFA22-1234-3DE9-9D94-52B3BE18E34E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff20eed000 -     0x7fff20f3afff  com.apple.Lexicon-framework (1.0 - 86.2) <B7047A55-806D-3B32-A2D6-885D824E54A6> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon
    0x7fff20f3b000 -     0x7fff20fa9fff  libSparse.dylib (106) <1E68BF64-7432-3509-BC85-5DE95379E901> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib
    0x7fff20faa000 -     0x7fff21027fff  com.apple.SystemConfiguration (1.20 - 1.20) <8FEB39D4-ACD6-39F2-8D1B-A57CACD5628F> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff21028000 -     0x7fff2105cfff  libCRFSuite.dylib (50) <BCDD0ED1-D2F4-3556-B218-4420C7EA47D2> /usr/lib/libCRFSuite.dylib
    0x7fff2105d000 -     0x7fff21295fff  libmecabra.dylib (929.10) <D780814D-2BB2-3D84-820E-12E4C23C590E> /usr/lib/libmecabra.dylib
    0x7fff21296000 -     0x7fff215f4fff  com.apple.Foundation (6.9 - 1778.101) <7B7FB88B-01D3-38CE-8029-837DB094C545> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff215f5000 -     0x7fff216ddfff  com.apple.LanguageModeling (1.0 - 247.3) <DBFAE8CF-36B2-30D8-9E82-6C412CD935B4> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff216de000 -     0x7fff21814fff  com.apple.CoreDisplay (237.4 - 237.4) <556BADE0-D3B0-309C-9740-7FEFBD052B6B> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff21815000 -     0x7fff21a85fff  com.apple.audio.AudioToolboxCore (1.0 - 1181.72) <5C3B84EE-B281-34C4-832F-78F00CC63B93> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore
    0x7fff21a86000 -     0x7fff21c6bfff  com.apple.CoreText (677.6.0.2 - 677.6.0.2) <10E1382E-7949-3F4E-8B15-A4BD31A75E91> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff21c6c000 -     0x7fff222fdfff  com.apple.audio.CoreAudio (5.0 - 5.0) <5EEA9225-4837-37F3-9105-941A5743169F> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff222fe000 -     0x7fff22655fff  com.apple.security (7.0 - 59754.140.13) <A196C85A-DB28-3F5B-A415-5BE44AD81668> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff22656000 -     0x7fff228b5fff  libicucore.A.dylib (66112) <AC994BC1-F9CC-359C-A7B5-F2821EAEF650> /usr/lib/libicucore.A.dylib
    0x7fff228b6000 -     0x7fff228bffff  libsystem_darwin.dylib (1439.141.1) <2C81A009-45BB-30D7-A4F7-4B2EEC691617> /usr/lib/system/libsystem_darwin.dylib
    0x7fff228c0000 -     0x7fff22babfff  com.apple.CoreServices.CarbonCore (1307.3 - 1307.3) <2C65E0D8-A9C7-31D8-A3D3-3AC1A91C80A5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff22bac000 -     0x7fff22beafff  com.apple.CoreServicesInternal (476.1.1 - 476.1.1) <3FC6073F-78E4-3D3B-8765-50E50512C5EB> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff22beb000 -     0x7fff22c25fff  com.apple.CSStore (1122.44 - 1122.44) <C103DAAA-A966-359B-97F0-BA3BB56ECBF1> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore
    0x7fff22c26000 -     0x7fff22cd4fff  com.apple.framework.IOKit (2.0.2 - 1845.120.6) <720D9AE1-79D6-3E77-8D7A-47F8F6681050> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff22cd5000 -     0x7fff22ce0fff  libsystem_notify.dylib (279.40.4) <2E40EA4A-B124-3010-8379-1B4D7082A08F> /usr/lib/system/libsystem_notify.dylib
    0x7fff22ce1000 -     0x7fff22d2efff  libsandbox.1.dylib (1441.141.4) <C291C059-F7E4-3C20-BCBF-60F7011F0718> /usr/lib/libsandbox.1.dylib
    0x7fff22d2f000 -     0x7fff23a7afff  com.apple.AppKit (6.9 - 2022.60.128) <02EC69A0-D634-341B-BE3D-840F496F5814> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff23a7b000 -     0x7fff23cc9fff  com.apple.UIFoundation (1.0 - 728.9) <C2E04F0F-AEAA-3B77-9BBA-1CF628341A56> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff23cca000 -     0x7fff23cdcfff  com.apple.UniformTypeIdentifiers (637 - 637) <8FFD3B69-0840-34D6-83AD-7D521B1A2339> /System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers
    0x7fff23cdd000 -     0x7fff23e67fff  com.apple.desktopservices (1.21 - 1346.6.1) <F2C97567-5B56-3840-A384-2131E362083B> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff23e68000 -     0x7fff23e7afff  com.apple.metadata.SpotlightLinguistics (1.0 - 1) <BA448116-6C8C-3A4B-9F28-9D8CEAAD5769> /System/Library/PrivateFrameworks/SpotlightLinguistics.framework/Versions/A/SpotlightLinguistics
    0x7fff23e7b000 -     0x7fff24089fff  com.apple.CoreDuet (1.0 - 1) <BC29FC19-7BE1-3CC9-9668-39209F43C7F1> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet
    0x7fff2408a000 -     0x7fff24146fff  libboringssl.dylib (351.140.2) <1AB2B9F8-CDA7-31F3-9EE4-E5330E771F50> /usr/lib/libboringssl.dylib
    0x7fff24147000 -     0x7fff247cdfff  libnetwork.dylib (2288.140.7) <42825FCA-35A1-352F-AE68-19D8F695604B> /usr/lib/libnetwork.dylib
    0x7fff247ce000 -     0x7fff24c6cfff  com.apple.CFNetwork (1240.0.4 - 1240.0.4) <E4BF9BFF-798B-33FF-B37D-6D8175CA708A> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff24c6d000 -     0x7fff24c7bfff  libsystem_networkextension.dylib (1295.140.3) <83AA4425-2F1D-36EC-B77B-8D4F03CDDB68> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff24c7c000 -     0x7fff24c7cfff  libenergytrace.dylib (22.100.1) <9E877E0A-5261-3F75-91A0-521423499AD0> /usr/lib/libenergytrace.dylib
    0x7fff24c7d000 -     0x7fff24cd9fff  libMobileGestalt.dylib (978.140.1) <D1FF79C3-4B2F-32FB-BF25-9F0B9E160692> /usr/lib/libMobileGestalt.dylib
    0x7fff24cda000 -     0x7fff24cf0fff  libsystem_asl.dylib (385) <8D324D65-EE16-3A1A-BD39-ACB1B3050D1F> /usr/lib/system/libsystem_asl.dylib
    0x7fff24cf1000 -     0x7fff24d09fff  com.apple.TCC (1.0 - 1) <18F48712-FFF0-3B30-B2C4-8A93AEF86A34> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff24d0a000 -     0x7fff2506ffff  com.apple.SkyLight (1.600.0 - 588.7) <5F88F814-A3DF-3446-8B35-F0CDD8C1B302> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fff25070000 -     0x7fff256f9fff  com.apple.CoreGraphics (2.0 - 1463.17.3) <5EDF86BC-FFDE-3906-9674-142C113B34EF> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff256fa000 -     0x7fff257f0fff  com.apple.ColorSync (4.13.0 - 3473.4.3) <102C423C-E05F-317B-83AE-A2A6B77D653B> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff257f1000 -     0x7fff2584cfff  com.apple.HIServices (1.22 - 716) <B2D34F3F-0CEB-35F1-9B32-E0806CF3FC91> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff25940000 -     0x7fff25b00fff  com.apple.Montreal (1.0 - 142) <04ABAAAD-2C28-3AA5-90C9-BD4B7869042F> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal
    0x7fff25b01000 -     0x7fff25bf2fff  com.apple.NLP (1.0 - 210.2) <0D6A0E1B-1381-316E-B488-3025D5608B4D> /System/Library/PrivateFrameworks/NLP.framework/Versions/A/NLP
    0x7fff25bf3000 -     0x7fff26012fff  com.apple.CoreData (120 - 1048) <33DE1B26-D4C6-3939-B12E-88897660BB38> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff26013000 -     0x7fff26028fff  com.apple.ProtocolBuffer (1 - 285.24.10.20.1) <AEDEFF64-CA8A-365C-900F-3107383F91D9> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff26029000 -     0x7fff261dcfff  libsqlite3.dylib (321.3) <E7377C46-DA4F-3486-B935-0A35C3637215> /usr/lib/libsqlite3.dylib
    0x7fff261dd000 -     0x7fff26259fff  com.apple.Accounts (113 - 113) <2AD45648-B327-313A-ACF2-846FB345A96E> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts
    0x7fff2625a000 -     0x7fff26271fff  com.apple.commonutilities (8.0 - 900) <98B456F4-8F4F-387B-B3BB-D3919295AE1D> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities
    0x7fff26272000 -     0x7fff262f1fff  com.apple.BaseBoard (526 - 526) <F9D85C3A-D0D6-351B-A6EE-5416CB90179D> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard
    0x7fff262f2000 -     0x7fff2633afff  com.apple.RunningBoardServices (1.0 - 505.100.9) <2ED406CD-2253-33F0-B16A-694DB447CADC> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices
    0x7fff2633b000 -     0x7fff263affff  com.apple.AE (918.6 - 918.6) <C5130BB4-18E7-3804-A9D9-915D318426A5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff263b0000 -     0x7fff263b6fff  libdns_services.dylib (1310.140.1) <22BE5030-2F48-3ED6-9DF8-9D102CEF33FF> /usr/lib/libdns_services.dylib
    0x7fff263b7000 -     0x7fff263befff  libsystem_symptoms.dylib (1431.140.1) <1B4D8837-C951-3B69-B079-85D477749E8B> /usr/lib/system/libsystem_symptoms.dylib
    0x7fff263bf000 -     0x7fff2654afff  com.apple.Network (1.0 - 1) <2155E1AA-2067-36CF-979E-2F96062D5CFE> /System/Library/Frameworks/Network.framework/Versions/A/Network
    0x7fff2654b000 -     0x7fff2657afff  com.apple.analyticsd (1.0 - 1) <0DF60ECD-742C-39D1-964A-48EC3DEA6319> /System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics
    0x7fff2657b000 -     0x7fff2657dfff  libDiagnosticMessagesClient.dylib (112) <A7EC7265-E13C-3C98-81EE-3EFB5CC65AB0> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff2657e000 -     0x7fff265cafff  com.apple.spotlight.metadata.utilities (1.0 - 2150.26) <F709AE5E-AF80-3C9B-A3D3-B779164FBA95> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities
    0x7fff265cb000 -     0x7fff26665fff  com.apple.Metadata (10.7.0 - 2150.26) <D7CE41CA-DDE7-32BE-926C-0DC3048C5E11> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff26666000 -     0x7fff2666cfff  com.apple.DiskArbitration (2.7 - 2.7) <8DF059B4-BE32-3171-8CC4-C5FA189FA718> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff2666d000 -     0x7fff26cd4fff  com.apple.vImage (8.1 - 544.4) <E62F9E4F-9A1D-3004-B7F4-6F83F71144C2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff26cd5000 -     0x7fff26fb2fff  com.apple.QuartzCore (1.11 - 927.24) <88794856-F1F1-3D23-BDDB-0AE28A1D6D6E> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff26fb3000 -     0x7fff26ff4fff  libFontRegistry.dylib (309) <300F2208-7274-38F8-B88D-9237BA6B397E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff26ff5000 -     0x7fff27135fff  com.apple.coreui (2.1 - 692.1) <BC5D8EAA-7CE8-35F3-8EAD-075B18D9606C> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff27136000 -     0x7fff27221fff  com.apple.ViewBridge (553.1 - 553.1) <DF83EA6E-4DA9-3322-BE86-0B3207167451> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fff27222000 -     0x7fff2722dfff  com.apple.PerformanceAnalysis (1.278.3 - 278.3) <6AF20F05-FF15-3174-A504-1AC16BA14729> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff2722e000 -     0x7fff2723dfff  com.apple.OpenDirectory (11.6 - 230.40.1) <84B2D11F-E6C4-3C29-9A9A-939DB906E2F5> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff2723e000 -     0x7fff2725dfff  com.apple.CFOpenDirectory (11.6 - 230.40.1) <6BE3204F-2F86-34A7-AD79-4C88320F446F> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff2725e000 -     0x7fff2726afff  com.apple.CoreServices.FSEvents (1290.120.5 - 1290.120.5) <DC473A17-310F-3C16-B545-F75CE3F6D39D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff2726b000 -     0x7fff2728ffff  com.apple.coreservices.SharedFileList (144 - 144) <A13B58B8-6D7A-3F1B-AFB5-E41E0A6B4B81> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff27290000 -     0x7fff27292fff  libapp_launch_measurement.dylib (14.1) <511EC2A9-6059-3A7D-9D2A-741189922D02> /usr/lib/libapp_launch_measurement.dylib
    0x7fff27293000 -     0x7fff272dafff  com.apple.CoreAutoLayout (1.0 - 21.10.1) <18113C8E-B54E-3DD3-A1AD-2A5FD949CE66> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout
    0x7fff272db000 -     0x7fff273bdfff  libxml2.2.dylib (34.10) <DD2093F0-F9B7-3F30-B46D-B028CE15E2B1> /usr/lib/libxml2.2.dylib
    0x7fff273be000 -     0x7fff2740bfff  com.apple.CoreVideo (1.8 - 414.7) <EE991A40-DE38-3B13-891E-A51987D5CD70> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff2740c000 -     0x7fff2740efff  com.apple.loginsupport (1.0 - 1) <4C358D8E-4BB8-3DD8-8A72-11BD80607BDE> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff2740f000 -     0x7fff27436fff  com.apple.aps.framework (4.0 - 4.0) <A76C4B82-24CD-3AF4-BADD-6135F6E7057A> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService
    0x7fff27437000 -     0x7fff27452fff  com.apple.UserManagement (1.0 - 1) <FB298359-31F5-3DDD-B928-604C4B1ED1F3> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement
    0x7fff27453000 -     0x7fff275e4fff  com.apple.cloudkit.CloudKit (990 - 990) <A4ADF4E3-AC2D-322B-B76C-BC249AB27395> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
    0x7fff275e5000 -     0x7fff27666fff  com.apple.CloudDocs (1.0 - 738.1) <86A6C439-BA71-321C-B330-A60BA4011C99> /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs
    0x7fff27667000 -     0x7fff279f6fff  com.apple.CoreML (1.0 - 1) <3845782D-F855-3DD4-ADD3-8CB08C2BCFE5> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML
    0x7fff28349000 -     0x7fff283c5fff  com.apple.corelocation (2420.19.23 - 2420.19.23) <1BEB1A0D-4122-3F8C-AC1A-07A12C36C84F> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation
    0x7fff283c6000 -     0x7fff283d6fff  libsystem_containermanager.dylib (318.100.4) <1139CD47-9CBA-356F-8694-1D00EB9F0C8F> /usr/lib/system/libsystem_containermanager.dylib
    0x7fff283d7000 -     0x7fff283e8fff  com.apple.IOSurface (290.8.1 - 290.8.1) <8B251196-DA38-38BF-8A91-45AC2B06014C> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff283e9000 -     0x7fff283f2fff  com.apple.IOAccelerator (442.9 - 442.9) <F2C3DC87-49D7-3A67-8E6D-12D75D98EFDD> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff283f3000 -     0x7fff28516fff  com.apple.Metal (244.303 - 244.303) <71B6039E-232E-3AD2-881F-DF8E73C75B99> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff28517000 -     0x7fff28533fff  com.apple.audio.caulk (1.0 - 70) <F6A09FF3-1DC7-302C-86E3-B2DD9B7130A9> /System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk
    0x7fff28534000 -     0x7fff2861efff  com.apple.CoreMedia (1.0 - 2780.10) <6A003180-F8AA-3DFA-B095-61D8E859FE3F> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff2861f000 -     0x7fff2877bfff  libFontParser.dylib (305.6.0.4) <C3E552F6-72AD-3F3A-B217-E44A5C565240> /System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib
    0x7fff2877c000 -     0x7fff28a77fff  com.apple.HIToolbox (2.1.1 - 1062) <DEF01A0C-8B9D-359E-9FE7-B15D551888DC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff28a78000 -     0x7fff28a8bfff  com.apple.framework.DFRFoundation (1.0 - 267) <EBFDDB28-7661-3B50-BC15-736C5DF05AB3> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fff28a8c000 -     0x7fff28a8ffff  com.apple.dt.XCTTargetBootstrap (1.0 - 18119.1) <DD9E09C3-B658-3BD2-8229-E3E3C5D85552> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap
    0x7fff28a90000 -     0x7fff28ab9fff  com.apple.CoreSVG (1.0 - 149) <C4DC952A-9373-33E5-8A98-F008986B0420> /System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG
    0x7fff28aba000 -     0x7fff28cf6fff  com.apple.ImageIO (3.3.0 - 2130.7.3) <28C6A501-2548-3187-A13B-9F314280BBB8> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff28cf7000 -     0x7fff29072fff  com.apple.CoreImage (16.3.0 - 1140.2) <3ED3F244-632C-383D-89B0-50F2E0FDBA40> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff29073000 -     0x7fff290d9fff  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <C12F8828-6D1E-3820-BBF7-80EEA978AE9C> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore
    0x7fff290da000 -     0x7fff290ddfff  libsystem_configuration.dylib (1109.140.1) <02F3A5C9-6289-3012-8F5F-F1DB669ADB79> /usr/lib/system/libsystem_configuration.dylib
    0x7fff290de000 -     0x7fff290e2fff  libsystem_sandbox.dylib (1441.141.4) <5471601B-5072-3E97-8926-804FF08DC4C0> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff290e3000 -     0x7fff290e4fff  com.apple.AggregateDictionary (1.0 - 1) <B25A1764-0BBC-388B-8FB4-A8FBB8F51C10> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary
    0x7fff290e5000 -     0x7fff290e8fff  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <4A803F86-CA61-3508-864A-302F032ADA70> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff290e9000 -     0x7fff290eafff  liblangid.dylib (136) <F4019132-A63D-3A38-A8DB-974C6F1311ED> /usr/lib/liblangid.dylib
    0x7fff290eb000 -     0x7fff2918ffff  com.apple.CoreNLP (1.0 - 245.2) <203C6AB9-5B07-3370-A056-DA1F2C8A8419> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP
    0x7fff29190000 -     0x7fff29196fff  com.apple.LinguisticData (1.0 - 399) <AB85B59F-3047-37EC-AB9E-835D87BACF73> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData
    0x7fff29197000 -     0x7fff2983ffff  libBNNS.dylib (288.100.5) <4BB7A1B7-D1F2-3DC3-BFC7-D57CBD892719> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff29840000 -     0x7fff29a12fff  libvDSP.dylib (760.100.3) <DA809F3E-9391-3BE0-98C6-061CCACA809A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff29a13000 -     0x7fff29a24fff  com.apple.CoreEmoji (1.0 - 128.4) <8DB42230-A624-3C13-80F8-EC2CE89C0699> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff29a25000 -     0x7fff29a2ffff  com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <195E20E7-33BD-3935-92ED-AA354180B7FA> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer
    0x7fff29a30000 -     0x7fff29b02fff  com.apple.framework.CoreWLAN (16.0 - 1657) <0A58C97E-2ACD-3223-8585-FDA5DA4C38C5> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff29b03000 -     0x7fff29d04fff  com.apple.CoreUtils (6.6 - 660.37) <0B1ED18A-B228-3840-A0F2-23AC2C37A6CA> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fff29d05000 -     0x7fff29d27fff  com.apple.MobileKeyBag (2.0 - 1.0) <19D8140C-CC92-35E8-AF78-B335567A7C24> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fff29d28000 -     0x7fff29d38fff  com.apple.AssertionServices (1.0 - 505.100.9) <850AE031-A3B3-30C0-81A1-71FBCE620BC1> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices
    0x7fff29d39000 -     0x7fff29dc4fff  com.apple.securityfoundation (6.0 - 55240.40.4) <A7D05091-B54C-317A-81FE-4B174C968C5A> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff29dc5000 -     0x7fff29dcefff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <98B365F9-8E0C-32C7-AC5A-FFB9A4A0B30A> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement
    0x7fff29dcf000 -     0x7fff29dd3fff  com.apple.xpc.ServiceManagement (1.0 - 1) <7D081389-0032-3521-A3D9-84B4667817FB> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff29dd4000 -     0x7fff29dd6fff  libquarantine.dylib (119.40.2) <3244B57B-9FDF-373E-9F96-A7BAD7534F23> /usr/lib/system/libquarantine.dylib
    0x7fff29dd7000 -     0x7fff29de2fff  libCheckFix.dylib (31) <AAB549BA-1738-33FD-BBC4-C34B5070C309> /usr/lib/libCheckFix.dylib
    0x7fff29de3000 -     0x7fff29dfafff  libcoretls.dylib (169.100.1) <FC2811AD-9D76-3403-B760-32A101D07638> /usr/lib/libcoretls.dylib
    0x7fff29dfb000 -     0x7fff29e0bfff  libbsm.0.dylib (68.40.1) <61577B7F-2C06-365C-9039-E00B0B5258D0> /usr/lib/libbsm.0.dylib
    0x7fff29e0c000 -     0x7fff29e55fff  libmecab.dylib (929.10) <D60C5095-3A5F-3284-9699-08C76DA29CBD> /usr/lib/libmecab.dylib
    0x7fff29e56000 -     0x7fff29e5bfff  libgermantok.dylib (24) <6F2B01E8-6077-3B72-91F3-AB6D0FCB15D6> /usr/lib/libgermantok.dylib
    0x7fff29e5c000 -     0x7fff29e71fff  libLinearAlgebra.dylib (1336.140.1) <A450756D-D3AC-342D-A802-ED6C554A494A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff29e72000 -     0x7fff2a090fff  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <8AAFA6C5-1FBD-359A-8774-F1D1FBFCCFFE> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork
    0x7fff2a091000 -     0x7fff2a0e0fff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <0C854684-1D62-35D1-83C1-9066DB158189> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector
    0x7fff2a0e1000 -     0x7fff2a242fff  com.apple.MLCompute (1.0 - 1) <9255AB44-3AB5-3F3F-8FA2-77FEA1C7C221> /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
    0x7fff2a243000 -     0x7fff2a279fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <B7361691-334A-3A33-98E1-A9A623E5D26A> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
    0x7fff2a27a000 -     0x7fff2a2d0fff  com.apple.MetalPerformanceShaders.MPSNDArray (1.0 - 1) <706E8171-48B3-33A3-B55B-35B5F86F3043> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray
    0x7fff2a2d1000 -     0x7fff2a361fff  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <3999E177-7A40-358A-BE89-1F20ADF13740> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage
    0x7fff2a362000 -     0x7fff2a371fff  com.apple.AppleFSCompression (125 - 1.0) <F7163A3A-C4F0-3169-9501-B9AAB8CAE9CD> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff2a372000 -     0x7fff2a37efff  libbz2.1.0.dylib (44) <ECD22F5B-FD6C-39A5-884B-418C6B896263> /usr/lib/libbz2.1.0.dylib
    0x7fff2a37f000 -     0x7fff2a383fff  libsystem_coreservices.dylib (127.1) <619CCB6D-226C-35BD-98FB-04A18FD54792> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff2a384000 -     0x7fff2a3b1fff  com.apple.CoreServices.OSServices (1122.44 - 1122.44) <C547575F-985F-31B8-A61C-79D3A673B8D9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff2a3b2000 -     0x7fff2a4e1fff  com.apple.AuthKit (1.0 - 1) <C72D7981-A3B6-3883-A14F-43485DF54FC4> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit
    0x7fff2a4e2000 -     0x7fff2a510fff  com.apple.UserNotifications (1.0 - 348.5) <36B03A58-F8A4-3671-9B0B-1B87FF9D3FA0> /System/Library/Frameworks/UserNotifications.framework/Versions/A/UserNotifications
    0x7fff2a511000 -     0x7fff2a57ffff  com.apple.CoreSpotlight (1.0 - 2150.26) <4D4F3348-8920-3E95-80D5-304CCCAEF338> /System/Library/Frameworks/CoreSpotlight.framework/Versions/A/CoreSpotlight
    0x7fff2a580000 -     0x7fff2a592fff  libz.1.dylib (76) <F805C1CB-1B80-33D0-994C-1D522D347A68> /usr/lib/libz.1.dylib
    0x7fff2a593000 -     0x7fff2a5dafff  libsystem_m.dylib (3186.100.3) <D61B56FE-649B-34A0-8446-25685B2BBBF2> /usr/lib/system/libsystem_m.dylib
    0x7fff2a5db000 -     0x7fff2a5dbfff  libcharset.1.dylib (59) <363A6C40-7446-3A72-B5EA-4731843CFE2F> /usr/lib/libcharset.1.dylib
    0x7fff2a5dc000 -     0x7fff2a5e1fff  libmacho.dylib (980) <A4F4D532-7824-3E4E-8FB6-45617415E7DD> /usr/lib/system/libmacho.dylib
    0x7fff2a5e2000 -     0x7fff2a5fdfff  libkxld.dylib (7195.141.6) <1121F83B-5D42-368B-B440-100418CD4B23> /usr/lib/system/libkxld.dylib
    0x7fff2a5fe000 -     0x7fff2a609fff  libcommonCrypto.dylib (60178.120.3) <CF1E0E70-9F6C-3FAF-82B2-D55F7C9EBB03> /usr/lib/system/libcommonCrypto.dylib
    0x7fff2a60a000 -     0x7fff2a614fff  libunwind.dylib (201) <4602E909-C71A-3006-8140-BE616DA241EE> /usr/lib/system/libunwind.dylib
    0x7fff2a615000 -     0x7fff2a61cfff  liboah.dylib (203.58) <F72C2D50-7279-3497-8A59-56908F9661F3> /usr/lib/liboah.dylib
    0x7fff2a61d000 -     0x7fff2a627fff  libcopyfile.dylib (173.40.2) <B0F35A80-D5E3-33DD-A47D-ACBFE1300523> /usr/lib/system/libcopyfile.dylib
    0x7fff2a628000 -     0x7fff2a62ffff  libcompiler_rt.dylib (102.2) <1C049207-1719-39AC-A2A9-6E5BE28AA138> /usr/lib/system/libcompiler_rt.dylib
    0x7fff2a630000 -     0x7fff2a632fff  libsystem_collections.dylib (1439.141.1) <F2D775D9-AAEF-371F-AA54-CFB882B9B430> /usr/lib/system/libsystem_collections.dylib
    0x7fff2a633000 -     0x7fff2a635fff  libsystem_secinit.dylib (87.60.1) <EB4516ED-1F8B-3E8A-8C4B-B209A33DCCEF> /usr/lib/system/libsystem_secinit.dylib
    0x7fff2a636000 -     0x7fff2a638fff  libremovefile.dylib (49.120.1) <1AEE3D84-32F9-35FB-8036-B178C9E27D20> /usr/lib/system/libremovefile.dylib
    0x7fff2a639000 -     0x7fff2a639fff  libkeymgr.dylib (31) <698AF6EE-08BB-36CF-B7AD-9EC16E36FA0B> /usr/lib/system/libkeymgr.dylib
    0x7fff2a63a000 -     0x7fff2a641fff  libsystem_dnssd.dylib (1310.140.1) <0685BDB0-9A98-3ADD-B95A-11F221FD80D7> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff2a642000 -     0x7fff2a647fff  libcache.dylib (83) <B51FAB34-AA9C-38C5-95F1-E5E54B21EA67> /usr/lib/system/libcache.dylib
    0x7fff2a648000 -     0x7fff2a649fff  libSystem.B.dylib (1292.120.1) <DBD0A184-CD98-3225-8E9B-D5BFE0D30562> /usr/lib/libSystem.B.dylib
    0x7fff2a64a000 -     0x7fff2a64dfff  libfakelink.dylib (3) <BE0E6C60-675A-3739-A47A-67C650B1F790> /usr/lib/libfakelink.dylib
    0x7fff2a64e000 -     0x7fff2a64efff  com.apple.SoftLinking (1.0 - 1) <9E4B6591-74E3-3B36-91C4-851FAA567DAA> /System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking
    0x7fff2a64f000 -     0x7fff2a686fff  libpcap.A.dylib (98.100.3) <6DD23455-C0CA-313E-89B5-A45F8CD71C20> /usr/lib/libpcap.A.dylib
    0x7fff2a687000 -     0x7fff2a777fff  libiconv.2.dylib (59) <90F749E2-9D2D-3323-A018-31A1F95221A1> /usr/lib/libiconv.2.dylib
    0x7fff2a778000 -     0x7fff2a789fff  libcmph.dylib (8) <17871D7D-49C2-3343-AC30-C40E3AD5B2B6> /usr/lib/libcmph.dylib
    0x7fff2a78a000 -     0x7fff2a7fbfff  libarchive.2.dylib (83.100.2) <5AF9560E-5683-33A5-8D60-A469193B94E3> /usr/lib/libarchive.2.dylib
    0x7fff2a7fc000 -     0x7fff2a863fff  com.apple.SearchKit (1.4.1 - 1.4.1) <A45AE5BD-9242-351E-B621-3EB50F66AB30> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff2a864000 -     0x7fff2a865fff  libThaiTokenizer.dylib (3) <7B40AC51-B945-3AF0-B349-5818050D37FB> /usr/lib/libThaiTokenizer.dylib
    0x7fff2a866000 -     0x7fff2a888fff  com.apple.applesauce (1.0 - 16.28) <7D011403-38CD-37DA-B2C2-00D2D2273422> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce
    0x7fff2a889000 -     0x7fff2a8a0fff  libapple_nghttp2.dylib (1.41) <E3FCBDB9-6671-3368-B371-B9CAC9BB1B45> /usr/lib/libapple_nghttp2.dylib
    0x7fff2a8a1000 -     0x7fff2a8b7fff  libSparseBLAS.dylib (1336.140.1) <78762464-084C-3743-BC56-A2AF5D010909> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff2a8b8000 -     0x7fff2a8b9fff  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <BD2B6B2B-E116-3B97-A25F-71B4AC7B2BA6> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fff2a8ba000 -     0x7fff2a8befff  libpam.2.dylib (28.40.1) <E73D1903-42B9-3FF9-AE5D-482672F015AC> /usr/lib/libpam.2.dylib
    0x7fff2a8bf000 -     0x7fff2a8defff  libcompression.dylib (96.120.1) <CFE780B4-AFB0-327C-BB68-A5565AA7C630> /usr/lib/libcompression.dylib
    0x7fff2a8df000 -     0x7fff2a8e4fff  libQuadrature.dylib (7) <9668C241-61D5-3AE9-9856-708ACDC27F12> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff2a8e5000 -     0x7fff2ac82fff  libLAPACK.dylib (1336.140.1) <8B968A9A-8263-3639-A740-636387467C03> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff2ac83000 -     0x7fff2acd2fff  com.apple.DictionaryServices (1.2 - 341) <617030DF-769F-3CE0-869F-7F5B9B5A3784> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff2acd3000 -     0x7fff2acebfff  liblzma.5.dylib (16) <6DE3F2AA-7140-3F6D-AD12-0DBA19BBBD54> /usr/lib/liblzma.5.dylib
    0x7fff2acec000 -     0x7fff2acedfff  libcoretls_cfhelpers.dylib (169.100.1) <0CF72D7A-0A39-3683-82ED-29A09761D6FF> /usr/lib/libcoretls_cfhelpers.dylib
    0x7fff2acee000 -     0x7fff2ade9fff  com.apple.APFS (1677.141.2 - 1677.141.2) <F42A21D0-F8CE-3DDA-ACE6-C0AC9EE2FA6C> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS
    0x7fff2adea000 -     0x7fff2adf7fff  libxar.1.dylib (452) <0B0B68CC-D627-3BDC-AE01-007C6AD8E97B> /usr/lib/libxar.1.dylib
    0x7fff2adf8000 -     0x7fff2adfbfff  libutil.dylib (58.40.2) <0EA3237C-B6E6-351B-AE27-8975D88602D6> /usr/lib/libutil.dylib
    0x7fff2adfc000 -     0x7fff2ae24fff  libxslt.1.dylib (17.6) <300C3D2D-19B1-3D8E-B212-1D2EB6C8B80A> /usr/lib/libxslt.1.dylib
    0x7fff2ae25000 -     0x7fff2ae2ffff  libChineseTokenizer.dylib (37.1) <B4314553-EF8B-3CD4-A7D8-76CD7FC7142D> /usr/lib/libChineseTokenizer.dylib
    0x7fff2ae30000 -     0x7fff2aeedfff  libvMisc.dylib (760.100.3) <B8F30684-94D1-3A53-80BF-C78F424594AD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff2aeee000 -     0x7fff2af85fff  libate.dylib (3.0.6) <FA881406-28F3-33BD-B75D-40389CE2ADD1> /usr/lib/libate.dylib
    0x7fff2af86000 -     0x7fff2af8dfff  libIOReport.dylib (64.100.1) <4D638FAC-2FD8-359C-8159-1ED37CBB5704> /usr/lib/libIOReport.dylib
    0x7fff2af8e000 -     0x7fff2afa1fff  com.apple.CrashReporterSupport (10.13 - 15053.1) <B879B52A-5A65-3CB3-B271-15A032853A35> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff2afb9000 -     0x7fff2b036fff  com.apple.CVNLP (1.0 - 119) <3604CA5C-2547-3C9A-99F5-3A7AB0DBE0B1> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP
    0x7fff2b058000 -     0x7fff2b08efff  com.apple.pluginkit.framework (1.0 - 1) <84F2AE60-705A-3B37-B42E-13EF51B1FA1B> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit
    0x7fff2b08f000 -     0x7fff2b096fff  libMatch.1.dylib (38) <85F66EF8-FC5E-385C-AF8F-79532C2AC988> /usr/lib/libMatch.1.dylib
    0x7fff2b097000 -     0x7fff2b122fff  libCoreStorage.dylib (554.140.2) <249F3E03-6C96-3E20-999A-BBFE36AADECA> /usr/lib/libCoreStorage.dylib
    0x7fff2b123000 -     0x7fff2b176fff  com.apple.AppleVAFramework (6.1.3 - 6.1.3) <2CDA1194-F435-3B9C-94A2-220E26E40DE6> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff2b177000 -     0x7fff2b190fff  libexpat.1.dylib (26.141.1) <84DC54E5-9E75-3F64-9D7F-3CA641674ED8> /usr/lib/libexpat.1.dylib
    0x7fff2b191000 -     0x7fff2b19afff  libheimdal-asn1.dylib (597.140.2) <8D7B3A0D-A699-3947-9E8C-EEA4B4AD6408> /usr/lib/libheimdal-asn1.dylib
    0x7fff2b19b000 -     0x7fff2b1affff  com.apple.IconFoundation (479.4 - 479.4) <6ED33568-2A1D-3918-9D32-D1E102002E48> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation
    0x7fff2b1b0000 -     0x7fff2b21cfff  com.apple.IconServices (479.4 - 479.4) <D94D5AF3-6EF6-30D8-A7F8-58A1A3E5641B> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff2b21d000 -     0x7fff2b2bbfff  com.apple.MediaExperience (1.0 - 1) <245932F7-E76A-37A7-A033-7BB62F8ED190> /System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience
    0x7fff2b2bc000 -     0x7fff2b2e4fff  com.apple.persistentconnection (1.0 - 1.0) <90FBA2DD-E91A-3A9F-80C5-8F94950136A4> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection
    0x7fff2b2e5000 -     0x7fff2b2f3fff  com.apple.GraphVisualizer (1.0 - 100.1) <9538C368-5703-367B-ADAE-20EC5C3C5C41> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer
    0x7fff2b2f4000 -     0x7fff2b70ffff  com.apple.vision.FaceCore (4.3.2 - 4.3.2) <86110F21-96FE-325C-8D55-9385690C2386> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff2b710000 -     0x7fff2b757fff  com.apple.OTSVG (1.0 - 677.6.0.2) <34AD6D57-71B8-3859-94AF-DB856D8FD6BA> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG
    0x7fff2b758000 -     0x7fff2b75efff  com.apple.xpc.AppServerSupport (1.0 - 2038.120.1) <AD03039F-3D12-31FE-A497-EC4A87097683> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport
    0x7fff2b75f000 -     0x7fff2b771fff  libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <B4F0CDA6-0332-3AB9-A0FB-8CD6EE316D30> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib
    0x7fff2b772000 -     0x7fff2b774fff  libspindump.dylib (295.2) <8DE7E414-DCEC-30B8-87DC-511D362D49F3> /usr/lib/libspindump.dylib
    0x7fff2b775000 -     0x7fff2b835fff  com.apple.Heimdal (4.0 - 2.0) <30D71BC9-C18F-35C7-B7E1-88E645D4D329> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff2b836000 -     0x7fff2b850fff  com.apple.login (3.0 - 3.0) <0690C64C-DE8C-3AA2-A4A5-BE3EFC3BDC62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login
    0x7fff2b851000 -     0x7fff2b928fff  com.apple.corebrightness (1.0 - 1) <84C0971C-31BB-3E68-9EC1-0EF05986CEEA> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
    0x7fff2b9d1000 -     0x7fff2b9d4fff  libodfde.dylib (26) <6436E5A0-CEF3-302F-86E7-E28C3EBE7A3A> /usr/lib/libodfde.dylib
    0x7fff2b9d5000 -     0x7fff2ba11fff  com.apple.bom (14.0 - 235) <E428566D-DFA2-33AC-AF3B-C68530D52522> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom
    0x7fff2ba12000 -     0x7fff2ba5bfff  com.apple.AppleJPEG (1.0 - 1) <15DCB33B-EB52-38A2-B02F-EC235DC85B52> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff2ba5c000 -     0x7fff2bb3bfff  libJP2.dylib (2130.7.3) <20747AB5-CFA0-3C7A-BE41-BF4B54FD2038> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff2bb3c000 -     0x7fff2bb3ffff  com.apple.WatchdogClient.framework (1.0 - 98.120.2) <0A097C25-405B-38CD-B6E2-57F51AD77AF0> /System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient
    0x7fff2bb40000 -     0x7fff2bb76fff  com.apple.MultitouchSupport.framework (4440.3 - 4440.3) <0DF955E2-E57C-3C1B-96BD-5B81DAD43BC7> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff2bb77000 -     0x7fff2bcd5fff  com.apple.VideoToolbox (1.0 - 2780.10) <4FF9A4C0-FFB4-3F68-9A84-949B4DB0DB7A> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff2bcd6000 -     0x7fff2bd09fff  libAudioToolboxUtility.dylib (1181.72) <9D9EA545-924D-342A-BF27-C19887850F05> /usr/lib/libAudioToolboxUtility.dylib
    0x7fff2bd0a000 -     0x7fff2bd2afff  libPng.dylib (2130.7.3) <29756FE6-34E9-3760-9B70-9FF6648BE7CC> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff2bd2b000 -     0x7fff2bd8afff  libTIFF.dylib (2130.7.3) <692B9470-8F28-3C98-9C6A-DAE79FE0136F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff2bd8b000 -     0x7fff2bda7fff  com.apple.IOPresentment (58 - 37) <A86E6181-E216-3691-A7FF-0264A927C8CC> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fff2bda8000 -     0x7fff2bdaffff  com.apple.GPUWrangler (6.3.5 - 6.3.5) <CC101DAE-349B-3C72-9554-6F569364841E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler
    0x7fff2bdb0000 -     0x7fff2bdb3fff  libRadiance.dylib (2130.7.3) <1A759A2B-28E8-32C4-940D-BE0239558098> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff2bdb4000 -     0x7fff2bdb9fff  com.apple.DSExternalDisplay (3.1 - 380) <3FD5886F-5EDD-313D-9783-FF899E5F2650> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fff2bdba000 -     0x7fff2bddefff  libJPEG.dylib (2130.7.3) <C0903C97-523A-3822-ABE4-D1047D6785DC> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff2bddf000 -     0x7fff2be0efff  com.apple.ATSUI (1.0 - 1) <F9BEFF92-E409-35B6-89CB-0F221D804D3C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI
    0x7fff2be0f000 -     0x7fff2be13fff  libGIF.dylib (2130.7.3) <E92A145C-2B76-39D1-B481-B7C95ACBF989> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff2be14000 -     0x7fff2be1dfff  com.apple.CMCaptureCore (1.0 - 82.6) <E0EAD649-4C7A-384E-999B-4D82AA9CDA52> /System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore
    0x7fff2be1e000 -     0x7fff2be65fff  com.apple.print.framework.PrintCore (16.1 - 531.1) <035969B9-3323-3AF4-AC4C-1D5B941C7C62> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff2be66000 -     0x7fff2bf33fff  com.apple.TextureIO (3.10.9 - 3.10.9) <4B778275-5F2D-36DA-A6AD-14C8E516E197> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fff2bf34000 -     0x7fff2bf3cfff  com.apple.InternationalSupport (1.0 - 61.1) <56A6D4F8-FF5B-3F34-BD1A-249414F182E9> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport
    0x7fff2bf3d000 -     0x7fff2bfb7fff  com.apple.datadetectorscore (8.0 - 674) <CDA8DABD-62A3-3E1C-9A76-B00E1E950254> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff2bfb8000 -     0x7fff2c015fff  com.apple.UserActivity (439 - 439) <C272F369-1086-317C-A4CF-AE2E1EC4FFB4> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity
    0x7fff2c016000 -     0x7fff2c7b2fff  com.apple.MediaToolbox (1.0 - 2780.10) <AFB06F1B-22BA-3DB7-B6E4-3C55F0A4BECF> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff2cbf3000 -     0x7fff2cc59fff  com.apple.imfoundation (10.0 - 1000) <1D902049-CAD5-3DE0-AE4A-9AACEBB586BE> /System/Library/PrivateFrameworks/IMFoundation.framework/Versions/A/IMFoundation
    0x7fff2cc5a000 -     0x7fff2cc82fff  com.apple.locationsupport (2420.19.23 - 2420.19.23) <9A015D62-2143-3199-AD14-ECA953A728D3> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport
    0x7fff2cc83000 -     0x7fff2ccb4fff  libSessionUtility.dylib (76.69) <400DF595-A30C-3AD3-A8BA-25260299ACE6> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib
    0x7fff2ccb5000 -     0x7fff2cde9fff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <93226BB9-165F-3A42-8EE3-9670394C4DC9> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff2cdea000 -     0x7fff2ce4ffff  com.apple.audio.AudioSession (1.0 - 76.69) <ADC1C8FC-A444-3F15-A396-B4AB688BB326> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession
    0x7fff2ce50000 -     0x7fff2ce62fff  libAudioStatistics.dylib (27.64) <74E8B615-03FE-327B-A8FB-EAC5EF117414> /usr/lib/libAudioStatistics.dylib
    0x7fff2ce63000 -     0x7fff2ce72fff  com.apple.speech.synthesis.framework (9.0.66 - 9.0.66) <CE36276F-23DD-32A3-9863-D3A5DDE5965E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff2ce73000 -     0x7fff2cedffff  com.apple.ApplicationServices.ATS (377 - 516) <6E601872-2340-3675-9B6F-0C1DB991C54E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff2cee0000 -     0x7fff2cef8fff  libresolv.9.dylib (68) <86A4BABF-3EFC-3113-BE8A-2D1AAAEF0194> /usr/lib/libresolv.9.dylib
    0x7fff2cef9000 -     0x7fff2cf0cfff  libsasl2.2.dylib (214) <601780A9-26F4-36A4-83EA-864841219797> /usr/lib/libsasl2.2.dylib
    0x7fff2cf79000 -     0x7fff2cfacfff  com.apple.securityinterface (10.0 - 55149.120.1) <10A7DFC1-8C46-382C-AEF0-89B151767F50> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff2cfc6000 -     0x7fff2d02afff  com.apple.CoreMediaIO (1000.0 - 5325) <42F6129C-48E9-316A-9F30-2FA4D96F709F> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff2d02b000 -     0x7fff2d10afff  libSMC.dylib (20) <CF88A94C-B5EE-306F-96A3-1442BA061C46> /usr/lib/libSMC.dylib
    0x7fff2d10b000 -     0x7fff2d16afff  libcups.2.dylib (494.3) <2CE9752F-8763-3456-83CF-E4BCFB731153> /usr/lib/libcups.2.dylib
    0x7fff2d16b000 -     0x7fff2d17afff  com.apple.LangAnalysis (1.7.0 - 254) <AB67008E-5986-3974-B986-FDBFAC018CAB> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff2d17b000 -     0x7fff2d185fff  com.apple.NetAuth (6.2 - 6.2) <B5806BA7-9A6E-37A0-9AB9-6EC2D61844AC> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff2d186000 -     0x7fff2d18dfff  com.apple.ColorSyncLegacy (4.13.0 - 1) <86D9E9C9-C631-371E-824E-A203FE9E560A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy
    0x7fff2d18e000 -     0x7fff2d199fff  com.apple.QD (4.0 - 416) <1D8792FC-4A76-3B4F-82CF-3889C05768FE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff2d19a000 -     0x7fff2d7eefff  com.apple.audio.AudioResourceArbitration (1.0 - 1) <C97CD66B-8267-3C39-B025-789864237928> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
    0x7fff2d7ef000 -     0x7fff2d7fafff  com.apple.perfdata (1.0 - 67.40.1) <10E2B0C5-83A4-368A-B972-7AFA40D5338C> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata
    0x7fff2d7fb000 -     0x7fff2d809fff  libperfcheck.dylib (41) <A2D0E1A8-A98F-3DAA-B9FC-C033FC4CD9E0> /usr/lib/libperfcheck.dylib
    0x7fff2d80a000 -     0x7fff2d819fff  com.apple.Kerberos (3.0 - 1) <0074E20F-E7D8-31F5-AF41-0D7BF370CD50> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff2d81a000 -     0x7fff2d86afff  com.apple.GSS (4.0 - 2.0) <D546E52C-295F-3CCD-9925-03632FE72ECB> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff2d86b000 -     0x7fff2d87bfff  com.apple.CommonAuth (4.0 - 2.0) <DF20551B-1514-39B3-A52E-681A2E5F0D1C> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff2d87c000 -     0x7fff2d8a3fff  com.apple.MobileAssets (1.0 - 659.100.21) <14EB0135-6B08-37A0-A517-E23997BAD7D5> /System/Library/PrivateFrameworks/MobileAsset.framework/Versions/A/MobileAsset
    0x7fff2d8a4000 -     0x7fff2d8d0fff  com.apple.CacheDelete (1.0 - 1) <FB1E1322-C50B-38DD-86CE-9AEC925628A3> /System/Library/PrivateFrameworks/CacheDelete.framework/Versions/A/CacheDelete
    0x7fff2d8d1000 -     0x7fff2d8f0fff  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <C48DA26A-6A69-3497-B94D-43332354162B> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle
    0x7fff2d8f1000 -     0x7fff2d8f9fff  com.apple.CorePhoneNumbers (1.0 - 1) <9F49D632-C5F4-37F5-A2A8-2830A7560138> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers
    0x7fff2d8fa000 -     0x7fff2d983fff  libTelephonyUtilDynamic.dylib (5359.1) <DDF9B2A1-D071-3180-9BC6-A143D6D9E713> /usr/lib/libTelephonyUtilDynamic.dylib
    0x7fff2da4c000 -     0x7fff2da4cfff  liblaunch.dylib (2038.120.1) <4A353070-A560-3A98-8869-28C92435C6B2> /usr/lib/system/liblaunch.dylib
    0x7fff2dfd1000 -     0x7fff2e0d2fff  com.apple.ids (10.0 - 1000) <F30AC7B8-FACA-3B37-914D-C7AFA47A9DAE> /System/Library/PrivateFrameworks/IDS.framework/Versions/A/IDS
    0x7fff2e0d3000 -     0x7fff2e22dfff  com.apple.idsfoundation (10.0 - 1000) <3EAAA079-B3EE-3A12-B181-3267029FB4B0> /System/Library/PrivateFrameworks/IDSFoundation.framework/Versions/A/IDSFoundation
    0x7fff2e22e000 -     0x7fff2e379fff  com.apple.Sharing (1630 - 1630) <CE657A48-7BDD-34D7-9CBC-B1D6AD94B2B2> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff2e37a000 -     0x7fff2e49bfff  com.apple.Bluetooth (8.0.5 - 8.0.5d7) <D011494A-287B-3487-B817-2329843C2486> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff2e49c000 -     0x7fff2e4b0fff  com.apple.AppContainer (4.0 - 509.140.3) <85EE3606-0190-3428-9C49-D32A01706439> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff2e4b1000 -     0x7fff2e4b4fff  com.apple.SecCodeWrapper (4.0 - 509.140.3) <1BB9A761-4DE0-34AF-87A6-CB5BF9322F62> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fff2e4b5000 -     0x7fff2e50efff  com.apple.ProtectedCloudStorage (1.0 - 1) <EA0958A6-8296-3E23-81BE-297473A6E17E> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fff2e50f000 -     0x7fff2e56efff  com.apple.QuickLookFramework (5.0 - 928.4) <C7DA2119-94CA-320B-9FBE-9AB4F9F384DA> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff2e56f000 -     0x7fff2e58afff  com.apple.MetalKit (147.1 - 147.1) <F9EF05E2-2410-30A4-B9E0-8E19621D3434> /System/Library/Frameworks/MetalKit.framework/Versions/A/MetalKit
    0x7fff2e76e000 -     0x7fff2fc69fff  com.apple.GeoServices (1.0 - 1757.26.6.2.2) <1A271F08-3D05-36BF-A136-7D48B4418CD6> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
    0x7fff2fc6a000 -     0x7fff2fc75fff  com.apple.DirectoryService.Framework (11.6 - 230.40.1) <A0B99619-47BD-3D1C-8CAA-EE25139753F6> /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService
    0x7fff2fc76000 -     0x7fff2fc9dfff  com.apple.RemoteViewServices (2.0 - 163) <7DBF2A51-CE8E-352E-9426-B83DC370ADDD> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff2fc9e000 -     0x7fff2fcadfff  com.apple.SpeechRecognitionCore (6.1.25 - 6.1.25) <076E6A5F-4FEE-378B-9DCD-AFFA1348C64F> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff2fcae000 -     0x7fff2fcb5fff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <DB80BAB9-5E83-32DB-A424-05BB19044665> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff2fcb6000 -     0x7fff2fcc6fff  com.apple.AppleLDAP (11.6 - 54) <1195DAE2-7082-32B1-B45A-ABE4B9A75D28> /System/Library/PrivateFrameworks/AppleLDAP.framework/Versions/A/AppleLDAP
    0x7fff2fee3000 -     0x7fff2fee3fff  libsystem_product_info_filter.dylib (8.40.1) <78928329-DD98-3799-989D-870DF92FE8D5> /usr/lib/system/libsystem_product_info_filter.dylib
    0x7fff2ffbb000 -     0x7fff2ffbbfff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <CDB56324-715E-3223-903F-EEC1D4E57F14> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff2ffe1000 -     0x7fff2ffe1fff  com.apple.CoreServices (1122.44 - 1122.44) <104E1757-7D8A-32D3-9B38-B23B1A8EAB17> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff3019d000 -     0x7fff3019dfff  com.apple.Accelerate (1.11 - Accelerate 1.11) <28463942-495F-3231-9348-32ABC601A1F5> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff301de000 -     0x7fff301e9fff  com.apple.MediaAccessibility (1.0 - 130) <677557AF-6AC1-3860-B7C4-772B8DA9957B> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff301ea000 -     0x7fff30209fff  com.apple.networking.AlgosScoreFramework (1.0 - 1) <BFF296BB-6E78-3213-B453-31AA58FC13E0> /System/Library/PrivateFrameworks/AlgosScoreFramework.framework/Versions/A/AlgosScoreFramework
    0x7fff3020a000 -     0x7fff3020efff  com.apple.AppleSRP (5.0 - 1) <A8B167C6-9E49-3ED9-AD87-36BEA98F6E20> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP
    0x7fff3020f000 -     0x7fff3021afff  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <6873367E-2879-3C96-A766-AD6DFD69F36A> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon
    0x7fff3021b000 -     0x7fff30252fff  com.apple.framework.SystemAdministration (1.0 - 1.0) <84CB0B6A-46C1-3A8E-81D4-CC44DF0AFF83> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration
    0x7fff30253000 -     0x7fff3052bfff  com.apple.VN (4.3.1 - 4.3.1) <0856C3F0-BF95-30DB-BFFC-BE4ABFDA04B7> /System/Library/Frameworks/Vision.framework/Versions/A/Vision
    0x7fff30685000 -     0x7fff30708fff  com.apple.AddressBook.ContactsFoundation (8.0 - 1151.2) <BEBEC756-57B8-3DBA-B0B8-5B9197ECC5A3> /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation
    0x7fff30709000 -     0x7fff3074bfff  com.apple.contacts.ContactsPersistence (1.0 - 3497.5) <DEE423F8-36EB-3E69-9680-E93FA6F8F241> /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence
    0x7fff3074c000 -     0x7fff30882fff  com.apple.AddressBook.core (1.0 - 2452.7) <721D6700-131B-323E-9FE9-4AAEBECDA243> /System/Library/PrivateFrameworks/AddressBookCore.framework/Versions/A/AddressBookCore
    0x7fff30883000 -     0x7fff309b7fff  com.apple.contacts (1.0 - 3497.5) <73891206-8D41-3206-A10B-118B90EB4C86> /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts
    0x7fff309b8000 -     0x7fff309c5fff  com.apple.PersonaKit (1.0 - 1) <B8FE29A2-D6A5-3AE0-BC97-1AA21755455A> /System/Library/PrivateFrameworks/PersonaKit.framework/Versions/A/PersonaKit
    0x7fff309df000 -     0x7fff30a44fff  com.apple.CoreBluetooth (1.0 - 1) <32288DE3-BD59-35A6-9165-73176E074499> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff30a45000 -     0x7fff30a4efff  com.apple.SymptomDiagnosticReporter (1.0 - 79.120.1) <9A1589E7-0B3A-3DC5-967C-7A3D4C14ED1E> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter
    0x7fff30a4f000 -     0x7fff30a61fff  com.apple.PowerLog (1.0 - 1) <7A3E3B4D-5DA4-3D01-9188-4FE8A6859D15> /System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog
    0x7fff30a62000 -     0x7fff30a6efff  com.apple.AppleIDAuthSupport (1.0 - 1) <C391F5AD-7903-31AF-8608-7826C0EFB3C5> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport
    0x7fff30a6f000 -     0x7fff30b17fff  com.apple.DiscRecording (9.0.3 - 9030.4.5) <08A9AAA6-7057-3105-BDE1-DC7270C38774> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff30b18000 -     0x7fff30b4bfff  com.apple.MediaKit (16 - 927.40.2) <86B948D3-5757-37A7-B2DA-F7C50778B108> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff30b4c000 -     0x7fff30c37fff  com.apple.DiskManagement (14.0 - 1733.140.2) <CF6680B9-9799-3DE8-A600-094260672A4F> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement
    0x7fff30c38000 -     0x7fff30ff2fff  com.apple.CoreAUC (326.2.0 - 326.2.0) <58430C09-401A-3B4C-806E-E87C46816939> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff30ff3000 -     0x7fff30ff6fff  com.apple.Mangrove (1.0 - 25) <0E9FF438-D4B3-3DF1-B8A7-64623282B9B3> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff30ff7000 -     0x7fff31024fff  com.apple.CoreAVCHD (6.1.0 - 6100.4.1) <80DEBCCB-A598-3CE5-B988-FFC5B81389CF> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff31025000 -     0x7fff31174fff  com.apple.FileProvider (349.4.3 - 349.4.3) <E07C8909-299C-3696-BD84-5CF42EE64EE4> /System/Library/Frameworks/FileProvider.framework/Versions/A/FileProvider
    0x7fff31175000 -     0x7fff31197fff  com.apple.GenerationalStorage (2.0 - 323) <9E36AF92-10E2-382B-A07C-4E3270448690> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff3150d000 -     0x7fff315dbfff  com.apple.CoreTelephony (113 - 8260) <DFBE4145-7D80-3F7B-8C37-746D9D63DAC6> /System/Library/Frameworks/CoreTelephony.framework/Versions/A/CoreTelephony
    0x7fff315dc000 -     0x7fff315e9fff  com.apple.AppSandbox (4.0 - 509.140.3) <FFB8B6E5-AC15-30EF-81A6-DB88ED9772C5> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff31600000 -     0x7fff31794fff  com.apple.AVFCore (1.0 - 2020.10) <85D55F46-61B4-3A08-8B13-1A678B571D66> /System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore
    0x7fff31795000 -     0x7fff31804fff  com.apple.FrontBoardServices (703.16 - 703.16) <5088E177-3DF7-3F48-B340-7E6FF569C1E2> /System/Library/PrivateFrameworks/FrontBoardServices.framework/Versions/A/FrontBoardServices
    0x7fff31805000 -     0x7fff3182efff  com.apple.BoardServices (1.0 - 526) <9932480F-CA31-362C-B5BB-263998D63224> /System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices
    0x7fff3182f000 -     0x7fff3185afff  com.apple.contacts.vCard (1.0 - 3497.5) <34200FAE-9D85-396E-95E1-BD7341334EBB> /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard
    0x7fff31870000 -     0x7fff3188bfff  com.apple.ExtensionKit (19.4 - 19.4) <D5A2BF7D-F72D-30D4-A12C-2B23A25C53FF> /System/Library/PrivateFrameworks/ExtensionKit.framework/Versions/A/ExtensionKit
    0x7fff3188c000 -     0x7fff31892fff  com.apple.ExtensionFoundation (19.4 - 19.4) <911C2C6B-8D5E-301E-8845-ABE770077044> /System/Library/PrivateFrameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation
    0x7fff31893000 -     0x7fff318d8fff  com.apple.CryptoTokenKit (1.0 - 1) <85356F88-7E90-357C-A0CE-B580616C1CEF> /System/Library/Frameworks/CryptoTokenKit.framework/Versions/A/CryptoTokenKit
    0x7fff318d9000 -     0x7fff318effff  com.apple.LocalAuthentication (1.0 - 827.140.1) <D833E8C1-2038-3C12-9EEC-30D8F9F48702> /System/Library/Frameworks/LocalAuthentication.framework/Versions/A/LocalAuthentication
    0x7fff318f0000 -     0x7fff3191dfff  com.apple.CoreAuthentication.SharedUtils (1.0 - 827.140.1) <DCB4A9AE-4CE3-302E-8633-4F54DE1C1050> /System/Library/Frameworks/LocalAuthentication.framework/Support/SharedUtils.framework/Versions/A/SharedUtils
    0x7fff31992000 -     0x7fff319d3fff  com.apple.CoreHaptics (1.0 - 1) <8B6CA9A4-26B2-31AD-A763-F905F126900D> /System/Library/Frameworks/CoreHaptics.framework/Versions/A/CoreHaptics
    0x7fff319e1000 -     0x7fff31a20fff  com.apple.AppleVPAFramework (3.26.1 - 3.26.1) <B7DF9782-C63B-32F0-A008-E83503C76E78> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA
    0x7fff31ad3000 -     0x7fff31b0efff  com.apple.DebugSymbols (195.1 - 195.1) <7D2E32A0-DB93-36EE-AE9C-7974708CF4FC> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff31b0f000 -     0x7fff31bc4fff  com.apple.CoreSymbolication (12.5 - 64544.81.1) <7215543C-E3B6-30A0-8B21-7FBDFB10F198> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff31bc5000 -     0x7fff31bcefff  com.apple.CoreTime (284.0.4) <DAEEF1D8-1C34-37AC-9691-C4540C92E9F9> /System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime
    0x7fff31bcf000 -     0x7fff31c44fff  com.apple.Rapport (2.6.0 - 260.3) <55CA4269-E06C-3E4E-BB3D-957469333D9C> /System/Library/PrivateFrameworks/Rapport.framework/Versions/A/Rapport
    0x7fff32519000 -     0x7fff32565fff  com.apple.coreduetcontext (1.0 - 1) <F343EE71-43B3-366E-A3C3-7FC0DD79D70F> /System/Library/PrivateFrameworks/CoreDuetContext.framework/Versions/A/CoreDuetContext
    0x7fff32566000 -     0x7fff32ad2fff  com.apple.Intents (1.0 - 1) <CA14EA98-180D-3AEC-9900-8B6BE616DA5C> /System/Library/Frameworks/Intents.framework/Versions/A/Intents
    0x7fff32ad3000 -     0x7fff32b36fff  com.apple.framework.Apple80211 (17.0 - 1728) <D89EA57A-D351-3BD1-A470-505C6D8BF4D6> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff32b37000 -     0x7fff32c88fff  com.apple.CoreWiFi (3.0 - 341) <0FE4018E-E199-3923-A56D-430E40F5EEB7> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff32c89000 -     0x7fff32ca3fff  com.apple.BackBoardServices (1.0 - 1.0) <C21E697A-AB8B-3353-9B92-7DB6C09DE34D> /System/Library/PrivateFrameworks/BackBoardServices.framework/Versions/A/BackBoardServices
    0x7fff32ca4000 -     0x7fff32cdbfff  com.apple.LDAPFramework (2.4.28 - 194.5) <327E5362-4AA3-3610-B126-CAC243121EA8> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP
    0x7fff32cdc000 -     0x7fff32cddfff  com.apple.TrustEvaluationAgent (2.0 - 35) <CA7542A0-0CE3-39E9-9FF0-F827CC4633AC> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff32cde000 -     0x7fff32de3fff  libcrypto.44.dylib (56.60.2) <90125B07-6FE0-3D39-947D-0C39B9DF6C43> /usr/lib/libcrypto.44.dylib
    0x7fff32de4000 -     0x7fff32e11fff  libssl.46.dylib (56.60.2) <53F0CF92-264C-3210-852F-B2B65885E675> /usr/lib/libssl.46.dylib
    0x7fff32e12000 -     0x7fff32ec1fff  com.apple.DiskImagesFramework (595.140.1 - 595.140.1) <6A804C50-8819-39A1-AF4E-4E71C6BD8DAB> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages
    0x7fff32ef9000 -     0x7fff32f08fff  com.apple.RemoteServiceDiscovery (1.0 - 1.120.1) <8F0CFA90-78B8-3305-BCD3-6C28B7838CE0> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery
    0x7fff32f21000 -     0x7fff32f65fff  com.apple.DataDetectorsNaturalLanguage (1.0 - 159.1) <234D2A46-5B69-3B18-8D45-6DD1F4293C73> /System/Library/PrivateFrameworks/DataDetectorsNaturalLanguage.framework/Versions/A/DataDetectorsNaturalLanguage
    0x7fff32f66000 -     0x7fff32f69fff  com.apple.help (1.3.8 - 71) <CF14979A-CA27-32D1-A3E8-D99AD6C91464> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff32f6a000 -     0x7fff32f71fff  com.apple.EFILogin (2.0 - 2) <77A5D3D5-3B8D-3B5D-A1BD-A7614C86AF67> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff32f72000 -     0x7fff32f7dfff  libcsfde.dylib (554.140.2) <8B6A31B3-9421-3BAE-882B-8BEF5217E251> /usr/lib/libcsfde.dylib
    0x7fff32f7e000 -     0x7fff32fe4fff  libcurl.4.dylib (121.101.1) <8ACEDAF2-5907-3F4A-9595-F52681D0F470> /usr/lib/libcurl.4.dylib
    0x7fff32fe5000 -     0x7fff32fecfff  com.apple.LoginUICore (4.0 - 4.0) <F8CF5AD4-6A49-3EFC-B1FA-BD83B0095CBB> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore
    0x7fff32fed000 -     0x7fff3304ffff  com.apple.AppSupport (1.0.0 - 29) <7F288248-AB86-3AAC-9528-1A62E0E77528> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport
    0x7fff330ef000 -     0x7fff331b3fff  com.apple.GameController (1.0 - 1) <68352436-3E7E-30BE-B804-E8EDE0658BB3> /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff331bc000 -     0x7fff331bcfff  com.apple.ApplicationServices (48 - 50) <52BB5EB6-2C1B-34F9-8665-F50DD078E71B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff331bd000 -     0x7fff331bffff  com.apple.InternationalTextSearch (1.0 - 1) <B6F39BE2-4D42-38BD-B8DD-53F4B7E9DA38> /System/Library/PrivateFrameworks/InternationalTextSearch.framework/Versions/A/InternationalTextSearch
    0x7fff331c0000 -     0x7fff33238fff  com.apple.ClassKit (1.2 - 146.6) <54D86FD1-568D-327F-82CA-B47A16E4CE80> /System/Library/Frameworks/ClassKit.framework/Versions/A/ClassKit
    0x7fff33239000 -     0x7fff3337dfff  com.apple.AppleAccount (1.0 - 1.0) <B304AA07-C970-3195-B4BE-978E3CA2856F> /System/Library/PrivateFrameworks/AppleAccount.framework/Versions/A/AppleAccount
    0x7fff3337e000 -     0x7fff333bdfff  com.apple.AppleIDSSOAuthentication (1.0 - 1) <AB9B31C6-653B-38AF-852A-10FB097BA818> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication
    0x7fff334d1000 -     0x7fff334d1fff  libHeimdalProxy.dylib (79) <A1B83B1E-006D-38A8-8878-FD6ECBBB9B1B> /System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib
    0x7fff33584000 -     0x7fff33584fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <0A5BB3A7-D9DC-346C-9FBB-FB075194E7AC> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff335a8000 -     0x7fff335ebfff  com.apple.StreamingZip (1.0 - 1) <DDE31BAA-F317-3EA3-AF44-7B05CDB95217> /System/Library/PrivateFrameworks/StreamingZip.framework/Versions/A/StreamingZip
    0x7fff335ec000 -     0x7fff3360afff  com.apple.DuetActivityScheduler (1.0 - 1) <AEA67F50-E42E-37A5-BF75-6666CD80C19C> /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/Versions/A/DuetActivityScheduler
    0x7fff3361f000 -     0x7fff3362bfff  com.apple.IntentsFoundation (1.0 - 1) <90F93D25-8C0E-37FF-A480-0CC95E080E7C> /System/Library/PrivateFrameworks/IntentsFoundation.framework/Versions/A/IntentsFoundation
    0x7fff3362c000 -     0x7fff33631fff  com.apple.PushKit (1.0 - 1) <02EC6449-963F-376C-BE24-F9CC8083ABD3> /System/Library/Frameworks/PushKit.framework/Versions/A/PushKit
    0x7fff33632000 -     0x7fff33665fff  com.apple.C2 (1.3 - 573) <1D8BCCDC-EFB0-3DF8-93A4-4D18388D7C11> /System/Library/PrivateFrameworks/C2.framework/Versions/A/C2
    0x7fff33666000 -     0x7fff33696fff  com.apple.QuickLookThumbnailing (1.0 - 135.5) <7B9EC715-B18C-3194-B78C-24358F1BEEFE> /System/Library/Frameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fff33697000 -     0x7fff33e98fff  com.apple.vision.EspressoFramework (1.0 - 256.4.4) <46EB212E-0528-3D15-AAA4-207E8B197A75> /System/Library/PrivateFrameworks/Espresso.framework/Versions/A/Espresso
    0x7fff33e99000 -     0x7fff33eb0fff  com.apple.ANEServices (4.76 - 4.76) <E54FB6F5-CBF8-3ED2-A73B-47C6D87910A4> /System/Library/PrivateFrameworks/ANEServices.framework/Versions/A/ANEServices
    0x7fff33eb1000 -     0x7fff33f16fff  com.apple.proactive.support.ProactiveSupport (1.0 - 294.7) <3496B6A3-168D-3278-AFB1-14363A6FB4F6> /System/Library/PrivateFrameworks/ProactiveSupport.framework/Versions/A/ProactiveSupport
    0x7fff33f17000 -     0x7fff33f21fff  com.apple.corerecents (1.0 - 1) <D8991907-F2CC-36AB-B5C6-769A08B4667F> /System/Library/PrivateFrameworks/CoreRecents.framework/Versions/A/CoreRecents
    0x7fff33f22000 -     0x7fff33f53fff  com.apple.iCalendar (7.0 - 833) <632255EA-705A-3C44-80C2-1727D418745B> /System/Library/PrivateFrameworks/iCalendar.framework/Versions/A/iCalendar
    0x7fff33f54000 -     0x7fff33fc4fff  com.apple.CalendarFoundation (8.0 - 1178.5.2) <2BE0FB9D-963E-3DC6-A60F-8A753EDB453A> /System/Library/PrivateFrameworks/CalendarFoundation.framework/Versions/A/CalendarFoundation
    0x7fff33fc5000 -     0x7fff33fc7fff  com.apple.CoreDuetDebugLogging (1.0 - 1) <47F03D98-3BF5-3CAB-B83D-A30A59A5B068> /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging
    0x7fff33fc8000 -     0x7fff33fd4fff  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <B6BADDAF-0F79-30B6-8CD4-83C8ACDB12D0> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol
    0x7fff34268000 -     0x7fff3453bfff  com.apple.spotlight.index (10.7.0 - 2150.26) <D8CB9D18-8903-3E9F-A502-5896DC545BA5> /System/Library/PrivateFrameworks/SpotlightIndex.framework/Versions/A/SpotlightIndex
    0x7fff34554000 -     0x7fff345a4fff  com.apple.ChunkingLibrary (334.1 - 334.1) <2CD91198-1354-357F-8858-D58244526C15> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff346db000 -     0x7fff3472afff  com.apple.CalDAV (8.0 - 795) <C0EAF392-62F0-382C-B832-96DBC6724472> /System/Library/PrivateFrameworks/CalDAV.framework/Versions/A/CalDAV
    0x7fff3472b000 -     0x7fff347c8fff  com.apple.CoreSuggestions (1.0 - 1115.519) <D781EA13-4252-334F-ADCC-F81AF8E6F2DE> /System/Library/PrivateFrameworks/CoreSuggestions.framework/Versions/A/CoreSuggestions
    0x7fff347c9000 -     0x7fff34953fff  com.apple.ical.EventKit (3.0 - 1414.5.1) <33EAD078-D1DC-3315-BB80-AE77EE7F52AF> /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
    0x7fff34954000 -     0x7fff34c25fff  com.apple.CalendarPersistence (8.0 - 1071.4.4) <0E5E778E-57BD-3D7C-B875-3AA044100A0F> /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
    0x7fff34c26000 -     0x7fff34c4bfff  com.apple.CalendarAgentLink (8.0 - 250) <94D45C00-DDD4-3D08-94A7-5202003B1BAE> /System/Library/PrivateFrameworks/CalendarAgentLink.framework/Versions/A/CalendarAgentLink
    0x7fff34c4c000 -     0x7fff34c56fff  com.apple.RTCReporting (11.85.2 - 11.85.2) <4C416B6E-005D-3A43-BCB4-FCA93F149D74> /System/Library/PrivateFrameworks/RTCReporting.framework/Versions/A/RTCReporting
    0x7fff34e18000 -     0x7fff34e2dfff  com.apple.CoreML.AppleNeuralEngine (1.0 - 1) <C3AA92B0-9BF9-3806-A952-2A318AF1EEE4> /System/Library/PrivateFrameworks/AppleNeuralEngine.framework/Versions/A/AppleNeuralEngine
    0x7fff34e83000 -     0x7fff34eeefff  com.apple.audio.midi.CoreMIDI (2.0 - 88) <741CCF53-3F51-39A5-B07A-3C14BED77D44> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
    0x7fff34fb4000 -     0x7fff34fb7fff  com.apple.Cocoa (6.11 - 23) <237F7F6E-E7D1-363A-92AF-32B564728891> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff35001000 -     0x7fff353f5fff  com.apple.AppleMediaServices (1.0 - 1) <0EBC0F6F-3763-3E66-A92C-CCA9453326FE> /System/Library/PrivateFrameworks/AppleMediaServices.framework/Versions/A/AppleMediaServices
    0x7fff3542d000 -     0x7fff358a5fff  com.apple.MediaRemote (1.0 - 1) <DEF1BED2-78C1-318C-8DB5-FD464941D48B> /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
    0x7fff35ba1000 -     0x7fff35ba8fff  com.apple.DisplayServicesFW (3.1 - 380) <F794066C-55D0-3CC6-9BCD-C27207746B97> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fff363ea000 -     0x7fff3641afff  libtidy.A.dylib (18.2) <1AF8A622-91F8-3193-BA3D-CB1A799565A8> /usr/lib/libtidy.A.dylib
    0x7fff3641b000 -     0x7fff3643bfff  com.apple.MarkupUI (1.0 - 383.6) <7396A399-E8CE-31B6-8F56-CCCA5BF72669> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI
    0x7fff3643c000 -     0x7fff3644ffff  com.apple.Engram (1.0 - 1) <AED2FFE9-3841-33B1-B552-A75B17A20A3A> /System/Library/PrivateFrameworks/Engram.framework/Versions/A/Engram
    0x7fff36450000 -     0x7fff36473fff  com.apple.openscripting (1.7 - 190) <A2516A00-ECC2-31F2-9157-90AF9A4C6F56> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff36474000 -     0x7fff36477fff  com.apple.securityhi (9.0 - 55008) <DDAD2F6D-2105-370E-9C96-63ABF95ABF00> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff36478000 -     0x7fff3647bfff  com.apple.ink.framework (10.15 - 227) <6177BDED-F304-3EAD-B72E-23A050856753> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff3647c000 -     0x7fff3647ffff  com.apple.CommonPanels (1.2.6 - 101) <E6BB8219-34DB-3A11-A3C2-B17AD8E42414> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff36480000 -     0x7fff36487fff  com.apple.ImageCapture (1711.5.2 - 1711.5.2) <E3871995-745C-35A8-8B48-647DAAF046E1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff36488000 -     0x7fff37678fff  com.apple.JavaScriptCore (16611 - 16611.3.10.1.6) <E1A54760-8F75-3A78-89F7-232D9EC162E8> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff376e4000 -     0x7fff377f6fff  com.apple.AVFCapture (1.0 - 82.6) <FA7F06F5-9F18-3DF3-BB00-EA019050812E> /System/Library/PrivateFrameworks/AVFCapture.framework/Versions/A/AVFCapture
    0x7fff377f7000 -     0x7fff3788afff  com.apple.Quagga (47 - 47) <A2CD23BB-59D9-31ED-B980-4CF5379CABDE> /System/Library/PrivateFrameworks/Quagga.framework/Versions/A/Quagga
    0x7fff3788b000 -     0x7fff37ad5fff  com.apple.CMCapture (1.0 - 82.6) <DC0EAADD-A8F6-3ECE-8D10-354103DB7767> /System/Library/PrivateFrameworks/CMCapture.framework/Versions/A/CMCapture
    0x7fff37e71000 -     0x7fff37f1efff  com.apple.accounts.AccountsDaemon (113 - 113) <9D7CA3D9-01C2-3D59-9CC7-A37C63C18666> /System/Library/PrivateFrameworks/AccountsDaemon.framework/Versions/A/AccountsDaemon
    0x7fff37f1f000 -     0x7fff37f21fff  com.apple.OAuth (25 - 25) <44E3A1F3-08A5-36CB-BB3E-BB1A9BFDCD68> /System/Library/PrivateFrameworks/OAuth.framework/Versions/A/OAuth
    0x7fff384d1000 -     0x7fff384e0fff  com.apple.HID (1.0 - 1) <2078CFB6-A410-3B7E-B012-AE2BF1A80887> /System/Library/PrivateFrameworks/HID.framework/Versions/A/HID
    0x7fff384e1000 -     0x7fff38608fff  com.apple.QuickLookUIFramework (5.0 - 928.4) <6B0E42FA-C3F3-39CB-A7D0-D1172470B640> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff389db000 -     0x7fff38a61fff  com.apple.coredav (1.0.1 - 889) <1B9354FB-A21B-3DC3-B522-6EFC899BBC50> /System/Library/PrivateFrameworks/CoreDAV.framework/Versions/A/CoreDAV
    0x7fff38a62000 -     0x7fff38ab8fff  com.apple.ExchangeWebServices (8.0 - 814.100.1) <01A2D090-AB94-34BF-98E8-1B142DD7EB20> /System/Library/PrivateFrameworks/ExchangeWebServices.framework/Versions/A/ExchangeWebServices
    0x7fff38ab9000 -     0x7fff38af9fff  com.apple.MediaServices (1.0 - 1) <F226324E-830D-38BE-A1ED-0EC6A2ED82BB> /System/Library/PrivateFrameworks/MediaServices.framework/Versions/A/MediaServices
    0x7fff38bf5000 -     0x7fff38bf5fff  com.apple.marco (10.0 - 1000) <6E3E4EC3-3DD4-332D-8D0F-DC0F946269CB> /System/Library/PrivateFrameworks/Marco.framework/Versions/A/Marco
    0x7fff38ddb000 -     0x7fff38e13fff  com.apple.contacts.ContactsAutocomplete (1.0 - 1152.4) <2A0FB524-152A-3539-8613-C04652BC54E0> /System/Library/PrivateFrameworks/ContactsAutocomplete.framework/Versions/A/ContactsAutocomplete
    0x7fff38e14000 -     0x7fff38e20fff  com.apple.KerberosHelper (4.0 - 1.0) <1C287C65-8440-347F-A77A-E6D51262975D> /System/Library/PrivateFrameworks/KerberosHelper.framework/Versions/A/KerberosHelper
    0x7fff38e21000 -     0x7fff38e64fff  com.apple.ResponseKit (1.0 - 165.2) <21CE7F8C-F282-3788-80D3-28202C803AC8> /System/Library/PrivateFrameworks/ResponseKit.framework/Versions/A/ResponseKit
    0x7fff38e65000 -     0x7fff38e84fff  com.apple.proactive.support.ProactiveEventTracker (1.0 - 294.7) <7AC67187-F443-35EB-B4FF-B59F32DF3D3F> /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/Versions/A/ProactiveEventTracker
    0x7fff392a8000 -     0x7fff392a8fff  com.apple.PhoneNumbers (1.0 - 1) <79C9AAE1-5FEC-3471-8E9D-D39881EDDB19> /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers
    0x7fff392a9000 -     0x7fff392b0fff  com.apple.URLFormatting (146 - 146.22) <05567C81-E57E-3201-8DB5-9DC03762E7E7> /System/Library/PrivateFrameworks/URLFormatting.framework/Versions/A/URLFormatting
    0x7fff3bd12000 -     0x7fff3bd34fff  com.apple.quicklook.QuickLookSupport (1.0 - 135.5) <CB82EDC5-2A69-3F7D-9A79-C4B186D6F807> /System/Library/PrivateFrameworks/QuickLookSupport.framework/Versions/A/QuickLookSupport
    0x7fff3bd35000 -     0x7fff3bdccfff  com.apple.AirPlaySync (1.0 - 2780.10) <FE97137A-017E-392F-9457-1FF0ACB82681> /System/Library/PrivateFrameworks/AirPlaySync.framework/Versions/A/AirPlaySync
    0x7fff3c95d000 -     0x7fff3c9e0fff  com.apple.CorePDF (4.0 - 529) <C37DD615-4ABA-314C-985B-7E496184B997> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff3c9e1000 -     0x7fff3c9e4fff  com.apple.print.framework.Print (15 - 271) <29E7EB03-0307-35D9-B56F-B9DCB5C5A4E7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff3c9e5000 -     0x7fff3c9e8fff  com.apple.Carbon (160 - 164) <B86E3835-F4BE-3DCA-88C7-CEA01227DF58> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff3cae1000 -     0x7fff3cae1fff  com.apple.avfoundation (2.0 - 2020.10) <DF72C9C0-236F-326C-84C1-E4F25163310D> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff3cc9b000 -     0x7fff3ccbafff  com.apple.private.SystemPolicy (1.0 - 1) <8BC55621-1E45-33B3-BCD6-C59F1F390695> /System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy
    0x7fff3ce5e000 -     0x7fff3ce7bfff  com.apple.sidecar-core (1.0 - 231) <D0C9A506-6BF0-3D13-9D10-489BF305CB79> /System/Library/PrivateFrameworks/SidecarCore.framework/Versions/A/SidecarCore
    0x7fff3ce7c000 -     0x7fff3ce7ffff  com.apple.QuickLookNonBaseSystem (1.0 - 1) <6E5DDB55-9CD1-3245-939E-EA4081430444> /System/Library/PrivateFrameworks/QuickLookNonBaseSystem.framework/Versions/A/QuickLookNonBaseSystem
    0x7fff3d297000 -     0x7fff3d29dfff  com.apple.FeatureFlagsSupport (1.0 - 28.60.1) <17CAEB39-7966-34B7-9E1B-55D64289BFAF> /System/Library/PrivateFrameworks/FeatureFlagsSupport.framework/Versions/A/FeatureFlagsSupport
    0x7fff3d40e000 -     0x7fff3d425fff  com.apple.SafariServices.framework (16611 - 16611.3.10.1.6) <4AC4AD2E-B214-3244-B148-200EFBCE6884> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff3d5d8000 -     0x7fff3d5e3fff  com.apple.MallocStackLogging (1.0 - 1) <DF41452E-DA3E-3F74-9354-6F82BE363DB8> /System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging
    0x7fff3d5f8000 -     0x7fff3d60afff  libmis.dylib (274.140.2) <570E2D9A-BC76-37F7-8CFC-E18AD5E81CE0> /usr/lib/libmis.dylib
    0x7fff3d627000 -     0x7fff3d796fff  com.apple.CoreHandwriting (161 - 1.2) <DF7F9BC6-ACE1-32CE-9E1E-5642832E10E9> /System/Library/PrivateFrameworks/CoreHandwriting.framework/Versions/A/CoreHandwriting
    0x7fff3d797000 -     0x7fff3d9f2fff  com.apple.imageKit (3.0 - 1100) <DFD1D9B4-41BE-30F1-A1B8-9925481B5DA2> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff3d9f3000 -     0x7fff3db09fff  com.apple.PencilKit (1.0 - 1) <924D651B-8645-3225-9DE4-BDAB27B1DED7> /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
    0x7fff3db0a000 -     0x7fff3db1bfff  com.apple.sidecar-ui (1.0 - 231) <363E669A-2E00-3EAB-A7F1-E85836913057> /System/Library/PrivateFrameworks/SidecarUI.framework/Versions/A/SidecarUI
    0x7fff3e13e000 -     0x7fff3e1a0fff  com.apple.ImageCaptureCore (1711.5.2 - 1711.5.2) <BC3B41E7-DC5A-3611-ACCA-F9827979CA03> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff3e1a1000 -     0x7fff3e1c6fff  com.apple.quartzfilters (1.10.0 - 98) <B4874E51-0832-3240-8972-8375A13D372B> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff3e412000 -     0x7fff3e574fff  com.apple.MediaPlayer (1.0 - 1.0) <C4577D13-9F8E-3AE5-9D3D-A292F2773A82> /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer
    0x7fff3e575000 -     0x7fff3e856fff  com.apple.iTunesCloud (1.0 - 1) <CAD253D5-9CAC-368A-8EEB-8576B299256F> /System/Library/PrivateFrameworks/iTunesCloud.framework/Versions/A/iTunesCloud
    0x7fff3e882000 -     0x7fff3e9aefff  com.apple.AnnotationKit (1.0 - 383.6) <D8726DE5-7A61-3562-9A43-5D2F5E861335> /System/Library/PrivateFrameworks/AnnotationKit.framework/Versions/A/AnnotationKit
    0x7fff3e9af000 -     0x7fff3ee4ffff  com.apple.QuartzComposer (5.1 - 383) <7704093A-6C35-375F-AA17-756FABB66D1D> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff3ee50000 -     0x7fff3ef38fff  com.apple.PDFKit (1.0 - 950.40.3) <0538C0CD-02D4-3684-BBD1-AD5C9F861276> /System/Library/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff3fc3a000 -     0x7fff3fc70fff  com.apple.MobileInstallation (2.0 - 1.0) <E0BBDC12-64FA-3B35-AF85-8B683B31C018> /System/Library/PrivateFrameworks/MobileInstallation.framework/Versions/A/MobileInstallation
    0x7fff40e97000 -     0x7fff40e9afff  com.apple.quartzframework (1.5 - 25) <CB57120A-C7D9-3999-9BD4-EB214E8E3CF3> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff412bf000 -     0x7fff412ddfff  libCGInterfaces.dylib (544.4) <05A5B7E9-C79A-3FEA-AD6C-72FE168004C3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff41687000 -     0x7fff416e3fff  com.apple.AppStoreDaemon (1.0 - 1) <ADB47501-81CF-3155-B60A-1736AFDDE2E7> /System/Library/PrivateFrameworks/AppStoreDaemon.framework/Versions/A/AppStoreDaemon
    0x7fff4295d000 -     0x7fff436bdfff  libfaceCore.dylib (4.3.1) <8014C48B-E6BC-3AEB-BECE-808158C71EEE> /System/Library/Frameworks/Vision.framework/libfaceCore.dylib
    0x7fff436be000 -     0x7fff437d1fff  com.apple.TextRecognition (1.0 - 157) <E100917D-A3D9-36B5-A4B0-C0E131045D87> /System/Library/PrivateFrameworks/TextRecognition.framework/Versions/A/TextRecognition
    0x7fff437d2000 -     0x7fff437eafff  com.apple.Futhark (1.0 - 1) <ACB352CB-05F6-33DF-884F-97E73913C577> /System/Library/PrivateFrameworks/Futhark.framework/Versions/A/Futhark
    0x7fff44348000 -     0x7fff4434cfff  com.apple.DAAPKit (1.0 - 1) <9947BB10-2335-3BB4-B884-9313DC160E59> /System/Library/PrivateFrameworks/DAAPKit.framework/Versions/A/DAAPKit
    0x7fff45cc3000 -     0x7fff45cc6fff  libpmenergy.dylib (227.140.1) <CFCE74A5-EEF8-36E2-9717-8E4B45F2663C> /usr/lib/libpmenergy.dylib
    0x7fff479e8000 -     0x7fff47a28fff  com.apple.osanalytics.OSAnalytics (1.0 - 1) <19C9EC00-4A56-303C-9C22-47AF6222F1AF> /System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics
    0x7fff48276000 -     0x7fff48291fff  com.apple.network.statistics.framework (1.2 - 1) <0AFE927D-702D-35F4-8938-BE33B1A95BF6> /System/Library/PrivateFrameworks/NetworkStatistics.framework/Versions/A/NetworkStatistics
    0x7fff48584000 -     0x7fff4858bfff  com.apple.MobileSystemServices (1.0 - 1) <BB77CE92-0024-365B-86ED-46F4D0816BD9> /System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices
    0x7fff516a7000 -     0x7fff51746fff  com.apple.Symbolication (12.5 - 64544.70.1) <262C27E9-D575-3209-8403-C314C534D1B0> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff51936000 -     0x7fff51939fff  libpmsample.dylib (227.140.1) <B2B85546-A9D2-3919-A396-63A26011ECAC> /usr/lib/libpmsample.dylib
    0x7fff53fce000 -     0x7fff54004fff  com.apple.ReplayKit (1.0 - 1) <E308B8DB-49B7-3ACC-B8F3-F2338036684D> /System/Library/Frameworks/ReplayKit.framework/Versions/A/ReplayKit
    0x7fff54005000 -     0x7fff54028fff  com.apple.StoreKit (1.0 - 1) <3477F902-E8FD-3DE8-AA0A-A92E9E1FA6AF> /System/Library/Frameworks/StoreKit.framework/Versions/A/StoreKit
    0x7fff54029000 -     0x7fff5402cfff  com.apple.StoreKitUIMac (1.0 - 1) <3E669054-A227-38E0-AE0A-1C73D0175F11> /System/Library/PrivateFrameworks/StoreKitUIMac.framework/Versions/A/StoreKitUIMac
    0x7fff555fb000 -     0x7fff555fefff  com.apple.ForceFeedback (1.0.6 - 1.0.6) <63184EF1-A02C-3D64-A797-15190247C807> /System/Library/Frameworks/ForceFeedback.framework/Versions/A/ForceFeedback
    0x7fff6bb42000 -     0x7fff6bb48fff  libCoreFSCache.dylib (200.11) <3C96E791-3964-32EA-A84A-00DF3455B43D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff6bb49000 -     0x7fff6bb4dfff  libCoreVMClient.dylib (200.11) <966F49F6-D2D5-3ACB-9CFD-9F8D3C8C82F9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff6bb4e000 -     0x7fff6bb5dfff  com.apple.opengl (18.5.9 - 18.5.9) <5C26B170-E22B-3AAD-BA33-61304FFA70B2> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff6bb5e000 -     0x7fff6bb60fff  libCVMSPluginSupport.dylib (18.5.9) <435F258D-95B5-3015-BDAC-4B8EF8E89F1E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff6bb61000 -     0x7fff6bb69fff  libGFXShared.dylib (18.5.9) <851E0956-A16E-3F5D-B3BE-37B56C2BAA04> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff6bb6a000 -     0x7fff6bb9dfff  libGLImage.dylib (18.5.9) <687EBB15-1AB3-3815-A69D-58527655A92D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff6bb9e000 -     0x7fff6bbdafff  libGLU.dylib (18.5.9) <29B7802C-F6E4-3DF1-B5D6-07B29C6D02B2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff6bd6f000 -     0x7fff6bd79fff  libGL.dylib (18.5.9) <8A4ED04C-9171-3CE2-A52A-E7C4D76A6EDA> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff6d1b9000 -     0x7fff6d211fff  com.apple.opencl (4.6 - 4.6) <713206B3-A335-3AC5-B342-4CE16BDF69F4> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff6e2c3000 -     0x7fff6e3aafff  com.apple.audio.AVFAudio (1.0 - 477.88) <5FBB7121-7190-317C-8796-4A64EBEE1629> /System/Library/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff6f92c000 -     0x7fff6f93efff  com.apple.CMImaging (1.0 - 82.6) <91AA282D-81A1-34C3-AFF4-887ABA89CCAA> /System/Library/PrivateFrameworks/CMImaging.framework/Versions/A/CMImaging
    0x7fff73c3c000 -     0x7fff73c47fff  com.apple.SymptomAnalytics (1.0 - 1431.140.1) <0818E06C-B5D7-3AF4-AECD-D29EBD8CD508> /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/Versions/A/SymptomAnalytics
    0x7fff73e5d000 -     0x7fff73e75fff  com.apple.SymptomPresentationFeed (1.0 - 1431.140.1) <39660362-929E-3A0A-A7D0-80C4F437711B> /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/Versions/A/SymptomPresentationFeed
    0x7fff779ed000 -     0x7fff779f4fff  libRosetta.dylib (203.58) <F72C2D50-7279-3497-8A59-56908F9661F3> /usr/lib/libRosetta.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=985.9M resident=0K(0%) swapped_out_or_unallocated=985.9M(100%)
Writable regions: Total=362.7M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=362.7M(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Activity Tracing                   256K        1 
CoreGraphics                        16K        3 
CoreServices                       224K        1 
Dispatch continuations            96.0M        1 
Foundation                          16K        1 
Kernel Alloc Once                    8K        1 
MALLOC                           108.2M       54 
MALLOC guard page                   32K        7 
Mach message                        16K        2 
Memory Tag 253                    16.0G       20 
Memory Tag 253 (reserved)           48K        1         reserved VM address space (unallocated)
Memory Tag 255                     4.0G       18 
STACK GUARD                       56.1M       26 
Stack                            147.2M       26 
VM_ALLOCATE                        400K       10 
__DATA                            30.1M      469 
__DATA_CONST                      25.0M      296 
__DATA_DIRTY                      1701K      208 
__FONT_DATA                          4K        1 
__LINKEDIT                       502.5M       11 
__OBJC_RO                         70.3M        1 
__OBJC_RW                         2496K        2 
__TEXT                           483.5M      471 
__UNICODE                          588K        1 
mapped file                      224.8M       22 
shared memory                      756K       15 
===========                     =======  ======= 
TOTAL                             21.7G     1669 
TOTAL, minus reserved VM space    21.7G     1669 

Model: MacBookPro16,1, BootROM 1554.140.20.0.0 (iBridge: 18.16.14759.0.1,0), 6 processors, 6-Core Intel Core i7, 2,6 GHz, 16 GB, SMC 
Graphics: kHW_IntelUHDGraphics630Item, Intel UHD Graphics 630, spdisplays_builtin
Graphics: kHW_AMDRadeonPro5300MItem, AMD Radeon Pro 5300M, spdisplays_pcie_device, 4 GB
Memory Module: BANK 0/ChannelA-DIMM0, 8 GB, DDR4, 2667 MHz, Micron, 8ATF1G64HZ-2G6E1
Memory Module: BANK 2/ChannelB-DIMM0, 8 GB, DDR4, 2667 MHz, Micron, 8ATF1G64HZ-2G6E1
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x7BF), wl0: Aug 10 2021 20:10:47 version 9.30.444.18.32.5.71 FWID 01-30b2601e
Bluetooth: Version 8.0.5d7, 3 services, 27 devices, 1 incoming serial ports
Network Service: Wi-Fi, AirPort, en0
USB Device: USB 3.1 Bus
USB Device: Hub
USB Device: Blue Snowflake
USB Device: TUSB3410 EECode Ser
USB Device: Texas Instruments USB Billboard Device
USB Device: Apple T2 Bus
USB Device: Composite Device
USB Device: Touch Bar Backlight
USB Device: Touch Bar Display
USB Device: Apple Internal Keyboard / Trackpad
USB Device: Headset
USB Device: Ambient Light Sensor
USB Device: FaceTime HD Camera (Built-in)
USB Device: Apple T2 Controller
Thunderbolt Bus: MacBook Pro, Apple Inc., 63.5
Thunderbolt Bus: MacBook Pro, Apple Inc., 63.5
```",codebytere,bug :beetle:;component/node-integration;platform/all;15-x-y;16-x-y,2021-09-22T12:28:44Z,2021-09-27T13:02:14Z,panva,codebytere,panva;codebytere,codebytere,codebytere,,codebytere,
electron/electron,31068,"[Bug]: Calling removeBrowserView() in any way disables dragging using other BrowserViews on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

Unsure

### Expected Behavior

BrowserViews containing draggable areas should continue to function normally regardless of other BrowserViews being removed using `removeBrowserView`

### Actual Behavior

BrowserViews containing draggable areas cease to function on macOS once `removeBrowserView` is called.

### Testcase Gist URL

_No response_

### Additional Information

Calling `setBounds` on any view seems to restore the functionality.

Reproduction using `electron-quick-start` here: https://github.com/devinbinnie/electron-quick-start/tree/remove_browser_view_issue",codebytere,platform/windows;platform/macOS;bug :beetle:;14-x-y;15-x-y,2021-09-22T19:09:40Z,2021-09-30T09:41:08Z,devinbinnie,codebytere;devinbinnie,devinbinnie;codebytere,,codebytere,,codebytere,
electron/electron,31109,"[Bug]: BrowserView not always painting content after upgrading from 13.4.0 to 14.0.0 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 20H2

### What arch are you using?

x64

### Last Known Working Electron version

13.4.0

### Expected Behavior

I created the simplest ""Hello world"" app possible to demonstrate this regression in Electron (see attached Gist --switch it back and forth between Electron v14.0.0 and v13.4.0 to test).

The main BrowserWindow has a single button.  When clicked, it opens another BrowserWindow that displays content in a BrowserView.  You can keep clicking the main window button over and over again to open secondary BrowserWindows.

The expected behaviour is that whenever a secondary window is opened, its content renders.

### Actual Behavior

On Electron v13.4.0, the secondary window instances ALWAYS render their content.

On Electron v14.0.0, something regressed.  Most of the time, secondary windows open blank.  Only occasionally do they succeed in rendering their content.

I looked at the change log for Electron 14, and the commit that looks most likely to have caused this regression is #29919. @codebytere 

### Testcase Gist URL

https://gist.github.com/eFail/463f35452c3f25a9d08d4feea20d4a37

### Additional Information

BrowserView definitely seems to be the root cause of the issue seen here.  If I remove it and tell the secondary BrowserWindow to load the markup directly, then the content always renders properly.

_No response_",codebytere,platform/windows;bug :beetle:;component/BrowserView;14-x-y;stale,2021-09-24T05:54:35Z,2022-11-06T02:19:15Z,eFail,codebytere;eFail;sssooonnnggg;DillonHHH;WaitGodot;AtherActive;felixrieseberg;matt-way,eFail;codebytere,,codebytere,,,
electron/electron,31115,"[Bug]: clipboard.writeBuffer() regression ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0

### What operating system are you using?

macOS

### Operating System Version

10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

14.0.1

### Expected Behavior

`clipboard.writeBuffer('rawFormat', Buffer.from('content'))` should write `content` into the clipboard as `rawFormat`.



### Actual Behavior

`clipboard.writeBuffer('rawFormat', Buffer.from('content'))` no longer places a `rawFormat` entry on the clipboard.

Instead, the data is being [""pickled""](https://github.com/w3c/editing/blob/gh-pages/docs/clipboard-pickling/explainer.md#pickling-for-async-clipboard-api) to ensure it cannot seamlessly interact with native apps, which is appropriate for web pages, but not for electron apps.

This regression occurs on all platforms.


### Testcase Gist URL

https://gist.github.com/fd9dbdc151ab219f80ed1512ff964f39

### Additional Information

This is happening as a fallout of Chromium [removing support for its Raw Clipboard API](https://bugs.chromium.org/p/chromium/issues/detail?id=1217643).
Chromium's ui::ScopedClipboardWriter class is no longer exposing a mean to set raw data on the clipboard.

This sneaked past the tests in [api-clipboard.spec.js](https://github.com/electron/electron/blob/main/spec/api-clipboard-spec.js#L120) because the clipboard.read/readBuffer methods are ""unpickling"" data from the clipboard, which means that in isolation, using .writeBuffer() and .readBuffer() together appears to work.

The [fiddle linked](https://gist.github.com/henrit/fd9dbdc151ab219f80ed1512ff964f39) is using .writeBuffer() with .readText() to break that symmetry and expose the problem.

On older Electron builds (14.0.1 on Mac/Linux, 13.4.0 on Win), running the fiddle then pressing the ""copy"" and ""paste"" buttons in order will populate the text area.  
On Electron 15.0.0, the text area doesn't get populated. 

Inspecting the clipboard using external tools will show formats such as `com.web.custom.format0` on Mac, `application/web;type=""custom/format0""` on Linux, and `Web Custom Format0` on Windows instead of the expected platform-specific plain text format.
",jkleinsc,component/clipboard;bug :beetle:;15-x-y;16-x-y,2021-09-24T18:11:28Z,2021-11-04T18:21:40Z,henrit,henrit;jkleinsc,henrit;codebytere;VerteDinde,,jkleinsc,,jkleinsc,
electron/electron,31130,"[Bug]: Read file FileNameW from clipboard error ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/master/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

10.1.5

### Expected Behavior

i want get file path from clipboard.
`const res = clipboard.readBuffer(""FileNameW"").toString(""ucs2"");
 console.log(res);`

### Actual Behavior

`const res = clipboard.readBuffer(""FileNameW"").toString(""ucs2"");
        console.log(res);`
 Got this error: [26824:0927/105619.004:ERROR:crashpad_client_win.cc(808)] not connected

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,bug :beetle:;15-x-y;16-x-y,2021-09-27T04:02:18Z,2021-11-01T14:00:36Z,Xing1P,jkleinsc,Xing1P;codebytere;VerteDinde,,codebytere,,jkleinsc,
electron/electron,31249,"[Bug]: ""Failed to serialize arguments"" error occurs on right mouse click on ""webview"" content ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.1.0 / and all 16.0.0-alpha.x

### What operating system are you using?

Other Linux

### Operating System Version

kernel 5.14.7-2

### What arch are you using?

x64

### Last Known Working Electron version

15.0.0

### Expected Behavior

No error occurs.

### Actual Behavior

The `Failed to serialize arguments` error occurs on right mouse click on the webview's content.

### Testcase Gist URL

_No response_

### Additional Information

Notice there is no error when you do the right mouse click on the browserwindow's content but on webview's.

Notice that adding the ""context-menu"" handler is not even required.

The ""input"" controls were  added to the snippet just for the convenience of testing. The right mouse click on any area of webview triggers the error.

To reproduce:
```javascript
const {app, BrowserWindow} = require(""electron"")

app.whenReady().then(() => {
  //  app.on(""web-contents-created"", (...[/* event */, webContents]) => {
  //    webContents.on(""context-menu"", () => {/* NOOP */})
  //  })
  new BrowserWindow({webPreferences: {webviewTag: true}}).loadURL(`data:text/html,
    <html><body>
    <input type='text' value='input'>
    <webview src=""data:text/html,<input type='text' value='webview input'>""></webview>
    </body></html>`,
  )
})
```",miniak,component/webview;bug :beetle:;platform/all;15-x-y;16-x-y,2021-10-02T08:48:21Z,2021-10-04T18:00:26Z,vladimiry,vladimiry;VerteDinde,vladimiry;codebytere,,miniak,,VerteDinde,
electron/electron,31281,"[Bug]: Crash in electron::api::WebFrameMain::GetRendererApi ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.4.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

11.0.0

### Expected Behavior

Not to crash

### Actual Behavior

Main process crashes when renderer process not more available. 

### Testcase Gist URL

_No response_

### Additional Information

Crash on this line : 
https://github.com/electron/electron/blob/4d89174b4187067a1f91f44f48c4234720fd24fa/shell/browser/api/electron_api_web_frame_main.cc#L187

stack trace looks like this:
https://imgur.com/a/4LpQJ4J

We does not have steps to reproduce it reliably. 
Some details in crash reports are pointing out that it could happens after a rendered process dies by crashing or being killed by a user. ",codebytere,bug :beetle:,2021-10-04T20:21:26Z,2021-10-07T05:26:19Z,summeroff,,summeroff,,codebytere,,codebytere,
electron/electron,31337,"[Bug]: Crash when closing a window which has its webcontents destroyed ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 19042.985

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

1) no crash should happen
2) I would expect both the browserWindow and its webContents to have isDestroyed set to true

### Actual Behavior

```
browserWindow.webContents.on(""destroyed"", ( ) => {
  console.log(""isDestroyed"", browserWindow.isDestroyed(), browserWindow.webContents.isDestroyed());
  browserWindow.close();
});
```

This will cause a crash
Additionally the log will show: isDestroyed false true
Is this expected behavior? I thought that the window and the webContents are related to each other

### Testcase Gist URL

https://gist.github.com/t57ser/319bcb4e6e71e6097094e46db526fae7

### Additional Information

_No response_",codebytere,bug :beetle:;platform/all;14-x-y;15-x-y;16-x-y,2021-10-07T09:27:40Z,2021-11-01T04:32:55Z,t57ser,codebytere;t57ser,t57ser;codebytere,codebytere,codebytere,,zcbenz,
electron/electron,31370,"which electron version work silent print with device name? ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Problem Description

i tried electron 12,13.xx,14.xx but silent print with device name does not work

### Proposed Solution

which electron version correctly works print all feature give in electron docs?

### Alternatives Considered

which electron version correctly works print all feature give in electron docs?

### Additional Information

which electron version correctly works print all feature give in electron docs?",codebytere,component/printing;bug :beetle:,2021-10-09T15:51:58Z,2021-10-20T07:48:31Z,ibalaji777,alexfr26;codebytere,ibalaji777;codebytere,codebytere,codebytere,,codebytere,electron/electron#29334;
electron/electron,31373,"[Bug]: Electron segfaults when saving a PDF with forms after editing any fields ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

""electron"": ""^15.1.1""

### What operating system are you using?

Other Linux

### Operating System Version

5.10.70-1-MANJARO

### What arch are you using?

x64

### Last Known Working Electron version

N/A

### Expected Behavior

PDF should save correctly (or at least, not offer to save with edits; wonder if the chromium PDF editor can be configured to not offer that button, if for some reason saving cannot be done)

### Actual Behavior

Process segfaults when I try to save ""with [my] changes"". (Not when trying to save without changes, though)

### Testcase Gist URL

_No response_

### Additional Information

https://github.com/sigaloid/electron-pdf-crash

https://user-images.githubusercontent.com/69441971/136713869-ca4b9355-46fb-4444-b23d-6b824b99bdea.mp4

Shows how saving ""without [my] changes"" does nothing but saving ""with [my] changes"" segmentation fault's.

index.html is pretty minimal to reproduce. Just a single iframe with a src pointing to a PDF that has forms.

https://github.com/sigaloid/electron-pdf-crash/blob/main/index.html

A solution would be to configure Chromium to not allow saving edited forms, if this isn't supported. Just some way of hiding the button, I suppose.

Additional info and debugging in this issue (thanks @abitofevrything) https://github.com/zadam/trilium/issues/2205

PS: You can replicate this by [cloning this](https://github.com/sigaloid/electron-pdf-crash) and trying it yourself, or I can run it with some sort of debugging enabled to get any logs necessary. ",codebytere,platform/linux;bug :beetle:;15-x-y,2021-10-10T22:17:01Z,2022-02-07T09:09:13Z,sigaloid,codebytere,sigaloid;sofianguy,,codebytere,,codebytere,
electron/electron,31420,"[Bug]: navigator.keyboard.lock() not work ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

13.5.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

After I execute:
document.body.requestFullscreen();
navigator.keyboard.lock();

The keyboard is supposed be locked. System key like: Alt + tab should be captured by js code. 

### Actual Behavior

System key is not locked. Alt + tab will swipe the electron app.

### Testcase Gist URL

_No response_

### Additional Information

The same page works as expected in Chrome.",codebytere,platform/windows;bug :beetle:;status/confirmed;13-x-y;has-repro-comment,2021-10-14T09:21:13Z,2021-10-28T14:23:06Z,fannairu,fannairu;clavin;kgdev,fannairu;clavin;ckerr,,codebytere,,jkleinsc,
electron/electron,31448,"[Bug]: MediaMetadata is not working on electron v15 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.2

### What operating system are you using?

macOS

### Operating System Version

macOS

### What arch are you using?

x64

### Last Known Working Electron version

13

### Expected Behavior

I updated my electron version to v15.0.2 but noticed that Metadata is not working anymore....

```js
    window.navigator.mediaSession.metadata = new window.MediaMetadata(metadata);
```
NOTE: it was working on v13.0.1

### Actual Behavior

.

### Testcase Gist URL

_No response_

### Additional Information

.",codebytere,bug :beetle:;blocked/need-repro;15-x-y,2021-10-15T15:47:42Z,2021-10-21T19:39:39Z,alirezavlz,codebytere;PrestonN;alirezavlz;staniel359,alirezavlz;codebytere,,codebytere,,jkleinsc,
electron/electron,31452,"[Bug]: Crash on attempt to initialize Node Environment with enabled nodeIntegrationInWorker. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.1.2

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur, 11.4

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Don't crash when nodeIntegrationInWorker is true and a service worker is being started.

### Actual Behavior

A crash occurs once the service worker is attempted to initialize node environment when application is starting up.

### Testcase Gist URL

_No response_

### Additional Information

### To Reproduce

```bash
$ git clone https://github.com/hamst/electron-node-integration-service-worker-crash.git .
$ npm i
$ npm run cleanup
$ npm run install-sw
$ npm run start
```

### Details
Setup node tracing controller for renderer process is happening just before creating nodejs environment and only for renderer context (see `ElectronRendererClient::DidCreateScriptContext`). 
When we're starting application with already installed service worker, electron attempts to create nodejs environment for worker context (`ElectronRendererClient::WorkerScriptReadyForEvaluationOnWorkerThread`) before doing the same for renderer context.
`node_bindings_->CreateEnvironment` doesn't expect that TraceEventHelper::GetAgent could return nullptr, as result we're getting a crash with stack trace:
```
Received signal 11 SEGV_MAPERR 000000000498
0   Electron Framework                  0x00000001150dfb7f base::debug::CollectStackTrace(void**, unsigned long) + 31
1   Electron Framework                  0x0000000114e72d4b base::debug::StackTrace::StackTrace(unsigned long) + 75
2   Electron Framework                  0x0000000114e72dcd base::debug::StackTrace::StackTrace(unsigned long) + 29
3   Electron Framework                  0x0000000114e72da8 base::debug::StackTrace::StackTrace() + 40
4   Electron Framework                  0x00000001150dfa26 base::debug::(anonymous namespace)::StackDumpSignalHandler(int, __siginfo*, void*) + 1414
5   libsystem_platform.dylib            0x00007fff204acd7d _sigtramp + 29
6   ???                                 0x0000000102aef200 0x0 + 4339986944
7   Electron Framework                  0x00000001217cc1ac node::tracing::Agent::GetTracingController() + 44
8   Electron Framework                  0x0000000121a531f0 node::tracing::TraceEventHelper::GetTracingController() + 16
9   Electron Framework                  0x00000001217be98f node::tracing::TraceEventHelper::GetCategoryGroupEnabled(char const*) + 31
10  Electron Framework                  0x00000001219805e2 node::performance::PerformanceState::Mark(node::performance::PerformanceMilestone, unsigned long long) + 178
11  Electron Framework                  0x00000001217c0337 node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::Environment::Flags, unsigned long long) + 4359
12  Electron Framework                  0x00000001217c1708 node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::Environment::Flags, unsigned long long) + 88
13  Electron Framework                  0x000000012174dfce node::CreateEnvironment(node::IsolateData*, v8::Local<v8::Context>, int, char const* const*, int, char const* const*) + 414
14  Electron Framework                  0x0000000109c3fef5 electron::NodeBindings::CreateEnvironment(v8::Local<v8::Context>, node::MultiIsolatePlatform*) + 981
15  Electron Framework                  0x0000000109cc6904 electron::WebWorkerObserver::WorkerScriptReadyForEvaluation(v8::Local<v8::Context>) + 260
16  Electron Framework                  0x0000000109cb0be5 electron::ElectronRendererClient::WorkerScriptReadyForEvaluationOnWorkerThread(v8::Local<v8::Context>) + 133
17  Electron Framework                  0x0000000120d159e6 content::RendererBlinkPlatformImpl::WorkerScriptReadyForEvaluation(v8::Local<v8::Context> const&) + 70
18  Electron Framework                  0x0000000119f6b60b blink::WorkerOrWorkletScriptController::PrepareForEvaluation() + 667
19  Electron Framework                  0x000000011ee6204d blink::ServiceWorkerGlobalScope::Initialize(blink::KURL const&, network::mojom::ReferrerPolicy, network::mojom::IPAddressSpace, WTF::Vector<std::__1::pair<WTF::String, network::mojom::ContentSecurityPolicyType>, 0u, WTF::PartitionAllocator> const&, WTF::Vector<WTF::String, 0u, WTF::PartitionAllocator> const*, long long) + 189
20  Electron Framework                  0x000000011ee61efc blink::ServiceWorkerGlobalScope::RunClassicScript(blink::KURL const&, network::mojom::ReferrerPolicy, network::mojom::IPAddressSpace, WTF::Vector<std::__1::pair<WTF::String, network::mojom::ContentSecurityPolicyType>, 0u, WTF::PartitionAllocator>, WTF::Vector<WTF::String, 0u, WTF::PartitionAllocator> const*, WTF::String const&, std::__1::unique_ptr<WTF::Vector<unsigned char, 0u, WTF::PartitionAllocator>, std::__1::default_delete<WTF::Vector<unsigned char, 0u, WTF::PartitionAllocator> > >, v8_inspector::V8StackTraceId const&) + 124
21  Electron Framework                  0x000000011ee60f6e blink::ServiceWorkerGlobalScope::LoadAndRunInstalledClassicScript(blink::KURL const&, v8_inspector::V8StackTraceId const&) + 1054
22  Electron Framework                  0x000000011ee60856 blink::ServiceWorkerGlobalScope::FetchAndRunClassicScript(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, blink::FetchClientSettingsObjectSnapshot const&, blink::WorkerResourceTimingNotifier&, v8_inspector::V8StackTraceId const&) + 262
23  Electron Framework                  0x000000011cfe538b blink::WorkerThread::FetchAndRunClassicScriptOnWorkerThread(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&) + 187
24  Electron Framework                  0x000000011cfee48e void base::internal::FunctorTraits<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), void>::Invoke<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), blink::WorkerThread*, blink::KURL, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>(void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), blink::WorkerThread*&&, blink::KURL&&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >&&, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >&&, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>&&, v8_inspector::V8StackTraceId&&) + 286
25  Electron Framework                  0x000000011cfee177 void base::internal::InvokeHelper<false, void>::MakeItSo<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), blink::WorkerThread*, blink::KURL, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>(void (blink::WorkerThread::*&&)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), blink::WorkerThread*&&, blink::KURL&&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >&&, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >&&, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>&&, v8_inspector::V8StackTraceId&&) + 199
26  Electron Framework                  0x000000011cfee056 void base::internal::Invoker<base::internal::BindState<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), WTF::CrossThreadUnretainedWrapper<blink::WorkerThread>, blink::KURL, WTF::PassedWrapper<std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> > >, WTF::PassedWrapper<std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> > >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>, void ()>::RunImpl<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), std::__1::tuple<WTF::CrossThreadUnretainedWrapper<blink::WorkerThread>, blink::KURL, WTF::PassedWrapper<std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> > >, WTF::PassedWrapper<std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> > >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul>(void (blink::WorkerThread::*&&)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), std::__1::tuple<WTF::CrossThreadUnretainedWrapper<blink::WorkerThread>, blink::KURL, WTF::PassedWrapper<std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> > >, WTF::PassedWrapper<std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> > >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>&&, std::__1::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul>) + 246
27  Electron Framework                  0x000000011cfedf57 base::internal::Invoker<base::internal::BindState<void (blink::WorkerThread::*)(blink::KURL const&, std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> >, std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> >, blink::WorkerResourceTimingNotifier*, v8_inspector::V8StackTraceId const&), WTF::CrossThreadUnretainedWrapper<blink::WorkerThread>, blink::KURL, WTF::PassedWrapper<std::__1::unique_ptr<blink::WorkerMainScriptLoadParameters, std::__1::default_delete<blink::WorkerMainScriptLoadParameters> > >, WTF::PassedWrapper<std::__1::unique_ptr<blink::CrossThreadFetchClientSettingsObjectData, std::__1::default_delete<blink::CrossThreadFetchClientSettingsObjectData> > >, blink::CrossThreadPersistent<blink::WorkerResourceTimingNotifier>, v8_inspector::V8StackTraceId>, void ()>::RunOnce(base::internal::BindStateBase*) + 87
28  Electron Framework                  0x0000000109735b45 base::OnceCallback<void ()>::Run() && + 117
29  Electron Framework                  0x0000000114fced45 base::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 1477
30  Electron Framework                  0x00000001150190e6 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*) + 1606
31  Electron Framework                  0x0000000115018828 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 152
32  Electron Framework                  0x000000011501949c non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 28
33  Electron Framework                  0x0000000114ec0971 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 145
34  Electron Framework                  0x0000000115019d2b base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 795
35  Electron Framework                  0x0000000114f61c80 base::RunLoop::Run() + 752
36  Electron Framework                  0x00000001105fa58b blink::scheduler::WorkerThread::SimpleThreadImpl::Run() + 715
37  Electron Framework                  0x0000000115094c2b base::SimpleThread::ThreadMain() + 91
38  Electron Framework                  0x0000000115101d45 base::(anonymous namespace)::ThreadFunc(void*) + 229
39  libsystem_pthread.dylib             0x00007fff204678fc _pthread_start + 224
40  libsystem_pthread.dylib             0x00007fff20463443 thread_start + 15
```",codebytere,bug :beetle:;component/node-integration;15-x-y;16-x-y,2021-10-15T23:37:06Z,2022-10-12T14:36:25Z,hamst,hamst;altjz,hamst;codebytere,codebytere,codebytere,,jkleinsc,
electron/electron,31461,"[Bug]: Windows with vibrancy have a white background instead of being see-through ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

13.5.2

### Expected Behavior

When I set the `vibrancy` option on a new BrowserWindow (e.g. to ""popover""), the window's background should reflect this.

<img width=""838"" alt=""CleanShot 2021-10-18 at 22 25 54@2x"" src=""https://user-images.githubusercontent.com/541628/137801784-5ba70aba-40c0-4dec-a112-d770d7db24ec.png"">
 

### Actual Behavior

The window's background stays white. Adding `transparent: true` to the options makes the background work as expected but removes the title bar.

<img width=""820"" alt=""CleanShot 2021-10-18 at 22 26 48@2x"" src=""https://user-images.githubusercontent.com/541628/137801905-ad88db6f-2aa7-4f42-bb15-829eb2581fa4.png"">

<img width=""827"" alt=""CleanShot 2021-10-18 at 22 28 01@2x"" src=""https://user-images.githubusercontent.com/541628/137802078-0b7854fe-4de1-49d5-8d44-18cf78b3739a.png"">


### Testcase Gist URL

https://gist.github.com/bbc333443f77ce4a6061d43eddf67fd4

### Additional Information

This might be related to #30993 ",codebytere,platform/macOS;bug :beetle:;14-x-y;15-x-y;16-x-y,2021-10-18T20:30:11Z,2021-10-21T19:53:53Z,leolabs,BitesPotatoBacks;leolabs;craftzdog;codebytere;samuelmaddock,leolabs;codebytere,,codebytere,,jkleinsc,
electron/electron,31547,"[Bug]: Invalid TypeScript return type definition for BrowserWindow.getParentWindow() ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.0

### What operating system are you using?

macOS

### Operating System Version

Does not matter

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Typescript definition of BrowserWindow.getParentWindow() does not match actual implementation.  https://github.com/electron/electron/blob/ff39a0e93931e6367af762f17057919b4499b1f6/shell/browser/api/electron_api_base_window.cc#L996-L1001 returns null or BrowserWindow.  

It supposed to be:
```typescript
    /**
     * The parent window.
     */
    getParentWindow(): BrowserWindow | null;
```

### Actual Behavior

Actual definition does not include `null` type
```typescript
    /**
     * The parent window.
     */
    getParentWindow(): BrowserWindow;
```

### Testcase Gist URL

_No response_

### Additional Information

_No response_",miniak,bug :beetle:,2021-10-21T23:34:15Z,2021-10-25T15:10:34Z,oleg-slapdash,,oleg-slapdash,,miniak,,jkleinsc,
electron/electron,31553,"[Bug]: No longer possible to set insecure cookies ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15, 16

### What operating system are you using?

Windows

### Operating System Version

Windows 10 19042.985

### What arch are you using?

x64

### Last Known Working Electron version

14

### Expected Behavior

Cookie setting succeeds

### Actual Behavior

It is no longer possible to set an insecure cookie
```
session.cookies.set({
	name: ""testcookie"",
	value: ""testvalue"",
	domain: "".testdomain.com"",
	path: ""/"",
	url: ""http://testdomain.com"",
	secure: false,
}).then(() => {
	console.log(""setting cookie success"");
}).catch((e) => {
	console.error(e);
});
```
returns: [Error: Setting cookie failed]
Removing the ""secure: false"" returns: [Error: Cannot create a secure cookie from an insecure URL]


### Testcase Gist URL

https://gist.github.com/t57ser/a34dfe9579b856e6e765b59fb8d215cb

### Additional Information

_No response_",VerteDinde,platform/windows;bug :beetle:;15-x-y;16-x-y,2021-10-22T09:00:50Z,2021-11-15T15:20:05Z,t57ser,t57ser;VerteDinde,t57ser;sofianguy;ckerr,,VerteDinde,,ckerr,
electron/electron,31556,"[Bug]: Clipboard.read crashes the process ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

macOS

### Operating System Version

10.14

### What arch are you using?

x64

### Last Known Working Electron version

13.0.0

### Expected Behavior

This line of code shouldn't crash the process:

```js
require ( 'electron' ).clipboard.read ( 'NSFilenamesPboardType' );
```

### Actual Behavior

It crashes the process.

### Testcase Gist URL

https://gist.github.com/995b1899ad086f727ee8698a246df3a3

### Additional Information

I think this is a fairly important issue, not only it crashes the process while it was working fine in Electron v13, but that's also the only way that I know of to get the file path of copied files under macOS, so not having that working cripples apps that use that.

/cc @codebytere as it may be related to what you might be working at the moment.",codebytere,crash :boom:;component/clipboard;bug :beetle:;platform/all;15-x-y;16-x-y,2021-10-22T18:56:20Z,2021-10-26T12:14:09Z,fabiospampinato,miniak;codebytere,fabiospampinato;codebytere,,codebytere,,codebytere,
electron/electron,31564,"[Bug]: tray icon disappears after several seconds even if I declare `tray` to be global. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Tray Icon would stay in the tray. 

### Actual Behavior

Tray Icon disappears after several seconds.

### Testcase Gist URL

_No response_

### Additional Information

```js
const { app, Tray, nativeImage } = require('electron');
const path = require('path');

let tray = null;

app.whenReady().then(() => {
  const icon = nativeImage.createFromPath(
    path.join(__dirname, './assets/icon.png')
  );
  tray = new Tray('src/assets/icon.png');
  tray.setTitle('Attention App');
});
```",codebytere,platform/macOS;bug :beetle:;blocked/need-repro;15-x-y,2021-10-24T11:00:04Z,2022-02-24T19:04:00Z,YongzeYao,codebytere;YongzeYao;jtvberg,YongzeYao;codebytere,,codebytere,,codebytere,
electron/electron,31565,"[Bug]: Wrong value from getPath(""userData"") ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0-beta.3

### What operating system are you using?

Other Linux

### Operating System Version

Linux pop-os 5.13.0-7614-generic #&#x2060;14\~1631647151\~21.04\~930e87c-Ubuntu

### What arch are you using?

x64

### Last Known Working Electron version

15.3.0

### Expected Behavior

From the documentation for `app.getPath(""userData"")` (https://www.electronjs.org/docs/latest/api/app#appgetpathname):
> The directory for storing your app's configuration files, which by default it is the appData directory appended with your app's name.

So `app.getPath(""userData"")` in the linked gist should be `~/.config/test-electron`.

### Actual Behavior

`app.getName()` returns the correct name from package.json but `app.getPath(""userData"")` returns `~/.config/Electron`.

### Testcase Gist URL

https://gist.github.com/weedz/ad42b854df4e5bc411d18e48ae1c91df

### Additional Information

Found this issue which might be relevant https://github.com/electron/electron/issues/30112.

Same result in the following devcontainer https://gist.github.com/weedz/c962d69078391115635772b279264c02.",clavin,platform/linux;bug :beetle:;status/confirmed;16-x-y,2021-10-24T19:31:43Z,2021-11-04T17:45:59Z,weedz,clavin;deepak1556,weedz;sofianguy;clavin,,clavin,clavin,jkleinsc,
electron/electron,31622,"[Bug]: <webview> tag in a sub window won't trigger eventListener when the parent window has contextIsolation disabled ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

Windows

### Operating System Version

10 version 19043

### What arch are you using?

x64

### Last Known Working Electron version

13.x

### Expected Behavior

When a BrowserWindow has `contextIsolate` disabled, when it opened a sub window using `open` method with `nativeWindowOpen` enabled, the webview inside the sub window should be able to trigger event listener

### Actual Behavior

The event listener of webview is never triggered

### Testcase Gist URL

https://gist.github.com/72a8040c33a7deeebdfe88d409d8ca0b

### Additional Information

In the testcase, type following command in devtool console and press enter:

```javascript
w = open('./index.html')
setTimeout(() => {
    w.document.querySelector('webview').addEventListener('dom-ready', (e) => console.log(e))
    w.document.querySelector('webview').reload()
}, 100)
```

On Electron@14 and 15, the event won't be logged into console

![image](https://user-images.githubusercontent.com/8194131/139282058-2c8eb38c-8dda-48a9-9ab8-5b3746904423.png)

On Electron@13, the event is logged into console successfully
![image](https://user-images.githubusercontent.com/8194131/139281963-960cf729-afc8-4d7e-a85f-d79026b3339c.png)

",miniak,component/webview;bug :beetle:;component/node-integration;has-repro-gist;15-x-y;stale,2021-10-28T14:56:22Z,2022-11-05T02:20:29Z,KochiyaOcean,KochiyaOcean,KochiyaOcean;zcbenz,,miniak,,,
electron/electron,31630,"[Bug]: Image preview during dialog.showOpenDialog() crashes app on large image files ### Electron Version

13.0.0

### Operating System Version

Ubuntu 18.04

### Last Known Working Electron version

None

### Expected Behavior

Asking user to choose an image through a dialog:
```
try {
  const response = await dialog.showOpenDialog({
    buttonLabel: ""Choose an image"",
    defaultPath: app.getPath(""desktop""),
    properties: [""openFile""],
  });
  if (!response.canceled) {
    const srcImgPath = response.filePaths[0];
  }
} catch (err) {
  console.error(err);
}
```
In the dialog, if the user chooses an image file, a preview of said image will be shown.

Expected behavior: `srcImgPath` contains the path to the file that the user chose.

### Actual Behavior

When user chooses an image file that has the size > 1Gb, the program crashes with the following error:

`tcmalloc: large alloc 1073741824 bytes == 0x12874fac2000 @  0x555c486f6e35 0x7ff5a81a76cf`

This is because the file is too big to be previewed. Electron currently does not offer a way to turn off this preview feature, or at least limit the size of files that can be previewed.

### Additional Information

Related issue: https://github.com/electron/electron/issues/8875
Related SO question: https://stackoverflow.com/questions/67954227/disable-image-preview-in-dialog-box",ckerr;codebytere,platform/linux;crash :boom:;bug :beetle:;13-x-y;has-repro-comment,2021-10-28T21:32:39Z,2021-11-15T07:17:11Z,acadama123,,acadama123;codebytere;zcbenz;ckerr,,codebytere;ckerr,,codebytere,
electron/electron,31634,"[Bug]: crypto.hkdf ""Deriving bits failed"" ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

v15.3.0

### What operating system are you using?

macOS

### Operating System Version

Darwin C02CX0K5MD6V 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64 x86_64

### What arch are you using?

x64

### Last Known Working Electron version

none

### Expected Behavior

`crypto.hkdf` and `crypto.hkdfSync` work as documented[^1]

[^1]: https://nodejs.org/api/crypto.html#cryptohkdfdigest-ikm-salt-info-keylen-callback

### Actual Behavior

```
crypto.hkdfSync('sha256', 'foo', '', '', 32)
// Uncaught Error: Deriving bits failed
//    at Object.hkdfSync (node:internal/crypto/hkdf:140:35)
crypto.hkdf('sha256', 'foo', '', '', 32, console.log)
// [Error: Deriving bits failed]
```

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;component/node-integration;18-x-y;19-x-y;20-x-y,2021-10-29T09:01:40Z,2022-06-29T12:53:57Z,panva,codebytere;panva;TakamiChie;KishanBagaria,panva;zcbenz;sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,31643,"[Bug]: `app.getPath('crashDumps')` returns incorrect path on Linux ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0-beta.4

### What operating system are you using?

Ubuntu

### Operating System Version

20.04

### What arch are you using?

x64

### Last Known Working Electron version

15.3.0

### Expected Behavior

On Linux, `app.getPath('crashDumps')` should return something like:
```
~/.config/{{appName}}/Crash Reports/
```



### Actual Behavior

However, with v16 beta it returns:
```
~/.config/Electron/Crash Reports/
```

### Testcase Gist URL

_No response_
",codebytere,platform/linux;bug :beetle:;16-x-y,2021-10-31T21:14:41Z,2021-11-03T23:12:50Z,timfish,clavin,timfish;codebytere,,codebytere,,clavin,
electron/electron,31662,"[Bug]: Download filename will be cut up to the first comma ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

Windows

### Operating System Version

Windows 11 21H2 (22000.282)

### What arch are you using?

x64

### Last Known Working Electron version

latest 11, aka 11.5.0

### Expected Behavior

Downloading a file with a comma in name should return full filename.

### Actual Behavior

When the request is filtered with `onHeadersReceived`, the filename is cut up to the first comma.

### Testcase Gist URL

_No response_

### Additional Information

The issue was first reported in #29346 but was closed because it was unable to reproduce it.

http.txt

```
HTTP/1.1 200 OK
Content-Type: text/plain
Content-Disposition: attachment; filename=""foo,bar.txt""
Content-Length: 3

foo
```

Serve via ncat on port 1337

```shell
ncat -l 1337 < http.txt
```

Minimal Electron code:

```js
const {app, BrowserWindow} = require('electron')

function createWindow () {
  app.on('session-created', session => {
    session.webRequest.onHeadersReceived((details, callback) => {
      callback({ responseHeaders: details.responseHeaders });
    });
  });

  const mainWindow = new BrowserWindow({
    width: 800,
    height: 600
  })

  mainWindow.loadURL('http://localhost:1337/')
}

app.whenReady().then(createWindow);
```",codebytere,bug :beetle:;platform/all;status/confirmed;15-x-y,2021-11-02T02:28:44Z,2021-11-03T14:11:38Z,alefoll,codebytere,alefoll;codebytere,,codebytere,,jkleinsc,
electron/electron,31663,"[Bug]: HTMLInputElement.webkitdirectory is broken on Windows and Linux ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

12.0.7

### Expected Behavior

Execute the following example on MDN will list all the paths in the selected directory.
https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory#result

### Actual Behavior

No result.

### Testcase Gist URL

https://gist.github.com/sohobloo/34ebf5e2b94f1e445888442cb8bb9598

### Additional Information

_No response_",codebytere,platform/windows;bug :beetle:;has-repro-gist;component/webcontents;15-x-y,2021-11-02T04:40:45Z,2022-05-17T15:52:04Z,sohobloo,codebytere,sohobloo;codebytere;zcbenz,codebytere,codebytere,,codebytere,
electron/electron,31675,"[Bug]: Network service crashed, restarting service. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.0.2

### What operating system are you using?

Ubuntu

### Operating System Version

Linux rrouwprlc0068 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:50:10 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux, Ubuntu 20.04.3 LTS, GNOME Version 3.36.8, OS Type 64-bit

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Network service should not crash and the error `[15:1102/154337.143944:ERROR:network_service_instance_impl.cc(333)] Network service crashed, restarting service.`, to not appear in the logs.

### Actual Behavior

Sporadically, when I run Electron inside a Docker container, I get the following error:

    [15:1102/154337.143944:ERROR:network_service_instance_impl.cc(333)] Network service crashed, restarting service.

Which causes partially rendering of the front-end application that is loaded with `win.loadURL` on localhost.

The issue seems very similar to https://bbs.archlinux.org/viewtopic.php?id=268123, but nothing from the suggestions works consinstently.

Also, when closing the Electron window, I get an error

    Error: ERR_FAILED (-2) loading 'https://localhost:{port}/{path_to}/index.html'
        at rejectAndCleanup (node:electron/js2c/browser_init:165:7486)
        at Object.stopLoadingListener (node:electron/js2c/browser_init:165:7861)
        at Object.emit (node:events:394:28) {
      errno: -2,
      code: 'ERR_FAILED',
      url: 'https://localhost:{port}/{path_to}/index.html'
    } [EOL]

Which is caught inside the main.js when executing await `win.loadURL(url)`

Also, in the browser window console, there is an error:

    ERROR Error: Uncaught (in promise): ChunkLoadError: Loading chunk 108 failed.
        (timeout: https://localhost:{port}/{path_to}/108.da4993913b4a27951976.js)
        ChunkLoadError: Loading chunk 108 failed.

Any ideas on the issue?

### Testcase Gist URL

_No response_

### Additional Information

Chromedriver 95.0.0 v",nornagon,bug :beetle:;platform/all;status/confirmed;has-repro-gist,2021-11-02T16:03:22Z,2022-03-11T19:35:48Z,DrNio13,zcbenz;DrNio13;lauw70;nornagon,DrNio13;zcbenz;nornagon,nornagon,nornagon,,nornagon,
electron/electron,31686,"[Bug]: <webview> transparency broken ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.2.0 / 15.3.0 / 16.0.0-beta.6

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

14.0.0 / 15.0.0-beta.2

### Expected Behavior

`<webview>` element should support trasparency. Check the included Fiddle sample.

### Actual Behavior

`<webview>` element transparency is broken

### Testcase Gist URL

_No response_

### Additional Information
[webview-transparency.zip](https://github.com/electron/electron/files/7464785/webview-transparency.zip)

<img width=""912"" alt=""Screen Shot 2021-11-03 at 1 55 47 AM"" src=""https://user-images.githubusercontent.com/1281234/139971477-2077f353-c17c-417f-9f13-9c5c52139efa.png"">
<img width=""912"" alt=""Screen Shot 2021-11-03 at 1 55 53 AM"" src=""https://user-images.githubusercontent.com/1281234/139971481-49f8afa5-3024-46ba-9339-33c492ba3677.png"">

Related to:
https://github.com/electron/electron/blob/2a2a1a834c7072226e9368f36fe0d22a125803f0/shell/browser/api/electron_api_web_contents.cc#L1461

It regressed in this ranges:
- https://github.com/electron/electron/compare/v14.0.0...v14.0.1 (probably #30819)
- https://github.com/electron/electron/compare/v15.0.0-beta.2...v15.0.0-beta.3 (probably #30777)",VerteDinde,component/webview;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;platform/all;14-x-y;15-x-y;16-x-y,2021-11-03T00:29:49Z,2021-11-06T02:55:19Z,miniak,zcbenz;miniak,miniak;zcbenz,,VerteDinde,,VerteDinde,
electron/electron,31742,"[Bug]: `BrowserView.setBackgroundColor` is not applied to the contents ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6.1

### What arch are you using?

x64

### Last Known Working Electron version

14.0.0

### Expected Behavior


When `BrowserView.setBackgroundColor` is called with an explicit color, expect the background to be the color selected.

When `BrowserView.setBackgroundColor` is not called, expect the background of the `BrowserView` to be transparent by default; and can see through `BrowserWindow`'s background color.



### Actual Behavior

The `BrowserView` background is always white.

### Testcase Gist URL

https://gist.github.com/kevinlinv/2de60478ffec6a2f18f1ec0fc6f5add9

### Additional Information

Here is a quick recording that reproduces the error.

https://user-images.githubusercontent.com/44967897/140694174-e27aff28-1847-4813-bc46-d9fda6569128.mp4

",codebytere,platform/macOS;bug :beetle:;component/BrowserView;14-x-y;15-x-y;16-x-y,2021-11-08T06:34:13Z,2021-11-09T16:36:29Z,kevinlinv,kevinlinv,kevinlinv;codebytere,,codebytere,,jkleinsc,
electron/electron,31762,"[Bug]: Windows 7/8 and macOS 10.11/10.12 crash when playing media files ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.1
14.2.1
13.6.1

### What operating system are you using?

Windows

### Operating System Version

Windows 7 version 7601

### What arch are you using?

x64

### Last Known Working Electron version

15.3.0
14.2.0
13.6.0

### Expected Behavior

Can play audio files normally

### Actual Behavior

Playing certain audio files causes a crash

### Testcase Gist URL

https://gist.github.com/lyswhut/cb012a765205fbb63a0683a7b1724755#file-preload-js-L13-L15

### Additional Information

Working on windows 10, it will crash only under windows 7

![GIF](https://user-images.githubusercontent.com/20365169/141029339-66a06eb6-435c-4a28-874f-ce966400c3a6.gif)


",deermichel,platform/windows;platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;13-x-y;14-x-y;15-x-y;16-x-y,2021-11-09T07:53:00Z,2021-12-16T17:23:30Z,lyswhut,ckerr;lyswhut;deermichel;PrestonN;zcbenz;babatakao,lyswhut;ckerr;deermichel,ckerr,,,deermichel,electron/electron#31448;
electron/electron,31784,"[Bug]: Webview is causing the warning ""default of nativeWindowOpen is deprecated"" ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 19042.1288

### What arch are you using?

x64

### Last Known Working Electron version

13.0.0

### Expected Behavior

No warning is shown.

### Actual Behavior

I'm getting the warning ` The default of nativeWindowOpen is deprecated and will be changing from false to true in Electron 15` even though I've set the value of `nativeWindowOpen` inside the `webPreferences`.
I've tried to add `webpreferences=""nativeWindowOpen=no""` to the webview, but it's not working, I'm still getting the warning. 
#28511 related.

### Testcase Gist URL

https://gist.github.com/theArina/aed561dbe680ea3b62de1a23f1f7ed55

### Additional Information

_No response_",miniak,platform/windows;bug :beetle:;14-x-y;stale,2021-11-10T18:54:57Z,2022-11-05T02:20:05Z,theArina,,theArina;sofianguy,,miniak,,,
electron/electron,31812,"[Bug]: NativeWindowViews::ShouldDescendIntoChildForEventHandling sporadically crashing application when checking BrowserViews for draggable regions ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

15.3.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 21H1

### What arch are you using?

x64

### Last Known Working Electron version

11.0.3

### Expected Behavior

Should return true or false when checking if the click was within a draggable region of a browserview.

### Actual Behavior

It appears that sporadically that the view_draggable_region may not be valid, thus when checking if the cursor is contained within the SkRegion by calling SkRegion::contains, an uncaught exception happens that results in electron crashing.

### Testcase Gist URL

_No response_

### Additional Information

I believe this is related to issue #31406, as it crashes in the same way. I'm submitting this bug because while I was trying to figure out what was really causing issue 31406 I ran into this one. As a refresher I am using a frameless window with a BrowserView acting as the title bar that has a draggable region, then 1+ other BrowserViews serving the main content that do not have draggable regions.  This is interesting because I reverted back to using a window instead of being a frameless and this started to happen, while no longer experiencing the crashes reported in issue 31406. Next I switched to running the title bar code from being in a BrowserView into the main BrowserWindow since it seems to be only BrowserViews that will cause this issue (I could be misunderstanding the underlying code), and the crashes still happen. I have tried this using several versions of electron from 11.x.x, 12.x.x, 13.x.x, and 15.x.x and they all exhibit this behavior, however 11.0.3 is the last working version that does not crash. My guess is that [pull 26738](https://github.com/electron/electron/pull/26738) was when this issue, and subsequently issue 31406, was introduced as this bit of code 

`
for (auto* view : browser_views()) {
    auto* native_view = static_cast<NativeBrowserViewViews*>(view);
    auto* view_draggable_region = native_view->draggable_region();
    if (view_draggable_region &&
        view_draggable_region->contains(location.x(), location.y()))
      return false;
  }
`

is both in NativeWindowViews::ShouldDescendIntoChildForEventHandling and FramelessView::NonClientHitTest. 

I still don't have a gist that reproduces either issue, so it could be something else in my application that is causing both issues to crop up. I do have crashdumps that are telling me that these are the last calls in the callstack and that when it calls SkRegion::contains it causes an invalid_read and then crashes due to the uncaught exception.",codebytere,platform/windows;blocked/need-info 閴;bug :beetle:;15-x-y,2021-11-14T01:19:00Z,2022-01-19T05:25:04Z,arctictron,codebytere;arctictron,arctictron;sofianguy;codebytere,,codebytere,,arctictron,
electron/electron,31862,"[Bug]: Vibrancy + Transparent background still broken on macOS on 16.0.0 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey 12.0.1

### What arch are you using?

x64

### Last Known Working Electron version

n/a

### Expected Behavior

Window does not have a white background when vibrancy is set to under-window + transparent background is used on macOS

### Actual Behavior

Window with vibrancy and transparency enabled is rendered with a white background, at random

### Testcase Gist URL

_No response_

### Additional Information

We're still hitting random issues with Electron where creating a window with vibrancy + transparent body will result in a white background. I was hopeful that the 16.0.0 release would have fixed this as it was mentioned in the changelog, but seems like the issue persists.

I've tried to narrow down to a reproducible case, but didn't manage to do so - I've observed all these variations across executions:

- Window opens with correct vibrancy effect, and it works without issues
- Windows opens with correct vibrancy effect then goes white after ~4 seconds - consistently after ~4 seconds
- Window opens with correct vibrancy, stays without issues, but loses after some time of switching between apps
- Windows open with effect already not working and a white background

I've already tried all suggestions from previous issues like #30993 or #31461 . The window is created with vibrancy set to under-window, has a transparent background and the webpreferences also has a transparent background set. As it works sometimes, I assume the options here are correct.

My guess is that this is somehow related to #31019: Electron is using somehow the background color of the HTML body. As we initially load the window with about:empty, then navigate to our url, the transparent background logic might be loading the incorrect background color at random times and breaking the transparency/vibrancy effect from there on. 

I also don't know if #31722 is already merged on the 16.0.0 release - happy to test if not the case once it is again!
",codebytere,platform/macOS;bug :beetle:;has-repro-gist;14-x-y;15-x-y;16-x-y;17-x-y,2021-11-16T14:30:21Z,2022-01-27T14:56:35Z,theolivenbaum,theolivenbaum;codebytere,theolivenbaum;ckerr;miniak,,codebytere,,codebytere,
electron/electron,31864,"[Bug]:  Dark mode in Devtools is not working on the latest 16.0.0 - 16.0.8 / 17.0.0 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0 - 16.0.5

### What operating system are you using?

Windows

### Operating System Version

Windows 7 x64 SP1

### What arch are you using?

x64

### Last Known Working Electron version

15.3.4

### Expected Behavior

Devtools should have a dark mode applied when the settings is set to 'Dark Mode'. 

### Actual Behavior

When switching to dark mode, it displays the message that 'Devtools requires a reload' but when I click on the reload button it does nothing. Restarting the app has no effect as well and stays on the light mode.

This worked fine on the previous 15.3.2 version.




### Testcase Gist URL

_No response_

### Additional Information

One thing I noticed, when updating from the last version (15.3.2) the dev tools will show up with dark mode enabled on the first run but on subsequent runs, it reverts back to light mode.",codebytere,component/devtools;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;status/confirmed;16-x-y,2021-11-16T17:32:36Z,2022-03-09T01:17:44Z,andmm,ckerr;andmm;codebytere;xbb;andriygm;nornagon,andmm;ckerr,ckerr,codebytere,,jkleinsc,
electron/electron,31876,"[Bug]: app crashes with error ""(ipc/send) invalid destination port"" ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS 12.0.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

15.3.2

### Expected Behavior

App does not crash.

### Actual Behavior

App crashes when using ""Photos & Videos"" attachment (open file dialog) at https://web.whatsapp.com.

### Testcase Gist URL

https://gist.github.com/quanglam2807/3133a904b621a34a8e86a3d5a56964a0

### Additional Information

The bug doesn't happen with `<input type=""file"" />` so it's likely that WhatsApp uses other web APIs.

Log: 
```
-------------------------------------
Translated Report (Full Report Below)
-------------------------------------

Process:               WhatsApp [16750]
Path:                  /Users/USER/*/WhatsApp.app/Contents/MacOS/WhatsApp
Identifier:            com.webcatalog.juli.whatsapp
Version:               21.0.1 (21.0.1)
Code Type:             ARM-64 (Native)
Parent Process:        launchd [1]
User ID:               501

Date/Time:             2021-11-17 09:53:59.5872 -0600
OS Version:            macOS 12.0.1 (21A559)
Report Version:        12
Anonymous UUID:        EBAB0EC8-E94B-1024-E6EC-92F9F6023363

Sleep/Wake UUID:       981CCA76-9BDA-4AC1-8DA8-F462535584F3

Time Awake Since Boot: 290000 seconds
Time Since Wake:       3051 seconds

System Integrity Protection: enabled

Notes:
thread_get_state(PAGEIN) returned 0x10000003: (ipc/send) invalid destination port
thread_get_state(EXCEPTION) returned 0x10000003: (ipc/send) invalid destination port
thread_get_state(FLAVOR) returned 0x10000003: (ipc/send) invalid destination port

Crashed Thread:        4  ThreadPoolForegroundWorker

Exception Type:        EXC_BREAKPOINT (SIGTRAP)
Exception Codes:       0x0000000000000001, 0x000000010eb6b5c4
Exception Note:        EXC_CORPSE_NOTIFY

Termination Reason:    Namespace SIGNAL, Code 5 Trace/BPT trap: 5
Terminating Process:   exc handler [16750]

Error Formulating Crash Report:
thread_get_state(PAGEIN) returned 0x10000003: (ipc/send) invalid destination port
thread_get_state(EXCEPTION) returned 0x10000003: (ipc/send) invalid destination port
thread_get_state(FLAVOR) returned 0x10000003: (ipc/send) invalid destination port

Thread 0:: CrBrowserMain Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   HIToolbox                     	       0x1b300c990 RunCurrentEventLoopInMode + 292
6   HIToolbox                     	       0x1b300c704 ReceiveNextEventCommon + 552
7   HIToolbox                     	       0x1b300c4c4 _BlockUntilNextEventMatchingListInModeWithFilter + 72
8   AppKit                        	       0x1acfebaec _DPSNextEvent + 844
9   AppKit                        	       0x1acfea390 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 1332
10  AppKit                        	       0x1acfdc3b0 -[NSApplication run] + 596
11  Electron Framework            	       0x10e009ecc base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 5532
12  Electron Framework            	       0x10e0089d4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 164
13  Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
14  Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
15  Electron Framework            	       0x10d24792c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5250072
16  Electron Framework            	       0x10d2491f4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5256416
17  Electron Framework            	       0x10d24551c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5240840
18  Electron Framework            	       0x10c1c38d4 electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 13078364
19  Electron Framework            	       0x10c1c33cc electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 13077076
20  Electron Framework            	       0x10c1c1d74 electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 13071356
21  Electron Framework            	       0x10c1c2670 electron::fuses::IsOnlyLoadAppFromAsarEnabled() + 13073656
22  Electron Framework            	       0x10b38c390 ElectronMain + 112
23  WhatsApp                      	       0x102e0cdac 0x102e0c000 + 3500
24  dyld                          	       0x1031cd0f4 start + 520

Thread 1:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 2:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 3:: ThreadPoolServiceThread
0   libsystem_kernel.dylib        	       0x1aa39ca48 kevent64 + 8
1   Electron Framework            	       0x10e02a99c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 139372
2   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
3   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
4   Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
5   Electron Framework            	       0x10dfd5300 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19461612
6   Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
7   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
8   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
9   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 4 Crashed:: ThreadPoolForegroundWorker
0   Electron Framework            	       0x10eb6b5c4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 11938964
1   Electron Framework            	       0x10b46001c ElectronInitializeICUandStartNode + 867412
2   Electron Framework            	       0x10b460660 ElectronInitializeICUandStartNode + 869016
3   Electron Framework            	       0x10b461d8c ElectronInitializeICUandStartNode + 874948
4   Electron Framework            	       0x10dfb4afc v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19328488
5   Electron Framework            	       0x10dfd2e04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19452144
6   Electron Framework            	       0x10dfd2010 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19448572
7   Electron Framework            	       0x10e001b6c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19643992
8   Electron Framework            	       0x10dfd1cdc v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19447752
9   Electron Framework            	       0x10dfe10a4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510160
10  Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
11  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
12  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
13  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 5:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0c80 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509100
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 6:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 7:: Chrome_IOThread
0   libsystem_kernel.dylib        	       0x1aa39ca48 kevent64 + 8
1   Electron Framework            	       0x10e02a99c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 139372
2   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
3   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
4   Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
5   Electron Framework            	       0x10d24a34c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 5260856
6   Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
7   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
8   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
9   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 8:: MemoryInfra
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10e00fd64 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 29748
4   Electron Framework            	       0x10df7c264 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19096912
5   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
6   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
7   Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
8   Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
9   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
10  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
11  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 9:
0   libsystem_kernel.dylib        	       0x1aa3978cc kevent + 8
1   Electron Framework            	       0x10b38baf0 uv_free_interface_addresses + 1204
2   Electron Framework            	       0x10b37b904 uv_run + 364
3   Electron Framework            	       0x1117dc54c node::CommonEnvironmentSetup::context() const + 172084
4   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
5   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 10:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x1117dc724 node::CommonEnvironmentSetup::context() const + 172556
4   Electron Framework            	       0x1117da30c node::CommonEnvironmentSetup::context() const + 163316
5   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
6   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 11:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x1117dc724 node::CommonEnvironmentSetup::context() const + 172556
4   Electron Framework            	       0x1117da30c node::CommonEnvironmentSetup::context() const + 163316
5   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
6   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 12:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x1117dc724 node::CommonEnvironmentSetup::context() const + 172556
4   Electron Framework            	       0x1117da30c node::CommonEnvironmentSetup::context() const + 163316
5   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
6   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 13:
0   libsystem_kernel.dylib        	       0x1aa391990 semaphore_wait_trap + 8
1   Electron Framework            	       0x10b3871f8 uv_sem_wait + 24
2   Electron Framework            	       0x1118541bc node::SetTracingController(v8::TracingController*) + 64436
3   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
4   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 14:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   Foundation                    	       0x1ab36fe10 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 236
6   Electron Framework            	       0x10e009d24 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 5108
7   Electron Framework            	       0x10e0089d4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 164
8   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
9   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
10  Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
11  Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
12  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
13  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
14  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 15:: CrShutdownDetector
0   libsystem_kernel.dylib        	       0x1aa392538 read + 8
1   Electron Framework            	       0x10b5352fc ElectronInitializeICUandStartNode + 1740596
2   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
3   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
4   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 16:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   Foundation                    	       0x1ab36fe10 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 236
6   Electron Framework            	       0x10e009d24 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 5108
7   Electron Framework            	       0x10e0089d4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 164
8   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
9   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
10  Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
11  Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
12  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
13  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
14  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 17:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 18:: ThreadPoolSingleThreadForegroundBlocking0
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d5c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509320
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 19:: CompositorTileWorker1
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10e00153c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19642408
3   Electron Framework            	       0x10ecaea68 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 13263160
4   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
5   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
6   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 20:
0   libsystem_kernel.dylib        	       0x1aa39bd38 __select + 8
1   Electron Framework            	       0x10b534588 ElectronInitializeICUandStartNode + 1737152
2   Electron Framework            	       0x10b4e09cc ElectronInitializeICUandStartNode + 1394180
3   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
4   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 21:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   Foundation                    	       0x1ab36fe10 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 236
6   Electron Framework            	       0x10e009d24 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 5108
7   Electron Framework            	       0x10e0089d4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 164
8   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
9   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
10  Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
11  Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
12  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
13  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
14  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 22:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x10b378454 uv_cancel + 688
4   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
5   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 23:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x10b378454 uv_cancel + 688
4   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
5   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 24:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x10b378454 uv_cancel + 688
4   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
5   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 25:
0   libsystem_kernel.dylib        	       0x1aa3950c0 __psynch_cvwait + 8
1   libsystem_pthread.dylib       	       0x1aa3cdab4 _pthread_cond_wait + 1228
2   Electron Framework            	       0x10b386bcc uv_cond_wait + 12
3   Electron Framework            	       0x10b378454 uv_cancel + 688
4   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
5   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 26:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   AppKit                        	       0x1ad158c24 _NSEventThread + 196
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 27:: ThreadPoolBackgroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0c80 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509100
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 28:: CacheThread_BlockFile
0   libsystem_kernel.dylib        	       0x1aa39ca48 kevent64 + 8
1   Electron Framework            	       0x10e02a99c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 139372
2   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
3   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
4   Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
5   Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
6   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
7   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
8   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 29:: ThreadPoolSingleThreadSharedBackgroundBlocking1
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe06f8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19507684
4   Electron Framework            	       0x10dfe0e48 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509556
5   Electron Framework            	       0x10dfe0cac v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509144
6   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
7   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
8   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 30:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 31:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 32:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   CoreFoundation                	       0x1aa498e38 __CFRunLoopServiceMachPort + 372
3   CoreFoundation                	       0x1aa4972f0 __CFRunLoopRun + 1212
4   CoreFoundation                	       0x1aa496694 CFRunLoopRunSpecific + 600
5   Foundation                    	       0x1ab36fe10 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 236
6   Electron Framework            	       0x10e009d24 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 5108
7   Electron Framework            	       0x10e0089d4 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 164
8   Electron Framework            	       0x10dfcce10 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19427580
9   Electron Framework            	       0x10df9d560 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19232844
10  Electron Framework            	       0x10dfe6d4c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19533880
11  Electron Framework            	       0x10dfe6ec0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19534252
12  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
13  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
14  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 33:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 34:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 35:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 36:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe11c8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510452
4   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
5   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
6   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
7   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 37:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa391954 mach_msg_trap + 8
1   libsystem_kernel.dylib        	       0x1aa391d00 mach_msg + 76
2   Electron Framework            	       0x10e00fe8c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 30044
3   Electron Framework            	       0x10dfe06f8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19507684
4   Electron Framework            	       0x10dfe0e48 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509556
5   Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
6   Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
7   libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
8   libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 38:: ThreadPoolForegroundWorker
0   libsystem_kernel.dylib        	       0x1aa3924e0 __fcntl + 8
1   libsystem_kernel.dylib        	       0x1aa3924ac fcntl + 88
2   Electron Framework            	       0x10dffd304 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19625456
3   Electron Framework            	       0x10eba6034 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 12179204
4   Electron Framework            	       0x10ebac08c base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 12203868
5   Electron Framework            	       0x10eba6544 base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*) + 12180500
6   Electron Framework            	       0x10d85c9dc v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 11627720
7   Electron Framework            	       0x10d85d750 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 11631164
8   Electron Framework            	       0x10d8615a8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 11647124
9   Electron Framework            	       0x10d868384 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 11675248
10  Electron Framework            	       0x10d3bca38 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6778148
11  Electron Framework            	       0x10d3fba70 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7036252
12  Electron Framework            	       0x10d3fbf54 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7037504
13  Electron Framework            	       0x10d3fd5b8 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7043236
14  Electron Framework            	       0x10d3bbd08 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6774772
15  Electron Framework            	       0x10d3fc2ac v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7038360
16  Electron Framework            	       0x10d3fc738 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7039524
17  Electron Framework            	       0x10d3d2ee0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6869452
18  Electron Framework            	       0x10d3f8468 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 7022420
19  Electron Framework            	       0x10d3e3c30 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6938396
20  Electron Framework            	       0x10d3e74a4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 6952848
21  Electron Framework            	       0x10dfb4afc v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19328488
22  Electron Framework            	       0x10dfd2e28 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19452180
23  Electron Framework            	       0x10dfd28c0 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19450796
24  Electron Framework            	       0x10e001b6c v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19643992
25  Electron Framework            	       0x10dfd1cdc v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19447752
26  Electron Framework            	       0x10dfe10a4 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19510160
27  Electron Framework            	       0x10dfe0d04 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19509232
28  Electron Framework            	       0x10e002058 v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*) + 19645252
29  libsystem_pthread.dylib       	       0x1aa3cd4ec _pthread_start + 148
30  libsystem_pthread.dylib       	       0x1aa3c82d0 thread_start + 8

Thread 39:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 40:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 41:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 42:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0

Thread 43:
0   libsystem_pthread.dylib       	       0x1aa3c82bc start_wqthread + 0


No thread state (register information) available

Binary Images:
       0x1aa390000 -        0x1aa3c5fff libsystem_kernel.dylib (*) <c8524c02-b14f-30bd-a228-c44b4a448e68> /usr/lib/system/libsystem_kernel.dylib
       0x1aa414000 -        0x1aa957fff com.apple.CoreFoundation (6.9) <b2ff96d0-ae99-31ef-9014-fc9964b4f3e0> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
       0x1b2fdc000 -        0x1b330bfff com.apple.HIToolbox (2.1.1) <98ea191e-b6f8-3036-b267-eeadb5f03c7d> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
       0x1acfaa000 -        0x1ade5bfff com.apple.AppKit (6.9) <518f4e68-c324-320f-9d7f-85c224eae972> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
       0x10b374000 -        0x112b13fff com.github.Electron.framework (*) <4c4c442d-5555-3144-a135-6b2726cbb3e3> /Users/USER/*/WhatsApp.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x102e0c000 -        0x102e6ffff com.webcatalog.juli.whatsapp (21.0.1) <4c4c44a3-5555-3144-a1f5-893d0948eba6> /Users/USER/*/WhatsApp.app/Contents/MacOS/WhatsApp
       0x1031c8000 -        0x103227fff dyld (*) <86a8ba48-8bb4-3b30-9cda-051f73c74f44> /usr/lib/dyld
       0x1aa3c6000 -        0x1aa3d2fff libsystem_pthread.dylib (*) <4786e19a-9312-38e6-80ef-9c1394548118> /usr/lib/system/libsystem_pthread.dylib
       0x1ab30b000 -        0x1ab6f8fff com.apple.Foundation (6.9) <de039f1b-ffe5-3644-a8cf-7ba52c32cd73> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=1.1G resident=0K(0%) swapped_out_or_unallocated=1.1G(100%)
Writable regions: Total=2.0G written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=2.0G(100%)

                                VIRTUAL   REGION
REGION TYPE                        SIZE    COUNT (non-coalesced)
===========                     =======  =======
Accelerate framework               512K        4
Activity Tracing                   256K        1
CG backing stores                 2176K        4
CG image                           208K        6
ColorSync                          528K       26
CoreAnimation                      192K        9
CoreGraphics                        32K        2
CoreUI image data                 1152K        8
Foundation                          48K        2
Kernel Alloc Once                   32K        1
MALLOC                           281.4M       64
MALLOC guard page                  192K       11
MALLOC_MEDIUM (reserved)         960.0M        8         reserved VM address space (unallocated)
MALLOC_NANO (reserved)           384.0M        1         reserved VM address space (unallocated)
Mach message                       160K        7
Memory Tag 253                    16.0G       22
Memory Tag 255                     4.0G       50
STACK GUARD                       56.7M       44
Stack                            276.9M       44
VM_ALLOCATE                       17.4M       27
__AUTH                            2585K      320
__AUTH_CONST                      19.8M      509
__DATA                            18.9M      506
__DATA_CONST                      23.5M      523
__DATA_DIRTY                      1804K      221
__FONT_DATA                          4K        1
__LINKEDIT                       574.5M       13
__OBJC_CONST                      3616K      285
__OBJC_RO                         81.8M        1
__OBJC_RW                         3088K        1
__TEXT                           598.9M      541
__UNICODE                          588K        1
dyld private memory               1024K        1
mapped file                      177.3M       48
shared memory                      960K       19
===========                     =======  =======
TOTAL                             23.4G     3331
TOTAL, minus reserved VM space    22.1G     3331



-----------
Full Report
-----------

{""app_name"":""WhatsApp"",""timestamp"":""2021-11-17 09:54:03.00 -0600"",""app_version"":""21.0.1"",""slice_uuid"":""4c4c44a3-5555-3144-a1f5-893d0948eba6"",""build_version"":""21.0.1"",""platform"":1,""bundleID"":""com.webcatalog.juli.whatsapp"",""share_with_app_devs"":1,""is_first_party"":0,""bug_type"":""309"",""os_version"":""macOS 12.0.1 (21A559)"",""incident_id"":""07B29584-7144-415A-B05F-180FDE4E661E"",""name"":""WhatsApp""}
{
  ""uptime"" : 290000,
  ""procLaunch"" : ""2021-11-17 09:53:40.8989 -0600"",
  ""procRole"" : ""Foreground"",
  ""version"" : 2,
  ""userID"" : 501,
  ""deployVersion"" : 210,
  ""modelCode"" : ""MacBookPro17,1"",
  ""procStartAbsTime"" : 7172072427915,
  ""coalitionID"" : 67018,
  ""osVersion"" : {
    ""train"" : ""macOS 12.0.1"",
    ""build"" : ""21A559"",
    ""releaseType"" : ""User""
  },
  ""captureTime"" : ""2021-11-17 09:53:59.5872 -0600"",
  ""incident"" : ""07B29584-7144-415A-B05F-180FDE4E661E"",
  ""bug_type"" : ""309"",
  ""pid"" : 16750,
  ""procExitAbsTime"" : 7172520223459,
  ""translated"" : false,
  ""cpuType"" : ""ARM-64"",
  ""procName"" : ""WhatsApp"",
  ""procPath"" : ""\/Users\/USER\/*\/WhatsApp.app\/Contents\/MacOS\/WhatsApp"",
  ""bundleInfo"" : {""CFBundleShortVersionString"":""21.0.1"",""CFBundleVersion"":""21.0.1"",""CFBundleIdentifier"":""com.webcatalog.juli.whatsapp""},
  ""storeInfo"" : {""deviceIdentifierForVendor"":""7884B039-C2C2-5727-81DF-94FCD46DFBFB"",""thirdParty"":true},
  ""parentProc"" : ""launchd"",
  ""parentPid"" : 1,
  ""coalitionName"" : ""com.webcatalog.juli.whatsapp"",
  ""crashReporterKey"" : ""EBAB0EC8-E94B-1024-E6EC-92F9F6023363"",
  ""wakeTime"" : 3051,
  ""sleepWakeUUID"" : ""981CCA76-9BDA-4AC1-8DA8-F462535584F3"",
  ""sip"" : ""enabled"",
  ""isCorpse"" : 1,
  ""exception"" : {""codes"":""0x0000000000000001, 0x000000010eb6b5c4"",""rawCodes"":[1,4541822404],""type"":""EXC_BREAKPOINT"",""signal"":""SIGTRAP""},
  ""termination"" : {""flags"":0,""code"":5,""namespace"":""SIGNAL"",""indicator"":""Trace\/BPT trap: 5"",""byProc"":""exc handler"",""byPid"":16750},
  ""extMods"" : {""caller"":{""thread_create"":0,""thread_set_state"":0,""task_for_pid"":0},""system"":{""thread_create"":0,""thread_set_state"":0,""task_for_pid"":0},""targeted"":{""thread_create"":0,""thread_set_state"":0,""task_for_pid"":0},""warnings"":0},
  ""faultingThread"" : 4,
  ""threads"" : [{""id"":3945981,""name"":""CrBrowserMain"",""queue"":""com.apple.main-thread"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":199056,""symbol"":""RunCurrentEventLoopInMode"",""symbolLocation"":292,""imageIndex"":2},{""imageOffset"":198404,""symbol"":""ReceiveNextEventCommon"",""symbolLocation"":552,""imageIndex"":2},{""imageOffset"":197828,""symbol"":""_BlockUntilNextEventMatchingListInModeWithFilter"",""symbolLocation"":72,""imageIndex"":2},{""imageOffset"":269036,""symbol"":""_DPSNextEvent"",""symbolLocation"":844,""imageIndex"":3},{""imageOffset"":263056,""symbol"":""-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]"",""symbolLocation"":1332,""imageIndex"":3},{""imageOffset"":205744,""symbol"":""-[NSApplication run]"",""symbolLocation"":596,""imageIndex"":3},{""imageOffset"":46751436,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":5532,""imageIndex"":4},{""imageOffset"":46746068,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":164,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":32323884,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":5250072,""imageIndex"":4},{""imageOffset"":32330228,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":5256416,""imageIndex"":4},{""imageOffset"":32314652,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":5240840,""imageIndex"":4},{""imageOffset"":15005908,""symbol"":""electron::fuses::IsOnlyLoadAppFromAsarEnabled()"",""symbolLocation"":13078364,""imageIndex"":4},{""imageOffset"":15004620,""symbol"":""electron::fuses::IsOnlyLoadAppFromAsarEnabled()"",""symbolLocation"":13077076,""imageIndex"":4},{""imageOffset"":14998900,""symbol"":""electron::fuses::IsOnlyLoadAppFromAsarEnabled()"",""symbolLocation"":13071356,""imageIndex"":4},{""imageOffset"":15001200,""symbol"":""electron::fuses::IsOnlyLoadAppFromAsarEnabled()"",""symbolLocation"":13073656,""imageIndex"":4},{""imageOffset"":99216,""symbol"":""ElectronMain"",""symbolLocation"":112,""imageIndex"":4},{""imageOffset"":3500,""imageIndex"":5},{""imageOffset"":20724,""symbol"":""start"",""symbolLocation"":520,""imageIndex"":6}]},{""id"":3945987,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3945989,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3945991,""name"":""ThreadPoolServiceThread"",""frames"":[{""imageOffset"":51784,""symbol"":""kevent64"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":46885276,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":139372,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46535424,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19461612,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""triggered"":true,""id"":3945992,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":58684868,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":11938964,""imageIndex"":4},{""imageOffset"":966684,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":867412,""imageIndex"":4},{""imageOffset"":968288,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":869016,""imageIndex"":4},{""imageOffset"":974220,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":874948,""imageIndex"":4},{""imageOffset"":46402300,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19328488,""imageIndex"":4},{""imageOffset"":46525956,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19452144,""imageIndex"":4},{""imageOffset"":46522384,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19448572,""imageIndex"":4},{""imageOffset"":46717804,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19643992,""imageIndex"":4},{""imageOffset"":46521564,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19447752,""imageIndex"":4},{""imageOffset"":46583972,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510160,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945993,""name"":""ThreadPoolBackgroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46582912,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509100,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945994,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945995,""name"":""Chrome_IOThread"",""frames"":[{""imageOffset"":51784,""symbol"":""kevent64"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":46885276,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":139372,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":32334668,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":5260856,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945996,""name"":""MemoryInfra"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46775652,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":29748,""imageIndex"":4},{""imageOffset"":46170724,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19096912,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945997,""frames"":[{""imageOffset"":30924,""symbol"":""kevent"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":97008,""symbol"":""uv_free_interface_addresses"",""symbolLocation"":1204,""imageIndex"":4},{""imageOffset"":30980,""symbol"":""uv_run"",""symbolLocation"":364,""imageIndex"":4},{""imageOffset"":105284940,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":172084,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945998,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":105285412,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":172556,""imageIndex"":4},{""imageOffset"":105276172,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":163316,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3945999,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":105285412,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":172556,""imageIndex"":4},{""imageOffset"":105276172,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":163316,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946000,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":105285412,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":172556,""imageIndex"":4},{""imageOffset"":105276172,""symbol"":""node::CommonEnvironmentSetup::context() const"",""symbolLocation"":163316,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946001,""frames"":[{""imageOffset"":6544,""symbol"":""semaphore_wait_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":78328,""symbol"":""uv_sem_wait"",""symbolLocation"":24,""imageIndex"":4},{""imageOffset"":105775548,""symbol"":""node::SetTracingController(v8::TracingController*)"",""symbolLocation"":64436,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946036,""name"":""NetworkConfigWatcher"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":413200,""symbol"":""-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"",""symbolLocation"":236,""imageIndex"":8},{""imageOffset"":46751012,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":5108,""imageIndex"":4},{""imageOffset"":46746068,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":164,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946037,""name"":""CrShutdownDetector"",""frames"":[{""imageOffset"":9528,""symbol"":""read"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":1839868,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":1740596,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946038,""name"":""NetworkConfigWatcher"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":413200,""symbol"":""-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"",""symbolLocation"":236,""imageIndex"":8},{""imageOffset"":46751012,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":5108,""imageIndex"":4},{""imageOffset"":46746068,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":164,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946039,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946040,""name"":""ThreadPoolSingleThreadForegroundBlocking0"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583132,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509320,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946041,""name"":""CompositorTileWorker1"",""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":46716220,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19642408,""imageIndex"":4},{""imageOffset"":60009064,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":13263160,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946044,""frames"":[{""imageOffset"":48440,""symbol"":""__select"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":1836424,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":1737152,""imageIndex"":4},{""imageOffset"":1493452,""symbol"":""ElectronInitializeICUandStartNode"",""symbolLocation"":1394180,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946052,""name"":""NetworkConfigWatcher"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":413200,""symbol"":""-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"",""symbolLocation"":236,""imageIndex"":8},{""imageOffset"":46751012,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":5108,""imageIndex"":4},{""imageOffset"":46746068,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":164,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946053,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":17492,""symbol"":""uv_cancel"",""symbolLocation"":688,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946054,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":17492,""symbol"":""uv_cancel"",""symbolLocation"":688,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946055,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":17492,""symbol"":""uv_cancel"",""symbolLocation"":688,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946056,""frames"":[{""imageOffset"":20672,""symbol"":""__psynch_cvwait"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":31412,""symbol"":""_pthread_cond_wait"",""symbolLocation"":1228,""imageIndex"":7},{""imageOffset"":76748,""symbol"":""uv_cond_wait"",""symbolLocation"":12,""imageIndex"":4},{""imageOffset"":17492,""symbol"":""uv_cancel"",""symbolLocation"":688,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946061,""name"":""com.apple.NSEventThread"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":1764388,""symbol"":""_NSEventThread"",""symbolLocation"":196,""imageIndex"":3},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946062,""name"":""ThreadPoolBackgroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46582912,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509100,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946086,""name"":""CacheThread_BlockFile"",""frames"":[{""imageOffset"":51784,""symbol"":""kevent64"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":46885276,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":139372,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946124,""name"":""ThreadPoolSingleThreadSharedBackgroundBlocking1"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46581496,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19507684,""imageIndex"":4},{""imageOffset"":46583368,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509556,""imageIndex"":4},{""imageOffset"":46582956,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509144,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946146,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946147,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946155,""name"":""NetworkConfigWatcher"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":544312,""symbol"":""__CFRunLoopServiceMachPort"",""symbolLocation"":372,""imageIndex"":1},{""imageOffset"":537328,""symbol"":""__CFRunLoopRun"",""symbolLocation"":1212,""imageIndex"":1},{""imageOffset"":534164,""symbol"":""CFRunLoopRunSpecific"",""symbolLocation"":600,""imageIndex"":1},{""imageOffset"":413200,""symbol"":""-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"",""symbolLocation"":236,""imageIndex"":8},{""imageOffset"":46751012,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":5108,""imageIndex"":4},{""imageOffset"":46746068,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":164,""imageIndex"":4},{""imageOffset"":46501392,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19427580,""imageIndex"":4},{""imageOffset"":46306656,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19232844,""imageIndex"":4},{""imageOffset"":46607692,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19533880,""imageIndex"":4},{""imageOffset"":46608064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19534252,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946174,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946175,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946176,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946177,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46584264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510452,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946178,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":6484,""symbol"":""mach_msg_trap"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":7424,""symbol"":""mach_msg"",""symbolLocation"":76,""imageIndex"":0},{""imageOffset"":46775948,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":30044,""imageIndex"":4},{""imageOffset"":46581496,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19507684,""imageIndex"":4},{""imageOffset"":46583368,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509556,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946179,""name"":""ThreadPoolForegroundWorker"",""frames"":[{""imageOffset"":9440,""symbol"":""__fcntl"",""symbolLocation"":8,""imageIndex"":0},{""imageOffset"":9388,""symbol"":""fcntl"",""symbolLocation"":88,""imageIndex"":0},{""imageOffset"":46699268,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19625456,""imageIndex"":4},{""imageOffset"":58925108,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":12179204,""imageIndex"":4},{""imageOffset"":58949772,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":12203868,""imageIndex"":4},{""imageOffset"":58926404,""symbol"":""base::mac::CxxPersonalityRoutine(int, _Unwind_Action, unsigned long long, _Unwind_Exception*, _Unwind_Context*)"",""symbolLocation"":12180500,""imageIndex"":4},{""imageOffset"":38701532,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":11627720,""imageIndex"":4},{""imageOffset"":38704976,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":11631164,""imageIndex"":4},{""imageOffset"":38720936,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":11647124,""imageIndex"":4},{""imageOffset"":38749060,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":11675248,""imageIndex"":4},{""imageOffset"":33851960,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":6778148,""imageIndex"":4},{""imageOffset"":34110064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7036252,""imageIndex"":4},{""imageOffset"":34111316,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7037504,""imageIndex"":4},{""imageOffset"":34117048,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7043236,""imageIndex"":4},{""imageOffset"":33848584,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":6774772,""imageIndex"":4},{""imageOffset"":34112172,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7038360,""imageIndex"":4},{""imageOffset"":34113336,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7039524,""imageIndex"":4},{""imageOffset"":33943264,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":6869452,""imageIndex"":4},{""imageOffset"":34096232,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":7022420,""imageIndex"":4},{""imageOffset"":34012208,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":6938396,""imageIndex"":4},{""imageOffset"":34026660,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":6952848,""imageIndex"":4},{""imageOffset"":46402300,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19328488,""imageIndex"":4},{""imageOffset"":46525992,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19452180,""imageIndex"":4},{""imageOffset"":46524608,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19450796,""imageIndex"":4},{""imageOffset"":46717804,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19643992,""imageIndex"":4},{""imageOffset"":46521564,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19447752,""imageIndex"":4},{""imageOffset"":46583972,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19510160,""imageIndex"":4},{""imageOffset"":46583044,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19509232,""imageIndex"":4},{""imageOffset"":46719064,""symbol"":""v8::internal::SetupIsolateDelegate::SetupHeap(v8::internal::Heap*)"",""symbolLocation"":19645252,""imageIndex"":4},{""imageOffset"":29932,""symbol"":""_pthread_start"",""symbolLocation"":148,""imageIndex"":7},{""imageOffset"":8912,""symbol"":""thread_start"",""symbolLocation"":8,""imageIndex"":7}]},{""id"":3946515,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3946516,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3946521,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3946522,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]},{""id"":3946523,""frames"":[{""imageOffset"":8892,""symbol"":""start_wqthread"",""symbolLocation"":0,""imageIndex"":7}]}],
  ""usedImages"" : [
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7150829568,
    ""size"" : 221184,
    ""uuid"" : ""c8524c02-b14f-30bd-a228-c44b4a448e68"",
    ""path"" : ""\/usr\/lib\/system\/libsystem_kernel.dylib"",
    ""name"" : ""libsystem_kernel.dylib""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7151370240,
    ""CFBundleShortVersionString"" : ""6.9"",
    ""CFBundleIdentifier"" : ""com.apple.CoreFoundation"",
    ""size"" : 5521408,
    ""uuid"" : ""b2ff96d0-ae99-31ef-9014-fc9964b4f3e0"",
    ""path"" : ""\/System\/Library\/Frameworks\/CoreFoundation.framework\/Versions\/A\/CoreFoundation"",
    ""name"" : ""CoreFoundation"",
    ""CFBundleVersion"" : ""1855.105""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7297941504,
    ""CFBundleShortVersionString"" : ""2.1.1"",
    ""CFBundleIdentifier"" : ""com.apple.HIToolbox"",
    ""size"" : 3342336,
    ""uuid"" : ""98ea191e-b6f8-3036-b267-eeadb5f03c7d"",
    ""path"" : ""\/System\/Library\/Frameworks\/Carbon.framework\/Versions\/A\/Frameworks\/HIToolbox.framework\/Versions\/A\/HIToolbox"",
    ""name"" : ""HIToolbox""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7197073408,
    ""CFBundleShortVersionString"" : ""6.9"",
    ""CFBundleIdentifier"" : ""com.apple.AppKit"",
    ""size"" : 15409152,
    ""uuid"" : ""518f4e68-c324-320f-9d7f-85c224eae972"",
    ""path"" : ""\/System\/Library\/Frameworks\/AppKit.framework\/Versions\/C\/AppKit"",
    ""name"" : ""AppKit"",
    ""CFBundleVersion"" : ""2113""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64"",
    ""base"" : 4483137536,
    ""CFBundleIdentifier"" : ""com.github.Electron.framework"",
    ""size"" : 125435904,
    ""uuid"" : ""4c4c442d-5555-3144-a135-6b2726cbb3e3"",
    ""path"" : ""\/Users\/USER\/*\/WhatsApp.app\/Contents\/Frameworks\/Electron Framework.framework\/Versions\/A\/Electron Framework"",
    ""name"" : ""Electron Framework"",
    ""CFBundleVersion"" : ""16.0.0""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64"",
    ""base"" : 4343250944,
    ""CFBundleShortVersionString"" : ""21.0.1"",
    ""CFBundleIdentifier"" : ""com.webcatalog.juli.whatsapp"",
    ""size"" : 409600,
    ""uuid"" : ""4c4c44a3-5555-3144-a1f5-893d0948eba6"",
    ""path"" : ""\/Users\/USER\/*\/WhatsApp.app\/Contents\/MacOS\/WhatsApp"",
    ""name"" : ""WhatsApp"",
    ""CFBundleVersion"" : ""21.0.1""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 4347166720,
    ""size"" : 393216,
    ""uuid"" : ""86a8ba48-8bb4-3b30-9cda-051f73c74f44"",
    ""path"" : ""\/usr\/lib\/dyld"",
    ""name"" : ""dyld""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7151050752,
    ""size"" : 53248,
    ""uuid"" : ""4786e19a-9312-38e6-80ef-9c1394548118"",
    ""path"" : ""\/usr\/lib\/system\/libsystem_pthread.dylib"",
    ""name"" : ""libsystem_pthread.dylib""
  },
  {
    ""source"" : ""P"",
    ""arch"" : ""arm64e"",
    ""base"" : 7167062016,
    ""CFBundleShortVersionString"" : ""6.9"",
    ""CFBundleIdentifier"" : ""com.apple.Foundation"",
    ""size"" : 4120576,
    ""uuid"" : ""de039f1b-ffe5-3644-a8cf-7ba52c32cd73"",
    ""path"" : ""\/System\/Library\/Frameworks\/Foundation.framework\/Versions\/C\/Foundation"",
    ""name"" : ""Foundation"",
    ""CFBundleVersion"" : ""1855.105""
  }
],
  ""sharedCache"" : {
  ""base"" : 7147880448,
  ""size"" : 3072180224,
  ""uuid"" : ""a6162d66-93e3-3251-93cc-b11f7c8c830e""
},
  ""vmSummary"" : ""ReadOnly portion of Libraries: Total=1.1G resident=0K(0%) swapped_out_or_unallocated=1.1G(100%)\nWritable regions: Total=2.0G written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=2.0G(100%)\n\n                                VIRTUAL   REGION \nREGION TYPE                        SIZE    COUNT (non-coalesced) \n===========                     =======  ======= \nAccelerate framework               512K        4 \nActivity Tracing                   256K        1 \nCG backing stores                 2176K        4 \nCG image                           208K        6 \nColorSync                          528K       26 \nCoreAnimation                      192K        9 \nCoreGraphics                        32K        2 \nCoreUI image data                 1152K        8 \nFoundation                          48K        2 \nKernel Alloc Once                   32K        1 \nMALLOC                           281.4M       64 \nMALLOC guard page                  192K       11 \nMALLOC_MEDIUM (reserved)         960.0M        8         reserved VM address space (unallocated)\nMALLOC_NANO (reserved)           384.0M        1         reserved VM address space (unallocated)\nMach message                       160K        7 \nMemory Tag 253                    16.0G       22 \nMemory Tag 255                     4.0G       50 \nSTACK GUARD                       56.7M       44 \nStack                            276.9M       44 \nVM_ALLOCATE                       17.4M       27 \n__AUTH                            2585K      320 \n__AUTH_CONST                      19.8M      509 \n__DATA                            18.9M      506 \n__DATA_CONST                      23.5M      523 \n__DATA_DIRTY                      1804K      221 \n__FONT_DATA                          4K        1 \n__LINKEDIT                       574.5M       13 \n__OBJC_CONST                      3616K      285 \n__OBJC_RO                         81.8M        1 \n__OBJC_RW                         3088K        1 \n__TEXT                           598.9M      541 \n__UNICODE                          588K        1 \ndyld private memory               1024K        1 \nmapped file                      177.3M       48 \nshared memory                      960K       19 \n===========                     =======  ======= \nTOTAL                             23.4G     3331 \nTOTAL, minus reserved VM space    22.1G     3331 \n"",
  ""legacyInfo"" : {
  ""threadTriggered"" : {
    ""name"" : ""ThreadPoolForegroundWorker""
  }
},
  ""trialInfo"" : {
  ""rollouts"" : [
    {
      ""rolloutId"" : ""607844aa04477260f58a8077"",
      ""factorPackIds"" : {
        ""SIRI_MORPHUN_ASSETS"" : ""6103050cbfe6dc472e1c982a""
      },
      ""deploymentId"" : 240000066
    },
    {
      ""rolloutId"" : ""60da5e84ab0ca017dace9abf"",
      ""factorPackIds"" : {

      },
      ""deploymentId"" : 240000008
    },
    {
      ""rolloutId"" : ""601d9415f79519000ccd4b69"",
      ""factorPackIds"" : {
        ""SIRI_TEXT_TO_SPEECH"" : ""618455f04b3765609b8b78c1""
      },
      ""deploymentId"" : 240000311
    },
    {
      ""rolloutId"" : ""5ffde50ce2aacd000d47a95f"",
      ""factorPackIds"" : {

      },
      ""deploymentId"" : 240000076
    },
    {
      ""rolloutId"" : ""5fc94383418129005b4e9ae0"",
      ""factorPackIds"" : {

      },
      ""deploymentId"" : 240000162
    },
    {
      ""rolloutId"" : ""602ad4dac86151000cf27e46"",
      ""factorPackIds"" : {
        ""SIRI_DICTATION_ASSETS"" : ""6181ebb28763315b9604755e""
      },
      ""deploymentId"" : 240000271
    }
  ],
  ""experiments"" : [

  ]
},
  ""reportNotes"" : [
  ""thread_get_state(PAGEIN) returned 0x10000003: (ipc\/send) invalid destination port"",
  ""thread_get_state(EXCEPTION) returned 0x10000003: (ipc\/send) invalid destination port"",
  ""thread_get_state(FLAVOR) returned 0x10000003: (ipc\/send) invalid destination port""
]
}

Model: MacBookPro17,1, BootROM 7429.41.5, proc 8:4:4 processors, 8 GB, SMC
Graphics: Apple M1, Apple M1, Built-In
Display: Color LCD, 2560 x 1600 Retina, Main, MirrorOff, Online
Memory Module: LPDDR4
AirPort: Wi-Fi, wl0: Sep 13 2021 21:06:59 version 18.20.310.14.7.8.119 FWID 01-9d72ee4a
Bluetooth: Version (null), 0 services, 0 devices, 0 incoming serial ports
Network Service: Wi-Fi, AirPort, en0
USB Device: USB31Bus
USB Device: USB31Bus
Thunderbolt Bus: MacBook Pro, Apple Inc.
Thunderbolt Bus: MacBook Pro, Apple Inc.
```",VerteDinde,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;has-repro-gist;16-x-y,2021-11-17T16:17:38Z,2021-11-18T22:38:52Z,quanglam2807,ckerr;quanglam2807;VerteDinde,quanglam2807;ckerr,,VerteDinde,,quanglam2807,
electron/electron,31949,"[Bug]: nodeIntegration cannot be disabled via window.open() with nativeWindowOpen ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

N/A

### Expected Behavior

I have a `BrowserWindow` with `nativeWindowOpen` enabled and `nodeIntegration` enabled. I want to open a popup using `window.open('popup.html', '', 'nodeIntegration=no');`, to have `nodeIntegration` disabled. This is documented here: https://github.com/electron/electron/blob/086526738745f205241aed9926bb8915759c0f76/docs/api/window-open.md#L45-L47

### Actual Behavior

The popup window has `nodeIntegration` enabled incorrectly. However, when the parent window has `nativeWindowOpen` disabled, it works.

### Testcase Gist URL

_No response_

### Additional Information

[native-window-open-node-integration.zip](https://github.com/electron/electron/files/7577664/native-window-open-node-integration.zip)

Test passed: Electron exited with code 0.
Test failed: Electron exited with code 1.

This issue is blocking #29405",codebytere,bug :beetle:;platform/all;16-x-y,2021-11-22T01:39:09Z,2021-12-06T03:54:15Z,miniak,codebytere;zcbenz,miniak;sofianguy,,codebytere,,zcbenz,
electron/electron,32007,"[Bug]: Vibrancy does not work if background color is set to undefined ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.2

### What operating system are you using?

macOS

### Operating System Version

macOS Monterrey 12.0.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

13

_No response_

### Expected Behavior

This configuration should produce a vibrant window:

```ts
new BrowserWindow({
    width: 800,
    height: 600,
    backgroundColor: undefined,
    vibrancy: ""sidebar"",
    titleBarStyle: ""hidden"",
    webPreferences: {
      preload: path.join(__dirname, 'preload.js')
    }
  })
```

### Actual Behavior

The window has a white background.

As of Electron 16.x vibrancy works if `backgroundColor` is not set at all, but not if it's explicitly set to `undefined`. As a consequence, if the background color is set to any value, it's impossible to unset it later.

### Testcase Gist URL

_No response_

### Additional Information

What's interesting is that this option check returns `true` if the background color is explicitly set to `undefined`:

https://github.com/electron/electron/blob/bd10b19b0cdc46cdbadb570af89305e64541b679/shell/browser/api/electron_api_browser_window.cc#L50

But this one returns `false`:

https://github.com/electron/electron/blob/bd10b19b0cdc46cdbadb570af89305e64541b679/shell/browser/native_window.cc#L208
",codebytere,platform/macOS;bug :beetle:;has-repro-comment;16-x-y,2021-11-26T16:14:18Z,2022-01-19T20:51:13Z,mitchchn,codebytere;mitchchn,mitchchn;jkleinsc;codebytere,,codebytere,,jkleinsc,
electron/electron,32111,"[Bug]:  Menu.buildFromTemplate([]); click tray icon is  not highlight ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS 11.5.2

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

Menu.buildFromTemplate([]), click tray icon is hightlight

### Actual Behavior

Menu.buildFromTemplate([]), click tray icon is not hightlight

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;16-x-y,2021-12-06T05:57:41Z,2022-05-12T14:14:12Z,CahierX,codebytere;CahierX,CahierX;codebytere,codebytere,codebytere,,codebytere,
electron/electron,32252,"[Bug]: Electron 16.0.5 cannot enable webviewTag in nativeWindowOpen sub window ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.5

### What operating system are you using?

Windows

### Operating System Version

10 version 19043

### What arch are you using?

x64

### Last Known Working Electron version

16.0.4

### Expected Behavior

When a sub window opened with `webviewTag` set to true, the webview in sub window should works correctly

### Actual Behavior

In the subwindow, the `webviewTag` option is not actually enabled and webview is not working

### Testcase Gist URL

https://gist.github.com/72a8040c33a7deeebdfe88d409d8ca0b

### Additional Information

In the testcase, type following command in devtool console and press enter:

```js
w = open('./index.html')
setTimeout(() => {
    w.document.querySelector('webview').addEventListener('dom-ready', (e) => console.log(e))
    w.document.querySelector('webview').reload()
}, 100)
```

The console will open a subwindow, but in the subwindow the webview did not load, and the console throws error `w.document.querySelector(...).reload is not a function`

![image](https://user-images.githubusercontent.com/8194131/146691461-36d0ec6c-d1d8-4b90-80f9-15081aaeac62.png)
",zcbenz,component/webview;bug :beetle:;bug/regression :leftwards_arrow_with_hook:,2021-12-19T21:29:54Z,2022-01-26T11:30:53Z,KochiyaOcean,KochiyaOcean;codebytere;zcbenz,KochiyaOcean;zcbenz,,zcbenz,,zcbenz,
electron/electron,32276,"[Bug]: browserWindow.webContents.print() causes app to crash ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [x] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.5

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Print the contents of browser window to the default attached printer.

### Actual Behavior

Application got crashed...
![image](https://user-images.githubusercontent.com/36808955/147180511-d5e2498e-e5b0-47d7-bed3-74dff101d022.png)


### Testcase Gist URL

[_No response_](https://gist.github.com/saugatdai/5ba400d42e3fa4be66d323b2d826fe50)

### Additional Information

New Update : The program does not crash, but the electron is unable to detect the printer on which it is supposed to print silently. The same program works perfectly on windows. I've waited several months expecting that a version may solve this problem, but it didn't happened. My project is being hold for this reason. Please Help..

Output from electron fiddle : 
Console ready 棣冩暕
Saving files to temp directory...
Saved files to /tmp/tmp-17209-xBE03rN99Kka
Electron v18.2.3 started.
libva error: /usr/lib/x86_64-linux-gnu/dri/iHD_drv_video.so init failed
[19927:0702/212214.938092:ERROR:sandbox_linux.cc(377)] InitializeSandbox() called with multiple threads in process gpu-process.
[
  {
    name: 'DCP-7030',
    displayName: 'DCP-7030',
    description: 'Brother DCP-7030',
    status: 5,
    isDefault: false,
    options: {
      copies: '1',
      'device-uri': 'usb://Brother/DCP-7030?serial=000D0N969645',
      finishings: '3',
      'job-cancel-after': '10800',
      'job-hold-until': 'no-hold',
      'job-priority': '50',
      'job-sheets': 'none,none',
      'marker-change-time': '0',
      'number-up': '1',
      'printer-commands': 'none',
      'printer-info': 'Brother DCP-7030',
      'printer-is-accepting-jobs': 'true',
      'printer-is-shared': 'true',
      'printer-is-temporary': 'false',
      'printer-location': 'embeddedSaugat',
      'printer-make-and-model': 'Brother DCP-7030, using brlaser v6',
      'printer-state': '5',
      'printer-state-change-time': '1651417533',
      'printer-state-reasons': 'paused',
      'printer-type': '4164',
      'printer-uri-supported': 'ipp://localhost/printers/DCP-7030',
      system_driverinfo: 'Brother DCP-7030, using brlaser v6'
    }
  },
  {
    name: 'POS80QMS',
    displayName: 'POS80QMS',
    description: '80mm printer for QMS Project',
    status: 3,
    isDefault: true,
    options: {
      copies: '1',
      'device-uri': 'usb://Unknown/Printer',
      finishings: '3',
      'job-cancel-after': '10800',
      'job-hold-until': 'no-hold',
      'job-priority': '50',
      'job-sheets': 'none,none',
      'marker-change-time': '0',
      'number-up': '1',
      'printer-commands': 'none',
      'printer-info': '80mm printer for QMS Project',
      'printer-is-accepting-jobs': 'true',
      'printer-is-shared': 'false',
      'printer-is-temporary': 'false',
      'printer-location': 'holus',
      'printer-make-and-model': 'POS-80',
      'printer-state': '3',
      'printer-state-change-time': '1655307054',
      'printer-state-reasons': 'none',
      'printer-type': '2248708',
      'printer-uri-supported': 'ipp://localhost/printers/POS80QMS',
      system_driverinfo: 'POS-80'
    }
  }
]
(node:19895) electron: Deprecation Warning: getPrinters() is deprecated. Use the asynchronous and non-blocking version, getPrintersAsync(), instead.
(Use `electron --trace-warnings ...` to show where the warning was created)
failed
[19895:0702/212216.612479:ERROR:print_view_manager_base.cc(85)] Invalid printer settings The selected printer is not available or not installed correctly. <br> Check your printer or try selecting another printer.

Electron exited with code 0.",codebytere,platform/linux;component/printing;bug :beetle:;blocked/need-repro;16-x-y,2021-12-23T02:51:01Z,2022-02-07T09:42:33Z,saugatdai,codebytere,saugatdai;codebytere,,codebytere,,codebytere,
electron/electron,32285,"[Bug]: The title bar overlay is not updated to fit the settings of the window ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a feature request that matches the one I want to file, without success.

### Electron Version

16.0.5

### What operating system are you using?

Windows

### Operating System Version

Windows 11 21H2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

If a window has the `maximizable` property set to `false`, the built-in title bar overlay should be updated and the maximise button should be disabled. And if a window has the `minimizable` property set to `false`, the built-in title bar overlay should be updated and the minimise button should be disabled.

### Actual Behavior

These buttons are still active on the windows that have these properties set to `false`.
![image](https://user-images.githubusercontent.com/72353925/147394733-edffab52-5fea-483d-a62a-840596810551.png)

Main Window (the first one):
maximizable -> true
minimizable -> true

Editor Window (the second one):
maximizable -> true
minimizable -> true

Custom Alert Window (the third one):
maximizable -> false
minimizable -> true

About Window (the fourth one):
maximizable -> false
minimizable -> false

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/windows;bug :beetle:;component/BrowserWindow;16-x-y;component/wco,2021-12-25T22:35:51Z,2022-06-23T17:08:33Z,0xENDER,ahmadjubair33;codebytere;limacheb,0xENDER;codebytere,codebytere,codebytere,,jkleinsc,
electron/electron,32323,"[Bug]: Electron fails to build in some Windows configurations due to misnamed .patch file ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10.0.19042.1415

### What arch are you using?

x64

### Last Known Working Electron version

13.0.0

### Expected Behavior

Electron builds from scratch

### Actual Behavior

Electron doesn't build. This error shows up instead:
```
  ...
  Applying: Convert Electron ProcessSingleton changes to patch
  Applying: fix: expose DecrementCapturerCount in web_contents_impl
  Applying: add ui::ScopedCliboardWriter::WriteUnsafeRawData
  Applying: feat: Add data parameter to ProcessSingleton
  Applying: fix: mas gate private enterprise APIs
  Patch failed at 0111 fix: mas gate private enterprise APIs
```
Attempting to apply this patch manually with verbose flags shows the following:
```
c:\...\electron\src> git apply electron\patches\chromium\mas_gate_private_enterprise_APIs --verbose
Checking patch base/enterprise_util_mac.mm...
error: while searching for:
DeviceUserDomainJoinState AreDeviceAndUserJoinedToDomain() {?
  static DeviceUserDomainJoinState state = [] {?
    DeviceUserDomainJoinState state{false, false};?
?
    @autoreleasepool {?
      ODSession* session = [ODSession defaultSession];?

error: patch failed: base/enterprise_util_mac.mm:168
error: base/enterprise_util_mac.mm: patch does not apply
```


### Testcase Gist URL

_No response_

### Additional Information

The offending PR seems to be this: https://github.com/electron/electron/pull/31482

The extra `?` on the end of the verbose failure log is indicative of extra `\r` when the tools expect only `\n` and will error if git is in a configuration to check out files in CRLF mode. This was apparently a problem previously identified and fixed here: https://github.com/electron/electron/pull/14789
```
# `git apply` and friends don't understand CRLF, even on windows. Force those
# files to be checked out with LF endings even if core.autocrlf is true.
*.patch text eol=lf
```
However, this fix only works if patch files are named `*.patch`. In this case, the patch file was named without `.patch`, so the fix doesn't work, and it causes builds to fail. The fix is likely to rename `patches/chromium/mas_gate_private_enterprise_APIs` to `patches/chromium/mas_gate_private_enterprise_APIs.patch`.",VerteDinde,bug :beetle:,2022-01-03T22:21:24Z,2022-01-05T09:36:49Z,vulture,vulture;VerteDinde,vulture,,VerteDinde,,codebytere,
electron/electron,32358,"[Bug]: getSources not releasing OS capture in MacOS Big Sur ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.6

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

15.3.4

### Expected Behavior

After calling desktopCapturer.getSources the OS should behave as if nothing is capturing the screen.

### Actual Behavior

In my Electron Fiddle app, for about 5-8 seconds after the getSources call resolves the OS is still behaving as if a capture is happening.   I can tell by locking my screen and seeing the text ""Your screen is being observed"" which disappears 5-8 seconds afterwards.  In 15.3.4 this doesn't happen.

In my production application it can take much longer and sometimes won't resolve for at least minutes or until the application is exited.

### Testcase Gist URL

https://gist.github.com/seanmacisaac/6b1db1cf7afa53302671c8f97913df91

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;has-repro-gist;component/desktopcapturer;16-x-y,2022-01-05T23:11:04Z,2022-01-13T15:21:28Z,seanmacisaac,seanmacisaac,seanmacisaac;ckerr;codebytere,,codebytere,,codebytere,
electron/electron,32360,"[Bug]: Windows Control Overlay button hover effect not working ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

14.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 11

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

See https://github.com/electron/electron/issues/30764 for specific behavior

### Actual Behavior

See https://github.com/electron/electron/issues/30764 for specific behavior

### Testcase Gist URL

_No response_

### Additional Information

I am creating this issue based on https://github.com/electron/electron/issues/30764 and the information I have gathered while trying to triage it. Though this not a breaking bug, it does create a visual inconsistency for users, as a window control button would typically change color when hovered over. For this reason, I think it should still be addressed at some point. Consolidating all current information and future questions/comments here should help in finding a solution.

[Here](https://bugs.chromium.org/p/chromium/issues/detail?id=1218921) is a link to the bug that led to the original fix implemented in Chromium

And [here](https://bugs.chromium.org/p/chromium/issues/detail?id=1271293#c1) is the link to the follow-up bug report created noting issues with the implemented fix. This was then labeled as `WontFix` 

The chromium fix artificially creates the correct tooltips and allows for the button color to change on hover. However, this results in a response to the `WM_NCHITTEST` [message](https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-nchittest) that does not correspond with the function of the button. For example, `HTMAXIMIZE` is not returned, thus Snap Layout on Windows 11 does not work.

If someone else wants to take a look at this, the relevant Electron files can be found in [this PR](https://github.com/electron/electron/pull/29600) adding WCO to Electron. For this bug in particular, I believe the related files are: `shell/browser/ui/views/win_caption_button.cc`, `shell/browser/ui/views/win_caption_button_container.cc`, and `shell/browser/ui/views/win_frame_view.cc` but changes to other files may provide a solution as well.",clavin,platform/windows;bug :beetle:;14-x-y;15-x-y;16-x-y;17-x-y,2022-01-06T00:01:50Z,2022-02-02T15:06:37Z,mlaurencin,AngeloCore;jtpotato;shanselman;clavin;panther7,mlaurencin;clavin,,clavin,,jkleinsc,electron/electron#30764;
electron/electron,32385,"[Bug]: BrowserView holds onto media keys in Windows 10 when media is being played from BrowserView ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 21H2

### What arch are you using?

x64

### Last Known Working Electron version

Unknown

### Expected Behavior

1. Open an Electron application with a BrowserView that contains an embedded YouTube video
2. Press play on the video
3. Pause the video using the Play/Pause media key
4. Switch to another media playing application (eg. Spotify)
5. Press Play/Pause

The media from Spotify should start playing

### Actual Behavior

The media from the Electron application will play instead.
It will always hold onto these keys until the application is closed.

### Testcase Gist URL

https://gist.github.com/devinbinnie/92cf5efde8617cbd2a8a478c0397edac

### Additional Information

First reproduces on Electron v14.",codebytere,platform/windows;bug :beetle:;component/BrowserView;has-repro-gist;14-x-y;15-x-y;16-x-y;17-x-y,2022-01-07T20:26:34Z,2022-06-20T10:40:11Z,devinbinnie,osmestad,devinbinnie;VerteDinde;dsanders11,,codebytere,,zcbenz,
electron/electron,32390,"[Bug]: MessageBoxOptions type declaration mistake, string is not allowed in icon. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.6

### What operating system are you using?

macOS

### Operating System Version

11.6.2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

I think it's a type declaration mistake in MessageBox Options.
MessageBoxOptions閵囬崹瀣锝堚枅閵夌喆鍋ｉ妵鐘浠洪幀婵勪簻閵囦勘浠氶妴

  interface MessageBoxOptions {
    icon?: (NativeImage) | (string);

I think it's a type declaration mistake in MessageBox Options.
With MessageBoxSyncOptions, icon allows strings, but MessageBoxOptions is only NativeImage.
MessageBoxSyncOptions閵囬妶濉眂on閵囩椀tring閵堝倽奴閵囨瑣浼勯妵褋浠氶妵灞讳府essageBoxOptions閵囩枽ativeImage閵囬妵瑁や紑閵囬妵锝冧桓閵囧嫨浼ㄩ妵娆

  interface MessageBoxSyncOptions {
    icon?: (NativeImage) | (string);


### Actual Behavior

  interface MessageBoxOptions {
:
    icon?: NativeImage;
:

### Testcase Gist URL

_No response_

### Additional Information

_No response_",ckerr,documentation :notebook:;bug :beetle:;status/reviewed;platform/all,2022-01-10T08:18:01Z,2022-01-13T01:30:15Z,famibee,famibee;VerteDinde;ckerr,famibee;VerteDinde,,ckerr,,zcbenz,
electron/electron,32427,"[Bug]: ipcRenderer.Postmessage optional transfer parameter is not actually optional. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.6

### What operating system are you using?

Windows

### Operating System Version

Win 10 Pro

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

```ipcRenderer.postMessage(""test"",{});``` should successfully post.

### Actual Behavior

`ipcRenderer.postMessage(""test"",{});` fails with error `TypeError: Invalid value for transfer`.

`ipcRenderer.postMessage(""test"",{},[]);` succeeds.

The transfer parameter is optional according to the [api docs](https://www.electronjs.org/docs/latest/api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer). I would assume the docs are correct as this approximately matches the standard web postMessage.

### Testcase Gist URL

https://gist.github.com/Stinger-au/8394108f5f6754dad03dbbcfef84e3fe

### Additional Information

_No response_",codebytere,bug :beetle:;platform/all;component/ipc;15-x-y;16-x-y,2022-01-12T04:14:37Z,2022-01-13T13:52:48Z,Stinger-au,,Stinger-au;codebytere,,codebytere,,codebytere,
electron/electron,32436,"[Bug]: segfault on startup at gpu_init.cc under native Wayland ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

Other Linux

### Operating System Version

Arch

### What arch are you using?

x64

### Last Known Working Electron version

15.3.5

### Expected Behavior

Electron to start successfully.

### Actual Behavior

Electron crashes immediately upon startup.
`ERROR:gpu_init.cc(457) Passthrough is not supported, GL is egl, ANGLE is`
`zsh: segmentation fault (core dumped)  electron`


### Testcase Gist URL

_No response_

### Additional Information

This is confirmed to be happening on a number of other distros [on this Signal issue report](https://github.com/signalapp/Signal-Desktop/issues/5719).
[asciinema recording](https://asciinema.org/a/dL3Ple9BU5XvKUEEpZ68EBdnN).
I will happily provide more information if need be.",ckerr,platform/linux;crash :boom:;bug :beetle:;16-x-y;17-x-y;18-x-y,2022-01-12T15:06:44Z,2022-03-28T16:50:33Z,Ashiix,ckerr;vially;msisov;wmertens;jeremiah-miller;jmcantrell;jkleinsc;NeoRaider;primeos;brandonweeks,Ashiix;ckerr,ckerr,,,jkleinsc,
electron/electron,32440,"[Bug]: Windows 10/11: Electron 16 doesn't start up under certain graphics hardware configurations ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.6

### What operating system are you using?

Windows

### Operating System Version

Window 10 Enterprise 64 Bit 1909, Windows 10 21H2, Microsoft Windows 11 Business 22000, 

### What arch are you using?

x64

### Last Known Working Electron version

15.3.2

### Expected Behavior

Start up with no problem, window visible, renderer code running.

### Actual Behavior

Not starting up at all, or starting up only with `--disable-gpu` flag, or only starting up after graphics driver has been upgraded.

In most cases, users are saying that the app starts up, with five running processes, but no window. One user reported a blank screen. No logging from Signal Desktop code. You can see the user reports here:

- https://github.com/signalapp/Signal-Desktop/issues/5726
- https://github.com/signalapp/Signal-Desktop/issues/5721
- https://github.com/signalapp/Signal-Desktop/issues/5738

Several users ran into this on Signal Desktop 5.27.0 where previous version of Signal Desktop didn't have problems. The major change is the upgrade from Electron 15 to Electron 16.

An example of the output we got from one of our users with `--enable-logging`:

```
[43300:0111/223036.911:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223036.912:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 1 time(s)
[43300:0111/223037.141:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223037.141:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 2 time(s)
[43300:0111/223037.357:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223037.357:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 3 time(s)
[43300:0111/223037.397:INFO:CONSOLE(33)] ""The vm module of Node.js is deprecated in the renderer process and will be removed."", source: node:electron/js2c/renderer_init (33)
[43300:0111/223037.784:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223037.784:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 4 time(s)
[43300:0111/223037.866:INFO:CONSOLE(33)] ""The vm module of Node.js is deprecated in the renderer process and will be removed."", source: node:electron/js2c/renderer_init (33)
[43300:0111/223038.037:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223038.037:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 5 time(s)
[43300:0111/223038.278:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[43300:0111/223038.278:WARNING:gpu_process_host.cc(1274)] The GPU process has crashed 6 time(s)
[43300:0111/223038.382:WARNING:gpu_process_host.cc(996)] Reinitialized the GPU process after a crash. The reported initialization time was 0 ms
```

Also:

```
[18796:0106/130403.410:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[18796:0106/130403.724:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[18796:0106/130404.043:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
(node:26628) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.
(Use `Signal --trace-deprecation ...` to show where the warning was created)
[18796:0106/130406.831:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[18796:0106/130407.327:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
[18796:0106/130407.812:ERROR:gpu_process_host.cc(968)] GPU process exited unexpectedly: exit_code=-1073741819
```

A variety of different graphics hardware was involved:

- NVIDIA GeForce RTX 3060 Laptop GPU
- Intel UHD Graphics 620
- Intel UHD Graphics 630
- Intel HD Graphics 4000

### Testcase Gist URL

_No response_

### Additional Information

_No response_",VerteDinde,platform/windows;crash :boom:;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;16-x-y;17-x-y;stale,2022-01-12T19:15:14Z,2022-11-05T02:19:22Z,scottnonnenberg-signal,PauIGB;VerteDinde;Jacobus52999;miniak;mwrona92;BrunoBernardino;spogulis;nornagon,scottnonnenberg-signal;VerteDinde,,mlaurencin,,,
electron/electron,32450,"[Bug]: macOS transparent window font shadow residual ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

13.x/14.x/15.x/16.x

### What operating system are you using?

macOS

### Operating System Version

macOS 11

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

MAC OS transparent windows should not have font shadow residue

### Actual Behavior

On the Mac OS platform, there will be font shadow residue on transparent windows

### Testcase Gist URL

https://gist.github.com/5112851712bcd11e7045921fee1cbbf7

### Additional Information

This is a long-standing issue, previously related issue:
- https://github.com/electron/electron/issues/14304
- https://github.com/electron/electron/issues/21173

![image](https://user-images.githubusercontent.com/20365169/149276756-55789261-f884-4898-8213-e8504f56cabb.png)
",codebytere,platform/macOS;bug :beetle:;14-x-y;15-x-y;16-x-y,2022-01-13T05:05:22Z,2022-12-01T18:24:46Z,lyswhut,xiajingren;lyswhut,lyswhut;codebytere,,codebytere,,nornagon,
electron/electron,32463,"[Bug]: setAsDefaultProtocolClient sets wrong command ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Build 19043

### What arch are you using?

x64

### Last Known Working Electron version

13.1.2

### Expected Behavior

`app.setAsDefaultProtocolClient(protocol, process.execPath, [path.resolve(process.argv[1]), '--arg']);`
to work as expected.

### Actual Behavior

electron will put quotes around the entire list of arguments instead of each individually (if necessary), so the generated command is something like

""C:\example\node_modules\electron\dist\electron.exe"" ""c:\example --arg"" ""%1""

which then leads to an error ""Unable to find Electron app at c:\example --args"".

### Testcase Gist URL

!!! Please note that by the nature of setAsDefaultProtocolClient this testcase will make a systemwide setting!

https://gist.github.com/a1f2fdbe04624b6f7a6877a89581143c

### Additional Information

This was almost certainly introduced by the ""fix"" for https://github.com/electron/electron/issues/32141",deepak1556,platform/windows;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;16-x-y;17-x-y;18-x-y,2022-01-13T14:53:01Z,2022-02-21T07:43:27Z,TanninOne,ckerr;nornagon;TanninOne,TanninOne;ckerr;deepak1556,deepak1556,deepak1556,,zcbenz,
electron/electron,32476,"[Bug]: Electron crashes when saving a PDF file with changes ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

It never worked

### Expected Behavior

When you click save > save with your changes, Electron will save the PDF file or at least not crash

### Actual Behavior

Electron crashes when saving a PDF file with changes

### Testcase Gist URL

_No response_

### Additional Information

### To Reproduce
<!--
Your best chance of getting this bug looked at quickly is to provide an example.
-->
Try to open and change something in the interactive PDF file (i.e. https://campustecnologicoalgeciras.es/wp-content/uploads/2017/07/OoPdfFormExample.pdf) and then save file

<!--
For bugs that can be encapsulated in a small experiment, you can use Electron Fiddle (https://github.com/electron/fiddle) to publish your example to a GitHub Gist and link it your bug report.
-->
```
mainWindow = new BrowserWindow({
  width: 1024,
  height: 768
});

mainWindow.loadURL(""https://campustecnologicoalgeciras.es/wp-content/uploads/2017/07/OoPdfFormExample.pdf"");
```

<!--
If Fiddle is insufficient to produce an example, please provide an example REPOSITORY that can be cloned and run. You can fork electron-quick-start (https://github.com/electron/electron-quick-start) and include a link to the branch with your changes.
-->

<!--
If you provide a URL, please list the commands required to clone/setup/run your repo e.g.
```sh
$ git clone $YOUR_URL -b $BRANCH
$ npm install
$ npm start || electron .
```
-->

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->
Clicking on ""With your changes"" will cause Electron to crash.
![example](https://user-images.githubusercontent.com/52538731/110100522-cb111380-7da2-11eb-8878-5cedf016e65a.png)
",codebytere,crash :boom:;bug :beetle:;platform/all;component/pdf-viewer;has-repro-comment;16-x-y;17-x-y,2022-01-14T12:16:06Z,2022-01-19T17:58:33Z,FastAuth,,FastAuth;codebytere,,codebytere,,jkleinsc,
electron/electron,32505,"[Bug]: serial.getPorts return empty even after setDevicePermissionHandler grants the permissions ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.0;15.3.5

### What operating system are you using?

macOS

### Operating System Version

12.1

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

According v16.0.0 release notes: 
Changed Web Serial to use ses.setDevicePermissionHandler to allow developers more control over Web Serial permissioning. #31324 (Also in 15)

I expect ```navigator.serial.getPorts().then(ports=>console.log(ports))``` return all serial port without call ```navigator.serial.requestPort()``` after setDevicePermissionHandler grant the permissions.
 
```
    mainWindow.webContents.session.setPermissionCheckHandler((webContents, permission, requestingOrigin, details) => {
        return true;
    });
    mainWindow.webContents.session.setDevicePermissionHandler((details) => {
        return true;
    });
```

I expect ```navigator.serial.getPorts()``` worked like ```navigator.hid.getDevices()``` worked without call ```navigator.hid.requestDevice()```.

### Actual Behavior

```navigator.serial.getPorts().then(ports=>console.log(ports))``` return empty without call ```navigator.serial.requestPort()``` 

### Testcase Gist URL
https://gist.github.com/d9de1c981ef830835c0e05931dc5f8f4

_No response_

### Additional Information

_No response_",jkleinsc,platform/macOS;bug :beetle:;15-x-y;16-x-y,2022-01-17T12:57:14Z,2022-01-31T19:04:46Z,belerweb,codebytere;jkleinsc;belerweb;MaxMaeder,belerweb;codebytere,,jkleinsc,,jkleinsc,
electron/electron,32516,"[Bug]: BrowserWindow size/bounds incorrect when dragging the window from a scaled display to a non-scaled display ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

Windows

### Operating System Version

Windows 10, verion 21H2

### What arch are you using?

x64

### Last Known Working Electron version

15.3.4

### Expected Behavior

The size set initially to the BrowserWindow shall be maintained after dragging the BrowserWindow from a scaled display to a non-scaled display

### Actual Behavior

###  The test environment includes two diplays:

1. The laptop display (primary) which is scaled with 125%
2. An extended regular display.

**Screenshots of the display settings page:**  

![image](https://user-images.githubusercontent.com/87860728/149904987-f611c719-6f78-4455-8ee6-7832c367f116.png)

![image](https://user-images.githubusercontent.com/87860728/149905145-03571771-b0a1-4d30-abb7-af5243630cb7.png)

<br>
<br>

### Steps to reproduce

The test application is the regular 'Electron Hello World' application.  
Additionally the application shows the BrowserWindow bounds.  

Start the test application.   
The BrowserWindow constructor sets the width to 800 and the height to 600.
```
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      preload: path.join(__dirname, 'preload.js')
    }
  })
```
The application shows up on the primary display as follows:  
![image](https://user-images.githubusercontent.com/87860728/149905837-8851b67c-2d79-40f7-a779-a4a915d72d88.png)

Drag the application onto the secondary display.   
The size gets now 25% larger (width is 1000, height is 750), which is wrong.  
![image](https://user-images.githubusercontent.com/87860728/149906027-63846ee7-e24f-4cd5-bcb6-2225b560ef21.png)

Further dragging the application between the two displays does not change the size anymore (it remains 1000 * 750).

### Testcase Gist URL

https://gist.github.com/272f5fa1ad5f363acfa1a753f87200ef

### Additional Information

_No response_",mlaurencin,platform/windows;bug :beetle:;component/BrowserWindow,2022-01-18T09:52:04Z,2022-03-22T21:17:52Z,limacheb,mlaurencin,limacheb;nornagon;dsanders11,,mlaurencin,,mlaurencin,
electron/electron,32520,"[Bug]: textarea emits mouse events when typing while hovered with a mouse cursor in a BrowserView ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

macOS

### Operating System Version

macOS Monterrey

### What arch are you using?

x64

### Last Known Working Electron version

Unknown, reproduces all the way back to Electron v12, potentially farther

### Expected Behavior

1. On a Mac, run the attached Gist
2. Using the Developer Tools, in the console type `monitorEvents(document.querySelectorAll('#post_textbox')[0])` and press Enter
3. Hover over the textarea with your mouse and, without moving the mouse, start typing
4. The console should log key and input events only

### Actual Behavior

The console seems to log a bunch of mouse events, such as `mouseout` and `mousemove`, when the mouse is completely stationary.

### Testcase Gist URL

https://gist.github.com/devinbinnie/06a7a7c42b8ad4d0eb5309075bc82b70

### Additional Information

This only seems to occur when the BrowserView's y-offset is set to something >~30-40. If you set the offset to 0, this doesn't seem to occur. I've got it to happen with as low as 20, but it seems less consistent.

On its own this doesn't seem to be a huge issue, but in our app (Mattermost) we were noticing it having very significant affect on performance, as React seems to fire listeners on those events and recalculate state/style causing a lot of performance issues.

I'm looking into solutions for the other issues as well but it would be nice to eliminate the root trigger of this.

Only seems to reproduce on macOS, not any other OSes.",codebytere,platform/macOS;bug :beetle:;component/BrowserView;status/confirmed;has-repro-gist;12-x-y;16-x-y;stale,2022-01-18T16:08:03Z,2022-11-24T02:08:30Z,devinbinnie,zcbenz;devinbinnie,devinbinnie;nornagon;zcbenz,,codebytere,,,
electron/electron,32534,"[Bug]: Adding BrowserView to minimized window does not paint it properly in some cases. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7, 17, 18

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 21H2 19044.1466

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

BrowserView painted properly. 

### Actual Behavior

BrowserView not painted (InspectableWebContents still has size 0,0 and no Layout triggered).

### Testcase Gist URL

https://gist.github.com/869603d80155513e09c895dd0b6ed9af

### Additional Information

This problem is similar to #29859.",codebytere,platform/windows;bug :beetle:;component/BrowserView;status/confirmed;has-repro-gist;16-x-y;17-x-y;stale,2022-01-19T10:16:48Z,2022-11-05T02:18:59Z,marekharanczyk,,marekharanczyk;VerteDinde;codebytere;dsanders11,,codebytere,,,
electron/electron,32582,"[Bug]: `requestSingleInstanceLock`'s TypeScript definition is incorrect ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

macOS

### Operating System Version

N/A

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

According to the documents, `requestSingleInstanceLock` should accept an optional argument `additionalData`. 

### Actual Behavior

The TypeScript definition doesn't have this argument.

![image](https://user-images.githubusercontent.com/24715727/150618850-f9390702-54a9-49cf-b3b4-7f371ea3aeb1.png)



### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,documentation :notebook:;bug :beetle:,2022-01-22T01:17:42Z,2022-01-25T20:57:58Z,ocavue,Vagnerweb21,ocavue;codebytere,,codebytere,,nornagon,
electron/electron,32633,"[Bug]: On Windows, Transparent Windows Don't Fire ""maximize""/""unmaximize"" Events ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0-beta.4

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

A transparent window should fire ""maximize"" and ""unmaximize"" events when maximized and unmaximized.

### Actual Behavior

Transparent windows do not fire ""maximize"" and ""unmaximize"" events.

### Testcase Gist URL

https://gist.github.com/1a157df991fe3e9bf34c9c2d50e1acf1

### Additional Information

This is a continuation of #23275, and #12854 before that, so it's a long-standing issue. Those issues have aged out, so opening this one to continue tracking the issue. I didn't see any open issues covering it.

`BrowserWindow.isMaximized()` works correctly for maximized transparent windows since #26586, so it's just the events which aren't firing.",codebytere,platform/windows;bug :beetle:;15-x-y;16-x-y;17-x-y,2022-01-26T20:19:01Z,2022-01-31T21:10:58Z,dsanders11,Ryan-Ashton;codebytere;theolivenbaum;dsanders11,dsanders11;nornagon;codebytere,,codebytere,,codebytere,
electron/electron,32642,"[Bug][macOS]: browser window dragging capability deactivated on browser view over drag region  ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.7

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.2.1

### What arch are you using?

x64

### Last Known Working Electron version

15.0.0

### Expected Behavior

Given a frameless browser window with provided html drag region, the browser window itself should be draggable despite any browser view attached

### Actual Behavior

Given a frameless browser window with provided html drag region, the dragging capability for the browser window is deactivated by a browser view attached exactly over the drag region 

(probably you'll see in the poc that sometimes it's draggable after you resized and dragged the ""always""-draggable window).

### Testcase Gist URL

https://github.com/b3ll00z/poc-undraggable-frameless

### To reproduce

```
$ git clone https://github.com/b3ll00z/poc-undraggable-frameless
$ cd poc-undraggable-frameless
$ npm install ; npm start
```


https://user-images.githubusercontent.com/16275841/151346663-0e976fd7-08b0-4ead-b9de-7fd058dd3570.mov

",codebytere,platform/macOS;status/wontfix 棣冩瘒;bug :beetle:;16-x-y,2022-01-27T10:57:35Z,2022-02-03T09:04:44Z,b3ll00z,codebytere,b3ll00z;codebytere,,codebytere,,codebytere,
electron/electron,32664,"Broke with upgrade: registering service workers on custom schemes This test started failing: protocol module protocol.registerSchemesAsPrivileged allowServiceWorkers should be able to register service worker for custom scheme

with https://github.com/electron/electron/pull/32419.",deepak1556,component/protocol;bug :beetle:;bug/regression :leftwards_arrow_with_hook:;upgrade-follow-up,2022-01-28T20:11:58Z,2022-05-23T07:42:37Z,nornagon,deepak1556,nornagon;dsanders11,,deepak1556,,deepak1556,
electron/electron,32696,"[Bug]: savePage no generated files  ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.0

### What operating system are you using?

Windows

### Operating System Version

WIN10 20H2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

 win.webContents.savePage('d:/aaaaaa.html', 'HTMLComplete').then(() => {
      console.log('Page was saved successfully.')
    }).catch(err => {
      console.log(err)
    })

it will generate a html page file at d: 

### Actual Behavior

savePage has three formats that can be used

if use HTMLComplete
 only produced a aaaaaa_files empty folder

if use HTMLonly 
No files are generated nor error callbacks are generated

MHTML option works fine

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/windows;bug :beetle:;16-x-y,2022-02-01T10:44:55Z,2022-02-07T08:52:00Z,fatwolf,codebytere;fatwolf,fatwolf;codebytere,,codebytere,,codebytere,
electron/electron,32746,"[Bug]: Devtools performance source navigation broken in Electron 17.0.0 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 20H2

### What arch are you using?

x64

### Last Known Working Electron version

16.0.8

### Expected Behavior

Take a performance snapshot with some amount of JS code executing. Click on a function block, and use the link in the summary tab below to navigate to the source code corresponding to that function.

Expected behavior is to have the devtools navigate from `Performance` tab to the `Sources` tab and scroll to the location where that line/col number in that file.

### Actual Behavior

Nothing happens. Devtools does not navigate from Performance to Sources.This happens regardless of whether the file has a sourcemap or not.

In addition, sourcemaps are also not respected and the raw (compiled/bundled) js file line/col is shown rather than the actual location of the mapped function position. In my case, it's showing ""app.js:1:xxxxxx"" rather than ""sourcefile.ts:xx:yy"".

Fortunately the sourcemap bug does not affect console logs, and console messages and exception traces are properly mapped.

Both issues are new since Electron 17.
Current workaround is to downgrade to 16.0.8.

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere;mlaurencin,platform/windows;platform/macOS;component/devtools;bug :beetle:;17-x-y;stale,2022-02-03T22:09:19Z,2022-10-17T20:23:43Z,lishid,Bartel-C8;lishid,lishid;erickzhao;mlaurencin,,codebytere,,codebytere,
electron/electron,32750,"[Bug]: webContents.print() crashes with a non-null callback ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [x] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 20H2

### What arch are you using?

x64

### Last Known Working Electron version

17.0.0-beta.2

### Expected Behavior

Calling webContents.print({}, () => {}) will not crash, and will show the system print dialog.

### Actual Behavior

The electron app crashes, even when the aforementioned print() call is encapsulated within a try-catch block.

### Testcase Gist URL

https://gist.github.com/1ab968669f64a7707306e876ab2ff5bc

### Additional Information

Looks pretty similar to #32276, though I'm not able to reproduce the crash in 16.0.5 as the author of that issue claims.

Calling the print() API and providing undefined or null as the callback parameter still shows the dialog, although canceling that print dialog will still result in a crash (as documented in #32684). It's also worth noting that when running in Electron Fiddle, both the print dialog cancellation crash and this new crash share the same error code (3221225477), so I'm wondering if they're related, and if the PR fixing the dialog cancellation crash (#32632) might fix this as well.",codebytere,bug :beetle:,2022-02-04T16:52:48Z,2022-02-07T09:47:10Z,mgalla10,pushkin-;acutus;codebytere,mgalla10,,codebytere,,codebytere,
electron/electron,32824,"PDF viewer broken when enabling PDF unseasoned feature ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

PDF viewer working with PDF unseasoned feature

### Actual Behavior

PDF viewer not working when chrome_pdf::features::kPdfUnseasoned enabled

### Testcase Gist URL

_No response_

### Additional Information

Background
Currently Chromium is in the process of migrating the PDF viewer off the Pepper API. Chrome is dropping support for Pepper (currently scheduled for June 2022). The PDF viewer is migrated  to alternative solution called PDF unseasoned (https://docs.google.com/document/d/1olIb-1IFVqP2fLTq0eAdW-aL-K2dDDZGDe5mZgHGfO8).
Problem
When enabling PDF unseasoned (by setting chrome_pdf::features::kPdfUnseasoned enabled by default) then the following occurs when opening a PDF: ""Failed to load PDF document"". Very soon Chromium is dropping pepper, which will cause PDF viewer to stop working. 
One of the issues we observed is freezing when trying to inject Node into the PDF frame. 
",codebytere,platform/windows;bug :beetle:;blocked/need-repro;18-x-y,2022-02-08T20:30:58Z,2022-05-11T12:49:48Z,daniel-koc,codebytere,daniel-koc;mlaurencin;codebytere,,codebytere,,codebytere,
electron/electron,32846,"[Bug]: offscreen render set background transparent does not work ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Version 21H1

### What arch are you using?

x64

### Last Known Working Electron version

14.2.3

### Expected Behavior

background should transparent if background is #00000000

### Actual Behavior

has a white background

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,bug :beetle:;component/offscreen;platform/all;has-repro-gist;16-x-y;17-x-y;18-x-y,2022-02-10T03:25:59Z,2022-02-23T10:33:43Z,c-liang,mlaurencin;c-liang;codebytere,c-liang;mlaurencin;codebytere,mlaurencin,codebytere,,zcbenz,
electron/electron,32880,"[Bug]: Devtools opened at bottom for browserView webcontents is not fully visible ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

13.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When devTools is opened with mode:""bottom"" , it should be able show view without hiding the bottom views. For eg. in network tab, user should able to scroll till last entry in the table and that should be clearly visible.

### Actual Behavior

![image](https://user-images.githubusercontent.com/12984605/153824335-a4374015-42f5-4e7a-b852-bc1d559b5ce9.png)
- Currently devTools for browserView webContents is not fully visible while trying to scroll at fullest. View is cutting from bottom for last few entries and view. Same happens with other dev tools tab.

### Testcase Gist URL

https://gist.github.com/b1238af9836d6c034c1ff4ec2e22564b

### Additional Information

_No response_",codebytere,platform/windows;platform/macOS;bug :beetle:;component/BrowserView;has-repro-gist;19-x-y;20-x-y,2022-02-14T08:14:26Z,2022-08-29T15:53:05Z,tushar-ghadge,mlaurencin;tushar-ghadge,tushar-ghadge;mlaurencin;codebytere,mlaurencin;codebytere,codebytere,,codebytere,
electron/electron,32891,"[Bug]: Using RTL system language causes view.setBounds() x value to start on the right ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When using an RTL (right-to-left) system language on Mac setting an x value for `view.setBounds()` starts on the left, not the right. To reproduce change your system language to Hebrew. (https://support.apple.com/en-ca/guide/mac-help/mh26684/mac)

<img width=""1197"" alt=""Screen Shot 2022-02-14 at 11 30 27 AM"" src=""https://user-images.githubusercontent.com/43253618/153933068-e29552ca-50f7-4841-a335-ab2f80b19521.png"">

### Actual Behavior

When using an RTL (right-to-left) system language on Windows setting an x value for `view.setBounds()` starts on the right instead of the left. This can be reproduced by changing your system language to Hebrew. (https://support.microsoft.com/en-us/windows/manage-display-language-settings-in-windows-219f28b0-9881-cd4c-75ca-dba919c52321#ID0EBD=Windows_10)

<img width=""888"" alt=""ElectronRTLSetBounds"" src=""https://user-images.githubusercontent.com/43253618/153932373-f46d72cc-7849-4e5a-8e4d-392bf5a1516c.png"">

### Testcase Gist URL

https://gist.github.com/nicolepeverley/14ef9ec9548dd9891a694e7d4c756db4

### Additional Information

Not sure if the expected behavior for RTL languages should have the x value start from the right, however it should be consistent across operating systems.",VerteDinde,platform/windows;bug :beetle:;status/confirmed;has-repro-gist;17-x-y;stale,2022-02-14T19:34:27Z,2022-11-05T02:18:33Z,nicolepeverley,VerteDinde,nicolepeverley;mlaurencin;VerteDinde,,VerteDinde,,,
electron/electron,32894,"[Bug]: Sometimes fullscreened window stays alive after being destroyed ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.0-nightly.20220209

### What operating system are you using?

macOS

### Operating System Version

macOS 11.6.3

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

After calling `destroy` on a BrowserWindow that was fullscreened (using the web api, not the window control), it should be completely destroyed.

### Actual Behavior

A blank window (hypothesized to be a `BaseWindow`) is *sometimes* left over. Not always, but often.

### Testcase Gist URL

https://gist.github.com/clavin/73be7c1b7dbce852861d3a0c0c4604bf

### Additional Information

Just to repeat, this bug doesn't happen every time, but for me reproduces basically all of the time. This is also coming up in part of our test suite currently.",codebytere,platform/macOS;bug :beetle:;component/fullscreen;status/confirmed;has-repro-gist,2022-02-14T22:12:34Z,2022-06-07T16:59:51Z,clavin,,clavin,,codebytere,,jkleinsc,
electron/electron,32898,"[Bug]:  setBackgroundColor does not work for window ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

Windows

### Operating System Version

window11, window10

### What arch are you using?

x64

### Last Known Working Electron version

x

### Expected Behavior

```
mainWindow.addBrowserView(view);
view.setBounds({
  width: 800,
  height: 600,
  x: 0,
  y: 0
})
  view.setBackgroundColor(""#FF000000"")
```
The background color needs to be black.


### Actual Behavior

The view's background color is not black.

### Testcase Gist URL

https://gist.github.com/yunjimmy/b1fd47ff8e23a38c079bf087f8cc3ba6

### Additional Information

In the case of MAC, the black view's background is black, but in the case of windows, it is not.",VerteDinde,platform/windows;bug :beetle:;component/BrowserView;has-repro-comment;17-x-y,2022-02-15T06:09:13Z,2022-03-24T14:12:41Z,wslp12,PranshVaishnav;yunjimmy;VerteDinde;codebytere,wslp12;mlaurencin;dsanders11,,VerteDinde,,codebytere,electron/electron#33374;
electron/electron,32899,"[Bug]: Frameless windows don't have OS's open/close/minimize/maximize animation ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 11 (21H2 build 22000.493)

### What arch are you using?

x64

### Last Known Working Electron version

17.0.0

### Expected Behavior

In 17.0.0, my frameless window would have the Windows 11 ""pop in"" and ""fade back"" animations when the app starts/exits

![17-0-0](https://user-images.githubusercontent.com/12619113/154007671-140a5f04-d84f-4fdb-b263-5d5a475db1a9.gif)

(I don't think the Windows Vista-looking frame that pops up matters. When I make the window wait to show until `dom-ready` that issue goes away, and that's how my actual application does it)

### Actual Behavior

As of 17.0.1 the frameless window instantly appears/disappears on start/exit (I'm pressing Alt+F4 to close the window in both gifs)

![17-0-1](https://user-images.githubusercontent.com/12619113/154007826-1b3bdbaa-a40c-4f8e-86e2-d3bd9cd481ec.gif)



### Testcase Gist URL

https://gist.github.com/jcv8000/c587ff1c069b0324ad5d9aecb633754f

### Additional Information

I uploaded the files in a gist, but all I had to do to test this was download the quick-start and add `frame: false` to the BrowserWindow options",codebytere,platform/windows;bug :beetle:;component/BrowserWindow;17-x-y,2022-02-15T06:55:25Z,2022-04-28T19:03:12Z,jcv8000,wheezard;LitileXueZha;jcv8000;rmill777,jcv8000;codebytere;dsanders11,,codebytere,,jcv8000,
electron/electron,32924,"[Bug]: SIGTRAP on webContents.print call ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

macOS

### Operating System Version

macOS 12.2.1 (M1)

### What arch are you using?

x64

### Last Known Working Electron version

16.0.8

### Expected Behavior

webContents.print should show print dialog.

### Actual Behavior

On webContents.print call debug console logs SIGTRAP. The application closes. 

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/macOS;component/printing;bug :beetle:;blocked/need-repro;17-x-y,2022-02-16T07:05:04Z,2022-02-24T22:25:02Z,bojanbizjak,codebytere;bojanbizjak,bojanbizjak;codebytere,,codebytere,,bojanbizjak,
electron/electron,32951,"[Bug]: `require('electron/package.json')` inside an electron process requires the `'electron'` module instead ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

Other (specify below)

### Operating System Version

all

### What arch are you using?

all

### Last Known Working Electron version

v9.4.4

### Expected Behavior

I would expect it to return the `package.json` file present inside the `electron` `node_modules` directory.

### Actual Behavior

It requires the `'electron'` module instead.

### Testcase Gist URL

https://gist.github.com/RaisinTen/dfe8c9ccc8345c656dcf0d21825c4b7f

### Additional Information

* Calling `require('electron/package.json')` in a Node.js process (`node` as well as `ELECTRON_RUN_AS_NODE=1 electron`) correctly requires the `package.json` file present inside the `electron` `node_modules` directory.
* Appending any characters after `'electron/'` and passing it to `require()` would require the `'electron'` module.",codebytere,bug :beetle:;component/node-integration;17-x-y,2022-02-17T10:05:30Z,2022-02-17T10:59:09Z,RaisinTen,MarshallOfSound;RaisinTen,RaisinTen;codebytere,,codebytere,,MarshallOfSound,
electron/electron,32955,"[Bug]: Frameless BrowserWindow that is not resizable has no shadow ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 19042.985

### What arch are you using?

x64

### Last Known Working Electron version

17.0.0

### Expected Behavior

Frameless window should have shadow

### Actual Behavior

The window has no shadow

```
const { app, BrowserWindow } = require( ""electron"" )
app.whenReady().then(()=>{
	let main = new BrowserWindow({
		""height"" : 600,
		""width"" : 800,
		x: 100,
		y: 100,
		show: true,
		frame: false,
		resizable: false,
	});
})
```

### Testcase Gist URL

_No response_

### Additional Information

This broke with 17.0.1, quite likely with: https://github.com/electron/electron/pull/32692",mlaurencin,platform/windows;bug :beetle:;component/BrowserWindow;has-repro-comment;17-x-y;18-x-y,2022-02-17T13:41:20Z,2022-05-05T14:00:22Z,t57ser,t57ser,t57ser;mlaurencin;dsanders11,,VerteDinde,,t57ser,
electron/electron,32995,"[Bug]: unable to resize height when maxWidth set ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

macOS

### Operating System Version

12.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

16.0.9

### Expected Behavior

When setting `maxWidth` but not a `maxHeight`, I expect the window to resizable in the y direction.

### Actual Behavior

Unable to resize window in y direction. Also, removing `minWidth` to allow window to shrink, causes stuttering and mac's beach-ball cursor to show.

### Testcase Gist URL

https://gist.github.com/eab3c4ec605b8b942cece3d05e7f749c

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;17-x-y,2022-02-20T07:47:52Z,2022-03-01T22:20:08Z,will-stone,will-stone,will-stone;codebytere,,codebytere,,codebytere,
electron/electron,33008,"[Bug]: electron17 tray.setPressedImage invalid ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

macOS

### Operating System Version

Big Sur 11.2.3

### What arch are you using?

x64

### Last Known Working Electron version

2.0.7

### Expected Behavior

Click the tray menu to change icons

### Actual Behavior

No change on tray icon click

### Testcase Gist URL

_No response_

### Additional Information

```
function buildTray() {
    let icon = null
    let iconDark = null
    if (process.platform == 'darwin') {
        let { nativeTheme } = require('electron')
        let iconLight = nativeImage.createFromPath(path.resolve(__dirname, '../assets/img/light/icon_light.png'))
        iconDark = nativeImage.createFromPath(path.resolve(__dirname, '../assets/img/dark/icon_dark.png'))
        if (nativeTheme.shouldUseDarkColors) {
            //dark
            icon = iconDark
            console.log(""dark"")
        } else {
            //light
            icon = iconLight
            console.log(""light"")
        }
    } else {
        icon = nativeImage.createFromPath(path.resolve(__dirname, '../assets/img/icon_win.png'));
    }
    if (null == tray) {
        tray = new Tray(icon)
    } else {
        tray.setImage(icon)
    }
    if (process.platform == 'darwin') {
        console.log(""setPressedImage.iconDark"")
        tray.setPressedImage(iconDark)
    }
}
```",codebytere,platform/macOS;component/tray;bug :beetle:;has-repro-gist;17-x-y,2022-02-21T03:07:33Z,2022-02-28T22:59:27Z,he-jialin,codebytere;he-jialin,he-jialin;codebytere,codebytere,codebytere,,codebytere,
electron/electron,33102,"[Bug]: DevTools shortcut settings do not persist ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.0-nightly.20220209

### What operating system are you using?

Windows

### Operating System Version

10.0.19043 Build 19043

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

1. Open DevTools->Settings->Shortcuts
2. Change ""Match shortcuts from preset"" to ""Visual Studio Code""
3. Close devtools and reopen
4. Shortcut setting remains last selected value

### Actual Behavior

1. Open DevTools->Settings->Shortcuts
2. Change ""Match shortcuts from preset"" to ""Visual Studio Code""
3. Close devtools and reopen
4. Shortcut setting reverts to default

### Testcase Gist URL

_No response_

### Additional Information

Seems like it could be related to #31864",codebytere,component/devtools;bug :beetle:;platform/all;17-x-y;18-x-y,2022-02-28T15:05:48Z,2022-03-09T01:17:44Z,rconde01,,rconde01;codebytere,,codebytere,,jkleinsc,
electron/electron,33111,"[Bug]: Web Bluetooth PIN pairing fails on Windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 1909

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When pairing a device using the Web Bluetooth API that requires a PIN, I expect the PIN pairing dialog box to appear. 

### Actual Behavior

PIN pairing dialog box does not appear, and operation fails with ""GATT error: Not paired.""

### Testcase Gist URL

_No response_

### Additional Information

Web Bluetooth PIN pairing has always worked on MacOS, but there was a Chromium bug that [prevented it from working on Windows](https://bugs.chromium.org/p/chromium/issues/detail?id=960258). This bug has since been fixed, at least since Chromium v96.0.4664.110. ",jkleinsc,platform/windows;bug :beetle:;component/bluetooth;17-x-y,2022-03-01T11:47:41Z,2022-09-26T14:20:00Z,gniezen,gniezen;jkleinsc,gniezen;dsanders11,,jkleinsc,,jkleinsc,
electron/electron,33164,"[Bug]: Blank page on location change / reload if a filesystem asynchronous call was pending ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.1.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 21H2

### What arch are you using?

x64

### Last Known Working Electron version

13.6.9

### Expected Behavior

Assuming a BrowserWindow like this:

```
const mainWindow = new BrowserWindow({
    ...
    webPreferences: {
        nodeIntegration: true,
        contextIsolation: false,
    }
})
```

And an asynchronous filesystem call on `fs.promises` API

```
// renderer.js
const fs = require('fs');
async function asyncStuff() {
    let output = await fs.promises.readFile(""datafile"");
}
```

Then trying to reload the page when the fs asynchronous call is not finished yet will make the page fail (blank page).

```
// renderer.js
async function testCrash() {
    asyncStuff() // No await here
    window.location.reload() // Here the renderer will crash
})
```

I expect that the page reloads correctly.


### Actual Behavior

The page is blank, and DevTools are disconnected.

### Testcase Gist URL

_No response_

### Additional Information

Notes:
* Replace the `fs.promises.readFile()` by `fs.readFileSync()` and the page will reload fine
* Replace the `fs.promises.readFile()` by `fs.readFile() with callback` and the page will reload fine
* The bug is here also with a `window.location.href`
* I tried with other async api and the page works fine (like `https.get()`, `timers.promises.setTimeout()`, or `fetch()`)

I created a repo to reproduce the bug: https://github.com/remss/electron-issue-reload
Just run `npm i && npm start` then click on `reloadMeWithAsyncStuff` button to see the blank page.",codebytere,bug :beetle:;platform/all;status/confirmed;has-repro-gist;17-x-y,2022-03-07T14:31:24Z,2022-03-16T17:54:45Z,remss,DanielMcAssey;codebytere;deepak1556;remss;liangwenzhong,remss;codebytere,,codebytere,,jkleinsc,
electron/electron,33229,"[Bug]: current pywin32 win build directions don't make sense for depot_tools python ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

main

### What operating system are you using?

Windows

### Operating System Version

win10 21h2

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

python prereqs used to be:

- Contrary to the depot_tools setup instructions linked below, you will need to use your locally installed Python with at least version 2.7.10 (with support for TLS 1.2). To do so, make sure that in PATH, your locally installed Python comes before the depot_tools folder. Right now depot_tools still comes with Python 2.7.6, which will cause the gclient command to fail (see https://crbug.com/868864).
- [Python for Windows (pywin32) Extensions](https://pypi.org/project/pywin32/#files) is also needed in order to run the build process.

The first part has been removed so presumably one is expected to use depot_tools python now. But it doesn't have pip

### Actual Behavior

- Which python are you supposed to use, depot_tools or own?
- Is pywin32 still needed?
  - For which part of the build?
  - if so, how do you install it into depot_tools

### Testcase Gist URL

_No response_

### Additional Information

_No response_",dsanders11,documentation :notebook:;bug :beetle:;component/build,2022-03-10T22:37:29Z,2022-03-24T13:09:13Z,bughit,bughit;dsanders11;pranay101,bughit;dsanders11,,dsanders11,,jkleinsc,
electron/electron,33326,"[Bug]: BrowserWindow.getFocusedWindow crash: Cannot read properties of null (reading 'isDevToolsFocused') ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.1.0, at least back to 12.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

A function like `BrowserWindow.getFocusedWindow()` shouldn't crash if a window is destroyed.

### Actual Behavior

`BrowserWindow.getFocusedWindow()` sometimes crashes

### Testcase Gist URL
https://gist.github.com/d7433e132a56679832f37a9446d4530c

### Additional Information

Stack:
```
TypeError: Cannot read properties of null (reading 'isDevToolsFocused')
at BrowserWindow.n.isDevToolsFocused (node:electron/js2c/browser_init:33:2385)
at Function.n.getFocusedWindow (node:electron/js2c/browser_init:33:1508)
```

Should we have some `isDestroyed()` check here:

https://github.com/electron/electron/blob/44491b023ac2653538b7ac36bb73f3085a938666/lib/browser/api/browser-window.ts#L73-L78

Another option is for `getAllWindows()` to stop returning the destroyed window? (or I guess all we really know is that the window doesn't have a `webContents`).

1. Run the gist above
2. click the open window button (this will open a window and then create a second one that's a child of the first)
3. click the destroy window button
4. Observe the crash popup

So specific to cases where a parent window is closed, and the child window's `closed` handler is calling `BrowserWindow.getFocusedWindow()`",codebytere,platform/windows;bug :beetle:;component/BrowserWindow;16-x-y;17-x-y,2022-03-17T20:38:04Z,2022-03-29T16:22:58Z,pushkin-,pushkin-;codebytere,pushkin-;codebytere,,codebytere,,jkleinsc,
electron/electron,33329,"[Bug]: Full Height BrowserWindow Unmaximizes to Bottom Left of Screen ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.0-nightly.20220317

### What operating system are you using?

macOS

### Operating System Version

macOS 12.2.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

None

### Expected Behavior

A `BrowserWindow` created with full screen height either shouldn't unmaximize, or should unmaximize to a reasonable size.

### Actual Behavior

A `BrowserWindow` created with full screen height unmaximizes down to the bottom left corner of the screen and size 1x29.

### Testcase Gist URL

https://gist.github.com/098b4bd24638518f9c973ff144b8dd79

### Additional Information

So far only tested on macOS.",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;14-x-y;main;15-x-y;16-x-y;17-x-y;18-x-y,2022-03-18T05:50:39Z,2022-03-30T22:29:03Z,dsanders11,dsanders11,dsanders11,,codebytere,,codebytere,
electron/electron,33374,"[Bug]: BrowserView setBackgroundColor does not work on windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

16.0.3

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 1803

### What arch are you using?

x64

### Last Known Working Electron version

16.0.3

### Expected Behavior

view.setBackgroundColor(""#FF000000"")

### Actual Behavior

The background color is transparent

### Testcase Gist URL

_No response_

### Additional Information

MacOS is work
Windows is not work.",codebytere,platform/windows;bug :beetle:;16-x-y,2022-03-22T05:39:19Z,2022-03-28T16:47:08Z,niktan,codebytere;Mad-hu;pushkin-,niktan;codebytere,codebytere,codebytere,,jkleinsc,
electron/electron,33516,"[Bug]: Click events are not received by BrowserView ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.0.0

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey

### What arch are you using?

x64

### Last Known Working Electron version

Does not work on any version

### Expected Behavior

A BrowserView that appears behind the cursor should be able to receive click events immediately.

### Actual Behavior

If the BrowserView is moved behind the cursor it will not receive click events for the first 閳700ms.

In the example below there are two BrowserViews that swap positions on click. If we click at 1-second intervals it works as expected, but if we click quickly BrowserViews stops receiving click events and therefore positions are not swapped.

https://user-images.githubusercontent.com/16005795/160803794-ba36a057-2f9c-417a-9779-d5f5522425e0.mp4

Events are received only in two scenarios:
1. If we wait for around 閳700ms.
2. If we move the cursor at least by 1 px (see video below) 

https://user-images.githubusercontent.com/16005795/160806040-51d3acb0-ffd6-41cd-b16a-c35ea26af5e5.mp4

 

### Testcase Gist URL

https://gist.github.com/shakogegia/d125c18156ab3f8bbb0efeac3efe2f37

### Additional Information

This behavior appears ONLY on macOS. On Windows, events are received immediately.
",codebytere,platform/macOS;bug :beetle:;component/BrowserView;17-x-y;stale,2022-03-30T10:53:33Z,2022-11-05T02:17:39Z,zikosichi,,zikosichi;codebytere,,codebytere,,,
electron/electron,33519,"[Bug]: Embedded PDF not displaying ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.0

### What operating system are you using?

macOS

### Operating System Version

MacOS 12.3

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

PDF File should be displayed just like when opening the page in Chrome browser.

### Actual Behavior

The PDF file isn't displayed in the Embed.
Screenshot:
![Bildschirmfoto 2022-03-30 um 16 04 47](https://user-images.githubusercontent.com/40733092/160853634-a903d3b1-c11d-4b93-84ae-64af05e17ec9.png)
=> Error loading PDF document. 

### Testcase Gist URL

_No response_

### Additional Information

I use this html for displaying it:
`<embed type=""application/pdf"" src=""https://....."" style=""width: 100%; height: 30rem;"">`
The document URL in here is a Blob URL with a PDF fetched from an internal API.

The window is loaded using this code:
```
const { app, BrowserWindow } = require('electron')
const createWindow = () => {
    const win = new BrowserWindow({
        width: 1400,
        height: 800,
        webPreferences: {
            plugins: true
        }
    })

    win.loadURL(""https://127.0.0.1:8000/app"")
}

app.whenReady().then(() => {
    createWindow()
})
```",codebytere,platform/macOS;bug :beetle:;component/pdf-viewer;18-x-y;19-x-y,2022-03-30T14:09:45Z,2022-05-11T16:45:43Z,jannis6023,codebytere;lishid;sofianguy;george-thomas-hill,jannis6023;codebytere;mlaurencin,,codebytere,,sofianguy,
electron/electron,33533,"[Bug]: 18.0.0 cannot start on Ubuntu 20 aarch64 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.0

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 18.04.6 LTS

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

17.0.0

### Expected Behavior

Starting any Electron app does not immediately fail.
""ldd electron"" doesn't show errors.


### Actual Behavior

% ldd electron
electron: /usr/lib/aarch64-linux-gnu/libxkbcommon.so.0: version `V_1.0.0' not found (required by ./electron)


### Testcase Gist URL

_No response_

### Additional Information

Appears to be this chromium bug:
[https://bugs.chromium.org/p/chromium/issues/detail?id=1302542](https://bugs.chromium.org/p/chromium/issues/detail?id=1302542)",zcbenz,platform/linux;bug :beetle:;18-x-y,2022-03-31T00:14:07Z,2022-05-11T18:48:52Z,klossner,Marton6;sohobloo;theofficialgman;MarshallOfSound,klossner;zcbenz,,zcbenz,,MarshallOfSound,
electron/electron,33632,"[Bug]: Name = nil is a valid input for NSDistributedNotificationCenter on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18

### What operating system are you using?

macOS

### Operating System Version

Mojave

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

https://developer.apple.com/documentation/foundation/nsdistributednotificationcenter/1414136-addobserver
notificationName: _""When nil, the notification center doesn閳ユ獩 use a notification閳ユ獨 name to decide whether to deliver it to the observer.""_

Get a running list of all notifications from macOS (no name filter):

```
[com.resilio.Sync.FeOnExtPingAliveNotifiaction]
[com.apple.backup.exclusionschanged]
[com.resilio.Sync.FeOnExtPingAliveNotifiaction]
[com.apple.backup.prefschanged]
[com.resilio.Sync.FeOnExtPingAliveNotifiaction]
[com.resilio.Sync.FeOnExtPingAliveNotifiaction]
[com.resilio.Sync.FeOnExtPingAliveNotifiaction]

```

### 

### Actual Behavior

Throws an error.

`> node-nsdnc@1.0.0 start
> electron .

App threw an error during load
TypeError: Error processing argument at index 0, conversion failure from null
    at Object.<anonymous> (/node-electron-NSDNC.git/main.js:6:29)
    at Module._compile (node:internal/modules/cjs/loader:1116:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1169:10)
    at Module.load (node:internal/modules/cjs/loader:988:32)
    at Module._load (node:internal/modules/cjs/loader:829:12)
    at Function.c._load (node:electron/js2c/asar_bundle:5:13343)
    at loadApplicationPackage (/node-electron-NSDNC.git/node_modules/electron/dist/Electron.app/Contents/Resources/default_app.asar/main.js:110:16)
    at Object.<anonymous> (/node-electron-NSDNC.git/node_modules/electron/dist/Electron.app/Contents/Resources/default_app.asar/main.js:222:9)
    at Module._compile (node:internal/modules/cjs/loader:1116:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1169:10)


### Testcase Gist URL

https://gist.github.com/knev/0cd2a52a0aebe8e35904641df47f60d7

### Additional Information

Electron file: `shell/browser/api/electron_api_system_preferences_mac.mm`

It is obvious that `SysUTF8ToNSString(name)` will throw an error when name is `nil`. `nil` is a valid input.

```
int SystemPreferences::DoSubscribeNotification(
    const std::string& name,
    const NotificationCallback& callback,
    NotificationCenterKind kind) {
  int request_id = g_next_id++;
  __block NotificationCallback copied_callback = callback;

  g_id_map[request_id] = [GetNotificationCenter(kind)
      addObserverForName:base::SysUTF8ToNSString(name)
                  object:nil
                   queue:nil
              usingBlock:^(NSNotification* notification) {
                std::string object = """";
                if ([notification.object isKindOfClass:[NSString class]]) {
                  object = base::SysNSStringToUTF8(notification.object);
                }

                if (notification.userInfo) {
                  copied_callback.Run(
                      base::SysNSStringToUTF8(notification.name),
                      NSDictionaryToDictionaryValue(notification.userInfo),
                      object);
                } else {
                  copied_callback.Run(
                      base::SysNSStringToUTF8(notification.name),
                      base::DictionaryValue(), object);
                }
              }];
  return request_id;
}
```",codebytere,platform/macOS;bug :beetle:;component/system-preferences;18-x-y,2022-04-06T08:01:21Z,2022-04-13T20:02:34Z,knev,,knev;codebytere,,codebytere,,codebytere,
electron/electron,33640,"[Bug]: safeStorage.isEncryptionAvailable() returns false in Windows ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.1.0 and 18.0.2

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Version 21H1

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

According to the safeStorage module documentation (https://www.electronjs.org/docs/latest/api/safe-storage) `safeStorage.isEncryptionAvailable()` should return `true` ""with no other preconditions.""

### Actual Behavior

I have been working on an Electron app in Electron v17.1.0. `safeStorage.isEncryptionAvailable()` returns `false` in my tests, so I have been unable to use the safeStorage module.

To ensure that it wasn't something about my application (which I don't have any reason to believe), I created a new Electron project following the latest quick start guide (https://www.electronjs.org/docs/latest/tutorial/quick-start) using Electron v18.0.2. Still, `safeStorage.isEncryptionAvailable()` returns `false`. 

If I try `safeStorage.encryptString(""hello"");` I get this error on `npm start`

```
App threw an error during load
Error: Error while decrypting the ciphertext provided to safeStorage.decryptString. Encryption is not available.
    at Object.<anonymous> (C:\Users\...\Node Projects\!projects\electron-quick-start\test-safeStorage.js:4:13)
    at Module._compile (node:internal/modules/cjs/loader:1116:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1169:10)
    at Module.load (node:internal/modules/cjs/loader:988:32)
    at Module._load (node:internal/modules/cjs/loader:829:12)
    at Function.c._load (node:electron/js2c/asar_bundle:5:13343)
    at Module.require (node:internal/modules/cjs/loader:1012:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (C:\Users\...\Node Projects\!projects\electron-quick-start\main.js:48:1)
    at Module._compile (node:internal/modules/cjs/loader:1116:14)
```

Here are the entire contents of my `test-safeStorage.js` module:

```
const { safeStorage } = require(""electron"");

console.log(safeStorage.isEncryptionAvailable());
safeStorage.encryptString(""hello"");
```
Which I am simply requiring in `main.js` with `require(""./test-safeStorage.js"");`


### Testcase Gist URL

_No response_

### Additional Information

Could it be something about my Windows config that is causing this?

I have tried running `npm start` from both unprivileged PowerShell sessions and PowerShell sessions with administrative rights.",codebytere,platform/windows;bug :beetle:;17-x-y;18-x-y;component/safestorage,2022-04-06T17:55:46Z,2022-04-12T19:47:16Z,jellygatorade,ganthern;jellygatorade;RaisinTen;codebytere;MarshallOfSound;Slapbox,jellygatorade;codebytere,,codebytere,,VerteDinde,
electron/electron,33721,"[Bug]: After entering and exiting Fullscreen, pressing [Esc] no longer works ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.3

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

18.0.0

### Expected Behavior

After entering and exiting fullscreen from an iframe and then focusing the parent page, <kbd>Escape</kbd> key events should be delivered to the parent page.

### Actual Behavior

<kbd>Escape</kbd> key events seem not to be delivered to the page after exiting fullscreen.

https://user-images.githubusercontent.com/172800/162848678-c067d18a-e323-49ea-a6b3-f1526149cad1.mp4




### Testcase Gist URL

https://gist.github.com/bc382eeeb368b70fbed1e177bcaacfde

### Additional Information

This only reproduces on Windows, not on macOS.

Also, this only reproduces when _clicking_ the ""exit fullscreen"" button in the YouTube embed. Pressing <kbd>Esc</kbd> to exit fullscreen allows the parent page to receive subsequent key events.

18.0.0 - not reproducible
18.0.1 - reproducible
18.0.2 - reproducible
18.0.3 - reproducible

This seems likely to be related to https://github.com/electron/electron/pull/32369. cc @codebytere ",codebytere,platform/windows;bug :beetle:;18-x-y,2022-04-11T23:32:00Z,2022-04-14T10:35:36Z,nornagon,,nornagon;codebytere,,codebytere,,codebytere,
electron/electron,33764,"[Bug]: Transparent WCO titlebar gets stuck in hover state ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.3

### What operating system are you using?

Windows

### Operating System Version

Windows 11

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

The titlebar should work the same way if its color is set to transparent.

### Actual Behavior

Set the titlebar color to transparent like so:

```
    titleBarOverlay: {
      symbolColor: ""black"",
      color: ""rgba(0,0,0,0)""
    }
```  

While the bar is initially transparent, hovering over the controls with the mouse causes their background colors to remain in their hover state.

It is possible to get all three stuck controls in that state:

![image](https://user-images.githubusercontent.com/7342119/163211773-87cdc810-d720-451f-9d02-f458ee653c6d.png)


### Testcase Gist URL

https://gist.github.com/54bd745a5bce7c2a716e57008b20cd53

### Additional Information

_No response_",mlaurencin,platform/windows;bug :beetle:;has-repro-gist;18-x-y;19-x-y,2022-04-13T15:09:34Z,2022-06-06T20:30:43Z,mitchchn,SquitchYT;mlaurencin;panther7,mitchchn;mlaurencin,,mlaurencin,,mlaurencin,
electron/electron,33810,"[Bug]: --ozone-platform-hint command line flag ignored ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.3

### What operating system are you using?

Other Linux

### Operating System Version

Arch Linux

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Setting the `--ozone-platform-hint` flag to `auto` or `wayland` should make electron use wayland (assuming `--enable-features=UseOzonePlatform` is also set)

### Actual Behavior

The flag is ignored.

### Testcase Gist URL

_No response_

### Additional Information

Using `--ozone-platform=wayland` does work, but then it fails when not running wayland.",ckerr,bug :beetle:;18-x-y;19-x-y,2022-04-17T16:33:59Z,2022-07-21T08:37:56Z,baltitenger,bacteriostat;MarshallOfSound,baltitenger;mlaurencin,,ckerr,,codebytere,
electron/electron,33844,"[Bug]: File Selection Dialog Filter Issue on Linux ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.4

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.0.4

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

File Selection Dialog should show files with the filtered extension, with no need for case match.

### Example:

`*.Foo` files should show up if we set filters for `[{name: 'Foo Files', extensions: ['Foo']}]` or even ``[{name: 'Foo Files', extensions: ['foo']}]`.

### Actual Behavior

File Selection Dialog does not show any files if the Filter contains a mixed case extension string.

### Example:

`*.Foo` files do not show up if we set filters for `[{name: 'Foo Files', extensions: ['Foo']}]` or even ``[{name: 'Foo Files', extensions: ['foo']}]` and any case match setup.

### Testcase Gist URL

https://gist.github.com/047baebf59014c18491c4efdfb75a5f8

### Additional Information

The issue probably come from this [function](https://github.com/electron/electron/blob/main/shell/browser/ui/file_dialog_gtk.cc#L250-L266)  (https://github.com/electron/electron/blob/main/shell/browser/ui/file_dialog_gtk.cc#L250-L266)  that seems to only check for lowercased or uppercased extensions. 

### Example:

`[{name: 'Foo Files', extensions: ['Foo']}]` will only show `*.foo` or `*.FOO` files.

### Gist
In the provided gist, it will ask you to add a `aim-file.Js` file. Please add it. Then run the fiddle. It will open a File Selection Dialog and will not show the `aim-file.Js`. If you change the file type to `All`, that file will show up.",ckerr,platform/linux;bug :beetle:;has-repro-gist;18-x-y;19-x-y,2022-04-20T03:22:37Z,2022-05-02T15:54:17Z,matheustavaresdev,matheustavaresdev,matheustavaresdev;mlaurencin,,ckerr,,jkleinsc,
electron/electron,33846,"[Bug]: Renderer process crash on reload from node usage in preload script ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.4

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur 11.6

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Renderer process should not crash when preload script loads node library

### Actual Behavior

Renderer process crashes on reload when preload script loads a library which accesses some Node APIs

### Testcase Gist URL

_No response_

### Additional Information

The following lines in a preload script cause the renderer process to crash, but only on reload.

```
const { LAMPORTS_PER_SOL } = require('@solana/web3.js');
console.log(LAMPORTS_PER_SOL)
```

Attached in a minimum reproduction. 

When initially loading the page, there is no issue. But upon  View > Reload the renderer process crashes.

<img width=""925"" alt=""Screen Shot 2022-04-20 at 12 37 46 PM"" src=""https://user-images.githubusercontent.com/3580270/164215786-d2880282-975d-464a-ade2-1ab9ff684b42.png"">


[electron-crash-test.zip](https://github.com/electron/electron/files/8520770/electron-crash-test.zip)


Normally, in the browser I use this library with the help of [node-polyfill-webpack-plugin](https://www.npmjs.com/package/node-polyfill-webpack-plugin), but given that preload script should be able to access Node APIs this shouldnt be crashing the renderer process, especially since the initial load works.


",ckerr,bug :beetle:;blocked/need-repro,2022-04-20T10:48:57Z,2022-05-23T13:13:02Z,parliament718,VerteDinde;astoilkov;codebytere,parliament718;VerteDinde,,ckerr,,codebytere,
electron/electron,33897,"[Bug]: setSize on BrowserWindow during will-resize is applied on mouse-up and not immediately ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.4.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro 21H2

### What arch are you using?

ia32

### Last Known Working Electron version

17.3.1

### Expected Behavior

When calling the setSize on a browser window in the main process during the will-resize event, the width and height should be applied immediately in combination with the preventDefault on the event.


### Actual Behavior

When calling the setSize on a browser window in the main process during the will-resize event, the width and height isn't set immediately anymore in combination with the preventDefault on the event. When you resize the window and during will-resize event you set the size of the window (for e.g. handling minimal width and minimal height), the new size isn't affective immediately. The size is applied when you stop resizing by a mouse up. With Electron version 17.3.1 and lower the setSize worked fine during will-resize event.

### Testcase Gist URL

https://gist.github.com/ccc3e3fa4f724b5d717d9fc8f9c8dfe2

### Additional Information

I suspect that the new behavior is caused by the following PR:

https://github.com/electron/electron/pull/33288

My application has some behavior implemented for controlling the minimal width and height in combination with the zoom factor. This is now broken and resizing freezes the resizing when the minimal width or height is reached. The setSize I use to continue resizing for the width/height where the limit isn't reached yet. It looks like the new behavior in Electron 17.4.0 is delaying the setSize until resize is done which breaks the behavior of my application.",codebytere,platform/windows;bug :beetle:;has-repro-gist;17-x-y,2022-04-22T10:12:41Z,2022-05-19T08:03:02Z,WilfredC64,mlaurencin;WilfredC64;meredith-ciq;codebytere,WilfredC64;mlaurencin,mlaurencin,codebytere,,codebytere,
electron/electron,34047,"[Bug]: offscreen rendering doesn't render clicked INPUT SELECT dropdown ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.1.0

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Offscreen rendering paint events should receive events for SELECT input elements.

### Actual Behavior

Sometimes an empty white box appears, or nothing happens.

### Testcase Gist URL

https://gist.github.com/gtalusan/c0ad56685aeb3b2c1108fbccf6b451b4

### Additional Information

Here's a screenshot when the fiddle is run with `offscreen = false`:

<img width=""760"" alt=""Screen Shot 2022-05-03 at 9 54 42 AM"" src=""https://user-images.githubusercontent.com/355585/166471227-1e0e27b0-cc8b-4c8e-94e5-a4261e2437b6.png"">

Here are the paint event images saved to PNGs when `offscreen = true`:
![0](https://user-images.githubusercontent.com/355585/166471435-209960eb-27e2-47f1-a758-1760a052f3d1.png)
![1](https://user-images.githubusercontent.com/355585/166471445-269fab98-f046-43d4-b72a-65a49c5bc067.png)

",codebytere,bug :beetle:;component/offscreen;platform/all;has-repro-gist;18-x-y;19-x-y,2022-05-03T14:23:00Z,2022-05-05T13:53:39Z,gtalusan,gtalusan,gtalusan;codebytere,,codebytere,,jkleinsc,
electron/electron,34118,"[bug, linux] crash on start `undefined symbol: gtk_native_dialog_get_type` ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.1.0, nightly v20-20220418 and newer

### What operating system are you using?

Ubuntu

### Operating System Version

repro on 16.04, no repro on 22.04, other versions unknown

### What arch are you using?

x64

### Last Known Working Electron version

18.0.3, nightly v20-20220415 and older

### Expected Behavior

Electron starts.

### Actual Behavior

Electron crashes on startup:
<img width=""1696"" alt=""image"" src=""https://user-images.githubusercontent.com/8472721/167078330-76bf7b1f-2ca2-4e1a-b244-c384948f7e0c.png"">


### Testcase Gist URL

No fiddle needed, just try to run an affected version.

### Additional Information

Likely caused by #33650. Can we fix the fix 棣冩? Since this got backported, it affects 18, 19 and 20 now.

cc @deepak1556 @miniak  ",deepak1556,platform/linux;crash :boom:;bug :beetle:;status/confirmed;has-repro-comment;18-x-y;19-x-y,2022-05-06T06:28:32Z,2022-05-09T20:37:51Z,deermichel,scottnonnenberg-signal,deermichel,,deepak1556,,MarshallOfSound,
electron/electron,34129,"[Bug]: WCO on Windows occludes dev tools ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.4.1

### What operating system are you using?

Windows

### Operating System Version

Windows 11

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Using WCO and frameless windows on Windows, the WCO does not occlude the top right corner of the dev tools when they are placed on the right side.

### Actual Behavior

Using WCO and frameless windows on Windows, the WCO occludes the top right corner of the dev tools when they are placed on the right side.

### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/windows;bug :beetle:;status/confirmed;17-x-y;18-x-y;19-x-y,2022-05-06T21:42:03Z,2022-08-11T13:16:14Z,sbatten,codebytere;sbatten;clavin;panther7,sbatten;codebytere;clavin,codebytere,codebytere,,codebytere,
electron/electron,34137,"[Bug]: Crash on Windows when calling `win.setTitleBarOverlay` on a window that has `titleBarStyle != 'hidden'` ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 20H2, build 19042

### What arch are you using?

x64

### Last Known Working Electron version

18.1.0

### Expected Behavior

When `win.setTitleBarOverlay` is called, apparently the only valid option for `titleBarStyle` is `'hidden'`. So when `win` was created with `titleBarStyle` different from `'hidden'`, Electron should throw an error.

### Actual Behavior

Electron crashes unexpectedly.

### Testcase Gist URL

https://gist.github.com/wheezard/207499979a7fda8cc7d874fdb87886fc

### Additional Information

This might work on older versions, but I haven't tested it in them.",codebytere,crash :boom:;bug :beetle:;18-x-y,2022-05-08T18:34:46Z,2022-05-17T15:50:27Z,wheezard,,wheezard;codebytere,,codebytere,,jkleinsc,
electron/electron,34152,"[Bug]: Non-default window dispositions fail to load initial URL ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.1

### What operating system are you using?

- Windows
- macOS

### Operating System Version

- Windows 10 21H2
- macOS 12.3.1

### What arch are you using?

x64

### Last Known Working Electron version

17.4.3

### Expected Behavior

`Shift+LeftClick` (new-window) or `Ctrl+Shift+LeftClick` (foreground-tab) on links should open and load them in a new window.

### Actual Behavior

`Shift+LeftClick` or `Ctrl+Shift+LeftClick` on links opens a new window and never loads.

### Testcase Gist URL

https://gist.github.com/samuelmaddock/d8e8c64c5143df9b3493592c75fa33b8

### Additional Information

Bug initially introduced in v18.0.0-alpha.1",codebytere,bug :beetle:;status/confirmed;component/BrowserWindow;has-repro-gist;18-x-y;19-x-y,2022-05-09T21:13:02Z,2022-05-11T18:34:33Z,samuelmaddock,nornagon;samuelmaddock;codebytere,samuelmaddock;codebytere;sofianguy,,codebytere,,MarshallOfSound,
electron/electron,34163,"[Bug]: When Attempting to load extension with missing files, Electron Crashes. ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.3

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey, Ubuntu 

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

When loading an extension extension with missing files, Electron should not crash.

### Actual Behavior

When loading an extension extension with missing files Electron crashes with ""Electron exited with signal SIGTRAP.""

### Testcase Gist URL

https://gist.github.com/jzoss/7fd8ad289c4ebbefeb766ec4e4e2829b

### Additional Information

When loaded an extension that malformed is some way Electron crashes. I first saw this when I was unable to zip an extension  and some of the files were missing. I am able to recreate it by removed all the files in a extension directory but leaving all the directories.

for example in this gist.. if you make a dir ""fmkadmapgofadopljbjfkapdkoienihi"" and add 3 directories  ""build"", ""icons"", ""popups"" Electron will crash. 

",codebytere,crash :boom:;bug :beetle:;platform/all;17-x-y;18-x-y;19-x-y;component/extensions,2022-05-10T21:15:23Z,2022-05-11T20:41:07Z,jzoss,,jzoss;codebytere,,codebytere,,MarshallOfSound,
electron/electron,34301,"[Bug]: Escape hotkey on html fullscreen does not work when setPermissionRequestHandler callback called asynchronously ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro Version	21H2 OS build 19044.1706

### What arch are you using?

x64

### Last Known Working Electron version

18.0.0

### Expected Behavior

Escape should work as a default hotkey for exiting html fullscreen even if callback in setPermissionRequestHandler was not called synchronously.

### Actual Behavior

When html element requests fullscreen with active permissions handler (session.setPermissionRequestHandler) which calls callback asynchronously (allowing fullscreen permission) Escape hotkey does not trigger exit from fullscreen.
Eventually if the page does not provide other ways for exiting element fullscreen the window gets stuck in fullscreen mode.
Versions starting from 18.0.1 to the current latest stable 18.2.4 and even latest stable beta are affected.

Reproduction in Fiddle:
1. Click on ""Fullscreen me"" button, element with blue background should enter fullscreen
2. Try to exit fullscreen by pressing Esc

Changing electron version to 18.0.0 or  removing setTimeout from handler fixes the problem

### Testcase Gist URL

https://gist.github.com/a889329948e3fa9dbbaddc5012d98a53

### Additional Information

_No response_",codebytere,platform/windows;bug :beetle:;has-repro-gist;18-x-y;19-x-y,2022-05-20T16:41:41Z,2022-05-25T04:38:38Z,felodesu,,felodesu;VerteDinde,,codebytere,,VerteDinde,
electron/electron,34321,"[Bug]: `crashReporter.start` blocks main process takes more than 600ms on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.4

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey 12.3.1

### What arch are you using?

x64

### Last Known Working Electron version

18.2.4

### Expected Behavior

Expect `crashReporter.start` to return quickly. It takes only 33ms in `Electron@11` with the same code on the same machine.

### Actual Behavior

It seems that #33072 does not the same question. `crashReporter.start` takes a long time while `spawn` returns quickly, and seriously delay the app startup.

```javascript
/** Electron@18.2.4, node@v16.13.0 */

console.time('crashReporter')
crashReporter.start({ submitURL: 'https://your-domain.com/url-to-submit' })
console.timeEnd('crashReporter')
// => crashReporter: 762.32ms

console.time('spawn')
child_process.spawn('ls')
console.timeEnd('spawn')
// => spawn: 3.836ms
```

```javascript
/** Electron@11.5.0, node@v16.13.0 */

console.time('crashReporter')
crashReporter.start({ submitURL: 'https://your-domain.com/url-to-submit' })
console.timeEnd('crashReporter')
// => crashReporter: 32.330ms

console.time('spawn')
child_process.spawn('ls')
console.timeEnd('spawn')
// => spawn: 6.081ms
```

### Testcase Gist URL

https://gist.github.com/cupools/9336a79b76ef5da2b61105a63c796824

### Additional Information

_No response_",RaisinTen,platform/macOS;performance :checkered_flag:;component/crash-reporter;bug :beetle:;has-repro-gist;18-x-y;19-x-y,2022-05-23T14:15:58Z,2022-06-20T04:31:29Z,cupools,cupools;RaisinTen;bpasero,cupools;VerteDinde;dsanders11,,dsanders11,,zcbenz,
electron/electron,34350,"[Bug]: Typing in Devtools causes crashes (onerror handler is hit) ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

18.3.0

### Expected Behavior

I should be able to type in the devtools without triggering the window's `onerror` handler.

### Actual Behavior

`onerror` is triggered with the error: ""Possible side-effect in debug-evaluate""

### Testcase Gist URL

https://gist.github.com/54d5f29ef2094fe21e5ba6b2de4ca876

### Additional Information

1. start app
2. type something in devtools
3. observe the error popup

Here's the code I'm running:

main.js:
```
const {app, BrowserWindow} = require('electron')

async function createWindow () {
  const mainWindow = new BrowserWindow()
  await mainWindow.loadFile('index.html')
  mainWindow.webContents.openDevTools()
}

app.whenReady().then(() => {
  createWindow()
})

app.on('window-all-closed', function () {
  if (process.platform !== 'darwin') app.quit()
})
```

index.html:
```
<script src=""./renderer.js""></script>
```

renderer.js:
```
window.onerror = (e, url, line, col, error) => {
  alert(error.message);
};
```",codebytere,bug :beetle:;platform/all;19-x-y,2022-05-25T16:17:47Z,2022-07-13T07:33:43Z,pushkin-,codebytere;pushkin-;rooklift;danieldocki;deermichel;remss;aidar87;kseregal;pvshake,pushkin-;codebytere,,codebytere,,codebytere,
electron/electron,34358,"[Bug]: WebContents.print hard-crashes Electron ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

18.3.0

### Expected Behavior

I expect to be able to print WebContents

### Actual Behavior

`webContents.print(...)` hardcrashes Electron

### Testcase Gist URL

https://gist.github.com/847d0c25faca838884ef0c574032028d

### Additional Information

1. start app
2. it'll try to print after loading the page, but will hardcrash with exit code: 2147483651",codebytere,bug :beetle:;platform/all;status/confirmed;has-repro-gist;19-x-y,2022-05-26T18:16:02Z,2022-05-30T10:19:41Z,pushkin-,pushkin-;codebytere;inukshuk;bjbk,pushkin-;VerteDinde;codebytere,codebytere,codebytere,,codebytere,
electron/electron,34364,"[Bug]: WCO on Windows don't respond to touch events ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.4.4

### What operating system are you using?

Windows

### Operating System Version

Windows 11

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

WCO on Windows respond to touch events

### Actual Behavior

WCO on Windows do not respond to touch events

### Testcase Gist URL

_No response_

### Additional Information

The same fiddle repro applies from this comment https://github.com/electron/electron/issues/34129#issuecomment-1124398574",deepak1556,platform/windows;bug :beetle:;18-x-y;19-x-y;20-x-y,2022-05-27T20:46:19Z,2022-08-02T03:14:00Z,sbatten,,sbatten;deepak1556,,deepak1556,,deepak1556,electron/electron#34129;
electron/electron,34401,"[Bug]: getNormalBounds does not return the bounds before minimizing ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.3 & 18.2.0

### What operating system are you using?

macOS

### Operating System Version

macOS Big Sur Version 11.6.4

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

In the normal mode, `browserWindow.getNormalBounds()` and `browserWindow.getBounds()` return the same bounds.
e.g. 
```
// In the normal mode...
getBounds { x: 389, y: 1429, width: 406, height: 1100 }
getNormalBounds { x: 389, y: 1429, width: 406, height: 1100 }
```

In the minimized mode, I expect that `browserWindow.getNormalBounds()` returns the same bounds on macOS.
```
// In the normal mode...
getNormalBounds { x: 389, y: 1429, width: 406, height: 1100 }
```

### Actual Behavior

In the minimized mode, `browserWindow.getNormalBounds()` returns different bounds:
```
// In the minimized mode...
getNormalBounds { x: 880, y: 420, width: 800, height: 600 }
// ^^^^ Different with { x: 389, y: 1429, width: 406, height: 1100 }
```

### Testcase Gist URL

https://gist.github.com/weilonge/b73c7aee8e211ec60910025273651b4d

NOTE: Using `setTimeout(..., 1000)` when handling `'show'` and `'minimize'` events is for waiting for the bounds settle down.

### Additional Information

**How to use the gist to reproduce the issue?**

1. Adjust the size and position for the newly opened window. e.g. x: 389, y: 1429, width: 406, height: 1100

2. Minimize the window. There should be `======= Minimize Event ========` logs for showing `getBounds` and `getNormalBounds` values.
```
======= Minimize Event ========
getBounds { x: 389, y: 1429, width: 406, height: 1100 }
getNormalBounds { x: 880, y: 420, width: 800, height: 600 }
```
The problematic part in the `Minimize Event` log is at `getNormalBounds { x: 880, y: 420, width: 800, height: 600 }` line.
My understanding is that the expected value is `{ x: 389, y: 1429, width: 406, height: 1100 }`.
(Probably `getBounds` is incorrect too?)

3. Restore the window. There should be `======= Show Event ========` logs for showing `getBounds` and `getNormalBounds` values.
```
======= Show Event ========
getBounds { x: 389, y: 1429, width: 406, height: 1100 }
getNormalBounds { x: 389, y: 1429, width: 406, height: 1100 }
```
The `Show Event` log looks good to me.",codebytere,platform/macOS;bug :beetle:;has-repro-gist;18-x-y;19-x-y,2022-06-01T03:26:34Z,2022-06-09T08:48:51Z,weilonge,,weilonge;VerteDinde,,codebytere,,codebytere,
electron/electron,34406,"[Bug]: red background on hover to PiP ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10 Pro Version 19044.1706

### What arch are you using?

x64

### Last Known Working Electron version

18.1.0

### Expected Behavior

when hovering over pip, there is no red background and controls are visible

### Actual Behavior

when hovering over pip, there is a red background and no controls are visible

### Testcase Gist URL

_No response_

### Additional Information

![image](https://user-images.githubusercontent.com/11525479/171402617-11d4444d-fe18-4711-b5c5-a0773f9993b1.png)
",MarshallOfSound,platform/windows;bug :beetle:;19-x-y,2022-06-01T12:18:25Z,2022-08-22T14:38:50Z,Genexys,VerteDinde;Genexys;flightmansam;ShukantPal;leonardxfce-dialpad,Genexys;VerteDinde,codebytere,MarshallOfSound,,codebytere,
electron/electron,34492,"[Bug]: dialog.showOpenDialog cannot select file without extension on Linux ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.4

### What operating system are you using?

Ubuntu

### Operating System Version

5.4.0-117-generic #132-Ubuntu SMP Thu Jun 2 00:39:06 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

`dialog.showOpenDialog` filters with `extensions: ['*']` cannot select a file without extension on **Linux** (on Windows it's OK). E.g. on the filesystem I have
```
$ ls
abc
abc.jpg
```

Then I run `dialog.showOpenDialog` with the following filters
```{
  filters: [
    { name: 'JPEG', extensions: ['jpg'] },
    { name: 'All Files', extensions: ['*'] }
  ]
}
```

and when I browse into my directory I want to see files `abc` and `abc.jpg`.

### Actual Behavior

When I browse into my directory I want to see file `abc.jpg` only.

### Testcase Gist URL

https://gist.github.com/8d6d9d0367863ff0841d4662d60cc14d

### Additional Information

_No response_",codebytere,platform/linux;bug :beetle:;18-x-y;19-x-y;20-x-y,2022-06-09T19:18:29Z,2022-06-13T06:57:03Z,xmedeko,xmedeko,xmedeko;codebytere,,codebytere,,zcbenz,
electron/electron,34507,"[Bug]: Traffic light display cannot be changed after certain operations ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.4

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey 12.3

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

If after doing `window.setWindowButtonVisibility(false)` to fullscreen and back, the traffic light display can still be configurable.

### Actual Behavior

If after doing `window.setWindowButtonVisibility(false)` to fullscreen and then back, the traffic light display will not be able to be configured.

### Testcase Gist URL

https://gist.github.com/ci7lus/d33c403d8d7fd4de69ca59befdd0b6a7

### Additional Information

Repro: https://github.com/vivid-lapin/electron-button-fullscreen-repro

https://user-images.githubusercontent.com/7887955/173172634-b7c51c7f-b44f-4f98-93cf-143576a1d726.mp4


",codebytere,platform/macOS;bug :beetle:;component/BrowserWindow;19-x-y,2022-06-11T04:36:24Z,2022-06-21T07:35:53Z,ci7lus,codebytere;ci7lus,ci7lus;codebytere,,codebytere,,zcbenz,
electron/electron,34508,"[Bug]: Unhandled exception in webcontents.setWindowOpenHandler crashes application ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.4

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

na

### Expected Behavior

I'm actually not sure what the intended behavior of unhandled errors should be.  Sometimes they show a messageBox, sometimes they are printed to stderr.  I imagine crashing is almost always an unintended behavior though.

### Actual Behavior

An unhandled error within the setWindowOpenHandler brings down the whole app.

### Testcase Gist URL

https://gist.github.com/mesner/e91bdc37a24a247235c1c439b291a5e4

### Additional Information

- Load gist in fiddle. 
- Click ""Window.Open"" button.  
- Note that the app terminates",codebytere,bug :beetle:;platform/all;status/confirmed;has-repro-gist;19-x-y;20-x-y,2022-06-11T14:21:48Z,2022-06-14T16:22:24Z,mesner,,mesner;codebytere,,codebytere,,jkleinsc,
electron/electron,34552,"[Bug]: -webkit-app-region not recalculated when BrowserView bounds changed ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.3

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

If a BrowserView that contains a draggable region (-webkit-app-region: drag) is moved (has its bounds changed) within a BrowserWindow, the draggable region should effectively move with the BrowserView.

### Actual Behavior

The draggable region does not move when the BrowserView does. The previous absolute BrowserWindow region remains draggable, and the new region the BrowserView occupies is not draggable.

### Testcase Gist URL

https://gist.github.com/bff9757ccf3613446232a03f08bd8075

### Additional Information

Gist is fairly straightforward, as you move the view down, the original location of the draggable bar is the only draggable region.",codebytere,platform/windows;bug :beetle:;component/BrowserView;19-x-y;20-x-y,2022-06-14T18:37:50Z,2022-06-17T10:01:39Z,neobyteUK,neobyteUK,neobyteUK;codebytere,,codebytere,,codebytere,
electron/electron,34603,"[Bug]: Deprecated dragging API ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17.4.7

### What operating system are you using?

macOS

### Operating System Version

Mac os 10.14

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Remove the deprecation of Dragging API

### Actual Behavior

After update to mac os 10.14, I am using this code to drag multiple files 
```
event.sender.startDrag({
      // Fallback for files parameter
      file: iconPaths[0],
      // The paths to the files being dragged. (files will override file field)
      files: iconPaths,
      // Preview of the drag and drop file
      icon: nativeImage.createFromBuffer(iconPreview),
    })
```
But when dragging multiple files, I see this alert on the console
```
Dragging multiple files using the deprecated NSFilenamesPboardType and dragging API. Please update to the NSDraggingSession API.
```
After investigate, seems like mac os now recomends to use URL format instead of file paths.
more info here 

https://developer.apple.com/documentation/macos-release-notes/appkit-release-notes-for-macos-10_14
Drag and Drop
If you閳ユ獧e using certain deprecated APIs in apps linked on macOS 10.14, you閳ユ獟l see two kinds of exceptions being thrown.

If you encounter an exception about dragging multiple files using the deprecated [NSFilenamesPboardType](https://developer.apple.com/documentation/appkit/nsfilenamespboardtype) and dragging API, adopt the following APIs depending on your usage:

[drag(_:at:offset:event:pasteboard:source:slideBack:)](https://developer.apple.com/documentation/appkit/nswindow/1419224-drag): Adopt [NSDraggingSession](https://developer.apple.com/documentation/appkit/nsdraggingsession) and use [URL](https://developer.apple.com/documentation/foundation/url) instances instead of string file paths.

[tableView:writeRows:toPasteboard:](https://developer.apple.com/documentation/objectivec/nsobject/1539424-tableview) or [tableView(_:writeRowsWith:to:)](https://developer.apple.com/documentation/appkit/nstableviewdatasource/1525370-tableview): Adopt [tableView(_:pasteboardWriterForRow:)](https://developer.apple.com/documentation/appkit/nstableviewdatasource/1535294-tableview) and return [URL](https://developer.apple.com/documentation/foundation/url) instances or nil if the row shouldn閳ユ獩 be dragged.

[collectionView(_:writeItemsAt:to:)](https://developer.apple.com/documentation/appkit/nscollectionviewdelegate/1528182-collectionview): Adopt [collectionView(_:pasteboardWriterForItemAt:)](https://developer.apple.com/documentation/appkit/nscollectionviewdelegate/1527290-collectionview) and return [URL](https://developer.apple.com/documentation/foundation/url) instances or nil if the row shouldn閳ユ獩 be dragged.

If you encounter an exception noting that 閳ユ涪here must be 1 draggingItem per pasteboardItem,閳 you need to ensure that the number of pasteboard items you add is the same as the number of drag items you閳ユ獧e using. The same exception occurs if you use the deprecated drag and drop API. Update your drag and drop code to [NSDraggingSession](https://developer.apple.com/documentation/appkit/nsdraggingsession) or [collectionView(_:pasteboardWriterForItemAt:)](https://developer.apple.com/documentation/appkit/nscollectionviewdelegate/1528257-collectionview) to avoid the exception in that case.


### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/macOS;bug :beetle:;component/drag-and-drop;18-x-y;19-x-y;20-x-y,2022-06-17T00:02:26Z,2022-06-20T13:17:54Z,andirsun,,andirsun;codebytere,,codebytere,,codebytere,
electron/electron,34707,"[Bug]: Disabling BrowserWindow object causes crash on MacOS ### Preflight Checklist

- [x] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

Tested on versions 19.0.5, 18.3.4, 17.4.8 and 16.2.8

### What operating system are you using?

macOS

### Operating System Version

Monterey v12.3

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

Went all the way back to 12.2.3 and issue was still present.

### Expected Behavior

When calling `setEnabled(false)` on a `BrowserWindow` object, I would expect the window to become disabled or some error to be thrown if it fails.

### Actual Behavior

**Behavior**
Calling `setEnabled(false)` on a `BrowserWindow` object causes Electron to quit abruptly on MacOS. No stack trace is given in the terminal but a message is printed that reads:
`<path to Electron.app>/Electron.app/Contents/MacOS/Electron exited with signal SIGTRAP`

Using an Intel based Mac the error message was the same except it exited with `SIGILL`.
Surrounding the code in a try/catch block does not stop Electron from crashing. 

**Reproduce**
Add the following line to the [quickstart repo in index.js on line 17](https://github.com/electron/electron-quick-start/blob/master/main.js#L17):
`mainWindow.setEnabled(false);`

To slightly delay so Electron/OS has time to show a window before crashing, use this instead:
`setTimeout(() => { mainWindow.setEnabled(false); }, 1000);`


### Testcase Gist URL

_No response_

### Additional Information

_No response_",codebytere,platform/macOS;crash :boom:;bug :beetle:,2022-06-22T21:37:03Z,2022-07-19T10:31:50Z,Jodom988,,Jodom988;codebytere,,codebytere,,codebytere,
electron/electron,34717,"[Bug]: BrowserViews not painting their WebContents when minimize ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.6

### What operating system are you using?

Windows

### Operating System Version

Windows 10 version 21H2

### What arch are you using?

x64

### Last Known Working Electron version

19.0.6

### Expected Behavior

1. run the [Electron Fiddle Gist](https://gist.github.com/1928de14317d540d1e7028451374ab15)
2. after the first WebContents painting
3. minimize the program
4. run `electronAPI.openTab()` in Developer Tools
5. Expected painting the new WebContents

### Actual Behavior

BrowserViews not painting their WebContents when minimize, the program is white screen until you change his size

### Testcase Gist URL

https://gist.github.com/1928de14317d540d1e7028451374ab15

### Additional Information

run `electronAPI.openTab()` in Developer Tools",mlaurencin,platform/windows;bug :beetle:;has-repro-gist;19-x-y;20-x-y;stale,2022-06-23T10:07:14Z,2022-12-03T01:59:09Z,TianbinTobin,dorsta;TianbinTobin,TianbinTobin;mlaurencin,,mlaurencin,mlaurencin,,
electron/electron,34750,"[Bug]: Datalist rendering on macOS broken ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19, 20

### What operating system are you using?

macOS

### Operating System Version

Monterey 12.4

### What arch are you using?

x64

### Last Known Working Electron version

19.0.0-alpha.3

### Expected Behavior

Datalist is rendered below associated input, and words are not cut off

### Actual Behavior

From Electron 19.0.0-alpha.4 on, the words are cut off at the bottom. This issue isnt present in 19.0.0-alpha.3, though the datalist overlay is still rendered in the wrong place (it seems due to it being rendered based on the offset from the webFrame, but placed on top of the webContents.)

<img width=""806"" alt=""Screenshot 2022-06-27 at 13 17 10"" src=""https://user-images.githubusercontent.com/41970/175929574-0a19832d-90e4-476b-8ab4-584e121015fc.png"">

### Testcase Gist URL

https://gist.github.com/1525a4d39d33bc46eb033af6ebcf51c1

### Additional Information

The Gist loads a codepen with a datalist ( https://codepen.io/leorapirap/pen/ZBrBMx ) If you open that in chrome regular, or electron 18, the datalist dropdown looks good.",codebytere,platform/macOS;bug :beetle:;19-x-y;20-x-y,2022-06-27T11:16:42Z,2022-06-29T08:14:03Z,Kilian,,Kilian;codebytere,,codebytere,,codebytere,
electron/electron,34763,"[Bug]: Overlay's minimize button stays in hovered/focused state after restoring ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.5

### What operating system are you using?

Windows

### Operating System Version

11

### What arch are you using?

x64

### Last Known Working Electron version

N/A

### Expected Behavior

When hovering over a ""minimize"" button in titlebar overlay and clicking it, and then restoring the app - I expect that the button is restored to its original state:

![image](https://user-images.githubusercontent.com/79877362/176010822-fca7de7d-921a-453c-acfe-c45d9e3adc57.png)

### Actual Behavior

Instead if I click ""minimize"" and then restore I see this:

![image](https://user-images.githubusercontent.com/79877362/176010875-c4c0280f-d4b5-4edc-b2b6-16a30261ecdc.png)


### Testcase Gist URL

_No response_

### Additional Information

Originally reported in: https://github.com/signalapp/Signal-Desktop/issues/5992",codebytere,platform/windows;bug :beetle:;19-x-y;component/wco,2022-06-27T18:30:06Z,2022-07-07T15:17:21Z,indutny-signal,indutny-signal;wheezard;codebytere,indutny-signal;codebytere,,codebytere,,codebytere,
electron/electron,34813,"[Bug]: Can not print contents of browser window silently in Ubuntu linux ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

18.2.3

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

none 

### Expected Behavior

I want to print the contents of browser window silently on a POS printer. The code attached at Gist section works fine on windows, but doesn't work in Ubuntu. My targeted platform is ubuntu linux 20.04 and above

### Actual Behavior

The output at the console for the Gist is :

Console ready 棣冩暕
Saving files to temp directory...
Saved files to /tmp/tmp-17209-xBE03rN99Kka
Electron v18.2.3 started.
libva error: /usr/lib/x86_64-linux-gnu/dri/iHD_drv_video.so init failed
[19927:0702/212214.938092:ERROR:sandbox_linux.cc(377)] InitializeSandbox() called with multiple threads in process gpu-process.
[
  {
    name: 'DCP-7030',
    displayName: 'DCP-7030',
    description: 'Brother DCP-7030',
    status: 5,
    isDefault: false,
    options: {
      copies: '1',
      'device-uri': 'usb://Brother/DCP-7030?serial=000D0N969645',
      finishings: '3',
      'job-cancel-after': '10800',
      'job-hold-until': 'no-hold',
      'job-priority': '50',
      'job-sheets': 'none,none',
      'marker-change-time': '0',
      'number-up': '1',
      'printer-commands': 'none',
      'printer-info': 'Brother DCP-7030',
      'printer-is-accepting-jobs': 'true',
      'printer-is-shared': 'true',
      'printer-is-temporary': 'false',
      'printer-location': 'embeddedSaugat',
      'printer-make-and-model': 'Brother DCP-7030, using brlaser v6',
      'printer-state': '5',
      'printer-state-change-time': '1651417533',
      'printer-state-reasons': 'paused',
      'printer-type': '4164',
      'printer-uri-supported': 'ipp://localhost/printers/DCP-7030',
      system_driverinfo: 'Brother DCP-7030, using brlaser v6'
    }
  },
  {
    name: 'POS80QMS',
    displayName: 'POS80QMS',
    description: '80mm printer for QMS Project',
    status: 3,
    isDefault: true,
    options: {
      copies: '1',
      'device-uri': 'usb://Unknown/Printer',
      finishings: '3',
      'job-cancel-after': '10800',
      'job-hold-until': 'no-hold',
      'job-priority': '50',
      'job-sheets': 'none,none',
      'marker-change-time': '0',
      'number-up': '1',
      'printer-commands': 'none',
      'printer-info': '80mm printer for QMS Project',
      'printer-is-accepting-jobs': 'true',
      'printer-is-shared': 'false',
      'printer-is-temporary': 'false',
      'printer-location': 'holus',
      'printer-make-and-model': 'POS-80',
      'printer-state': '3',
      'printer-state-change-time': '1655307054',
      'printer-state-reasons': 'none',
      'printer-type': '2248708',
      'printer-uri-supported': 'ipp://localhost/printers/POS80QMS',
      system_driverinfo: 'POS-80'
    }
  }
]
(node:19895) electron: Deprecation Warning: getPrinters() is deprecated. Use the asynchronous and non-blocking version, getPrintersAsync(), instead.
(Use `electron --trace-warnings ...` to show where the warning was created)
failed
[19895:0702/212216.612479:ERROR:print_view_manager_base.cc(85)] Invalid printer settings The selected printer is not available or not installed correctly. <br> Check your printer or try selecting another printer.

Electron exited with code 0.

### Testcase Gist URL

https://gist.github.com/saugatdai/5ba400d42e3fa4be66d323b2d826fe50

### Additional Information

My project is not going to production because of this problem. Please help with some solutions and suggestions.",codebytere,platform/linux;component/printing;bug :beetle:;18-x-y;19-x-y;20-x-y,2022-07-02T15:55:59Z,2022-07-19T12:46:08Z,saugatdai,frank-dspeed;saugatdai;codebytere,saugatdai;codebytere,,codebytere,,codebytere,
electron/electron,34822,"[Bug]: `setTrafficLightPosition` is reset when calling `setRepresentedFilename` ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.7

### What operating system are you using?

macOS

### Operating System Version

12.4

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

The traffic light position should remain stable.

### Actual Behavior

The traffic light position changes after the presented file name is changed for the window.

### Testcase Gist URL

https://gist.github.com/9ad043673ca425c92bbb4e1f951c455c

### Additional Information

![Recording 2022-07-05 at 06 23 50](https://user-images.githubusercontent.com/900690/177249087-a480a68a-1c2e-4470-8781-38be162c61a0.gif)
",codebytere,platform/macOS;bug :beetle:;status/confirmed;has-repro-gist;18-x-y;19-x-y;20-x-y,2022-07-05T04:24:03Z,2022-07-08T06:33:43Z,bpasero,bpasero,bpasero;twitharshil,,codebytere,,MarshallOfSound,
electron/electron,34887,"Web Serial API removed and added events are never called ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.8

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey 12.4

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

I want to update UI when picking a port if a serial port is plugged in or unplugged.

Test Steps:
1,  Click button to call `navigator.serial.requestPort()`
2, Show a modal to show port list in the `select-serial-port` event handler
3, Plug in or unplug a device to check the `serial-port-added` and `serial-port-removed` events

```
modal.webContents.session.on('select-serial-port', (event, portList, webContents, callback) => {
    //Add listeners to handle ports being added or removed before the callback for `select-serial-port`
    //is called.
    modal.webContents.session.on('serial-port-added', (event, port) => {
      console.log('serial-port-added FIRED WITH', port)
      //Optionally update portList to add the new port
    })
  
    modal.webContents.session.on('serial-port-removed', (event, port) => {
      console.log('serial-port-removed FIRED WITH', port)
      //Optionally update portList to remove the port
    })

    // modal.webContents.openDevTools();
    modal.webContents.send('update-list', portList);
    modal.show();

    event.preventDefault();
    ipcMain.once('serial-port', (_event, portId = '') => {
      callback(portId);
      modal.hide();
    });
  });
```

### Actual Behavior

But the `select-serial-port` and `select-serial-removed` events never called. Did I use these api in a wrong way?

### Testcase Gist URL

https://gist.github.com/0bbeeaa1c9e8f5affb6b59663870616e

### Additional Information

_No response_",jkleinsc,platform/macOS;bug :beetle:;status/confirmed;19-x-y,2022-07-12T03:31:13Z,2022-07-25T14:50:20Z,Loongwoo,codebytere;jkleinsc,Loongwoo;codebytere;jkleinsc,,jkleinsc,,jkleinsc,
electron/electron,35046,"[Bug]: webContents.getUserAgent() is empty since 20.0.0-alpha.6 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

20.0.0-alpha.6

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

20.0.0-alpha.5

### Expected Behavior

`webContents.getUserAgent()` returns a string with a user Agent

### Actual Behavior

webContents.getUserAgent() returns an empty string

### Testcase Gist URL

https://gist.github.com/33fd4a9ac6db6b28b1dcc5b765edb622

### Additional Information

In the console the user agent is printed in alpha.5, but empty in alpha.6. Looking at the diff between alpha.5 and alpha.6, this PR seems the likely cause: https://github.com/electron/electron/pull/34524 / #34481

It's worth noting that the renderer does have a filled-in userAgent.",codebytere,bug :beetle:;has-repro-gist;component/webcontents;20-x-y,2022-07-25T14:12:09Z,2022-07-29T15:09:48Z,Kilian,TheMightyPenguin,Kilian;codebytere,,codebytere,,jkleinsc,
electron/electron,35155,"[Bug]: Electron 17+ ignores Input.dispatchKeyEvent and Input.dispatchMouseEvent commands when response body is empty ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

17+

### What operating system are you using?

Other (specify below)

### Operating System Version

reproducible on macOS, Linux, Windows

### What arch are you using?

x64

### Last Known Working Electron version

16.x/16.2.8

### Expected Behavior

CDP command `Input.insertText` ends up in a noop if the response of the site which was navigated to was empty (`''`):

- Bisect range: https://github.com/electron/electron/compare/v18.0.0-nightly.20211123...v18.0.0-nightly.20211124
- Bad: 18.0.0-nightly.20211124 bad
- Good: 18.0.0-nightly.20211123: good

Expected: It writes the input text / processes the keyboard events.

### Actual Behavior

Actual: It ends up in a noop.

### Testcase Gist URL

https://gist.github.com/mxschmitt/8e85df87d970eb879dff58e8d5562cfd

### Additional Information

See here for a list of downstream tests which are failing in 17+: https://github.com/microsoft/playwright/issues/16025",codebytere,bug :beetle:;platform/all;blocked/need-repro;17-x-y;18-x-y;19-x-y;20-x-y,2022-08-01T10:31:39Z,2022-08-10T10:25:08Z,mxschmitt,mxschmitt;codebytere,mxschmitt;codebytere,,codebytere,,mxschmitt,
electron/electron,35282,"[Bug]: WebSerial - SerialPort doesn't open in Electron 20 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

20.0.1

### What operating system are you using?

Windows

### Operating System Version

Win 10 Pro 19043

### What arch are you using?

x64

### Last Known Working Electron version

19.0.11

### Expected Behavior

WebSerial API should open a serial port.

### Actual Behavior

The ``getInfo`` method works fine, but ``open`` fails to open the port.

### Testcase Gist URL

https://gist.github.com/17afc65be515f3a1aec6256cb69f069d
https://github.com/rafaelpimpa/electron-webserial-bug-repro

### Additional Information

Error thrown is ``NetworkError: Failed to open serial port.``
I didn't use an Arduino to test, but it should work the same, since it works in v19.
Reproduction has the same code from the docs.",codebytere,platform/windows;bug :beetle:;status/reviewed;has-repro-repo;20-x-y;21-x-y,2022-08-09T13:47:55Z,2022-08-15T15:49:22Z,rafaelpimpa,codebytere;rafaelpimpa;dusionlike,rafaelpimpa;VerteDinde,,codebytere,,jkleinsc,
electron/electron,35384,"[Bug]: Mac crash on WebWorker destructor ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

20.0.3

### What operating system are you using?

macOS

### Operating System Version

12.3

### What arch are you using?

x64

### Last Known Working Electron version

20.0.2

### Expected Behavior

When destructing WebWorkers, it should not crash

### Actual Behavior

When destructing a WebWorker that uses WebAssembly, it crashes the v8 context.

### Testcase Gist URL

_No response_

### Additional Information

It seems linked to the recent change to the ""stop_and_close_uv_loop"" change, seen here: #35322
If I revert that single change, it does not crash.

Attached is a minidump

[minidump.zip](https://github.com/electron/electron/files/9382529/e9384a04-0947-4e26-b452-c85e84309bf9.zip)
",codebytere,platform/macOS;platform/linux;bug :beetle:;20-x-y;21-x-y,2022-08-19T13:30:36Z,2022-08-29T13:45:50Z,DanielMcAssey,zcbenz;codebytere;DanielMcAssey;miniak,DanielMcAssey;codebytere,,codebytere,,codebytere,
electron/electron,35389,"[Bug]: using debugger's Emulation.setDeviceMetricsOverride and changing origins(?) crashes Electron 21 ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

21.0.0-alpha.1

### What operating system are you using?

Ubuntu

### Operating System Version

Ubuntu 20.04

### What arch are you using?

x64

### Last Known Working Electron version

20.0.3

### Expected Behavior

When setDeviceMetricsOverride is active and a different URL is loaded, the application does not crash

### Actual Behavior

Electron crashes with a SIGSEGV, in all current Electron 21 alpha versions (1 through 4)

### Testcase Gist URL

https://gist.github.com/25c3fea282cc3a95af280ed1db54ab3d

### Additional Information

Run the application with Electron 21 and Electron 20. Click one of the buttons below the webview to change the URL

- On Electron 21, the app now crashes
- On Electron 20, the new URL is loaded

On Electron 21, when showing the electron site, you can navigate to a few other pages like docs, releases and apps. Going to Blog crashes the app. Blog is still the same origin so that's why the ""(?)"" is in the title.

Comment out these lines to prevent Electron 21 from crashing: https://gist.github.com/Kilian/25c3fea282cc3a95af280ed1db54ab3d#file-renderer-js-L18-L21",codebytere,bug :beetle:;component/webcontents;21-x-y,2022-08-19T17:56:47Z,2022-08-29T12:53:25Z,Kilian,codebytere;deepak1556,Kilian,,codebytere,,codebytere,
electron/electron,35403,"[Bug]: macOS - Using frame, roundedCorners, and fullscreen settings together automatically causes a crash ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

20.0.3

### What operating system are you using?

macOS

### Operating System Version

Catalina (confirmed on Big Sur too)

### What arch are you using?

x64

### Last Known Working Electron version

Not working in version 17-21

### Expected Behavior

Code such as the following should not crash Electron:

```
  win = new BrowserWindow({
    title: ""Media Window"",
    frame: false,          // These 3 options can't be
    roundedCorners: false, // used concurrently on macOS 
    fullscreen: true       // without causing a crash
  });
```

### Actual Behavior

The following code crashes Electron on macOS:

```
  win = new BrowserWindow({
    title: ""Media Window"",
    frame: false,          // These 3 options can't be
    roundedCorners: false, // used concurrently on macOS 
    fullscreen: true       // without causing a crash
  });
```
Any of the following 3 variants does **not** cause the crash:
```
  win = new BrowserWindow({
    title: ""Media Window"",
    // frame: false,
    roundedCorners: false,
    fullscreen: true
  });
```

```
  win = new BrowserWindow({
    title: ""Media Window"",
    frame: false,
    // roundedCorners: false,
    fullscreen: true
  });
```

```
  win = new BrowserWindow({
    title: ""Media Window"",
    frame: false,
    roundedCorners: false,
    // fullscreen: true
  });
```

### Testcase Gist URL

https://gist.github.com/sircharlo/c78e81a20c3eb4167037197b3803d76e

### Additional Information

Error looks like this: 

    Electron[785:12045] *** Assertion failure in -[ElectronNSWindow titlebarAccessoryViewControllers], /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppKit/AppKit-1894.60.100/AppKit.subproj/NSWindow.m:3337
",codebytere,platform/macOS;crash :boom:;bug :beetle:;component/BrowserWindow;has-repro-gist;19-x-y;20-x-y;21-x-y,2022-08-22T15:16:24Z,2022-08-25T11:39:03Z,sircharlo,,sircharlo;codebytere,,codebytere,,codebytere,
electron/electron,35442,"[Bug]: Upgrading to 19.0.13 break webpack hot reloading ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] #35489

### Electron Version

19.0.13

### What operating system are you using?

macOS

### Operating System Version

Monterey 

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

19.0.12

### Expected Behavior

After upgrading to `19.0.13` webpack dev server reloading breaks. 

<img width=""486"" alt=""CleanShot 2022-08-24 at 23 45 20@2x"" src=""https://user-images.githubusercontent.com/1192452/186594068-a984939d-dce8-4534-8dd0-634472275e60.png"">


### Actual Behavior

The render process does not crash

### Testcase Gist URL

_No response_

### Additional Information

Not sure how to capture the crash log but happy to provide it with some instructions!. ",codebytere,bug :beetle:,2022-08-25T06:46:37Z,2022-08-29T13:45:50Z,hipstersmoothie,wb-wenbei;srubin;codebytere,hipstersmoothie,,codebytere,,codebytere,electron/electron#35384;
electron/electron,35462,"[Bug]: Electron crashes when loading <iframe> from custom URL protocol ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

20.1.0

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

I want to load an iframe from a custom:// url protocol inside my main window.

`<iframe src=""custom://test.html"">`

### Actual Behavior

Application crashes when using custom:// url protocol. The protocol is registered with `protocol.registerFileProtocol()`. When loading the exact same file with the file:// protocol, everything is OK. 

### Testcase Gist URL

https://gist.github.com/75a34a8f7177e616146a8e5f1f4edddc

### Additional Information

The same issue hase also been observed on Ubuntu 20.04
",codebytere,crash :boom:;bug :beetle:;platform/all;component/webcontents;20-x-y,2022-08-25T18:21:15Z,2022-08-31T08:08:13Z,aless2,Prinzhorn;aless2;codebytere,aless2;codebytere,,codebytere,,codebytere,electron/electron#28407;electron/electron#28765;
electron/electron,35508,"[Bug]: Spellcheck API can cause errors in macOS applications despite supposedly being a ""no-op"" on macOS ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19.0.10

### What operating system are you using?

macOS

### Operating System Version

macOS Monterey 12.5.1

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

_No response_

### Expected Behavior

The `setSpellCheckerLanguages` method should have no effect when invoked on macOS, other than possibly generating a warning that this API is not supported on macOS.

### Actual Behavior

On macOS, invoking `ses.setSpellCheckerLanguages` with a language array containing one or more unsupported languages causes an error which can prevent the app from rendering. (""Unsupported languages"" here means languages not supported by the Electron spellcheck API, which is not actually used on macOS.)

This issue is further complicated by the fact that the `ses.getSpellCheckerLanguages` method returns the actual locale(s) that the macOS spellcheck API is checking against, regardless of whether the Electron spellcheck API supports those locales.

As such, even something as seemingly innocuous as setting the spellcheck languages to the current spellcheck languages, which should be a no-op on any platform, can cause errors on macOS.

### Testcase Gist URL

https://gist.github.com/71ad54ff04a1a5b8f1a3ceed905683a0

### Additional Information

The [Electron docs](https://www.electronjs.org/docs/latest/api/session#sessetspellcheckerlanguageslanguages) state the following:
> Note: On macOS the OS spellchecker is used and will detect your language automatically. This API is a no-op on macOS.

This issue can only be reproduced on a macOS device where the current system locale is one that the Electron spellcheck API does not support.  For English-speaking users, you can accomplish this by setting your region to ""India"" in the ""Language & Region"" settings menu.",codebytere,platform/macOS;bug :beetle:;has-repro-gist;component/spellcheck;19-x-y;20-x-y;21-x-y,2022-08-30T21:52:21Z,2022-09-14T22:10:18Z,df-asana,vladimiry,df-asana;codebytere;jkleinsc,,codebytere,,jkleinsc,
electron/electron,35869,"[Issue]: Modules won't rebuild on the latest version ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

21.0.1

### What operating system are you using?

Windows

### Operating System Version

Windows 10

### What arch are you using?

x64

### Last Known Working Electron version

19.0.10

### Expected Behavior

I am using two electron modules, specifically [electron-bottom-most](https://www.npmjs.com/package/electron-bottom-most) and [electron-disable-minimize](https://www.npmjs.com/package/electron-disable-minimize). When I use ""npm start"" or rebuild the modules with electron-rebuild the modules rebuild and the program starts normally on Electron v19.0.10.

### Actual Behavior

Since I upgraded to the latest Electron version (v21.0.1) both modules fail to rebuild during the startup and the program won't start. I tried updating node itself, npm, node-gyp, phyton, MVS build tools, and I tried downgrading the Electron version to v18.0.0. When I downgraded the version I got the same results as when I tried using the latest version (both of them failed).

This is what happens when I try to execute ""npm start"" on the latest version:

   ```
鑴 Preparing native dependencies: 0 / 1
An unhandled error has occurred inside Forge:
node-gyp failed to rebuild 'C:\cwa\node_modules\electron-bottom-most'.
For more information, rerun with the DEBUG environment variable set to ""electron-rebuild"".

Error: `C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\MSBuild.exe` failed with exit code: 1


Error: node-gyp failed to rebuild 'C:\cwa\node_modules\electron-bottom-most'.
For more information, rerun with the DEBUG environment variable set to ""electron-rebuild"".

Error: `C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\MSBuild.exe` failed with exit code: 1


    at NodeGyp.rebuildModule (C:\cwa\node_modules\electron-rebuild\lib\src\module-type\node-gyp.js:120:19)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async ModuleRebuilder.rebuildNodeGypModule (C:\cwa\node_modules\electron-rebuild\lib\src\module-rebuilder.js:98:9)
    at async ModuleRebuilder.rebuild (C:\cwa\node_modules\electron-rebuild\lib\src\module-rebuilder.js:128:14)
    at async Rebuilder.rebuildModuleAt (C:\cwa\node_modules\electron-rebuild\lib\src\rebuild.js:149:13)
    at async Rebuilder.rebuild (C:\cwa\node_modules\electron-rebuild\lib\src\rebuild.js:112:17)
    at async C:\cwa\node_modules\@electron-forge\core\dist\util\rebuild.js:30:9
```



### Testcase Gist URL

_No response_

### Additional Information

I only have these two modules and electron-forge installed",VerteDinde,platform/windows;bug :beetle:;status/reviewed;21-x-y,2022-09-30T17:14:49Z,2022-11-30T10:46:16Z,Toxic48,VerteDinde;Toxic48;arakawayasuaki;oalfroukh;ludvigintel;MarshallOfSound,Toxic48;VerteDinde,VerteDinde,VerteDinde,,MarshallOfSound,
electron/electron,35916,"[Bug]: The global content client will init twice on the startup ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

19

### What operating system are you using?

Other (specify below)

### Operating System Version

macOS 

### What arch are you using?

Other (specify below)

### Last Known Working Electron version

_No response_

### Expected Behavior

The global content client should init once on startup.

### Actual Behavior

The global content client will init twice on the startup and it cause a memory leak.causes. 

### Testcase Gist URL

_No response_

### Additional Information

These days I try to debug the electron source and found that the global content client will init twice on startup because the ElectronMainDelegate didn't override the CreateContentClient.

The first time, it call the `ContentMainDelegate::CreateContentClient` to create an ContentClient instance.
```
void SetContentClient(ContentClient* client) {
  /*
  if(g_client != nullptr)
  {
      DCHECK(false);
  }
  */
  g_client = client;
}

//ContentClientCreator::Create
static void Create(ContentMainDelegate* delegate) {
    ContentClient* client = delegate->CreateContentClient();
    DCHECK(client);
    SetContentClient(client);
  }
```
![image](https://user-images.githubusercontent.com/34939113/194010305-cd932f47-30a2-46ac-8d7d-4d622d3e6fb1.png)

Then the global ContentClient will be set as an ElectronContentClient instance in `ElectronMainDelegate::BasicStartupComplete`

![image](https://user-images.githubusercontent.com/34939113/194011232-6061b984-486a-4bbd-ae2c-1629910c5eac.png)

So the first one is never to be used and never to be free until the process exit.
",codebytere,bug :beetle:;platform/all;19-x-y,2022-10-05T08:26:58Z,2022-10-10T14:48:46Z,netflt,,netflt;codebytere,codebytere,codebytere,,codebytere,
electron/electron,35971,"[Bug]: Some options of printToPDF don't work ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

21.1.0

### What operating system are you using?

macOS

### Operating System Version

macOS Catalina 10.15.7

### What arch are you using?

x64

### Last Known Working Electron version

_No response_

### Expected Behavior

Some options of `webContents.printToPDF` don't be ignored.
The options are:
 - `margins` (`top`, `bottom`, `left`, `right` and `marginType`)
 - `pageSize`
 - `scale`


For example: When I choose a margin top, like 2"" and call `printToPDF`, the PDF should come with margin top with 2""

### Actual Behavior

I defined options, but they don't work.
Am I doing something wrong, maybe using incorrect?

### Testcase Gist URL

https://gist.github.com/lesleyandreza/7699603b20f2459d1fcf3b9480fb22e1

### Additional Information

The options `headerTemplate` and `footerTemplate` works, but in a strange way, because the text comes really small. Maybe this could be a Chromium bug.
<img width=""1404"" alt=""very-small-header"" src=""https://user-images.githubusercontent.com/14945792/194948569-26c8639a-abe8-4a82-b8ee-1e00e1d38192.png"">

But there is a workaround with CSS:
<img width=""1400"" alt=""normal-header"" src=""https://user-images.githubusercontent.com/14945792/194948843-1ad0fd55-d881-4037-abe0-3801fe44fc29.png"">



",codebytere,component/printing;bug :beetle:;platform/all,2022-10-10T21:33:40Z,2022-10-11T23:06:36Z,lesleyandreza,codebytere;Hedwig188,lesleyandreza;codebytere,,codebytere,,MarshallOfSound,
electron/electron,36309,"[Bug]: mksnapshot args shipped with v21 doen't work properly ### Preflight Checklist

- [X] I have read the [Contributing Guidelines](https://github.com/electron/electron/blob/main/CONTRIBUTING.md) for this project.
- [X] I agree to follow the [Code of Conduct](https://github.com/electron/electron/blob/main/CODE_OF_CONDUCT.md) that this project adheres to.
- [X] I have searched the [issue tracker](https://www.github.com/electron/electron/issues) for a bug report that matches the one I want to file, without success.

### Electron Version

21.2.2

### What operating system are you using?

macOS

### Operating System Version

13

### What arch are you using?

arm64 (including Apple Silicon)

### Last Known Working Electron version

20.3.4

### Expected Behavior

Running mksnapshot works normally.

### Actual Behavior

It fails.
It succeeds if I remove
```
--turbo-profiling-input
../../v8/tools/builtins-pgo/arm64.profile
```
from the `mksnapshot_args` file.

I'm not able to find this `arm64.profile` file anywhere to try and build with it being present. (the path mentioned is two levels up, so I'm guessing it is somehow missed while creating the zip and relative path ends up here)

### Testcase Gist URL

_No response_

### Additional Information

Contents of the mksnapshot_args file across recent versions

![Screenshot 2022-11-10 at 20 26 02](https://user-images.githubusercontent.com/16598275/201139071-2178ce68-160a-4d64-8fa0-f37bf2350302.png)


Note: I'm running mksnapshot via electron-mksnapshot",jkleinsc,bug :beetle:,2022-11-10T15:38:05Z,2022-11-17T22:49:14Z,LabhanshAgrawal,,LabhanshAgrawal,,VerteDinde;jkleinsc,jkleinsc,jkleinsc,
electron/electron,3647,"With Developer Tools open, `-webkit-app-region:drag` does not work This is a regression閳ユ攰n Electron `0.35.1`, draggable regions of the window stop working when the developer tools are opened. This means that the window effectively can't be moved while the developer tools are open. It doesn't matter if the developer tools are docked or in a separate window.

I think this might be a side effect of an intentional change? In previous versions, you couldn't use the ""Inspect Element"" feature to click and select part of the DOM that was in a draggable region (since it was still draggable.) That now works (I can hover over and click on my title bar), but I can't move the window.

Here's a sample app to reproduce. Open the app, enable ""top toolbar"" and then open the developer tools:

![image](https://cloud.githubusercontent.com/assets/1037212/11510691/d2c9aa5c-9819-11e5-911e-55a87b840dc2.png)

https://dl.dropboxusercontent.com/u/4803975/frameless-window.zip
",zcbenz,platform/macOS;bug :beetle:,2015-12-01T18:54:25Z,2020-11-09T21:54:05Z,bengotow,zcbenz;tommoor;Kilian;justintaylor-dev;wuwb;nukeop;Zyles;wells1013;caprice;yaddran;bpasero;mariotacke;pfrazee;aaBaO;jonniedarko;donpark;preco21;Hum4n01d;wierli,zcbenz;sofianguy,sofianguy,,,jkleinsc,
electron/electron,5429,"Add support for per monitor DPI awareness Electron is currently system DPI aware. This leads to blurry text when monitors with different DPI settings are used. Implementing per monitor DPI awareness would fix this.

https://msdn.microsoft.com/en-us/library/windows/desktop/dn469266(v=vs.85).aspx
",zcbenz,platform/windows;bug :beetle:,2016-05-06T22:24:08Z,2017-04-12T19:27:41Z,miniak,anaisbetts;zcbenz;Bohooslav;buu700;chengcong;ChakerM;gilvandev;ronghester;funkyOne;JoelSutherland;NaokiOtsu;daguej;clarkezone;rhyek;sklink,anaisbetts;groundwater;alespergl;bengotow,groundwater,groundwater,,kevinsawicki,
electron/electron,6015,"win.capturePage never calls back after calling `hide()` for a hidden window - Electron version: 1.2.2
- Operating system: Linux

This is a problem only in linux. It works in OSX.

``` javascript
win.hide()
win.capturePage(function(img){
 // never called
})
```
",codebytere,platform/linux;bug :beetle:,2016-06-12T19:11:50Z,2021-03-09T13:51:45Z,brian-mann,zcbenz;brian-mann;sns-sem;codebytere;jcj52436999;astoilkov,zcbenz;sofianguy,zcbenz;sofianguy,codebytere,codebytere,codebytere,
electron/electron,6359,"Crash closing devtools - Electron version: 1.2.6
- Operating system: Mac OS X 10.11.5

Somehow feels similar to https://github.com/electron/electron/issues/4261

<details>

```
Process:               Electron [4931]
Path:                  /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/MacOS/./Electron
Identifier:            com.microsoft.VSCodeInsiders
Version:               1.3.0-insider (1.3.0-insider)
Code Type:             X86-64 (Native)
Parent Process:        bash [4754]
Responsible:           Terminal [4187]
User ID:               501

Date/Time:             2016-07-06 10:11:15.893 +0200
OS Version:            Mac OS X 10.11.5 (15F34)
Report Version:        11
Anonymous UUID:        E22FC843-9C95-2329-B911-4033726E6AFD


Time Awake Since Boot: 720 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGSEGV)
Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000008

VM Regions Near 0x8:
--> 
    __TEXT                 0000000107783000-0000000107784000 [    4K] r-x/rwx SM=COW  /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/MacOS/Electron

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework   0x00000001078d58ac brightray::InspectableWebContentsImpl::WebContentsDestroyed() + 76
1   com.github.electron.framework   0x00000001078d58ed non-virtual thunk to brightray::InspectableWebContentsImpl::WebContentsDestroyed() + 13
2   com.github.electron.framework   0x000000010838d973 0x107789000 + 12601715
3   com.github.electron.framework   0x000000010838e02e 0x107789000 + 12603438
4   com.github.electron.framework   0x00000001078d3ddd brightray::InspectableWebContentsImpl::CloseDevTools() + 61
5   com.github.electron.framework   0x00000001078d5a3a brightray::InspectableWebContentsImpl::CloseContents(content::WebContents*) + 10
6   com.github.electron.framework   0x00000001078d5a4d non-virtual thunk to brightray::InspectableWebContentsImpl::CloseContents(content::WebContents*) + 13
7   com.github.electron.framework   0x00000001082bce42 0x107789000 + 11746882
8   com.github.electron.framework   0x00000001082ba913 0x107789000 + 11737363
9   com.github.electron.framework   0x00000001082c1401 0x107789000 + 11764737
10  com.github.electron.framework   0x00000001082af1b9 0x107789000 + 11690425
11  com.github.electron.framework   0x0000000108893d78 0x107789000 + 17870200
12  com.github.electron.framework   0x00000001079530db 0x107789000 + 1876187
13  com.github.electron.framework   0x0000000107973403 0x107789000 + 2008067
14  com.github.electron.framework   0x000000010797371c 0x107789000 + 2008860
15  com.github.electron.framework   0x000000010797390b 0x107789000 + 2009355
16  com.github.electron.framework   0x0000000107948b01 0x107789000 + 1833729
17  com.github.electron.framework   0x000000010796a69a 0x107789000 + 1971866
18  com.github.electron.framework   0x0000000107948504 0x107789000 + 1832196
19  com.apple.CoreFoundation        0x00007fff93375881 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
20  com.apple.CoreFoundation        0x00007fff93354fbc __CFRunLoopDoSources0 + 556
21  com.apple.CoreFoundation        0x00007fff933544df __CFRunLoopRun + 927
22  com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
23  com.apple.HIToolbox             0x00007fff9a4a9935 RunCurrentEventLoopInMode + 235
24  com.apple.HIToolbox             0x00007fff9a4a976f ReceiveNextEventCommon + 432
25  com.apple.HIToolbox             0x00007fff9a4a95af _BlockUntilNextEventMatchingListInModeWithFilter + 71
26  com.apple.AppKit                0x00007fff8930edf6 _DPSNextEvent + 1067
27  com.apple.AppKit                0x00007fff8930e226 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454
28  com.apple.AppKit                0x00007fff89302d80 -[NSApplication run] + 682
29  com.github.electron.framework   0x0000000107949336 0x107789000 + 1835830
30  com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
31  com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
32  com.github.electron.framework   0x000000010809027b 0x107789000 + 9466491
33  com.github.electron.framework   0x0000000108090083 0x107789000 + 9465987
34  com.github.electron.framework   0x0000000108092692 0x107789000 + 9475730
35  com.github.electron.framework   0x000000010808bd1d 0x107789000 + 9448733
36  com.github.electron.framework   0x0000000107ffd741 0x107789000 + 8865601
37  com.github.electron.framework   0x0000000107ffc8b6 0x107789000 + 8861878
38  com.github.electron.framework   0x000000010778aac7 AtomMain + 71
39  com.microsoft.VSCodeInsiders    0x0000000107783ec6 main + 38
40  libdyld.dylib                   0x00007fff9f65f5ad start + 1

Thread 1:: Dispatch queue: com.apple.libdispatch-manager
0   libsystem_kernel.dylib          0x00007fff88fb3efa kevent_qos + 10
1   libdispatch.dylib               0x00007fff9288e165 _dispatch_mgr_invoke + 216
2   libdispatch.dylib               0x00007fff9288ddcd _dispatch_mgr_thread + 52

Thread 2:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 3:: WorkerPool/14339
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e3475e _pthread_cond_wait + 821
2   com.github.electron.framework   0x00000001079965fb 0x107789000 + 2151931
3   com.github.electron.framework   0x00000001079a8e7e 0x107789000 + 2227838
4   com.github.electron.framework   0x00000001079a92c8 0x107789000 + 2228936
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 4:: WorkerPool/15115
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e3475e _pthread_cond_wait + 821
2   com.github.electron.framework   0x00000001079965fb 0x107789000 + 2151931
3   com.github.electron.framework   0x00000001079a8e7e 0x107789000 + 2227838
4   com.github.electron.framework   0x00000001079a92c8 0x107789000 + 2228936
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 5:: NetworkConfigWatcher
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.apple.Foundation            0x00007fff9a899ed9 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 270
6   com.github.electron.framework   0x000000010794916e 0x107789000 + 1835374
7   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
8   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
9   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
10  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
11  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
12  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
13  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
14  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 6:: DnsConfigService
0   libsystem_kernel.dylib          0x00007fff88fb3eca kevent + 10
1   com.github.electron.framework   0x0000000108739a07 0x107789000 + 16452103
2   com.github.electron.framework   0x00000001087372bb 0x107789000 + 16442043
3   com.github.electron.framework   0x0000000107947f3f 0x107789000 + 1830719
4   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
5   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
6   com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
7   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
8   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
9   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
10  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 7:: CrShutdownDetector
0   libsystem_kernel.dylib          0x00007fff88fb4362 read + 10
1   com.github.electron.framework   0x0000000107816c0f 0x107789000 + 580623
2   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
3   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
4   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
5   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 8:: Chrome_DBThread
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.github.electron.framework   0x0000000107948ecf 0x107789000 + 1834703
6   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
7   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
8   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
9   com.github.electron.framework   0x000000010809abc8 0x107789000 + 9509832
10  com.github.electron.framework   0x000000010809afd7 0x107789000 + 9510871
11  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
12  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
13  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
14  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
15  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 9:: Chrome_FileThread
0   libsystem_kernel.dylib          0x00007fff88fb3eca kevent + 10
1   com.github.electron.framework   0x0000000108739a07 0x107789000 + 16452103
2   com.github.electron.framework   0x00000001087372bb 0x107789000 + 16442043
3   com.github.electron.framework   0x0000000107947f3f 0x107789000 + 1830719
4   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
5   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
6   com.github.electron.framework   0x000000010809ac48 0x107789000 + 9509960
7   com.github.electron.framework   0x000000010809afe7 0x107789000 + 9510887
8   com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
9   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
10  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
11  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
12  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 10:: Chrome_FileUserBlockingThread
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.github.electron.framework   0x0000000107948ecf 0x107789000 + 1834703
6   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
7   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
8   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
9   com.github.electron.framework   0x000000010809acc8 0x107789000 + 9510088
10  com.github.electron.framework   0x000000010809aff7 0x107789000 + 9510903
11  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
12  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
13  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
14  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
15  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 11:: Chrome_ProcessLauncherThread
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.github.electron.framework   0x0000000107948ecf 0x107789000 + 1834703
6   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
7   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
8   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
9   com.github.electron.framework   0x000000010809ad48 0x107789000 + 9510216
10  com.github.electron.framework   0x000000010809b004 0x107789000 + 9510916
11  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
12  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
13  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
14  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
15  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 12:: Chrome_CacheThread
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.github.electron.framework   0x0000000107948ecf 0x107789000 + 1834703
6   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
7   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
8   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
9   com.github.electron.framework   0x000000010809adc8 0x107789000 + 9510344
10  com.github.electron.framework   0x000000010809b011 0x107789000 + 9510929
11  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
12  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
13  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
14  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
15  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 13:: Chrome_IOThread
0   libsystem_platform.dylib        0x00007fff8d4c47d6 _os_lock_spin_lock + 12
1   com.github.electron.framework   0x0000000107985f70 0x107789000 + 2084720
2   libsystem_malloc.dylib          0x00007fff9bfc25a1 malloc_zone_malloc + 71
3   libsystem_malloc.dylib          0x00007fff9bfc10cc malloc + 42
4   libc++.1.dylib                  0x00007fff93fe87de operator new(unsigned long) + 30
5   com.github.electron.framework   0x000000010888dafa 0x107789000 + 17844986
6   com.github.electron.framework   0x000000010888dc96 0x107789000 + 17845398
7   com.github.electron.framework   0x000000010888cfac 0x107789000 + 17842092
8   com.github.electron.framework   0x000000010888de4a 0x107789000 + 17845834
9   com.github.electron.framework   0x000000010888d551 0x107789000 + 17843537
10  com.github.electron.framework   0x000000010888d833 0x107789000 + 17844275
11  com.github.electron.framework   0x000000010888d7a6 0x107789000 + 17844134
12  com.github.electron.framework   0x0000000108896243 0x107789000 + 17879619
13  com.github.electron.framework   0x0000000108895a51 0x107789000 + 17877585
14  com.github.electron.framework   0x00000001088958fd 0x107789000 + 17877245
15  com.github.electron.framework   0x000000010889140b 0x107789000 + 17859595
16  com.github.electron.framework   0x0000000107947c48 0x107789000 + 1829960
17  com.github.electron.framework   0x0000000108737505 0x107789000 + 16442629
18  com.github.electron.framework   0x0000000107947e0f 0x107789000 + 1830415
19  com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
20  com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
21  com.github.electron.framework   0x000000010809ae48 0x107789000 + 9510472
22  com.github.electron.framework   0x000000010809b01e 0x107789000 + 9510942
23  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
24  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
25  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
26  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
27  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 14:: IndexedDB
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.github.electron.framework   0x0000000107948ecf 0x107789000 + 1834703
6   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
7   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
8   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
9   com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
10  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
11  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
12  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
13  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 15:: CompositorTileWorker1/41987
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x0000000107d67218 0x107789000 + 6152728
3   com.github.electron.framework   0x00000001079a6c03 0x107789000 + 2219011
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 16:
0   libsystem_kernel.dylib          0x00007fff88fb307a __select + 10
1   com.github.electron.framework   0x0000000107880632 atom::NodeBindingsMac::PollEvents() + 210
2   com.github.electron.framework   0x000000010787fbdf atom::NodeBindings::EmbedThreadRunner(void*) + 63
3   libnode.dylib                   0x000000010bce34d9 0x10bb89000 + 1418457
4   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
5   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
6   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 17:: BrowserBlockingWorker1/52279
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x00000001079a456a 0x107789000 + 2209130
3   com.github.electron.framework   0x00000001079a3ced 0x107789000 + 2206957
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 18:: NetworkConfigWatcher
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.apple.Foundation            0x00007fff9a899ed9 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 270
6   com.github.electron.framework   0x000000010794916e 0x107789000 + 1835374
7   com.github.electron.framework   0x0000000107948954 0x107789000 + 1833300
8   com.github.electron.framework   0x0000000107987eb3 0x107789000 + 2092723
9   com.github.electron.framework   0x0000000107972bad 0x107789000 + 2005933
10  com.github.electron.framework   0x00000001079a7488 0x107789000 + 2221192
11  com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
12  libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
13  libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
14  libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 19:
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   libnode.dylib                   0x000000010bce3879 uv_cond_wait + 9
3   libnode.dylib                   0x000000010bcd8023 0x10bb89000 + 1372195
4   libnode.dylib                   0x000000010bce34d9 0x10bb89000 + 1418457
5   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
6   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
7   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 20:
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   libnode.dylib                   0x000000010bce3879 uv_cond_wait + 9
3   libnode.dylib                   0x000000010bcd8023 0x10bb89000 + 1372195
4   libnode.dylib                   0x000000010bce34d9 0x10bb89000 + 1418457
5   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
6   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
7   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 21:
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   libnode.dylib                   0x000000010bce3879 uv_cond_wait + 9
3   libnode.dylib                   0x000000010bcd8023 0x10bb89000 + 1372195
4   libnode.dylib                   0x000000010bce34d9 0x10bb89000 + 1418457
5   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
6   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
7   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 22:
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   libnode.dylib                   0x000000010bce3879 uv_cond_wait + 9
3   libnode.dylib                   0x000000010bcd8023 0x10bb89000 + 1372195
4   libnode.dylib                   0x000000010bce34d9 0x10bb89000 + 1418457
5   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
6   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
7   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 23:: com.apple.NSEventThread
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.apple.AppKit                0x00007fff89464d95 _NSEventThread + 149
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 24:
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff933551c4 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9335468c __CFRunLoopRun + 1356
4   com.apple.CoreFoundation        0x00007fff93353ed8 CFRunLoopRunSpecific + 296
5   com.apple.CoreFoundation        0x00007fff933959b1 CFRunLoopRun + 97
6   libnode.dylib                   0x000000010bce7096 0x10bb89000 + 1433750
7   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
8   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
9   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 25:: WorkerPool/64515
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e3475e _pthread_cond_wait + 821
2   com.github.electron.framework   0x00000001079965fb 0x107789000 + 2151931
3   com.github.electron.framework   0x00000001079a8e7e 0x107789000 + 2227838
4   com.github.electron.framework   0x00000001079a92c8 0x107789000 + 2228936
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 26:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 27:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 28:
0   libsystem_kernel.dylib          0x00007fff88facf72 mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff88fac3b3 mach_msg + 55
2   com.github.electron.framework   0x00000001078eff60 0x107789000 + 1470304
3   com.github.electron.framework   0x00000001078efebc crashpad::MachMessageWithDeadline(mach_msg_header_t*, int, unsigned int, unsigned int, unsigned long long, unsigned int, bool) + 204
4   com.github.electron.framework   0x00000001078f07b7 0x107789000 + 1472439
5   com.github.electron.framework   0x00000001078f0536 crashpad::MachMessageServer::Run(crashpad::MachMessageServer::Interface*, unsigned int, int, crashpad::MachMessageServer::Persistent, crashpad::MachMessageServer::ReceiveLarge, unsigned int) + 550
6   com.github.electron.framework   0x00000001078e9f0c 0x107789000 + 1445644
7   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
8   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
9   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 29:: BrowserBlockingWorker2/84239
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x00000001079a456a 0x107789000 + 2209130
3   com.github.electron.framework   0x00000001079a3ced 0x107789000 + 2206957
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 30:: BrowserBlockingWorker3/75799
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x00000001079a456a 0x107789000 + 2209130
3   com.github.electron.framework   0x00000001079a3ced 0x107789000 + 2206957
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 31:: CachePoolWorker1/92667
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x00000001079a456a 0x107789000 + 2209130
3   com.github.electron.framework   0x00000001079a3ced 0x107789000 + 2206957
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 32:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 33:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 34:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 35:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 36:
0   libsystem_kernel.dylib          0x00007fff88fb35e2 __workq_kernreturn + 10
1   libsystem_pthread.dylib         0x00007fff97e33578 _pthread_wqthread + 1283
2   libsystem_pthread.dylib         0x00007fff97e31341 start_wqthread + 13

Thread 37:: CachePoolWorker2/96711
0   libsystem_kernel.dylib          0x00007fff88fb2db6 __psynch_cvwait + 10
1   libsystem_pthread.dylib         0x00007fff97e34728 _pthread_cond_wait + 767
2   com.github.electron.framework   0x00000001079a456a 0x107789000 + 2209130
3   com.github.electron.framework   0x00000001079a3ced 0x107789000 + 2206957
4   com.github.electron.framework   0x00000001079a6a4d 0x107789000 + 2218573
5   com.github.electron.framework   0x00000001079a3787 0x107789000 + 2205575
6   libsystem_pthread.dylib         0x00007fff97e3399d _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff97e3391a _pthread_start + 168
8   libsystem_pthread.dylib         0x00007fff97e31351 thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000000  rbx: 0x00007fd19a906170  rcx: 0x00000000001f8100  rdx: 0x0000000000118370
  rdi: 0x00007fd19a905790  rsi: 0x0000000000000000  rbp: 0x00007fff5847a1c0  rsp: 0x00007fff5847a1a0
   r8: 0x0000000000000003   r9: 0x00007fd1984cd280  r10: 0x000000006fd42290  r11: 0x00007fd198400000
  r12: 0x00007fd1998e5400  r13: 0x00007fd1986db920  r14: 0x00007fd198631fb0  r15: 0x00007fd198632070
  rip: 0x00000001078d58ac  rfl: 0x0000000000010206  cr2: 0x0000000000000008

Logical CPU:     4
Error Code:      0x00000004
Trap Number:     14


Binary Images:
       0x107783000 -        0x107783fff +com.microsoft.VSCodeInsiders (1.3.0-insider - 1.3.0-insider) <3212FE45-61D8-38AB-85BF-FF708772E1F3> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/MacOS/Electron
       0x107789000 -        0x10b300fef +com.github.electron.framework (0) <26CDBD03-B33B-3654-ADD8-DEC8B9A0E1D8> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x10ba4f000 -        0x10ba65fff +com.github.Squirrel (1.0 - 1) <A3768DDA-8D21-3A44-BA9A-1B78C79AF305> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x10ba85000 -        0x10bae8ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x10bb5f000 -        0x10bb73fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x10bb89000 -        0x10ca06ff7 +libnode.dylib (0) <D9C8E5AB-BE02-3C2C-86A2-0B48AFDCC2B5> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib
       0x10ce6e000 -        0x10cf75ff7 +libffmpeg.dylib (0) <F82D929F-AB81-3588-8E7F-EB0C9E5A5076> /Users/USER/Desktop/*/Visual Studio Code - Insiders.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x10d0ac000 -        0x10d0e3fff  com.apple.audio.midi.CoreMIDI (1.10 - 88) <51E79766-51D8-3A95-A7FD-18E7E11528F3> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
       0x10d10c000 -        0x10d125fff  libexpat.1.dylib (12.40.1) <405B65BE-42E4-36FA-AA41-5B717CB3F5E7> /usr/lib/libexpat.1.dylib
       0x111a7c000 -        0x111a7cfe7 +cl_kernels (???) <8B092AAE-33F3-4D88-B5C0-FC329D7FE906> cl_kernels
       0x114951000 -        0x1149b7ff7  com.apple.driver.AppleIntelHD5000GraphicsMTLDriver (10.14.66 - 10.1.4) <48A178A3-AA09-3B6C-AA4F-5BFA4145DE58> /System/Library/Extensions/AppleIntelHD5000GraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsMTLDriver
    0x7fff67ebe000 -     0x7fff67ef525f  dyld (360.22) <A468D85E-D8D6-3461-8C99-49D3B9ACFC63> /usr/lib/dyld
    0x7fff88f06000 -     0x7fff88f08ff7  com.apple.xpc.ServiceManagement (1.0 - 1) <D96D7A6D-EDEB-35EE-B5D9-E33A3BF011B5> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff88f09000 -     0x7fff88f1bfff  libsasl2.2.dylib (209) <11C7D200-0CA5-30F4-A19A-178CA81D48FE> /usr/lib/libsasl2.2.dylib
    0x7fff88f1c000 -     0x7fff88f6efff  com.apple.AppleVAFramework (5.0.32 - 5.0.32) <271ED7A9-73E5-3595-A8D6-28594C9F3C9D> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff88f6f000 -     0x7fff88f7dfff  com.apple.opengl (12.1.0 - 12.1.0) <BBC4458E-12FC-3C9B-BF7E-6985D61C7A67> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff88f7e000 -     0x7fff88f83fff  com.apple.ImageCapture (9.0 - 9.0) <ACECF0B7-7D92-3A22-BF47-E8FADF4C5378> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff88f9c000 -     0x7fff88fbaff7  libsystem_kernel.dylib (3248.50.21) <78E54D59-D2B0-3F54-9A4A-0A68D671F253> /usr/lib/system/libsystem_kernel.dylib
    0x7fff88fbb000 -     0x7fff89032feb  libcorecrypto.dylib (335.50.1) <B5C05FD7-A540-345A-87BF-8E41848A3C17> /usr/lib/system/libcorecrypto.dylib
    0x7fff89065000 -     0x7fff89073fff  libxar.1.dylib (302) <03207F66-2C4A-3DBD-8D81-70F4C85903C4> /usr/lib/libxar.1.dylib
    0x7fff892c6000 -     0x7fff89eefff7  com.apple.AppKit (6.9 - 1404.47) <F3411F6E-DD87-34D0-8C68-C69B2205E41D> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff89f94000 -     0x7fff89fdaff7  libauto.dylib (186) <999E610F-41FC-32A3-ADCA-5EC049B65DFB> /usr/lib/libauto.dylib
    0x7fff8a321000 -     0x7fff8a32dff7  com.apple.OpenDirectory (10.11 - 194) <31A67AD5-5CC2-350A-96D7-821DF4BC4196> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff8a32e000 -     0x7fff8a32eff7  liblaunch.dylib (765.50.8) <834ED605-5114-3641-AA4D-ECF31B801C50> /usr/lib/system/liblaunch.dylib
    0x7fff8a32f000 -     0x7fff8a43dff3  com.apple.desktopservices (1.10.3 - 1.10.3) <3A6906D4-C0B8-30D1-B589-0466E5E42B69> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fff8b552000 -     0x7fff8b62bfff  com.apple.CoreMedia (1.0 - 1731.15.204) <4BFDD68E-9411-3358-8679-BB3EDA94F9A2> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff8b62c000 -     0x7fff8b663ff7  com.apple.LDAPFramework (2.4.28 - 194.5) <9AE33BF2-FB17-342D-8F1E-5F83C6E6EB69> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP
    0x7fff8b772000 -     0x7fff8b822fe7  libvMisc.dylib (563.5) <6D73C20D-D1C4-3BA5-809B-4B597C15AA86> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff8b91c000 -     0x7fff8b91dfff  libsystem_blocks.dylib (65) <1244D9D5-F6AA-35BB-B307-86851C24B8E5> /usr/lib/system/libsystem_blocks.dylib
    0x7fff8b91e000 -     0x7fff8ba68ff7  com.apple.coreui (2.1 - 366.1) <8138636F-A0A7-31C7-896C-5F5747FA1B2A> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fff8ba69000 -     0x7fff8ba6bfff  com.apple.EFILogin (2.0 - 2) <38150198-DD7F-3C73-BCAA-C74BB376393A> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin
    0x7fff8ba6c000 -     0x7fff8ba70fff  libcache.dylib (75) <9548AAE9-2AB7-3525-9ECE-A2A7C4688447> /usr/lib/system/libcache.dylib
    0x7fff8c27a000 -     0x7fff8c2effff  com.apple.framework.IOKit (2.0.2 - 1179.50.2) <A509D3AE-9D48-31B7-89C7-326A7A2007B2> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff8c7cf000 -     0x7fff8c7d0ffb  libSystem.B.dylib (1226.10.1) <C5D09FE1-CC70-383E-AC27-18602F2EDEC4> /usr/lib/libSystem.B.dylib
    0x7fff8c7f5000 -     0x7fff8c85cfff  com.apple.framework.CoreWiFi (11.0 - 1101.20) <993592F1-B3F1-3FAD-87BD-EA83C361BCCF> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fff8c863000 -     0x7fff8c87cfff  com.apple.CFOpenDirectory (10.11 - 194) <11F95672-55E0-3F9D-9171-5E8C56AEE948> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff8c8a2000 -     0x7fff8c95bff7  com.apple.cloudkit.CloudKit (482.29 - 482.29) <E235B37E-1491-3857-BDE8-38450D4FE8D0> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
    0x7fff8c95c000 -     0x7fff8c9c7ff7  com.apple.framework.CoreWLAN (11.0 - 1101.20) <3B35C543-7FCE-333F-80C1-432FA41DDCDE> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff8d2d6000 -     0x7fff8d2d7fff  liblangid.dylib (122) <9CC4F0D1-5C51-3B69-BC8F-EE3A51FD0822> /usr/lib/liblangid.dylib
    0x7fff8d4b0000 -     0x7fff8d4b4fff  libGIF.dylib (1450) <DDEA46A2-85B7-32D7-8CC2-8F4C10AA12D5> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff8d4c3000 -     0x7fff8d4cbfef  libsystem_platform.dylib (74.40.2) <29A905EF-6777-3C33-82B0-6C3A88C4BA15> /usr/lib/system/libsystem_platform.dylib
    0x7fff8d4dc000 -     0x7fff8d682ff7  com.apple.audio.toolbox.AudioToolbox (1.13 - 1.13) <082319FC-59F2-3D36-AC9B-94759724E302> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff8d690000 -     0x7fff8d695ff7  libmacho.dylib (875.1) <318264FA-58F1-39D8-8285-1F6254EE410E> /usr/lib/system/libmacho.dylib
    0x7fff8d6c6000 -     0x7fff8d844fff  com.apple.UIFoundation (1.0 - 436.1) <AABB5267-E7B7-3D75-B051-E665BDA8DEF4> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fff8d8e6000 -     0x7fff8da2bfff  com.apple.QTKit (7.7.3 - 2943.10) <9D0EA81D-7BDE-3B47-B300-5C53C5EE4846> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff8ddde000 -     0x7fff8dde1fff  com.apple.Mangrove (1.0 - 1) <2D86B3AD-64C3-3BB4-BC66-1CFD0C90E844> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fff8e241000 -     0x7fff8e24cfff  libcsfde.dylib (517.50.1) <52F0DB6A-13B8-355E-ADFD-72834D3CA183> /usr/lib/libcsfde.dylib
    0x7fff8e24d000 -     0x7fff8e41bff3  com.apple.QuartzCore (1.11 - 410.14) <076BDE58-8AED-3D47-84FD-548CF8E8EDB9> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff8e50b000 -     0x7fff8e516fff  com.apple.AppSandbox (4.0 - 261.40.2) <52766210-B6EB-3B73-AB1B-42E0A9AD2EE8> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff8e548000 -     0x7fff8e57bff7  com.apple.MediaKit (16 - 809) <BF8032FE-6645-37F6-A622-BC7EEE3EAABF> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit
    0x7fff8e5f2000 -     0x7fff8e666ff3  com.apple.securityfoundation (6.0 - 55126) <130656AE-2711-3914-8736-D8B021C93FE0> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff8e706000 -     0x7fff8e79cfff  com.apple.ColorSync (4.9.0 - 4.9.0) <8FC37E20-6579-3CB2-9D49-BC39FC38DF87> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff8e7bc000 -     0x7fff8e8aeff7  libiconv.2.dylib (44) <F05A0A5A-92A9-3668-8F20-F27CBDA26BE9> /usr/lib/libiconv.2.dylib
    0x7fff8e99b000 -     0x7fff8e99dff7  libRadiance.dylib (1450) <BE9E0EBE-C589-3684-B4AE-04F95C8D410A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff8ebdb000 -     0x7fff8ebddfff  com.apple.CoreDuetDebugLogging (1.0 - 1) <7C932160-AC9C-3173-900F-98138E829CB3> /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging
    0x7fff8ed45000 -     0x7fff8ed47ff7  libsystem_configuration.dylib (802.40.13) <3DEB7DF9-6804-37E1-BC83-0166882FF0FF> /usr/lib/system/libsystem_configuration.dylib
    0x7fff8ed48000 -     0x7fff8f1e3ffb  com.apple.GeoServices (1.0 - 1151.49.1) <2D887517-B73D-30FF-91DC-AF6AD91F96B9> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
    0x7fff8f1e4000 -     0x7fff8f29cff7  com.apple.CoreDuet (1.0 - 1) <FC1EAEE1-73A4-3B13-A634-1D2A94D0C0B7> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet
    0x7fff8f29d000 -     0x7fff8f303ff7  libsystem_network.dylib (583.50.1) <B52DAB73-92DC-3DA7-B9F4-B899D66445C1> /usr/lib/system/libsystem_network.dylib
    0x7fff8f304000 -     0x7fff8f30afff  com.apple.XPCService (2.0 - 1) <5E2122D6-FFA2-3552-BF16-9FD3F36B40DB> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
    0x7fff8f31f000 -     0x7fff8f327fff  libGFXShared.dylib (12.1) <5A0C2493-200C-30BE-97D5-8E8C0B8E604D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff8f328000 -     0x7fff8f36dff7  com.apple.coreservices.SharedFileList (24.4 - 24.5) <1D2AD77B-778F-3253-A295-3D0A32A8121C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff8f3d5000 -     0x7fff8f3ddfff  com.apple.AppleSRP (5.0 - 1) <840A5C20-6452-36BB-ACF7-29BA6CBF7C48> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP
    0x7fff8fd53000 -     0x7fff8fe80ff3  com.apple.CoreText (352.0 - 494.11) <08E8640E-6602-3A00-BC28-94235FD311B4> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff8fe81000 -     0x7fff910cffe7  com.apple.CoreGraphics (1.600.0 - 957) <B5D82A82-EDF9-34D5-A8C5-7F25B80985EE> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff9110f000 -     0x7fff91112ff7  com.apple.help (1.3.3 - 46) <35DA4D48-0BC2-35A1-8D7C-40905CDF4F64> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff91113000 -     0x7fff9131efff  libFosl_dynamic.dylib (16.24) <5F9DB82D-FD4B-3952-8531-CE020F93ED49> /usr/lib/libFosl_dynamic.dylib
    0x7fff91362000 -     0x7fff9137cfff  com.apple.Kerberos (3.0 - 1) <1B4744BF-E5AE-38E2-AA56-E22D3270F2E8> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff9137d000 -     0x7fff91382ff3  libunwind.dylib (35.3) <F6EB48E5-4D12-359A-AB54-C937FBBE9043> /usr/lib/system/libunwind.dylib
    0x7fff91383000 -     0x7fff9138bfff  com.apple.CoreServices.FSEvents (1223.10.1 - 1223.10.1) <7F5B7A23-BC1D-3FA9-A9B8-D534F1E1979A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff91396000 -     0x7fff91423dd7  com.apple.AppleJPEG (1.0 - 1) <558ACADA-C41F-3EEF-82A0-C2D7B13C5428> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff9147c000 -     0x7fff91689fff  libicucore.A.dylib (551.51.3) <5BC80F94-C90D-3175-BD96-FF1DC222EC9C> /usr/lib/libicucore.A.dylib
    0x7fff9168a000 -     0x7fff91a05ffb  com.apple.VideoToolbox (1.0 - 1731.15.204) <2B21F9B2-66A2-3900-84A5-0AB66F8056E4> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff91ac4000 -     0x7fff91aebfff  com.apple.ChunkingLibrary (167 - 167) <AD7F285C-005E-36BB-98A3-5826413533BE> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff91aec000 -     0x7fff91af1fff  com.apple.DiskArbitration (2.7 - 2.7) <F55902AA-5316-3255-A701-FDED5B553065> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff91b73000 -     0x7fff91b9cfff  libsystem_info.dylib (477.50.4) <FAA9226D-64DE-3769-A6D8-6CABA4B7FF4D> /usr/lib/system/libsystem_info.dylib
    0x7fff91c22000 -     0x7fff91fb7fdb  com.apple.vImage (8.0 - 8.0) <4BAC9B6F-7482-3580-8787-AB0A5B4D331B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff92886000 -     0x7fff928b3fff  libdispatch.dylib (501.40.12) <C7499857-61A5-3D7D-A5EA-65DCC8C3DF92> /usr/lib/system/libdispatch.dylib
    0x7fff928b4000 -     0x7fff92922ff7  com.apple.ApplicationServices.ATS (377 - 394.4) <9779E916-0788-3CAC-B1EC-F68BCB12A2B6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff929d8000 -     0x7fff929deff7  com.apple.speech.recognition.framework (5.1.1 - 5.1.1) <9E5A980A-F455-32D5-BBEE-3BD6018CC45E> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff92a64000 -     0x7fff92bcbfff  libBLAS.dylib (1162.2) <A1398FE0-39D2-33EA-9A0F-B2644EEA29A0> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff92bd5000 -     0x7fff92bd7fff  com.apple.loginsupport (1.0 - 1) <9B2F5F9B-ED38-313F-B798-D2B667BCD6B5> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fff92bd8000 -     0x7fff92c12ff7  com.apple.DebugSymbols (132 - 132) <23A42C53-B941-3871-9EE2-4C87A46005B5> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fff92c13000 -     0x7fff92c1dfff  com.apple.NetAuth (6.0 - 6.0) <D692B1EF-534F-3892-8E2F-2BBA7C8AFD74> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fff9325c000 -     0x7fff9326dfff  libSparseBLAS.dylib (1162.2) <EBEB3848-3468-342A-91A6-5C47F2369CD9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff9326e000 -     0x7fff932cafff  libTIFF.dylib (1450) <14EB7C03-7DDA-3276-BAC5-D597913AC9C4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff932cb000 -     0x7fff93741fff  com.apple.CoreFoundation (6.9 - 1258.1) <943A1383-DA6A-3DC0-ABCD-D9AEB3D0D34D> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff93894000 -     0x7fff938ccff7  com.apple.RemoteViewServices (2.0 - 101) <B2881449-8CFE-3D1C-B4BF-155640392533> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fff93904000 -     0x7fff93904ff7  libunc.dylib (29) <DDB1E947-C775-33B8-B461-63E5EB698F0E> /usr/lib/system/libunc.dylib
    0x7fff93c17000 -     0x7fff93c17fff  com.apple.Cocoa (6.11 - 22) <807787AB-D231-3F51-A99B-A9314623C571> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff93c18000 -     0x7fff93c64ff7  com.apple.corelocation (1486.17 - 1615.38) <6336CFC5-9D7D-3B76-B263-56DD6EBD0B8D> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation
    0x7fff93c65000 -     0x7fff93c70fff  com.apple.CrashReporterSupport (10.11 - 718) <05892B57-F2CD-3C84-B984-0417F6B361DB> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fff93c71000 -     0x7fff93c71ff7  libkeymgr.dylib (28) <8371CE54-5FDD-3CE9-B3DF-E98C761B6FE0> /usr/lib/system/libkeymgr.dylib
    0x7fff93ca9000 -     0x7fff93d20ff7  com.apple.MMCS (1.3 - 357.1) <549FBEFC-55F7-3101-BF51-A0B1F7CF2B46> /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS
    0x7fff93e04000 -     0x7fff93e0fff7  libChineseTokenizer.dylib (16) <79B8C67A-3061-3C78-92CD-4650719E68D4> /usr/lib/libChineseTokenizer.dylib
    0x7fff93e10000 -     0x7fff93e39ff7  libxpc.dylib (765.50.8) <54D1328E-054E-3DAA-89E2-375722F9D18F> /usr/lib/system/libxpc.dylib
    0x7fff93f9b000 -     0x7fff93f9dfff  com.apple.SecCodeWrapper (4.0 - 261.40.2) <1F832591-59A8-3B3F-943F-D6D827463782> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fff93fa2000 -     0x7fff93fabfff  com.apple.icloud.FindMyDevice (1.0 - 1) <B9C741F2-6FAC-3BA7-B6E0-9A910C6E8D4E> /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice
    0x7fff93fac000 -     0x7fff93fffff7  libc++.1.dylib (120.1) <8FC3D139-8055-3498-9AC5-6467CB7F4D14> /usr/lib/libc++.1.dylib
    0x7fff942c0000 -     0x7fff942c0fff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10) <054DFE32-737D-3211-9A14-0FC5E1A880E3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff942c1000 -     0x7fff9434aff7  com.apple.PerformanceAnalysis (1.0 - 1) <2064F7E8-5C3D-3E18-8029-2D832D13E2A2> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fff94b63000 -     0x7fff94b76fff  com.apple.CoreBluetooth (1.0 - 1) <E54CA9A2-A5C6-30C5-9D6E-8472DBA9371E> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff94b84000 -     0x7fff94c28fff  com.apple.Bluetooth (4.4.5 - 4.4.5f3) <141F2C36-70B6-32D3-A556-7A605832CDB3> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff94c29000 -     0x7fff94c29fff  libOpenScriptingUtil.dylib (169.1) <AD0DAC8A-9849-3077-999F-9AEC6112BDAB> /usr/lib/libOpenScriptingUtil.dylib
    0x7fff94ca0000 -     0x7fff94cd1fff  com.apple.GSS (4.0 - 2.0) <B490333A-3B3E-397A-AD75-68846E9A9140> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff94cd2000 -     0x7fff94cdaffb  libsystem_dnssd.dylib (625.50.5) <4D10E12B-59B5-386F-82DA-326F18028F0A> /usr/lib/system/libsystem_dnssd.dylib
    0x7fff94cdb000 -     0x7fff950b3fef  com.apple.CoreAUC (214.0.0 - 214.0.0) <F80C19CA-6CD0-3052-9C22-0288A257CCC8> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff950c3000 -     0x7fff950c3fff  libenergytrace.dylib (10.40.1) <0A491CA7-3451-3FD5-999A-58AB4362682B> /usr/lib/libenergytrace.dylib
    0x7fff950c4000 -     0x7fff950dbff7  libsystem_asl.dylib (323.50.1) <41F8E11F-1BD0-3F1D-BA3A-AA1577ED98A9> /usr/lib/system/libsystem_asl.dylib
    0x7fff95125000 -     0x7fff9514effb  libRIP.A.dylib (957) <5F18F20D-5921-3314-A9F8-F1B1CB62C83D> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib
    0x7fff9514f000 -     0x7fff95235ff7  libcrypto.0.9.8.dylib (59.40.2) <2486D801-C756-3488-B519-1AA6807E8948> /usr/lib/libcrypto.0.9.8.dylib
    0x7fff95246000 -     0x7fff95642fff  libLAPACK.dylib (1162.2) <987E42B0-5108-3065-87F0-9DF7616A8A06> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff95643000 -     0x7fff9566effb  libarchive.2.dylib (33.20.2) <6C370A21-63FD-3A68-B4B3-5333F24B770B> /usr/lib/libarchive.2.dylib
    0x7fff96578000 -     0x7fff9673efe7  com.apple.ImageIO.framework (3.3.0 - 1450) <18ABA1F4-43EC-3990-9777-C91FD3D6AF71> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff96744000 -     0x7fff96746fff  libCVMSPluginSupport.dylib (12.1) <D81B3D8D-B83F-3918-BD4B-6C794A30AF9F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff96747000 -     0x7fff96747fff  com.apple.ApplicationServices (48 - 48) <ADD57D3A-142F-3EF5-BFD8-EACD82164884> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff96b4a000 -     0x7fff96b4ffff  com.apple.TCC (1.0 - 1) <F5EEB2D3-9517-3975-97BE-22CB8E11B8A3> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fff96b50000 -     0x7fff96b58fff  libsystem_networkextension.dylib (385.40.36) <66095DC7-6539-38F2-95EE-458F15F6D014> /usr/lib/system/libsystem_networkextension.dylib
    0x7fff9728c000 -     0x7fff97291ff7  libheimdal-asn1.dylib (453.40.10) <981DE40B-FA16-36F7-BE92-8C8A115D6CD9> /usr/lib/libheimdal-asn1.dylib
    0x7fff9729b000 -     0x7fff972dcff7  libGLU.dylib (12.1) <CD7A5916-3E3C-3EF3-A275-B281016B99CB> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff9730b000 -     0x7fff973ebff7  unorm8_rgba.dylib (2.7.3) <9EB6C346-CFF6-32D7-B4A1-2409DFBCB216> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib
    0x7fff973ec000 -     0x7fff973eefff  libsystem_coreservices.dylib (19.2) <1B3F5AFC-FFCD-3ECB-8B9A-5538366FB20D> /usr/lib/system/libsystem_coreservices.dylib
    0x7fff973ef000 -     0x7fff973f2fff  libCoreVMClient.dylib (119.5) <560D70FB-709F-3030-96C9-F249FCB7DA6D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff973f3000 -     0x7fff97441fff  libcurl.4.dylib (90) <12E01E4B-24C9-394C-9D2C-85CF85D5F459> /usr/lib/libcurl.4.dylib
    0x7fff97442000 -     0x7fff9744afff  libMatch.1.dylib (27) <3AC0BFB8-7E69-3DBE-A175-7F3946FC4554> /usr/lib/libMatch.1.dylib
    0x7fff9744e000 -     0x7fff97534fef  unorm8_bgra.dylib (2.7.3) <B315AE9C-9E09-3D9F-9513-EC2195908516> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib
    0x7fff97535000 -     0x7fff97536fff  libsystem_secinit.dylib (20) <32B1A8C6-DC84-3F4F-B8CE-9A52B47C3E6B> /usr/lib/system/libsystem_secinit.dylib
    0x7fff976fb000 -     0x7fff97720ff7  libPng.dylib (1450) <F7944170-4854-3CA5-B66F-7A6CA2292DF2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff9776a000 -     0x7fff9780afff  com.apple.Metadata (10.7.0 - 972.34) <A93B485D-094C-3024-8CBB-D9E035FB83C4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff9780b000 -     0x7fff97907ff7  libFontParser.dylib (158.6) <267A9AE4-4138-3112-8D73-BDFDC96568FF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff97908000 -     0x7fff9790dfff  com.apple.MediaAccessibility (1.0 - 79) <C5E61B45-1967-3602-A48C-31E132B998B2> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff979ac000 -     0x7fff97a0afff  com.apple.CoreServices.OSServices (728.12 - 728.12) <776EBD4F-7052-377F-A70D-E2FDBD465A5E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff97a0b000 -     0x7fff97a5cff7  libcups.2.dylib (435.2) <91584A40-214D-33E8-A613-CE22289037C8> /usr/lib/libcups.2.dylib
    0x7fff97a5d000 -     0x7fff97a73ff7  libLinearAlgebra.dylib (1162.2) <FFE54EDF-F06F-3C0A-864A-4CA7BBFD4B2D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff97a74000 -     0x7fff97ac0ffb  com.apple.HIServices (1.22 - 550) <6B76B41C-CF5A-34C4-89F4-EFD7CA3D1C9D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff97ac1000 -     0x7fff97aefff7  com.apple.CoreServicesInternal (248.2 - 248.2) <6E111F0A-D7F1-3738-ADE7-CF983BD4EC8B> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fff97af0000 -     0x7fff97b05fff  com.apple.AppContainer (4.0 - 261.40.2) <F220E702-1C00-3BD2-9943-C7E75C3B4418> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff97c61000 -     0x7fff97c7eff7  com.apple.AppleVPAFramework (2.1.2 - 2.1.2) <41378C0B-B56A-3A73-9BD0-E06FA1F87B8C> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA
    0x7fff97c85000 -     0x7fff97c86fff  libDiagnosticMessagesClient.dylib (100) <4243B6B4-21E9-355B-9C5A-95A216233B96> /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fff97cdc000 -     0x7fff97cfefff  com.apple.IconServices (68.1 - 68.1) <CDEEDBE6-F53B-3BA1-82D4-23BCA3DD8949> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fff97cff000 -     0x7fff97e24fff  com.apple.LaunchServices (728.12 - 728.12) <F5AB56CD-CF33-33F0-A48D-372551714E77> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff97e25000 -     0x7fff97e2aff7  com.apple.AssetCacheServices (14.1 - 14.1) <5F249F84-660A-3E94-B073-6729E7ED56D9> /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices
    0x7fff97e30000 -     0x7fff97e39ff7  libsystem_pthread.dylib (138.10.4) <3DD1EF4C-1D1B-3ABF-8CC6-B3B1CEEE9559> /usr/lib/system/libsystem_pthread.dylib
    0x7fff97e3f000 -     0x7fff980c6ff3  com.apple.CFNetwork (760.5.1 - 760.5.1) <EE9426D1-F11C-3DD4-AE08-EA29AEB27177> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff980c7000 -     0x7fff980d3fff  com.apple.speech.synthesis.framework (5.4.12 - 5.4.12) <71DA00B8-5EA2-326B-8814-59DB25512F65> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff980f3000 -     0x7fff980f3fff  com.apple.CoreServices (728.12 - 728.12) <A4FFF004-53B0-3EAC-A13F-5416BFFD8886> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff98190000 -     0x7fff981fffff  com.apple.SearchKit (1.4.0 - 1.4.0) <F159A888-34CA-36F1-AC8E-EB1B38C9DFB3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff982dc000 -     0x7fff9830cff3  com.apple.CoreAVCHD (5.8.0 - 5800.4.2) <4AAFB1C4-3708-30F9-ACFA-90564347204C> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff98313000 -     0x7fff98313fff  com.apple.Carbon (154 - 157) <8F6ED602-5943-3E29-A793-BC331E2C183D> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff98314000 -     0x7fff98388ff7  com.apple.Heimdal (4.0 - 2.0) <5D365381-8B5E-3259-8867-FC4A7D307BDE> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fff98389000 -     0x7fff983a5ff7  libextension.dylib (78) <FD952DA6-BBEC-3CB6-98B3-E1D111C5C54E> /usr/lib/libextension.dylib
    0x7fff983a6000 -     0x7fff983bafe3  libCGInterfaces.dylib (317.9) <5079DE4F-3717-32FF-B76A-77F53236D17D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
    0x7fff983c5000 -     0x7fff983dbfff  com.apple.CoreMediaAuthoring (2.2 - 953) <DAC012D0-276D-3AF6-A6E9-EA32E692B923> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff983dc000 -     0x7fff983dffff  libsystem_sandbox.dylib (460.50.4) <150A9D3D-F69E-32F7-8C7B-8E72CAAFF7E4> /usr/lib/system/libsystem_sandbox.dylib
    0x7fff98569000 -     0x7fff98658fff  libxml2.2.dylib (29.7) <32BBF51E-B084-3FC2-AE9C-C008BE84102B> /usr/lib/libxml2.2.dylib
    0x7fff98659000 -     0x7fff98682fff  libc++abi.dylib (125) <DCCC8177-3D09-35BC-9784-2A04FEC4C71B> /usr/lib/libc++abi.dylib
    0x7fff98dbe000 -     0x7fff98ecdfe7  libvDSP.dylib (563.5) <9AB6CA3C-4F0E-35E6-9184-9DF86E7C3DAD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff9926f000 -     0x7fff9927fff3  com.apple.ProtocolBuffer (1 - 243) <BAE5E5C9-DD59-3BB8-9741-EEFC5E3046EE> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fff99280000 -     0x7fff992a4fff  libJPEG.dylib (1450) <1775E59E-D82C-3F7A-8E4F-B0C13F88F691> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff9935e000 -     0x7fff99392ff7  com.apple.CoreVideo (1.8 - 191.3) <1AA24A1B-CB84-3F6B-B6DE-11494542649C> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff99393000 -     0x7fff99402fff  com.apple.datadetectorscore (7.0 - 460) <FA46DEE8-B25B-3E84-B067-6A31193A0885> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fff99403000 -     0x7fff9941dff3  liblzma.5.dylib (10) <CC03591B-FA57-3CA5-AC81-0D76033AC0CE> /usr/lib/liblzma.5.dylib
    0x7fff99443000 -     0x7fff9944efff  libkxld.dylib (3248.50.21) <99195052-038E-3490-ACF8-76F9AC43897E> /usr/lib/system/libkxld.dylib
    0x7fff9944f000 -     0x7fff99457fef  libcldcpuengine.dylib (2.7.3) <511DF05F-B3A1-3810-9901-1F5C1EA278C4> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff994e2000 -     0x7fff99540fff  com.apple.SystemConfiguration (1.14 - 1.14) <D801FAD7-5A2D-3E5E-9F44-B6C9B8BEA747> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff99541000 -     0x7fff99551fff  libbsm.0.dylib (34) <7E14504C-A8B0-3574-B6EB-5D5FABC72926> /usr/lib/libbsm.0.dylib
    0x7fff99552000 -     0x7fff99590ff7  libGLImage.dylib (12.1) <BB1F1A93-5101-3906-AB17-8D83FCB200F9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff99591000 -     0x7fff995bfff7  libsandbox.1.dylib (460.50.4) <C6797DA3-DF51-3774-9D02-31670A820D18> /usr/lib/libsandbox.1.dylib
    0x7fff995c0000 -     0x7fff995dcff3  libresolv.9.dylib (60) <A650B5C8-1950-36A0-86D1-0B2465318BFA> /usr/lib/libresolv.9.dylib
    0x7fff99635000 -     0x7fff9963eff3  libsystem_notify.dylib (150.40.1) <D48BDE34-0F7E-34CA-A0FF-C578E39987CC> /usr/lib/system/libsystem_notify.dylib
    0x7fff99669000 -     0x7fff9967aff7  libsystem_trace.dylib (201.10.3) <F00E92E4-DBDA-3749-B5B3-0C3FBBABA1CB> /usr/lib/system/libsystem_trace.dylib
    0x7fff9967b000 -     0x7fff996a4fff  com.apple.ProtectedCloudStorage (1.0 - 1) <7436B2B3-943A-3500-B099-80F133B3E002> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fff9977c000 -     0x7fff99782fff  com.apple.IOAccelerator (205.10 - 205.10) <E46ED853-C2CC-3F29-A7DD-5E9351A2E754> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fff99783000 -     0x7fff99787fff  libpam.2.dylib (20) <CFCD19BD-87BC-3F2B-BB1C-4C23E8E55F1A> /usr/lib/libpam.2.dylib
    0x7fff997c4000 -     0x7fff997d5fff  libcmph.dylib (6) <BA4BF2C6-7F4E-33B8-9DD7-619C9EB83ECF> /usr/lib/libcmph.dylib
    0x7fff997d6000 -     0x7fff99890fff  com.apple.DiscRecording (9.0.1 - 9010.4.3) <540853B2-B123-3560-8023-C92EE229051A> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording
    0x7fff999ba000 -     0x7fff999befff  com.apple.CommonPanels (1.2.6 - 96) <4AE7E5AE-55B3-37FA-9BDE-B23147ADA2E9> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff999bf000 -     0x7fff99ca4ffb  com.apple.CoreServices.CarbonCore (1136.2 - 1136.2) <2DBAFC9A-6CD6-351D-B1F4-87D81AA6D640> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff99ce9000 -     0x7fff99d0dfff  com.apple.MultitouchSupport.framework (304.12 - 304.12) <65CB7653-EACD-3ADB-ABB6-2E0671708301> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fff99f5a000 -     0x7fff99f5bff3  com.apple.print.framework.Print (10.0 - 266) <3E85F70C-D7D4-34E1-B88A-C1F503F99CDA> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff99f5c000 -     0x7fff99fe9fff  libsystem_c.dylib (1082.50.1) <B552D565-B798-3B9B-AE63-F623B42A5F01> /usr/lib/system/libsystem_c.dylib
    0x7fff99ffe000 -     0x7fff9a001ff7  libCoreFSCache.dylib (119.5) <2389D7DA-B8EF-3EB4-AAAF-FBEDE01CDECA> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff9a00d000 -     0x7fff9a05cff7  com.apple.opencl (2.7.0 - 2.7.0) <C3AFF6D2-90FE-3108-A2D5-A1EBCFC5D627> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff9a06b000 -     0x7fff9a311ff7  com.apple.CoreData (120 - 641.3) <A29A5491-6169-372B-828F-84EE0CFD4BC4> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff9a314000 -     0x7fff9a366fff  com.apple.CloudDocs (1.0 - 383.13) <5FD9138D-09D9-3B97-BBAD-5692E1687F30> /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs
    0x7fff9a367000 -     0x7fff9a378ff7  libz.1.dylib (61.20.1) <B3EBB42F-48E3-3287-9F0D-308E04D407AC> /usr/lib/libz.1.dylib
    0x7fff9a419000 -     0x7fff9a41bfff  libCGXType.A.dylib (957) <B901C222-E779-32EB-96C2-5A707A09FC5B> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib
    0x7fff9a41c000 -     0x7fff9a435fff  com.apple.openscripting (1.7.1 - 169.1) <36EBF6A7-334A-3197-838F-E8C7B27FCDBB> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff9a46f000 -     0x7fff9a478ff7  com.apple.CommonAuth (4.0 - 2.0) <4B8673E1-3697-3FE2-8D30-AC7AC5D4F8BF> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff9a479000 -     0x7fff9a76efff  com.apple.HIToolbox (2.1.1 - 807.2) <36413C45-36AF-34EF-9C0E-F18B31D1E565> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff9a771000 -     0x7fff9a780ffb  com.apple.LangAnalysis (1.7.0 - 1.7.0) <18D21123-A3E7-3851-974A-08E5D4540475> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff9a7de000 -     0x7fff9a841fff  libAVFAudio.dylib (161.2) <1A98DBF3-490B-37FB-928A-AB1E36E6E5DD> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib
    0x7fff9a875000 -     0x7fff9abc9fff  com.apple.Foundation (6.9 - 1259) <71A9D3A0-0B1F-3E3A-86F3-1486365A6EF2> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff9abca000 -     0x7fff9abd2fff  libcopyfile.dylib (127) <A48637BC-F3F2-34F2-BB68-4C65FD012832> /usr/lib/system/libcopyfile.dylib
    0x7fff9b5a5000 -     0x7fff9b5b3ff7  libbz2.1.0.dylib (38) <28E54258-C0FE-38D4-AB76-1734CACCB344> /usr/lib/libbz2.1.0.dylib
    0x7fff9b5b4000 -     0x7fff9b5b4fff  com.apple.audio.units.AudioUnit (1.13 - 1.13) <93C1D642-37D4-3692-AD35-DCAD04F9610B> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff9b5b5000 -     0x7fff9b5b7ffb  libutil.dylib (43) <4C9BFE8B-563B-3EEA-A323-8F4F14E0A46C> /usr/lib/libutil.dylib
    0x7fff9b5bb000 -     0x7fff9b5bbfff  libmetal_timestamp.dylib (600.0.44.1) <6576F284-BACA-332A-A6E7-FA1C347636E3> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib
    0x7fff9b5d9000 -     0x7fff9b668ff7  libCoreStorage.dylib (517.50.1) <E6283FE9-B5AC-3110-8D4C-8E2BF185983E> /usr/lib/libCoreStorage.dylib
    0x7fff9bfc0000 -     0x7fff9bfdcff7  libsystem_malloc.dylib (67.40.1) <5748E8B2-F81C-34C6-8B13-456213127678> /usr/lib/system/libsystem_malloc.dylib
    0x7fff9bfdd000 -     0x7fff9c00cff7  com.apple.DictionaryServices (1.2 - 250.3) <30250542-CBAA-39C1-91AA-B57A5DE17594> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff9c04f000 -     0x7fff9c071ff7  com.apple.Sharing (442.13.6 - 442.13.6) <DDD2811C-6ECB-32F2-8EE1-69BF9657B4A8> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fff9c08a000 -     0x7fff9c0cfff3  libFontRegistry.dylib (155.2) <A70DD497-35F3-34DA-9C19-F4B90080E961> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff9c138000 -     0x7fff9c139ffb  libremovefile.dylib (41) <552EF39E-14D7-363E-9059-4565AC2F894E> /usr/lib/system/libremovefile.dylib
    0x7fff9c1dd000 -     0x7fff9c473fff  libmecabra.dylib (696.5) <EF6C0BD4-5FE8-34FB-8ADF-69A53CEC97A9> /usr/lib/libmecabra.dylib
    0x7fff9c474000 -     0x7fff9c488fff  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <1D60D60C-914A-3BAB-8607-79F68F4C712E> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol
    0x7fff9c489000 -     0x7fff9c4a5fff  com.apple.GenerationalStorage (2.0 - 239.1) <8C821448-4294-3736-9CEF-467C93785CB9> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fff9c4a8000 -     0x7fff9c4c7ff7  com.apple.framework.Apple80211 (11.0 - 1121.34.2) <90477FAE-B835-3931-80FB-FDFF02B21D9D> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff9c57d000 -     0x7fff9c5b7fff  com.apple.QD (3.12 - 302) <0FE53180-2895-3D14-A1E7-F82DE1D106E1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff9c5b8000 -     0x7fff9c5b9fff  com.apple.TrustEvaluationAgent (2.0 - 25) <0239494E-FEFE-39BC-9FC7-E251BA5128F1> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fff9c5ba000 -     0x7fff9c5e9ffb  libsystem_m.dylib (3105) <08E1A4B2-6448-3DFE-A58C-ACC7335BE7E4> /usr/lib/system/libsystem_m.dylib
    0x7fff9c5ec000 -     0x7fff9c5f4fff  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <CC53DC12-9231-3C4F-921B-9A770D463323> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon
    0x7fff9c65d000 -     0x7fff9c664ff7  libcompiler_rt.dylib (62) <A13ECF69-F59F-38AE-8609-7B731450FBCD> /usr/lib/system/libcompiler_rt.dylib
    0x7fff9c665000 -     0x7fff9c667ff7  libquarantine.dylib (80) <0F4169F0-0C84-3A25-B3AE-E47B3586D908> /usr/lib/system/libquarantine.dylib
    0x7fff9c797000 -     0x7fff9c81ffff  com.apple.CoreSymbolication (3.1 - 58048.1) <4730422E-4178-34F9-8550-BB92F2A4F44B> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fff9c84e000 -     0x7fff9c93efff  libJP2.dylib (1450) <FAFF00CD-1CF6-34DE-A06F-31D4BB9C8BA9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff9c93f000 -     0x7fff9c9effff  com.apple.backup.framework (1.7.4 - 1.7.4) <F304E9D1-991A-379E-9659-BF85C35B4808> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff9cc47000 -     0x7fff9cc89ff7  com.apple.Metal (56.6 - 56.6) <2B2C0F78-20B8-3878-B9B1-DE18BB92919D> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff9cc8a000 -     0x7fff9cdaefff  libsqlite3.dylib (216.4) <280D67B8-F93D-3587-A146-19F36C817548> /usr/lib/libsqlite3.dylib
    0x7fff9cdcb000 -     0x7fff9ce17fff  com.apple.print.framework.PrintCore (11.2 - 472.2) <5AE8AA6B-CE09-397D-B0D4-0F9CCBF1F77D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff9ce66000 -     0x7fff9ceb6ff7  com.apple.Symbolication (1.4 - 58044) <F70BF765-FBE9-3F1E-85CA-BB2F8E53E8C2> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fff9ceb7000 -     0x7fff9cf08fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <EA7D4F3B-062B-3C81-A98C-C89264D00D48> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff9cff2000 -     0x7fff9cffdff7  libcommonCrypto.dylib (60075.50.1) <93732261-34B4-3914-B7A2-90A81A182DBA> /usr/lib/system/libcommonCrypto.dylib
    0x7fff9cffe000 -     0x7fff9d016fef  libcompression.dylib (28) <E7601B62-1053-369D-8A9E-91CF86239220> /usr/lib/libcompression.dylib
    0x7fff9d04c000 -     0x7fff9d075ff7  libxslt.1.dylib (14.2) <6E8D0F06-9086-32D3-9D87-3870A1CE9E99> /usr/lib/libxslt.1.dylib
    0x7fff9d076000 -     0x7fff9d3d8f3f  libobjc.A.dylib (680) <7489D2D6-1EFD-3414-B18D-2AECCCC90286> /usr/lib/libobjc.A.dylib
    0x7fff9d3d9000 -     0x7fff9d42efff  com.apple.AE (701 - 701) <AD492742-F884-386B-A450-FAC281B9FFA4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff9d455000 -     0x7fff9d4a0ff7  com.apple.CoreMediaIO (703.0 - 4791) <2FAE3CC1-145C-37AB-A836-E5D93A02BA23> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff9d4aa000 -     0x7fff9d6cbff7  com.apple.CoreImage (11.4.0 - 366.4.19) <F5B7B115-E43A-3C61-A6AD-EFCDE7FC43A1> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff9d6cc000 -     0x7fff9d6e3ff7  libsystem_coretls.dylib (83.40.5) <C90DAE38-4082-381C-A185-2A6A8B677628> /usr/lib/system/libsystem_coretls.dylib
    0x7fff9d871000 -     0x7fff9d874fff  libspindump.dylib (197.1) <48F4C673-9F0C-38BE-B550-88241E812518> /usr/lib/libspindump.dylib
    0x7fff9d8d8000 -     0x7fff9d8e4fff  com.apple.SpeechRecognitionCore (2.2.7 - 2.2.7) <6BA06290-D4A3-351C-87F9-B61EF61FF055> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fff9d8e5000 -     0x7fff9da91fff  com.apple.avfoundation (2.0 - 1046.9.11) <399D8273-E3CD-3358-9B80-64E6A5CBE278> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff9da92000 -     0x7fff9da9dfff  libGL.dylib (12.1) <70D51643-04AC-3400-8F11-A6FC25985289> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff9daa3000 -     0x7fff9dffbff7  com.apple.MediaToolbox (1.0 - 1731.15.204) <BD296DBD-BEC9-3B25-B859-E88A009BB879> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff9dffc000 -     0x7fff9dffcfff  com.apple.Accelerate (1.10 - Accelerate 1.10) <185EC96A-5AF0-3620-A4ED-4D3654D25B39> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff9e08b000 -     0x7fff9e120fff  com.apple.ink.framework (10.9 - 214) <1F76CF36-3F79-36B8-BC37-C540AF34B338> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff9e121000 -     0x7fff9e54ffff  com.apple.vision.FaceCore (3.3.1 - 3.3.1) <E54028EA-4217-3078-A2B1-C52E4214D59E> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fff9e56d000 -     0x7fff9e643ffb  com.apple.DiskImagesFramework (10.11.4 - 417.4) <6D26E255-D7BB-3A9D-8B6F-E07D2DBB68AE> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages
    0x7fff9e672000 -     0x7fff9e90cff3  com.apple.security (7.0 - 57337.50.23) <8B6CF71D-A63E-34C9-9227-0AACAB643584> /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff9f55c000 -     0x7fff9f564fff  com.apple.NetFS (6.0 - 4.0) <842A5346-24C3-3F22-9ECF-E586A10EA1F2> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff9f565000 -     0x7fff9f580ff7  libCRFSuite.dylib (34) <078B4CD8-6A8C-3067-B2BA-0C2A0BAB8AC3> /usr/lib/libCRFSuite.dylib
    0x7fff9f586000 -     0x7fff9f59dfff  libmarisa.dylib (4) <E4919B03-D9BD-3AF8-B436-C415C98E3F0A> /usr/lib/libmarisa.dylib
    0x7fff9f5b0000 -     0x7fff9f5b3ffb  libScreenReader.dylib (426.42) <16FC79D1-4573-3E90-945F-CBA22D5185FD> /usr/lib/libScreenReader.dylib
    0x7fff9f5b4000 -     0x7fff9f65bfff  com.apple.LanguageModeling (1.0 - 1) <58C18A47-BDE7-3CBE-81C0-797029D170A1> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fff9f65c000 -     0x7fff9f65fffb  libdyld.dylib (360.22) <CC088C2A-D407-33E7-A6B6-B06E0D4AD999> /usr/lib/system/libdyld.dylib
    0x7fff9f660000 -     0x7fff9f663fff  com.apple.IOSurface (108.2.1 - 108.2.1) <A0037B0A-277A-393E-9BF6-688595BD564D> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff9f664000 -     0x7fff9f666ff7  com.apple.securityhi (9.0 - 55006) <1E7BE52B-97EA-371A-AECA-1EE2AD246D8A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 1
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 1025
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=327.4M resident=0K(0%) swapped_out_or_unallocated=327.4M(100%)
Writable regions: Total=397.1M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=397.1M(100%)

                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Accelerate.framework               128K        2 
Activity Tracing                  2048K        2 
CG backing stores                  440K        3 
CG image                            76K        9 
CG shared images                   304K        8 
CoreAnimation                      104K       18 
CoreUI image data                  680K        8 
CoreUI image file                  192K        4 
Dispatch continuations            16.0M        2 
Foundation                           4K        2 
IOKit                             36.6M        7 
Kernel Alloc Once                    8K        3 
MALLOC                            87.7M       33 
MALLOC guard page                   32K        7 
Mach message                         4K        2 
Memory Tag 242                      12K        2 
Memory Tag 255                   533.0M       52 
Memory Tag 255 (reserved)          256K        2         reserved VM address space (unallocated)
OpenCL                               8K        2 
STACK GUARD                       56.1M       39 
Stack                            205.4M       55 
VM_ALLOCATE                         56K        9 
__DATA                            25.7M      245 
__IMAGE                            528K        2 
__LINKEDIT                       100.7M       14 
__TEXT                           226.7M      249 
__UNICODE                          552K        2 
mapped file                       68.9M       37 
shared memory                     34.3M       17 
===========                     =======  ======= 
TOTAL                              1.4G      808 
TOTAL, minus reserved VM space     1.4G      808 
```
<details>
",codebytere,component/devtools;crash :boom:;bug :beetle:;version/1.7.x;version/1.8.x,2016-07-06T08:15:00Z,2018-09-24T04:14:58Z,bpasero,CharlieHess;kevinsawicki;KiranNiranjan;codebytere;bpasero,zcbenz;kevinsawicki;sofianguy,zeke;sofianguy,,,codebytere,
electron/electron,7073,"persistent cookies should be encrypted This request may be unfeasible or out of scope, in which case, feel free to just close/delete. But no one seems to have brought this up before so I thought I'd mention it. 

My org's security team recently recommended that we encrypt the cookie value of our app's session cookie. They don't like that someone could open the sqlite cookies file and view the session token in plain text. Our web app uses a session cookie as it's authentication mechanism, so I'm stuck with storing that token in a cookie. Because Chrome encrypts cookie values by default, it would be nice to be able to encrypt cookie values in Electron too. If not the whole cookie store, then maybe having some middleware on `session` that gets run before `get`/`set` so that I can encrypt/decrypt it on get/set--that way it's persisted encrypted, but to the web app, it's unencrypted. 

If there's a way to do this currently that I'm overlooking, let me know 棣冩▋ .
",nornagon;MarshallOfSound,security 棣冩晙;bug :beetle:,2016-09-02T17:13:12Z,2021-06-29T23:06:57Z,ccnokes,zcbenz;deepak1556;paulbennet;MarshallOfSound;craigdanj;soundar-m;tmaher;yklykl530;LaynelLarsen;ghost;nornagon,deepak1556;sofianguy,zeke;sofianguy,,,zcbenz,
electron/electron,7125,"document.hasFocus is incorrect if browser window is loaded/refreshed while not visible or unfocused - Electron version: 1.3.5
- Operating system: macOS 10.11.6

`document.hasFocus` tells you whether the window is blurred or focus. If a BrowserWindow instance is loaded while hidden or unfocused, it will be set to true and it's not possible to blur it from that state.

I'm currently working around this by briefly showing/focusing the window, then blurring it from a preload script.

``` javascript
var remote = require('electron').remote;

function setupFocus () {
  // If we load/refresh while the window is hidden or blurred, document.hasFocus is wrong
  // We need to first show the window it it's hidden (this is probably ok if a user manually
  // chose to refresh) or give it focus (e.g. if dev tools is open) then blur it again to properly
  // set the document's focus state
  if (!remote.getCurrentWindow().isVisible() || !remote.getCurrentWindow().isFocused()) {
    if (!remote.getCurrentWindow().isVisible()) {
      remote.getCurrentWindow().show();
    } else {
      remote.getCurrentWindow().focus();
    }
    remote.getCurrentWindow().blur();
  }
}

module.exports = setupFocus;
```
",codebytere,platform/macOS;bug :beetle:;4-2-x,2016-09-07T09:51:02Z,2019-08-30T18:10:52Z,jwheare,liusy182;zcbenz;codebytere;jwheare;sofianguy;MarshallOfSound,zcbenz;sofianguy,zcbenz;sofianguy,,,zcbenz,
electron/electron,7375,"setZoomLevel causes a webview to no longer fill the full page - Electron version: 1.3.7
- Operating system: Mac OS

When you set the zoom level on the webframe that has a webview element, what the webview is showing no longer spans the full width of the page:

Without zoom:
![screen shot 2016-09-28 at 07 36 43](https://cloud.githubusercontent.com/assets/900690/18901811/6e024502-854e-11e6-98b6-b68e7deaae3e.png)

With zoom:
![image](https://cloud.githubusercontent.com/assets/900690/18901805/5b344128-854e-11e6-91b3-ae95e57c3d78.png)

HTML:

``` html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
    <script src=""./index.js""></script>
  </head>
  <body>
    <webview src=""http://www.github.com"" id=""foo"" />
  </body>
</html>
```

JS:

``` javascript
setTimeout(function () {
    var webFrame = require('electron').webFrame;
    webFrame.setZoomLevel(1);
}, 2000);
```
",zcbenz,component/webview;bug :beetle:,2016-09-28T05:37:49Z,2021-03-09T17:06:31Z,bpasero,andymartinwork;alvarezn;craxal;akshayhashedIn;electron-triage;zcbenz;ccnokes;bpasero;martinpichaat4mation;boljen,kevinsawicki;zcbenz,zeke,kevinsawicki,kevinsawicki,electron-triage,
electron/electron,7470,"Audio stream from Electron applications is named ""Chromium"" - Electron version: `1.4.1`
- Operating system: `Linux`

> In pavucontrol the stream from gpmdp is listed as Chromium. Because of this, I can't permanently move Chromium (e.g. Youtube) audio and Google Play audio to different sinks.
> 
> It would be nice if the stream had a more unique name.

I have no idea where this is set, but it would be nice to either be able to change this at build time or have an API to change it at run time.

:link: [MarshallOfSound/Google-Play-Music-Desktop-Player-UNOFFICIAL-#1720](https://www.github.com/MarshallOfSound/Google-Play-Music-Desktop-Player-UNOFFICIAL-/issues/1720)
",deepak1556,platform/linux;bug :beetle:,2016-10-03T21:34:05Z,2018-05-09T03:43:06Z,MarshallOfSound,deepak1556;kevinsawicki;codebytere;Araxeus,deepak1556;kevinsawicki;sofianguy,sofianguy;ckerr,deepak1556,,codebytere,
electron/electron,7779,"ready-to-show never fires - Electron version: 1.3.7
- Operating system: macOS & Windows

I'm having some trouble creating a minimal repro for this but it seems that the `ready-to-show` event is not firing for us, since ~1.3.7, despite us having `show: false` in the window options. Filing this in case others are seeing the same behavior.

We had to switch to using `browserWindow.webContents.on('dom-ready', ...`). 
",zcbenz,beginner friendly;bug :beetle:;3-0-x,2016-10-27T22:09:51Z,2019-06-26T22:58:55Z,CharlieHess,kevinsawicki;mikecao;jprichardson;joesantosio;datapimp;drom98;gandalivs;strctr;mydansun;hovancik;CharlieHess;itpimp;enlight;jstrellner;exiadb;marceloavf;dwalintukan;zcbenz,CharlieHess;kevinsawicki,kevinsawicki,,,deermichel,
electron/electron,8055,"Crash on electron app start We're seeing a crash on electron app start with the following stack trace. We're seeing in the wild and could not get a consistent repro. Has anyone seen this type of stack trace or have pointers on where to investigate?

```
0	teams!base::debug::BreakDebugger		0x000000000000000D		0x000000001A1C0000		debugger_win.cc
1	teams!logging::LogMessage::~LogMessage		0x0000000000000238		0x000000001A1C0000		logging.cc
2	teams!`anonymous namespace'::ActiveVerifier::StartTracking		0x00000000000002C5		0x000000001A1C0000		scoped_handle.cc
3	teams!base::win::VerifierTraits::StartTracking		0x000000000000003D		0x000000001A1C0000		scoped_handle.cc
4	teams!base::win::GenericScopedHandle_base::win::HandleTraits,base::win::VerifierTraits_::Set		0x0000000000000077		0x000000001A1C0000		scoped_handle.h
5	teams!base::WaitableEvent::WaitableEvent		0x0000000000000039		0x000000001A1C0000		waitable_event_win.cc
6	teams!IPC::SyncMessageFilter::Send		0x0000000000000189		0x000000001A1C0000		ipc_sync_message_filter.cc
7	teams!gpu::CommandBufferProxyImpl::WaitForGetOffsetInRange		0x0000000000000238		0x000000001A1C0000		command_buffer_proxy_impl.cc
8	teams!gpu::CommandBufferHelper::Finish		0x00000000000000C6		0x000000001A1C0000		cmd_buffer_helper.cc
9	teams!gpu::gles2::GLES2Implementation::WaitForCmd		0x0000000000000090		0x000000001A1C0000		gles2_implementation.cc
10	teams!gpu::gles2::GLES2Implementation::Flush		0x0000000000000051		0x000000001A1C0000		gles2_implementation.cc
11	teams!gpu::gles2::GLES2Implementation::SetAggressivelyFreeResources		0x0000000000000196		0x000000001A1C0000		gles2_implementation.cc
12	teams!cc::DelegatingRenderer::DidChangeVisibility		0x0000000000000111		0x000000001A1C0000		delegating_renderer.cc
13	teams!cc::LayerTreeHostImpl::SetVisible		0x00000000000000C0		0x000000001A1C0000		layer_tree_host_impl.cc
14	teams!cc::ProxyImpl::SetVisibleOnImpl		0x0000000000000170		0x000000001A1C0000		proxy_impl.cc
15	teams!base::internal::Invoker_base::IndexSequence_0,1_,base::internal::BindState_base::internal::RunnableAdapter_void		0x0000000000000067		0x000000001A1C0000		bind_internal.h
16	teams!base::debug::TaskAnnotator::RunTask		0x000000000000013C		0x000000001A1C0000		task_annotator.cc
17	teams!base::MessageLoop::RunTask		0x0000000000000379		0x000000001A1C0000		message_loop.cc
18	teams!base::MessageLoop::DoWork		0x00000000000002F0		0x000000001A1C0000		message_loop.cc
19	teams!base::MessagePumpDefault::Run		0x00000000000000BB		0x000000001A1C0000		message_pump_default.cc
20	teams!base::RunLoop::Run		0x000000000000002E		0x000000001A1C0000		run_loop.cc
21	teams!base::MessageLoop::Run		0x0000000000000020		0x000000001A1C0000		message_loop.cc
22	teams!base::Thread::ThreadMain		0x000000000000017B		0x000000001A1C0000		thread.cc
23	teams!base::`anonymous namespace'::ThreadFunc		0x000000000000015A		0x000000001A1C0000		platform_thread_win.cc
24	kernel32!BaseThreadInitThunk		0x0000000000000022		0x00000000ABF90000		thread.c
25	ntdll!RtlUserThreadStart		0x0000000000000034		0x00000000AC540000		rtlstrt.c
```

Electron version: 1.3.6
Operating system: Windows 10

",kevinsawicki,crash :boom:;component/asar;bug :beetle:,2016-11-22T19:31:56Z,2017-02-15T02:04:37Z,kevinlims,kevinsawicki;towerpark,kevinsawicki;groundwater;bengotow,kevinsawicki;bengotow,groundwater,,zcbenz,
electron/electron,8100,"In sandbox mode, window.opener doesn't work when children are from different domain <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.10
* Operating system: Darwin x64

### Expected behavior
When a popup pointed to a different domain from the parent is opened. window.opener should not be null. It is required for many OAuth authentication where the parent and the child (popup) is from different domains.

### Actual behavior

When a popup is pointed towards the same domain window.opener is present but when its pointed towards a different domain window.opener is null

### How to reproduce

**main.js**
`app.on('ready', () => { console.log(""ready""); const win = new BrowserWindow({webPreferences: { sandbox: true }}) win.loadURL('http://localhost:8888/index.html'); })`

**index.html**
`<a href=""javascript:window.open('https://app.asana.com')"">Click here</a>`

window.opener is null at app.asana.com because the domain is different from the parent
",ppontes,component/sandbox;bug :beetle:;2-0-x;3-0-x;4-2-x,2016-11-30T04:51:30Z,2018-11-20T20:28:27Z,davidrevmakx,sivaram636;manuth;Amzul;gerges-zz;CptMaumau;Tahini-123;haggaidavid;eyal55;MarshallOfSound;arkokoley;ryanflowers;TheMSB;BenjaminDobler;alexeykuzmin;tarruda;pushkin-;quanglam2807;alexk111;Thomas101;eyarz;shimont,kevinsawicki;zcbenz,,tarruda,,alexeykuzmin,
electron/electron,8151,"Remote issues with clipboard and NativeImage <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.10
* Operating system: MacOS

### Expected behavior

Captured image from webview is copied into clipboard

### Actual behavior

Crashes with error message 

```
Uncaught TypeError: Error processing argument at index 0, conversion failure from [object Object]
```

### How to reproduce

I am capturing a region of a webview object and then saving as an image (works pretty ok, although sometimes the image is empty), then I am trying to copy the NativeImage into clipboard, but it crashes

```js
webview.capturePage(rect, image => {
              const quality = 90
              const filename = 'image.jpg'
              const fullPath = path.join(__dirname, filename)
              fs.writeFile(fullPath, image.toJPEG(quality), (err) => {                
                 // TODO: retry save if the image is 0 size
                clipboard.writeImage(image)
              })
})
```

I can see the image on the disk, but the clipboard has never received it, always crashing",miniak,platform/linux;component/clipboard;bug :beetle:;5-0-x,2016-12-06T21:16:46Z,2019-11-12T20:56:18Z,bahmutov,kevinsawicki;bahmutov;momocow;DuBistKomisch;sofianguy;miniak,kevinsawicki;sofianguy;timfish,zeke;kevinsawicki;sofianguy,,,kevinsawicki,
electron/electron,8397,"openExternal take too mucho to open a browser <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.12
* Operating system: Linux. Solus os

### Expected behavior

Open the default browser (in my case firefox) to see a weppage

### Actual behavior

It works, but take too much time. In windows is the same but not too much time. I'm talking about 15 seconds

### How to reproduce
```javascript
function openExternalLin() {
  e.preventDefault();
  shell.openExternal(href); // href contains any links
}
```",deepak1556,platform/linux;blocked/need-info 閴;bug :beetle:,2017-01-12T21:35:39Z,2017-03-15T14:25:23Z,DracotMolver,groundwater;deepak1556;DracotMolver,groundwater;deepak1556,,groundwater,,DracotMolver,
electron/electron,8410,"BrowserWindow shows frame from when it was hidden until first render after unhiding <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.14
* Operating system: macOS 10.12.2 (16C67)

### Expected behavior

<!-- What do you think should happen? -->

I expected to have control of what would show when the window is unhidden. E.g., a call to render the `BrowserWindow` once right after I hide it so that when it is unhidden that will show until the first rerender completes.

### Actual behavior

<!-- What actually happens? -->

The content that was visible when the window was hidden was shown for up to a second as the `BrowserWindow` was rendering for the first time after being unhidden.

### How to reproduce

<!-- For bugs, provide sample code or a repo URL that demos the problem -->

Have content that updates every frame (e.g., camera input). Hide the window and show it again. For a while the old camera frame will show.

Sample repo: https://github.com/blixt/electron-hidden-draw

This sample will show/hide a camera window automatically every 2 seconds. To see the issue, do something like hold up your hand to the camera until the window disappears. Then put your hand down and when the window reappears the old frame will show momentarily even though the camera has been recording the whole time.

If it's not possible to pre-render the next camera frame before the window shows, then I'd like to at least be able to clear the image after the window has been hidden so that the user doesn't see the old frame when it is unhidden again.

Note that in my actual app the issue is much more pronounced, probably because it's a more complex app. (That's why I added the CSS effects in the sample: to make the initial render slower.)",kevinsawicki,bug :beetle:,2017-01-14T01:11:54Z,2017-06-06T01:01:09Z,blixt,zcbenz;dougmbarcellos,groundwater,,groundwater,,zcbenz,
electron/electron,8411,"HTML5 Notification API not displaying notifications on MacOS 10.10.5 * Electron version: 1.4.14 (Also tried 1.4.13 and 1.3.13 to see if it was a regression, they also failed)
* Operating system: MacOS 10.10.5

### Expected behavior

HTML5 Notification API should display a notification on the side and in the notification center.

### Actual behavior

The `Notification` object is created without but no notification is displayed.

### How to reproduce

I tried this first in my own app, but after that failed I also tried https://github.com/hokein/electron-sample-apps/tree/master/notifications as that seemed to be a good source of examples and may be a better example of it not working as it includes image and non image variants (both don't work).
",zeke,platform/macOS;bug :beetle:;component/notifications,2017-01-14T18:39:33Z,2017-03-02T18:08:36Z,wraithan,groundwater;zeke,groundwater,,groundwater,,zeke,
electron/electron,8420,"Window height size on Windows cannot be set as low as on macOS <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.14
* Operating system: Windows 7 SP1

### Expected behavior

setting BrowserWindow's height makes a window on the same height as the other OS'es. Now the behaviour is platform dependent, it should be platform agnostic.

### Actual behavior

setting BrowserWindow's height doesn't set real height, but constraints it to a certain given size that's at least higher. Whilst on macOS I do get the size ""16"" I entered, but on Windows (7 SP1) it's a lot bigger/higher.
```
const { width, height } = electron.screen.getPrimaryDisplay().workAreaSize;
    const mW = Math.round(width / 3);
    const mH = 16;
        barWindow = new BrowserWindow({
            width: mW, height: mH,
            minWidth: mW, minHeight: mH,
            maxWidth: mW, maxHeight: mH});
```

### Screenshots of ""Actual behaviour""
**Windows** - where you see a gray top bar that is higher than on it's macOS variant, yet it's the same API being used
[Windows_Behaviour.png](https://postimg.org/image/ciec9hvbh/)
<img src=""https://s30.postimg.org/recvh36q9/Windows_Behaviour.png""/>

**macOS** - where you see the darkgray floating bar on top is smaller, as expected and programmed to do
[macOS_Behaviour.png](https://postimg.org/image/52u1sp27b/)
<img src=""https://s23.postimg.org/7k5szym3v/mac_OS_Behaviour.png""/>

### How to reproduce
using new BrowserWIndow({}) api.
",kevinsawicki,platform/windows;blocked/need-info 閴;bug :beetle:,2017-01-17T09:09:26Z,2017-06-06T01:03:21Z,aredfox,kevinsawicki;zcbenz,groundwater;kevinsawicki,,groundwater,,zcbenz,
electron/electron,8423,"No such module: atom_common_app ```
No such module: atom_common_app
```

* Electron version: 1.4.12
* Operating system: Mac OS X, Windows 7/10, Linux

### How to reproduce

Dunno. We started to see the issue in our Sentry 5 days ago.
",kevinsawicki,bug :beetle:,2017-01-17T15:34:35Z,2017-02-28T17:19:31Z,petrbrzek,kevinsawicki;petrbrzek;joeyhage,kevinsawicki,,,,kevinsawicki,
electron/electron,8476,"spawn() in combination with app.asar and app.asar.unpacked on Windows.. Doesn't look into app.asar.unpacked? <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.14
* Operating system: Windows 7 SP1
* Electron builder: 11.2.5

### Expected behavior

path.join(__dirname) in combination with spawn() should look into app.asar and app.asar.unpacked
e.g.: `childProcess.spawn(path.join(__dirname, ""bin"", ""nircmd.exe""), [""savescreenshot"", options.output]);`
when not found in app.asar, it should default to look into app.asar.unpacked

### Actual behavior

it only looks in app.asar
e.g.: `childProcess.spawn(path.join(__dirname, ""bin"", ""nircmd.exe""), [""savescreenshot"", options.output]);`
it errors out that it couldn't find this file ""nircmd.exe"" in app.asar

### How to reproduce

See my issue on https://github.com/johnvmt/node-desktop-screenshot/issues/7 where to code is explained.
**Short story:**
When packaging for windows target with electron 1.4.14 and electron-builder 11.2.5 the module couldn't be found, more specifically it couldn't find nircmd.exe.

I think path.join should normally look in app.asar.unpacked, but apparantly on Windows it doesn't?

**Solution/Workaround:**
I had to change the line in win32.js from
`var nircmd = childProcess.spawn(path.join(__dirname, ""bin"", ""nircmd.exe""), [""savescreenshot"", options.output]);`
to
`var nircmd = childProcess.spawn(path.join(__dirname.replace('app.asar', 'app.asar.unpacked'), ""bin"", ""nircmd.exe""), [""savescreenshot"", options.output]);`
",zcbenz,component/asar;bug :beetle:,2017-01-23T11:49:52Z,2017-02-27T07:32:32Z,aredfox,aredfox;groundwater;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8479,"Electron hangs when requiring certain dependencies from within tmux <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: `v1.4.15`
* Operating system: `macOS Sierra (10.12.2)`
* [tmux](https://tmux.github.io/) version: `2.3`
* node version: `7.4.0`

For reasons that I cannot understand, electron hangs when trying to import certain dependencies. I tried to narrow down the dependency as far as I could go, and ended up with this line:

```javascript
require('define-properties')
```

### Expected behavior

electron runs as normal.

### Actual behavior

electron **hangs**

### How to reproduce

1. Create a basic electron project with a single dependency (`define-properties`) and have the following line execute in the electron window:

   ```javascript
   require('define-properties')
   ```

   Do this by adding the line within a `script` tag. Alternatively, clone [this](https://github.com/yggie/electron-tmux-bug-replication) repository which does most of the boilerplate.
2. Run `tmux` and within a `tmux` window, navigate into the project directory
3. Run the app using `electron .` (or `npm start` in the provided repo)
4. Electron should hang when trying to bring up the page
",zcbenz,platform/macOS;bug :beetle:,2017-01-23T17:03:38Z,2017-06-06T01:54:44Z,yggie,ghost;yggie;groundwater;zcbenz,groundwater,groundwater,groundwater,,zcbenz,
electron/electron,8517,"WebGL: CONTEXT_LOST_WEBGL when switching to fullscreen with external display and two video cards <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->
Existing context
* Electron version: 1.4.15
* Operating system: Window 10 64-bit. build 14393
* Video card 1: Indel HD Graphics 530
* Video card 2: NVidia Quadro M2000M
* External Display connected

### Expected behavior

WebGL context shouldn't fail in fullscreen

### Actual behavior

When switching to the full sreen, existing wbgl context is lost and can'be recreated. Refreshing electron doesn't help. Electron has to be restarted.
![webglcontext](https://cloud.githubusercontent.com/assets/1634247/22336563/f5c8ecd2-e3e2-11e6-946b-1d0b5236b72c.PNG)


### How to reproduce

- Lunch any web GL content and switch to the full screen or:
1. Launch electron
2. Open dev tools
3. Run document.createElement(""canvas"").getContext(""webgl"") !== null;
4. Run require('electron').remote.getCurrentWindow().setFullScreen(true);
5. document.createElement(""canvas"").getContext(""webgl"") !== null;
6. Observe result 
",kevinsawicki,platform/windows;bug :beetle:;component/fullscreen,2017-01-26T15:19:58Z,2017-02-24T15:35:03Z,andrej2704,kevinsawicki;miniak;andrej2704,groundwater,,groundwater,,kevinsawicki,
electron/electron,8530,"Window won't stay alwaysOnTop with OpenGL or Vulkan. Works with DX11. <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: Windows 10 x64

### Expected behavior

Application is built to be an overlay for games, currently Dota 2.

Issue happens with a BrowserWindow that is set as frameless, fullscreen, and transparent.

The BrowserWindow will not stay on top of OpenGL or Vulkan apps.

**With disabled hardware acceleration:**
1. Disabling hardware acceleration prevents the window from staying on top of OpenGL and Vulkan applications. (Tested with Dota 2 and launch options: `-gl` or `-vulkan`). However, on DX11, the window stays on top and transparent regions are click-through.

**With enabled hardware acceleration:**
2. Window stays on top, regardless of OpenGL, Vulkan, or DX11 applications running. Click-through of transparent regions doesn't work.

**With enabled hardware acceleration and Kiosk mode enabled and setIgnoreMouseEvents = false:**
Acts the same as number 2.

**With enabled hardware acceleration and Kiosk mode enabled and setIgnoreMouseEvents = true:**
Acts the same is number 1.

(Dota 2 is set to be Borderless Window in all of these cases)

It seems when Dota 2 takes focus, regardless of hardware acceleration, alwaysOnTop, or Kiosk mode. It always pushes the electron window to the back when running on OpenGL or Vulkan. The fact that the transparency cannot be clicked through is just preventing Dota from having focus.

### Actual behavior

The window should stay on top of OpenGL and Vulkan applications, just as it does DX11.

### How to reproduce

Open up a Borderless Window OpenGL or Vulkan application (Dota 2 is what I've used) and create a frameless, fullscreen, transparent window. Attempt to keep the window alwaysOnTop while being able to click through transparent areas.


Happy to add more context or provide code if needed, but it's very basic. Just create a window with the settings as stated above and play with hardware acceleration if you feel that will influence it.",kevinsawicki,platform/windows;bug :beetle:;component/fullscreen,2017-01-29T00:23:33Z,2017-06-06T05:04:50Z,sklink,groundwater;sklink;zcbenz;robsontenorio,groundwater,,groundwater,,zcbenz,
electron/electron,8546,"Frameless windows miscalculate workspace size when maximized * Electron version: 1.4.x, 1.5.x
* Operating system: Windows 10, probably others

To Reproduce:

* Set your Windows Taskbar to auto-hide
* Open any Electron application that uses custom non-client area (both Slack and Discord repro this)
* Maximize the Window
* Try to get the Taskbar to show up, you can't
* Open an Electron application that uses a standard frame (Atom, VS Code, etc)
* Do the same thing, it works
* Note that the latter case leaves a 1px border on the bottom of the window, and the former case overshoots it by just a little bit, completely covering the Taskbar

Even when the Taskbar is set to show always, you can see this issue (you may have to zoom in a bit to see it, there is a ~3px grey line from where the Slack window overshoots the workspace area)

![image](https://cloud.githubusercontent.com/assets/1396/22482023/2e5638f8-e7ac-11e6-8036-c1760db2d4e9.png)
",zcbenz,bug :beetle:,2017-01-31T19:56:38Z,2017-02-13T08:01:27Z,anaisbetts,groundwater;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8552,"Raspberry - Flash got sound but not video 
* Electron version: 1.4.15
* Operating system: Raspbian Jessie

I use a webview as described in the documentation and set all the parameters as well.
Everything works with Mac OS (video as well as sound).
But with my PI 3, I only get the sound (I've also set my memory split to 192)
From my console (PI), I have a message saying ""Not sandboxed, vector smash protection is enabled""
My pepper flash version is 24.0.0.174 

My code is : 
```
let pluginName
switch (process.platform) {
    case 'darwin':
        pluginName = 'plugins/flash/mac/PepperFlashPlayer.plugin';
        break
    case 'linux':
        pluginName = 'plugins/flash/pi/libpepflashplayer.so';
        break
}
app.commandLine.appendSwitch('ppapi-flash-path', path.join(__dirname, pluginName));
app.on('ready', function() {
    mainWindow = new BrowserWindow(
        {
        backgroundColor: '#000000',
        fullscreen:true,
        autoHideMenuBar:true,
        webPreferences:
            {
                plugins: true ,
                webSecurity: false
            }
        });
    mainWindow.loadURL('file://' + __dirname + '/app/index.html');
    mainWindow.on('closed', function() {
        mainWindow = null;
    });
});

```
My html page
```

<webview plugins
         style=""display:inline-block; width:640px; height:480px""
         id=""videoWebView""
         name=""videoWebView""
         disablewebsecurity
         nodeintegration
         src=""http://player.canalplus.fr/site/flash/player.swf?param=itele_live&env=prod&videoId=203105&targetURL=&timecode=0targetNewWindow=false&autoplay=1"">
</webview>
```


",kevinsawicki,bug :beetle:,2017-02-01T06:33:48Z,2017-06-06T05:20:57Z,Stan92,groundwater;kevinsawicki;Stan92;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8554,"File dialog can not show after destroying a modal child window <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: MacOS 10.12.3 (16D32)

During WebRTC session with screensharing (desktopCapturer), I'm trying to click on input with type file and application is not responding any more. Can quit only with ""Force quit"".

With electron_enable_logging I see following error in console:
<details>

```
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=1
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=2
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=3
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=4
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=5
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=6
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=7
[1765:0201/145109:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=8
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=9
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=10
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=11
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=12
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=13
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=14
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=15
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=16
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=17
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=18
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=19
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=20
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=21
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=22
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=23
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=24
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=25
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=26
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=27
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=28
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=29
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=30
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=31
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=32
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=33
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=34
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=35
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=36
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=37
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=38
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=39
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=40
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=41
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=42
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=43
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=44
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=45
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=46
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=47
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=48
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=49
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=50
[1765:0201/145110:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=51
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=52
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=53
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=54
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=55
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=56
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=57
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=58
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=59
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=60
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=61
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=62
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=63
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=64
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=65
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=66
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=67
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=68
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=69
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=70
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=71
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=72
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=73
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=74
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=75
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=76
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=77
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=78
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=79
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=80
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=81
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=82
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=83
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=84
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=85
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=86
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=87
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=88
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=89
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=90
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=91
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=92
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=93
[1765:0201/145111:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=94
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=95
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=96
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=97
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=98
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=99
[1765:0201/145112:WARNING:audio_sync_reader.cc(132)] AudioSyncReader::Read timed out, audio glitch count=100
[1765:0201/145112:WARNING:audio_sync_reader.cc(135)] (log cap reached, suppressing further logs)
```

</details>
 
Issue reproduce only if I share screen, if I join WebRTC session with video (web cam) once I get same error but in only reached count 5 and chose file modal was opened. With only audio call never saw this log.",codebytere,platform/macOS;blocked/need-info 閴;beginner friendly;bug :beetle:;component/dialog;version/1.8.x,2017-02-01T12:06:35Z,2019-01-15T20:30:53Z,ghost,ghost;groundwater;sofianguy;javan;rogeru;zcbenz;codebytere,groundwater,groundwater;zcbenz,groundwater,zcbenz,sofianguy,
electron/electron,8555,"Mac app store build uses non-public APIs  * Electron version: 1.5.0
* Operating system: macOS

I made a test build with the electron 1.5.0 MAS version and submitted it to apple. These are the issues that apple complained about.

> Performance - 2.5.1
>
> Your app uses or references the following non-public API(s):
>
> '/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics'
>
> : CGSSetWindowBackgroundBlurRadius
>
> The use of non-public APIs is not permitted on the App Store as it can lead to a poor user experience should these APIs change.
",zcbenz;kevinsawicki,platform/macOS;bug :beetle:;app-store,2017-02-01T14:21:23Z,2017-02-13T08:03:37Z,herrmannplatz,kevinsawicki;herrmannplatz,kevinsawicki;groundwater;bengotow,bengotow,groundwater;kevinsawicki,,zcbenz,
electron/electron,8557,"Renderings start sticking when a transparent electron window loses and comes back into focus 
* Electron version: 1.4.15
* Operating system: Mac OSX El capitan

### Expected behavior
Should not be seeing Ghost renderings in a transparent electron window when it goes out and comes back into focus

### Actual behavior
I am using jquery flipster plugin using a transparent electron window, I can do a carousel effect all day long without any problems as long as my electron transparent window is in focus but once I open some other app and comeback to my electron window the divs added to the flipster,start getting sticky and I see ghost images getting rendered. Trying to always keep electron window on the top doesnt help, de-focus and focus back causes rendering to stick

### How to reproduce
https://github.com/bakkiraju/flipster_electron

You can checkout, do npm install and npm start to run, you should see some divs with val and string, use mouse clicks to play with carousel, bring some other window into focus, go back to electron window and see what I am describing
",zeke,bug :beetle:,2017-02-01T22:52:03Z,2017-02-15T19:27:04Z,bakkiraju,groundwater;bakkiraju;zeke,groundwater,,groundwater,,zeke,
electron/electron,8562,"Menus being covered by the window content on Windows 10 build 15025.rs_prerelease cc. https://github.com/Microsoft/vscode/issues/19698
Another image, from https://www.zhihu.com/question/55328189?group_id=810523368477581312
![](https://pic1.zhimg.com/v2-c170ddc40bf0a06eebfbf6bca20e2a10_b.jpg)",alespergl,platform/windows;bug :beetle:,2017-02-02T08:31:22Z,2017-03-06T13:01:39Z,be5invis,be5invis;madcampos;alespergl;groundwater;Rhywden;ghost,groundwater,groundwater,groundwater,,alespergl,
electron/electron,8575,"Set breakpoint using win.webContents.debugger.sendCommand not working * Electron version:v1.2.7
* Operating system: darwin x64, Mac OSX Yosemite 10.10.5

### Expected behavior

I'm using electron as a node.js debugger that require()'s the node.js app into the electron render process. source: https://github.com/fijiwebdesign/electron-scope

I'm trying to set a breakpoint on the first line of the required node app entry file following the tests from here: 
https://github.com/electron/electron/blob/702352804239f58e5abcd0b96dbd748b68ab0278/spec/api-debugger-spec.js#L77

*Breakpoint should be set* on the first line of js file given. 
However, it can only be set on when attaching to the debugger via: 
`win.webContents.debugger.attach()`
the breakpoint is **not set** when attaching to the debugger process via:
`win.webContents.openDevTools()`

### Actual behavior

No breakpoint is set. 

### How to reproduce

```
      const win = new electron.BrowserWindow({
		width: 600,
		height: 400
	})
        win.webContents.openDevTools()
	win.webContents.debugger.sendCommand(
		'Debugger.setBreakpointByUrl', {
			lineNumber: 0,
			url: './test.js'
		},
		function (err, result){
			console.log('breakpoint set')
			if(err){
				console.error('Error:', err)
			}
			console.log('Result: ', result)
		})

```

I get the console.log result as: `Result:  { breakpointId: './test.js:0:0', locations: [] }`

But the actual breakpoint isn't set. 

full source of setting breakpoint: https://github.com/fijiwebdesign/electron-scope/blob/setBreakpoint/index.js#L51


",groundwater,bug :beetle:,2017-02-03T03:17:09Z,2017-06-06T05:47:12Z,fijiwebdesign,groundwater;deepak1556;fijiwebdesign;zcbenz;tinganho;4eveRS;xland,groundwater,,groundwater,,zcbenz,
electron/electron,8577,"tray menu question <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: OS X 10.12.3

### Expected behavior

<img width=""132"" alt=""wx20170203-114812 2x"" src=""https://cloud.githubusercontent.com/assets/1890238/22578861/c5e49582-ea06-11e6-9ea6-b290d3bdc509.png"">

<!-- What do you think should happen? -->

Try + Menu 


### Actual behavior

<!-- What actually happens? -->

<img width=""110"" alt=""wx20170203-115025 2x"" src=""https://cloud.githubusercontent.com/assets/1890238/22578886/f8be2126-ea06-11e6-9524-375f9ba2eca7.png"">


### How to reproduce

<!-- For bugs, provide sample code or a repo URL that demos the problem -->


```js
const contextMenu = Menu.buildFromTemplate([

    {
      label: '姒涙',
      type: 'checkbox',
      checked: true
    },
    {
      label: '閺傚洣娆㈡径',
      type: 'normal',
      icon: path.join(__dirname, '../assets/folder.png'),
      enabled: false
    },
    {
      label: 'Remove',
      type: 'normal',
      click() {
        appIcon.destroy();
      }
    }
  ]);
```

How to change the icon position like the first image",zeke,bug :beetle:,2017-02-03T03:51:44Z,2017-03-02T18:17:42Z,willin,groundwater;willin;zeke,groundwater,groundwater,groundwater,,zeke,
electron/electron,8582,"Tray icon shows a blank square with 'X' when updating icon * Electron version: 1.4.15
* Operating system: Ubuntu 17.05 (also reported in 16.10)

### Expected behavior

Tray icon changes without an intermediate image/artifact

### Actual behavior

![outphkfc5l8rt](https://cloud.githubusercontent.com/assets/211358/22598140/5e2aa21e-ea2a-11e6-93dd-fa742397a475.gif)


### How to reproduce

Checkout https://github.com/averissimo/electron-boilerplate/tree/refresh (branch refresh)

And run electron app (it will update tray icon every second to demonstrate bug)

```
$ git clone https://github.com/averissimo/electron-boilerplate
$ cd electron-boilerplate
$ git checkout refresh
$ cd boilerplate
$ npm install
$ npm start
```

This is also reproducible in the renderer (where it first was reported: https://github.com/yakyak/yakyak/issues/575 )

_edit_: added npm install step #8789 ",groundwater,bug :beetle:,2017-02-03T16:04:25Z,2017-02-14T01:19:38Z,averissimo,groundwater;averissimo;tonyganch,groundwater,,groundwater,,groundwater,
electron/electron,8586,"Rectangle Passed into CapturePage Only Change Output Size <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4
* Operating system: MacOS 10.12

### Expected behavior

The output image area should be the same as the area of the rectangle passed into the `capturePage` method instead of the squeeze the currently visible area of WebContent into the rectangle size.

### Actual behavior

The rectangle object is the output image size instead of the intended capture area. 

Read more detailed info. and screenshots at http://stackoverflow.com/questions/42036126/how-to-capture-entire-webcontent-inside-currentwindow

### How to reproduce

            const remote = require('electron').remote;
            const webContents = remote.getCurrentWebContents();
            webContents.capturePage({
                x: 0,
                y: 0,
                width: 1000,
                height: 2000
            }, (img) => {
                remote.require('fs')
                    .writeFile(TEMP_URL, img.toPng());
            });

![1](https://cloud.githubusercontent.com/assets/3349406/22615515/da19d088-ead0-11e6-864d-9014ccda3ae9.png)

![2](https://cloud.githubusercontent.com/assets/3349406/22615529/1f91c738-ead1-11e6-9861-0ee312d3e32e.png)
",zeke,bug :beetle:,2017-02-04T03:54:55Z,2017-02-08T19:39:37Z,ghost,groundwater;zeke,groundwater,,groundwater,,zeke,
electron/electron,8587,"`webContents.capturePage` can only capture visible parts from discussions in #7378

* Electron version: 1.0.2
* Operating system: 10.12

I tried `webContents.capturePage`, but it can only capture the ""visible"" part of the page. If the height of your html node is larger than the BrowserWindow (or when there's a scroll bar), the overflow part is not included in the captured image. Is there any way to capture the whole page?

### Expected behavior

`webContents.capturePage` take a snapshot of the whole complete webpage

### Actual behavior

only visible part is captured.

### How to reproduce

```js
            const remote = require('electron').remote;
            const webContents = remote.getCurrentWebContents();

            webContents.capturePage({
                x: 0,
                y: 0,
                width: 1000,
                height: 2000
            }, (img) => {
                remote.require('fs')
                    .writeFile(TEMP_URL, img.toPng());
            });
```
",zeke,bug :beetle:,2017-02-04T08:07:42Z,2017-02-08T19:39:48Z,abnerlee,ghost;groundwater;zeke;AVert,groundwater,,groundwater,,zeke,electron/electron#8586;
electron/electron,8589,"Failed to record audio +鑱絪creen due to error ScreenCaptureError * Electron version: `electron 1.5.0`
* Operating system: `Ubuntu 14.04.3 LTS`

### Expected behavior

Successfully recorded video of a screen +鑱**audio**.

### Actual behavior

In `handleUserMediaError` I receive an error: 

```js
NavigatorUserMediaError {name: ""ScreenCaptureError"", message: """", constraintName: """"}
```

### How to reproduce

My code when trying to record video +鑱絘udio.
I follow instructions from the [documentation](https://github.com/electron/electron/blob/master/docs/api/desktop-capturer.md) for `webkitGetUserMedia`:

> To capture both audio and video from the entire desktop the constraints passed
to [`navigator.webkitGetUserMedia`] must include `chromeMediaSource: 'screen'`,
and `audio: true`, but should not include a `chromeMediaSourceId` constraint.

```js
navigator.webkitGetUserMedia({
  audio: true,
  video: {
    mandatory: {
      chromeMediaSource: 'screen',
      minWidth: 1280,
      minHeight: 720,
    }
  }
}, handleStream, handleUserMediaError);
```
",kevinsawicki,bug :beetle:,2017-02-04T21:42:36Z,2017-02-21T22:48:34Z,siman,askucher;groundwater;siman;kevinsawicki;CapOM;DamienDoumer,groundwater,,groundwater,,kevinsawicki,
electron/electron,8591,"Does not work CSS animation for svg <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: macOs

### Expected behavior

CSS Animation should work for SVG

### Actual behavior

Animation does not work

### How to reproduce

1. Copy index.html and wow_animated.svg to the elector project [1]
2. Open index.html


[1] - [link on index.html and wow_animated.svg](https://gist.github.com/maksimr/43f6d224fa92a802225db39239b218a2)

Thanks",zeke,bug :beetle:,2017-02-05T19:05:08Z,2017-02-08T17:20:49Z,maksimr,groundwater;deepak1556;maksimr;zeke,groundwater,,groundwater,,maksimr,
electron/electron,8594,"Sometimes, electron application disappears from the task view <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15 (0.37.5)
* Operating system: windows 10

### Expected behavior
<!-- What do you think should happen? -->
After pressing Windows Key+Tab, electron application can always be displayed in the task view.
![1](https://cloud.githubusercontent.com/assets/25579512/22640348/2d714f0a-ec8d-11e6-9f71-9a009467d60e.png)

### Actual behavior
<!-- What actually happens? -->
After pressing Windows Key+Tab, sometimes, electron application disappears from the task view.
Reproduction rate閿>50%
![2](https://cloud.githubusercontent.com/assets/25579512/22640352/33b2fabc-ec8d-11e6-9a30-e436c532ca8b.png)

### How to reproduce

<!-- For bugs, provide sample code or a repo URL that demos the problem -->
1. Create application window as follow.
`	mainWindow = new BrowserWindow({
		kiosk: true
	});`
or 
`	mainWindow = new BrowserWindow({
		fullscreen: true
	});`

2. Start up the application.

3. Keep the application in the front of all the other applications.

4. Pressing Windows Key+Tab.

### Other information
1. If the application is not fullscreen, there is no problem.
2. Other applications does not have this problem.",zeke,platform/windows;bug :beetle:,2017-02-06T08:57:22Z,2017-06-06T05:48:54Z,Lcy-RITS,Lcy-RITS;zeke;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8597,"Dangling tray icon after Tray is being released. <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.5.0
* Operating system: macOS

I have a simple component that creates Tray once mounted and destroys it when unmounted. However, it does not happen if I reload page manually. It simply creates new tray icon and leaks the other one.

```js
  componentWillMount() {
    const iconPath = path.join(__dirname, '../assets/trayicon.png');
    this.tray = new remote.Tray(iconPath);
  }

  componentWillUnmount() {
    this.tray.destroy();
    this.tray = null;
  }
```

### Expected behavior

Instances of `remote.Tray` should automatically call `destroy` when released.

### Actual behavior

Tray icon keeps dangling in menubar when there is no reference left to Tray instance.

### How to reproduce

Create an instance of Tray in renderer process. Refresh the page.
",zeke,platform/macOS;component/tray;bug :beetle:,2017-02-06T14:58:40Z,2017-02-22T17:45:19Z,pronebird,MarshallOfSound;groundwater;pronebird;zeke,groundwater,,groundwater,,pronebird,
electron/electron,8598,"Support clearing a menu <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.50
* Operating system: macOS

Tray menu accumulates items internally even if `Menu.items` is being reset. `Menu.items.length` reports the right number of items, however `tray.setContextMenu` appears to append items to tray menu as opposed to replacing them entirely.

### Expected behavior

<img width=""85"" alt=""screenshot 2017-02-06 18 51 19"" src=""https://cloud.githubusercontent.com/assets/704044/22661429/45489948-ec9d-11e6-879a-1f7553f2a7d0.png"">

### Actual behavior

<img width=""95"" alt=""screenshot 2017-02-06 18 47 48"" src=""https://cloud.githubusercontent.com/assets/704044/22661353/fbf52aea-ec9c-11e6-8bf9-cae0a25762e4.png"">


### How to reproduce

```js
import { remote } from 'electron';
const { Menu, MenuItem } = remote;
const iconPath = path.join(__dirname, 'assets/trayicon.png');
const tray = new remote.Tray(iconPath);
const contextMenu = new Menu();

for(let i = 0; i < 2; i++) {
  // erase existing elements in menu
  contextMenu.items = [];
  
  // sanity check
  console.log('How many items we have? ', contextMenu.items.length);
 
  // add new items
  contextMenu.append(new MenuItem({ label: ""item 1"" }));
  contextMenu.append(new MenuItem({ label: ""item 2"" }));

  // update tray menu
  tray.setContextMenu(contextMenu);
}
```

### Workaround

Use new instance of `Menu` for each update.",kevinsawicki,enhancement :sparkles:;component/menu;bug :beetle:,2017-02-06T18:59:12Z,2017-06-06T05:51:20Z,pronebird,kevinsawicki;pronebird;bsclifton;zcbenz,kevinsawicki;groundwater,,groundwater,,zcbenz,
electron/electron,8599,"Crash with offscreen webview on Linux/Windows Electron version: 1.14.15

NodeJS version: v6.9.5

Operating system: Linux ip-172-31-47-144 4.4.0-59-generic #80-Ubuntu SMP Fri Jan 6 17:47:47 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

I have an app that creates a webview, loads a URL, and writes the current image to a file when ready. Setting offscreen: true so I can receive paint events causes Electron to segfault with the following stack trace:

```
Received signal 11 SEGV_MAPERR 000000000018
#0 0x000001e580f7 <unknown>
#1 0x7f1fb053d390 <unknown>
#2 0x00000329c109 <unknown>
#3 0x000002701928 <unknown>
#4 0x000002706512 <unknown>
#5 0x000002706407 <unknown>
#6 0x000002700ced <unknown>
#7 0x000002700c21 <unknown>
#8 0x000002a068e7 <unknown>
#9 0x0000027c4360 <unknown>
#10 0x000002928434 <unknown>
#11 0x00000330c195 <unknown>
#12 0x000001e59226 <unknown>
#13 0x000001e74755 <unknown>
#14 0x000001e74a48 <unknown>
#15 0x000001e74e9b <unknown>
#16 0x000001e4dffa <unknown>
#17 0x7f1fac2d1197 g_main_context_dispatch
#18 0x7f1fac2d13f0 <unknown>
#19 0x7f1fac2d149c g_main_context_iteration
#20 0x000001e4ded6 <unknown>
#21 0x000001e8d41e <unknown>
#22 0x0000026fd569 <unknown>
#23 0x0000026fd3b5 <unknown>
#24 0x00000270023d <unknown>
#25 0x0000026f93ec <unknown>
#26 0x000001221af7 <unknown>
#27 0x0000012205d0 <unknown>
#28 0x000003479633 main
#29 0x7f1fa9edb830 __libc_start_main
#30 0x000000579189 <unknown>
  r8: 000000000000fff8  r9: 000000000000001c r10: 0000003d1409b4a0 r11: 00007f1faa04f390
 r12: 0000000000000000 r13: 0000000000000000 r14: 0000003d1424d2c0 r15: 0000003d1424d2c0
  di: 0000000000000000  si: 0000003d141e6040  bp: 00007ffe34f74901  bx: 0000000000000000
  dx: 0000000000000000  ax: 0000000000000000  cx: 0000003d141e6060  sp: 00007ffe34f74680
  ip: 000000000329c109 efl: 0000000000010246 cgf: 0000000000000033 erf: 0000000000000004
 trp: 000000000000000e msk: 0000000000000000 cr2: 0000000000000018
[end of stack trace]
```",brenca,platform/windows;platform/linux;component/webview;crash :boom:;bug :beetle:;component/offscreen,2017-02-06T19:10:37Z,2017-05-11T11:52:48Z,ns,kevinsawicki;tluyben;jg123;gerhardberger;brenca,kevinsawicki;groundwater;bengotow,,brenca,,zcbenz,
electron/electron,8600,"Inconsistent Tray Blur * Electron version: electron v1.4.15
* Operating system: mac OSX 10.11.6

I'm building a tray app, however I seem to be running into inconsistent behavior with how the app blurs when I click on other tray items. I expect that when I click on another tray item, that tray item should become focused while the previous app should become blurred. Sometimes this behavior is exhibited. However, other times it is not.

For example when clicking on Adobe's tray app, my electron tray app blurs
![traycaptureadobe](https://cloud.githubusercontent.com/assets/11164750/22658045/587c479c-ec5e-11e6-9e3e-65f94fe131f6.gif)

However when clicking on other apps, like power level, the blur doesn't occur
![traycaptureimproper](https://cloud.githubusercontent.com/assets/11164750/22658228/03eec262-ec5f-11e6-9670-5ebdd7b0ca7b.gif)
This behavior happens with the wifi, bluetooth, and airPlay tray apps as well.

### How to reproduce
Create a window that captures focus and blur events

```
mainWindow = new BrowserWindow({width:300, height:400, frame: false, show: false, resizable: false})
mainWindow.on('focus', logFocus)
mainWindow.on('blur', logBlur)

function logFocus() {
  console.log(""focus!"")
}

function logBlur() {
  console.log(""blur"")
}
```

Click other tray icons

### Other information

This is similar to #7759, however window levels are not at all the solution here. I can change the window level to `screen-saver`, but all that will do is keep my app's window on top of the other app; no blurring occurs.  I somewhat suspect this inconsistency has something to do with how menus and windows interact.",groundwater,platform/macOS;component/tray;bug :beetle:,2017-02-06T19:36:37Z,2017-06-06T06:03:21Z,Hsaylor,MarshallOfSound;groundwater;zeke;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8603,"net::ERR_REQUEST_RANGE_NOT_SATISFIABLE when playing a sound * Electron version: 1.4.15
* Operating system: Windows 7 Professional

### Expected behavior

Should play a sound without getting an error message in the console.

### Actual behavior

Plays a sound, but shows an error message in the console.

### How to reproduce

Nothing super extraordinary going on here. I made a new Electron project based on the `electron-quick-start` repository. Then, I played some sounds with JavaScript in the renderer process with:

```
let audio = new Audio('assets/sounds/go.mp3');
audio.play();
```

This works around 95% of the time. But occasionally, I get the following errors:

![eyq4taq](https://cloud.githubusercontent.com/assets/5511220/22668039/40fe62f6-ec8d-11e6-85c6-d56b1d10c8b4.png)

When these errors occur, the sound does appear to actually play successfully, but then I get around 12 of these ""net::ERR_REQUEST_RANGE_NOT_SATISFIABLE"" errors in the console window.

My first instinct was that it had something to do with the files being in an ASAR archive, but I don't see how that could be the case, as the problem happens in both development and production. (Development meaning when I'm just testing out the Electron project with ""npm start"" and nothing is in an ASAR archive yet.)

I did some searching and apparently there is absolutely nothing on Google about this specific error, so it seems that I have a unique one here.",kevinsawicki,platform/windows;bug :beetle:,2017-02-06T21:57:13Z,2017-03-06T19:09:39Z,Zamiell,kevinsawicki;Zamiell;AlexanderKosianchuk,groundwater,,groundwater,,kevinsawicki,
electron/electron,8621,"'scroll-touch-end' not emitted in 1.6.0 * Electron version: 1.6.0
* Operating system: MacOS 10.12.2

### Expected behavior

'scroll-touch-end' emits when trackpad scrolling ends.

### Actual behavior

The begin event emits, but not the end

### How to reproduce

Example repo: https://github.com/pfrazee/electron-bug-no-scroll-touch-end
",kevinsawicki,bug :beetle:,2017-02-07T23:28:29Z,2017-02-14T17:32:57Z,pfrazee,javan,groundwater;bengotow,bengotow,kevinsawicki,,kevinsawicki,
electron/electron,8622,"WebView causes Warning: Possible EventEmitter memory leak detected. 11 ELECTRON_RENDERER_WINDOW_VISIBILITY_CHANGE listeners added. Use emitter.setMaxListeners() to increase limit * Electron version: 1.3.1 (32-bit), 1.6.0 (64-bit)
* Operating system: Win 10 x64

### Expected behavior

The WebView should have a dispose method or should not attach multiple listeners to ipcRenderer.

### Actual behavior

Every time a WebView is created, a new event listener is attached.

### How to reproduce

Just run this from renderer:
```
for (let i = 0; i < 10; i++) { new WebView(); }
```",kevinsawicki,component/webview;bug :beetle:,2017-02-08T01:54:54Z,2017-02-28T16:45:16Z,seanzer,,kevinsawicki;groundwater,,kevinsawicki,,kevinsawicki,
electron/electron,8632,"Right click on fullscreened flash player in webview shows TypeError * Electron version: 1.4.15,1.5.0,1.6.0
* Operating system:Windows 10 Home Basic
* PepperFlashPlayer Version: 24.0.0.194

1. open page with flash in webview.
    I tried a game and a video site: http://tenhou.net/0/ and http://www.youku.com
2. make the flash fullscreened
3. right click
4. an error dialog opened.
   ```
   TypeError: Error Processing argument at index 0, conversion failure from null
     at TypeError (native)
     at Menu.popup(...\electron.asar\browser\api\menu.js:162:8)
     at WebContents.<anonymous> (...\electron.asar\browser\api\webconten...:10)
     at emitTwo(event.js:106:13)
     at WebContents.emit(event.js:191:7)
   ```
### Expected behavior

no error

### Actual behavior

error dialog

### How to reproduce

main.js
```
const {app, BrowserWindow} = require('electron');
let win;

app.on('window-all-closed', function() {
  app.quit();
});

app.on('ready', function() {
  win = new BrowserWindow({
    width: 800,
    height: 600
  });
  win.loadURL('file://' + __dirname + '/index.html');
  win.on('closed', function() {
    win = null;
  });
});


const path = require('path');
const fs = require('fs');

const {execSync} = require('child_process');
let system32_path = execSync('echo %SYSTEMROOT%\\System32', {encoding:""utf8""}).trim();
let flash_path = path.resolve(system32_path, 'Macromed', 'Flash');

if (fs.existsSync(flash_path)) {
	let files = fs.readdirSync(flash_path);
	let ppapi_flash_path = null;
	let ppapi_flash_version = null;

	for (let file of files) {
		let matches;
		if (matches = file.match(/pepflashplayer64_(\d+)_(\d+)_(\d+)_(\d+).dll/)) {
			ppapi_flash_path = path.resolve(flash_path, file);
			ppapi_flash_version = `${matches[1]}.${matches[2]}.${matches[3]}.${matches[4]}`;
		}
	}
	if (fs.existsSync(ppapi_flash_path)) {
		app.commandLine.appendSwitch('--enable-npapi');
		app.commandLine.appendSwitch('ppapi-flash-path', ppapi_flash_path);
		app.commandLine.appendSwitch('ppapi-flash-version', ppapi_flash_version);
	}
}
```

index.html
```
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title></title>
  </head>
  <body>
<style>
html{
 width:100%;
 height:100%;
}
body{
 margin:0;padding:0;
 height:100%;
}

</style>
    <script>
    </script>
    <webview id=""main"" src=""http://v.youku.com/v_show/id_XMjUwMjc0MzA3Mg==.html"" autosize=""on"" style=""display:inline-flex; width:100%; height:100%"" plugins></webview>
  </body>
</html>
```",kevinsawicki,component/menu;bug :beetle:,2017-02-08T19:25:11Z,2017-02-24T17:05:33Z,hkuclion,,kevinsawicki;groundwater;bengotow,bengotow,kevinsawicki,,kevinsawicki,
electron/electron,8661,"click event not triggered in ContextMenu * Electron version: v1.4.15
* Operating system: Windows 10 x64

In my createWindow function which is used from the 'activate' and 'ready' event, I initialize a Tray object which has a ContextMenu, with 1 item, which is 'Exit'. It calls app.quit() but it never quits.

### Expected behavior
It should quit the application.

### Actual behavior
It just doesn't trigger.

### How to reproduce
I use this code:
```js
function createWindow () {
    tray = new Tray(__dirname + '/icons/icon.ico')
    const contextMenu = Menu.buildFromTemplate([
        {label: 'Exit', click () {
            app.quit() // not triggered
        }}
    ])
    tray.setToolTip('Open GitSpector')
    tray.setContextMenu(contextMenu)
    // ...
```
It's taken from the Electron example page.
The full source of my main.js can be found here: https://github.com/ioncodes/GitSpector/blob/master/main.js",kevinsawicki,platform/windows;blocked/need-info 閴;bug :beetle:,2017-02-12T14:56:50Z,2017-03-06T19:10:13Z,ioncodes,kevinsawicki,groundwater;kevinsawicki,,groundwater,,kevinsawicki,
electron/electron,8677,"Modal Windows don't yield on close * Electron version: 1.4.15
* Operating system: Windows 10

### Expected behavior
Closing a modally opened window should yield control back to it's parent when it is closed.

### Actual behavior
Modal window closes, parent window refuses to accept input (playing generic error ding when you try and click or type into it)

### How to reproduce
```JavaScript
mainWindow = new BrowserWindow();
mainWindow.loadURL(""http://localhost:8000/OverlayControl.html"");
mainWindow.webContents.openDevTools();
mainWindow.on(""closed"", () => {
	mainWindow = null;
});
var authWindow = new BrowserWindow({ parent: mainWindow, modal: true });
authWindow.loadURL(""http://localhost:8000/test.html"");
```

Then close the popup window, and notice that mainwindow doesn't accept input.
",zeke,platform/windows;bug :beetle:;component/modal,2017-02-14T01:26:00Z,2017-06-06T07:40:22Z,Anaerin,zeke;foreverglory;zcbenz;gautamsi;matortheeternal,groundwater;kevinsawicki,,groundwater,,zcbenz,
electron/electron,8690,"`./script/bootstrap.py` stack trace on OS X 10.9.5 
* Electron version: v1.6.0-195-g0ac3969
* Operating system: OS X 10.9.5

### Expected behavior

`$ ./script/bootstrap.py --dev` should correctly bootstrap the source or give an appropriate error.

### Actual behavior

`bootstrap.py` fails on 10.9.5 / Mavericks when `./tools/mac/find_sdk.py` is unable to find `/Library/Developer/CommandLineTools/SDKs` which causes the script to fail with a stacktrace.
  
```
$ ./script/bootstrap.py --dev
Download Mantle       64733  [100.0%]
Download ReactiveCocoa      301942  [100.0%]
Download Squirrel      311396  [100.0%]
Traceback (most recent call last):
  File ""./tools/mac/find_sdk.py"", line 92, in <module>
    print main()
  File ""./tools/mac/find_sdk.py"", line 60, in main
    sdks = [re.findall('^MacOSX(10\.\d+)\.sdk$', s) for s in os.listdir(sdk_dir)]
OSError: [Errno 2] No such file or directory: '/Library/Developer/CommandLineTools/SDKs'
gyp: Call to 'python ./tools/mac/find_sdk.py 10.10' returned exit status 1 while in electron.gyp.

Traceback (most recent call last):
  File ""./script/bootstrap.py"", line 264, in <module>
    sys.exit(main())
  File ""./script/bootstrap.py"", line 65, in main
    run_update(defines, args.msvs)
  File ""./script/bootstrap.py"", line 260, in run_update
    execute_stdout(args)
  File ""/Users/pnore/dev/electron/script/lib/util.py"", line 182, in execute_stdout
    execute(argv, env)
  File ""/Users/pnore/dev/electron/script/lib/util.py"", line 170, in execute
    raise e
subprocess.CalledProcessError: Command '['/usr/local/opt/python/bin/python2.7', '/Users/pnore/dev/electron/script/update.py']' returned non-zero exit status 1
```

### How to reproduce

See above. 

FYI: 
```
$ cat /Applications/Xcode.app/Contents/version.plist
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>BuildVersion</key>
	<string>11</string>
	<key>CFBundleShortVersionString</key>
	<string>6.2</string>
	<key>CFBundleVersion</key>
	<string>6776</string>
	<key>ProductBuildVersion</key>
	<string>6C131e</string>
	<key>ProjectName</key>
	<string>IDEFrameworks</string>
	<key>SourceVersion</key>
	<string>6776000000000000</string>
</dict>
</plist>
```
",kevinsawicki,platform/macOS;bug :beetle:;component/build,2017-02-15T18:49:39Z,2017-06-06T07:44:39Z,codekiln,kevinsawicki;codekiln;zcbenz,kevinsawicki,,kevinsawicki,,zcbenz,
electron/electron,8700,"Crash when navigating in did-fail-load event I have a download link (40mb+ file) when clicked and confirm where to save file, make another click on same link and got crash. 

Tried to make sample of crash, and didn't yet face such behavior: on second click app didn't made something (not showed download dialog), but also not crashed. Will provide sample as soon as got reproducible one.

Debug:
<img width=""1331"" alt=""screen shot 2017-02-16 at 1 24 09 pm"" src=""https://cloud.githubusercontent.com/assets/1834053/23017440/56041e32-f44b-11e6-8d5c-f1ff6ad671cd.png"">

Report:
<img width=""1398"" alt=""screen shot 2017-02-16 at 1 25 28 pm"" src=""https://cloud.githubusercontent.com/assets/1834053/23017568/db45549e-f44b-11e6-8f74-650b0f2cc756.png"">

Any idea what can affect such problem? 

As I see from report last triggered method was webContents.loadURL, but didn't understand why it was called since I have webContetst.session event 'will-download' called, that had to be triggered after webContents.downloadURL, not loadURL.
",deepak1556,crash :boom:;bug :beetle:,2017-02-16T10:33:15Z,2018-09-24T04:41:20Z,ghost,ghost;kevinsawicki;deepak1556;codebytere,kevinsawicki;bengotow;deepak1556;zcbenz;sofianguy,deepak1556;sofianguy;ckerr,bengotow,,codebytere,
electron/electron,8703,"Menu enabled/visible property doesn't affect top-level menu items <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: macOS Sierra, Windows 10

### Expected behavior

Top level menu items should be hidden when the `visible` property is false and not be clickable when `enabled` property is false.

### Actual behavior

The `visible` and `enabled` properties do not behave correctly on top level menu items. It seems to work correctly for submenu items.

### How to reproduce

Create a menu with this code:

```javascript
const { Menu } = require('electron').remote;

const template = [
  {
    label: 'Should not be visible',
    visible: false,
    submenu: [
      {
        label: 'Should not be visible either',
        visible: false
      }
    ]
  },
  {
    label: 'Should not be enabled',
    enabled: false,
    submenu: [
      {
        label: 'Should not be enabled either',
        enabled: false
      }
    ]
  },
];

const menu = Menu.buildFromTemplate(template);

Menu.setApplicationMenu(menu);
```

Both menu items will still be visible and clickable.
",codebytere,platform/windows;platform/macOS;status/wontfix 棣冩瘒;bug :beetle:;version/1.8.x,2017-02-16T19:44:58Z,2018-10-03T15:26:46Z,mikecao,kevinsawicki;codebytere;sindresorhus;arminghm;zecoo;tzvetelin-vassilev;jmpugh,sofianguy,,codebytere,,kevinsawicki,
electron/electron,8705,"閸︹暕ac娑撳忕礉fullscreen娑撶皪rue娴ｅ棙妲搁崡缈犵瑝閼宠棄鍙忕仦蹇旀▔缁 閸︹暢indows缁鑽ょ埠娑撳忕礉new BrowserWindow({fullscreen:true}),閹垫挸绱戦惃鍕鐛ラ崣锝嗘Ц閸忋劌鐫嗛惃鍕剁礉娴ｅ棙妲搁崷鈺゛c娑撳忕礉閺堝嬫傞弰閸忋劌鐫嗛惃鍕剁礉閺堝嬫傜涵閺勬涙裤倗娈戠硅棄瀹800閿涘矂鐝鎼600閿涘本搴濈疄鐠佲晝鐛ラ崣锝勭撮惄鏉戝弿鐏炲繑妯夌粈鍝勬喛",zcbenz,platform/macOS;bug :beetle:,2017-02-17T06:36:53Z,2017-06-06T06:07:32Z,yuxiaoyan1205,groundwater;yuxiaoyan1205;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8706,"Frameless Electron App not dragging via screen <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version:
v.1.4.15
* Operating system:
Windows 10

### Expected behavior
Frameless window with settings:

```js
  win = new BrowserWindow({width: 800,
   height: 600,
   frame: false,
   resizable: false
 })
```

and this CSS:

```css
html, body {
	-webkit-app-region: drag;
    -webkit-user-select: none;
	background-color: #ccc;
}
```

and this HTML:

```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset=""UTF-8"">
    <title>Hello World!</title>
    <link rel=""stylesheet"" type=""text/css"" href=""app.css"">
  </head>
  <body style=""-webkit-app-region: drag;"">
```

<!-- What do you think should happen? -->
shoud Drag'n'Drop via Screen

### Actual behavior
Electron Application when started don't work as expected. I can't drag it via screen.

<!-- What actually happens? -->

### How to reproduce
Copy-paste code from Quick Start Guide from official Electron Doc page.

In Terminal:
npm install -g electron
<!-- For bugs, provide sample code or a repo URL that demos the problem -->
",kevinsawicki,platform/windows;blocked/need-info 閴;bug :beetle:,2017-02-17T07:46:50Z,2017-02-28T16:16:45Z,salmazov,MarshallOfSound;salmazov;kevinsawicki;pronebird;Vishal1419,groundwater;kevinsawicki,,groundwater,,kevinsawicki,
electron/electron,8708,"Blurry text on a windows electron app I've noticed that text appears more blurry on electron than in regular Chrome.

Mind you i'm using the latest electron version 1.6.0.

This is a comparison between **Chrome (Top)** and Electron's **Chromium (Bottom)**

![](https://s3.amazonaws.com/snaps-bucket/2017/02/X7JLssF/2017-02-17_14-45-53.png)

Any ideas how to fix this?",zeke,blocked/need-info 閴;bug :beetle:,2017-02-17T14:47:14Z,2017-06-12T07:40:03Z,Spazer9,groundwater;Spazer9;Slapbox;binaryfunt;nilslindemann;highergroundstudio;GiovanH;zeke;nikola;zcbenz;6a7070;utd1878,groundwater,,groundwater,,zcbenz,
electron/electron,8710,"Drag the browser window around block the main thread <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

I'm developing a computationally intensive application using electron. I came to notice that when I drag the browser around, SOMETIMES the main Node.js thread is blocked, and it blocks the main thread for a while, or even completely by change. 

I first thought it might be the communication between IPCMain and IPCRender so I disconnect all of them in my code, but it doesn't help. This is like a reverse case of #3363, however as far as I know I can't workaround it not touching code in electron.

To make a simple illustration, I use the electron quick start application and 15 lines additional code.

* Electron version: 1.4.15
* Operating system: Windows 10 Pro Version 10.0.14393 (Also reproduce-able on Ubuntu )

### How to reproduce

<!-- For bugs, provide sample code or a repo URL that demos the problem -->
1. Download electron-quick-start
https://github.com/electron/electron-quick-start
2. In main.js add
```sh
var lastDate = new Date();

function printTime () {
  var d = new Date();
  var delta = d - lastDate;
  if(delta > 20) {
    console.log(delta);
  }
  lastDate = d;
}
```
and modity app on ready
```sh
app.on('ready', () => {
  createWindow();

  setInterval(printTime, 10);
})
```
3. Run the app, and drag the title bar of the browser window around 

### Expected behavior

<!-- What do you think should happen? -->
If the main thread keeps running, the interval calls printTime every 10ms and the threshold for the console.log is 20ms, so there should be no print out in the console.

### Actual behavior
I get random numbers like
```sh
96
34
33
601
118
32
```
<!-- What actually happens? -->


",kevinsawicki,bug :beetle:,2017-02-17T19:58:09Z,2017-06-12T07:41:04Z,lanigela,bhouston;groundwater;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8712,"Impossible to detect if another instance instance has been launched on OSX Hi everyone,

I'm making an app which has a `Tray` only (most of the time) and a `BrowserWindow` which is showed when a `click` event is emitted on the `Tray`.

I'd like to show this `BrowserWindow` programmatically when the user opens the app once again. Here is my problem on OSX:
 - The callback of `app.makeSingleInstance` is not executed on OSX if the users clicks on Myapp.app,
 - No event is emitted in the background process when this happens,
 - I don't have a dock icon to listen to since it's hidden in my app. 

Is there a way of detecting such an event I'm not aware of? If not, would it possible to emit such an event?",zeke,platform/macOS;component/tray;bug :beetle:,2017-02-17T22:44:45Z,2017-02-19T22:32:57Z,tex0l,groundwater;tex0l;zeke,groundwater,,groundwater,,tex0l,
electron/electron,8713,"webContents.sendInputEvent({type:'char', keyCode:'Shift'}) inserts the text ""Shif"" into a textarea * Electron version: 1.6.0
* Operating system: macOS Sierra

### Expected behavior

When focused in a `textarea` and I call `webContents.sendInputEvent({type:'char', keyCode:'Shift'})` a simulated shift key should be sent to the window and no text should be entered into the `textarea`.

<!-- What do you think should happen? -->

### Actual behavior

The text `Shif` is appears in the `textarea`.

<!-- What actually happens? -->

### How to reproduce

Make an empty textarea, focus on it, and then call `webContents.sendInputEvent({type:'char', keyCode:'Shift'})` to see it insert the text.

<!-- For bugs, provide sample code or a repo URL that demos the problem -->
",kevinsawicki,platform/macOS;blocked/need-info 閴;bug :beetle:,2017-02-17T22:58:02Z,2017-02-22T16:19:02Z,kirkouimet,groundwater;kevinsawicki;kirkouimet;denysdovhan,groundwater;kevinsawicki,,groundwater,,kevinsawicki,
electron/electron,8714,"BrowserWindow vibrancy not work in 1.6.0 <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.0
* Operating system: mac 10.12.3

### Expected behavior
Hi everyone, i want to use vibrancy in my app, but it not work! somebody can help me?

```js
const electron = require('electron');
const {app, BrowserWindow} = electron;

function createWindow() {

	let win = new BrowserWindow({
		width: 800,
		height: 600,
		frame: false,
		vibrancy: 'dark'
	})
	
}

app.on('ready', createWindow);

``` 


",gerhardberger,platform/macOS;bug :beetle:;bug/regression :leftwards_arrow_with_hook:,2017-02-18T04:39:12Z,2017-02-21T16:45:53Z,ektx,groundwater;ektx;gerhardberger;kevinsawicki,groundwater;kevinsawicki,,groundwater;kevinsawicki,kevinsawicki,kevinsawicki,
electron/electron,8726,"desktopCapturer on Windows 10 records video of screen with offset * Electron version: 1.6
* Operating system: Windows 10 (build 1607)

### Expected behavior

The screen should be captured as it looks.

### Actual behavior

The video is recorded with an offset and the right side of the screen loops on the left side.

![screen shot 2017-02-21 at 11 12 18](https://cloud.githubusercontent.com/assets/163635/23162647/06cb1cfa-f827-11e6-89c8-84f40b9876c5.png)

Captured video can be seen here: https://dl.dropboxusercontent.com/u/2935618/temp/Bug%20Screen%20Recording-1487675274089.webm

### How to reproduce

I tried many variations and none worked. Below the simplest code which can be used for replicating it.
```javascript
var recorder;
var blobs = [];

function recordVideo() {
  desktopCapturer.getSources({types: ['window', 'screen']}, function (error, sources) {
    if (error) throw error;
    for (let i = 0; i < sources.length; i++) {
      let src = sources[i];
      if (src.name === document.title) {
        const contraints = {
          audio: false,
          video: {
            mandatory: {
              chromeMediaSource: 'screen',
              chromeMediaSourceId: src.id,
              maxWidth: window.screen.width,
              maxHeight: window.screen.height
            }
          }
        };
        navigator.mediaDevices.getUserMedia(contraints)
          .then(handleStream)
          .catch(handleUserMediaError);
        return;
      }
    }
  });
}

function handleStream(stream) {
  recorder = new MediaRecorder(stream);
  blobs = [];
  recorder.ondataavailable = function(event) {
    blobs.push(event.data);
  };
  recorder.start();
}

function saveRecordedVideo(){
  blobToBuffer(new Blob(blobs, {type: 'video/webm'}), function(err, buffer){
    if (err) throw err;
  
    var file = os.homedir() + '/' + document.title + '-' + (new Date()).getTime() + '.webm';
    fs.writeFile(file, buffer, function(err) {
      if (err) {
        console.error('Failed to save video ' + err);
      } else {
        console.log('Saved video: ' + file);
      }
    });
  });
}
```


",alespergl,platform/windows;bug :beetle:,2017-02-21T11:19:57Z,2017-06-12T07:56:21Z,nuthinking,nuthinking;demian85;zcbenz;groundwater,groundwater,,groundwater,,zcbenz,
electron/electron,8738,"__dirname encodes space in path with ""%20"" <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: MacOS El Captain

### Expected behavior

**__dirname** shouldn't encode spaces in path with ""20%"". For example, I have a directory ""/Users/test 1"". **__dirname** should print out ""/Users/test 1"" as it does in pure NodeJS environment.

### Actual behavior

**__dirname** prints ""/Users/test%201"". This breaks other NodeJS functionalities like fs.existsSync(), which doesn't accept an encoded path.

Example: 
> __dirname ==> ""/Users/test%201""
> require('fs').existsSync(__dirname) ==> false
> require('fs').existsSync(""Users/test 1"") ==> true

Please refer to https://github.com/nodejs/node/issues/11509 for my original post.
",kevinsawicki,blocked/need-info 閴;bug :beetle:,2017-02-22T20:59:48Z,2017-02-25T00:13:55Z,yaooluu,kevinsawicki;yaooluu,kevinsawicki,,kevinsawicki,,kevinsawicki,
electron/electron,8752,"`executeJavaScript` cannot get result when Promise overridden by content page. * Electron version: 1.6.0
* Operating system: macOS

### Expected behavior

print ""2"" and quit

### Actual behavior

never quit

### How to reproduce

Running following code:

```
const {app, BrowserWindow} = require('electron')

app.on('ready', () => {
  let win = new BrowserWindow();
  //win.loadURL('data:text/html,<html>');
  win.loadURL('data:text/html,<script>window.Promise=null</script>');
  win.webContents.executeJavaScript('1+1', (result) => {
    console.log(result);
    app.quit();
  });
});
```

Or with a real case: `win.loadURL('https://www.tumblr.com/');`

### Possible solution

The Promise in [this line](https://github.com/electron/electron/blob/8e203592e25db081dc68db086938157d0847f169/lib/renderer/init.js#L42) could be overridden by content page, which cause 

```
 Uncaught TypeError: Promise.resolve is not a function TypeError: Promise.resolve is not a function
 at Function.responseCallback (Electron.app/Contents/Resources/electron.asar/renderer/init.js:42:13)
 at EventEmitter.electron.ipcRenderer.on (Electron.app/Contents/Resources/electron.asar/renderer/init.js:51:28)
```

import `Promise` into the scope can solve this.",kevinsawicki,bug :beetle:,2017-02-23T14:49:11Z,2017-03-07T20:27:40Z,binux,MarshallOfSound;binux;kevinsawicki,kevinsawicki;emorikawa,emorikawa,kevinsawicki,,kevinsawicki,
electron/electron,8759,"Desktop notifications stopped working after setting UserAgent <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.15
* Operating system: OS X

### Expected behavior
Desktop notifications should work even after setting a new user-agent via [win.loadURL](https://github.com/zulip/zulip-electron/blob/06737ce62968d7ce938254869b410a4d61984319/app/main/index.js#L125-L128).
I have set a new user-agent via
``` js
win.loadURL(targetURL(),
{
   userAgent: ""Myuseragent""
});
``` 
<!-- What do you think should happen? -->

### Actual behavior

<!-- What actually happens? -->
Desktop notifications stopped working although HTML5 type notifications do works - 
![image](https://cloud.githubusercontent.com/assets/2263909/23276980/4281522a-fa32-11e6-8a1b-21fbaddbd177.png)

## Update 
desktop notifications do works If I add this new user-agent to the default user-agent.
```js
win.loadURL(targetURL(),
{
    userAgent: ""Myuseragent"" + win.webContents.getUserAgent()
}); ",kevinsawicki,platform/macOS;blocked/need-info 閴;bug :beetle:,2017-02-23T20:17:20Z,2017-03-06T20:02:09Z,akashnimare,kevinsawicki;akashnimare;timabbott,groundwater;kevinsawicki,,groundwater,,kevinsawicki,
electron/electron,8762,"callbacks for hookWindowMessage should have their return value sent to OS 

* Electron version: 1.4.15
* Operating system: windows 10  

### Expected behavior
On some Windows messages a return may be expected.  The return value of the callbacks should be forwarded to the OS

Example : 
WM_QUERYENDSESSION 
From : https://msdn.microsoft.com/en-us/library/windows/desktop/aa376890(v=vs.85).aspx
`if any application returns zero, the session is not ended. `

When windows shuts down it would be usefull to use this to finish app tasks that would have been done normally  on app exit.  


### Actual behavior

 The retun value is not forwarded

",alespergl,platform/windows;bug :beetle:,2017-02-24T09:46:24Z,2017-06-12T08:37:40Z,cberescu,alespergl;cberescu;zcbenz;natetyler;rhazari;kitadamsadi,groundwater;alespergl,alespergl,groundwater,,zcbenz,
electron/electron,8767,"app.getFileIcon returns empty PNG * Electron version: 1.6.1 beta
* Operating system: Microsoft Windows [Version 10.0.14393]

```
app.getFileIcon(path.normalize(file), (err, icon) => {
    if (icon) {
        console.log(icon.toBitmap()); // [buffer array]
        console.log(icon.toBitmap().length); // 9216
        console.log(icon.getBitmap()); // [buffer array]
        console.log(icon.getBitmap().length); // 9216
        console.log(icon.toPNG()); // EMPTY buffer array []
        console.log(icon.toPNG().length); // 0
        console.log(icon.getSize()); // {width: 32, height: 32}
        console.log(icon.toDataURL()); // ""data:image/png;base64,""
    }
});
```",kevinsawicki,platform/windows;bug :beetle:,2017-02-24T19:54:40Z,2017-03-07T20:55:56Z,karacas,kevinsawicki;karacas;YurySolovyov,kevinsawicki,,groundwater,,kevinsawicki,
electron/electron,8771,"Blank page will somehow show up when webview tag loads a url at first time. * Electron version: 1.6.1
* Operating system: macOS Sierra

### Expected behavior

No blank page shows when webview tag loads a url at first time.

### Actual behavior

As described [here](https://github.com/qazbnm456/lulumi-browser/issues/3).

### How to reproduce

**It happened to my project when I upgraded electron to version 1.6.1.** Never happened before when I developed with electron version 1.4.15.

Link to my project: [lulumi-browser](https://github.com/qazbnm456/lulumi-browser)",kevinsawicki,blocked/need-info 閴;bug :beetle:,2017-02-25T05:10:21Z,2017-03-07T19:14:22Z,qazbnm456,groundwater;qazbnm456;javan;saenzramiro;kevinsawicki,groundwater,,groundwater,,kevinsawicki,
electron/electron,8778,"Developer console error output is confusing <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.1
* Operating system: Windows 10 64bit running a 32bit binary

### Expected behavior

<!-- What do you think should happen? -->

Our app is throwing errors at the moment. These errors have a low priority and will not be fixed soon.

Electron 1.4.15 has a very good developer console. Each error is only 1 line and I can click on it if I would like to see more details. I am able to find any unknown error.
![electron_1 4 15](https://cloud.githubusercontent.com/assets/6333390/23343697/16efc188-fc70-11e6-92b4-de7178959ee1.jpg)


### Actual behavior

<!-- What actually happens? -->

The developer console of Electron 1.6.1 is not as good as the old one. Each error needs now ~10 lines. I only see 1/10 and that makes it hard to find any unknow error. 
![electron_1 6 1](https://cloud.githubusercontent.com/assets/6333390/23343698/20029cf0-fc70-11e6-8523-c25804355918.jpg)
",zcbenz,platform/windows;bug :beetle:,2017-02-26T21:10:45Z,2017-03-01T20:17:44Z,littleskunk,MarshallOfSound;littleskunk;tonyganch;kevinsawicki,groundwater,,groundwater,,kevinsawicki,
electron/electron,8779,"Local Jupyter Notebook server not loaded correctly * Electron version: v1.4.15
* Operating system: Win7 64 bit

### Expected behavior

There is a problem connecting to a local jupyter notebook server using electron. 

### Actual behavior

Blank window appears

### How to reproduce

Start jupyter notebook server: `jupyter notebook`
This sets up a server at http://localhost:8888/. Try to connect to this address from electron.
`electron http://localhost:8888/`
The home page should load.

The page loads fine with chrome:
![image](https://cloud.githubusercontent.com/assets/19926/23344026/6acdeb04-fc75-11e6-9394-de92ae676bb8.png)

and nw.js `nw --url=""http://localhost:8888/""`
![image](https://cloud.githubusercontent.com/assets/19926/23344030/80517888-fc75-11e6-982d-16a26d8cc913.png)

Also, electron correctly loads other pages, `electron https://google.com` works as expected.
",groundwater,bug :beetle:,2017-02-26T21:49:36Z,2017-02-28T12:06:08Z,ajasja,ajasja;groundwater,groundwater,,groundwater,,ajasja,
electron/electron,8788,"printToPDF causes window size changes <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.4.13
* Operating system: win 7 64 bit

### Expected behavior

prntToPDF should not have any visible side effects

### Actual behavior

When I printToPDF, the window briefly shrinks to the print page size (539px in my case). This causes css changes if there are media queries, which may be visible if transitions are involved. It also triggers mediaquery event.

### How to reproduce

create a page:

    <div>
        <button onclick=""sendipc()"">pdf</button>
    </div>
    <div id=""main""></div>
    <script>
        let matcher = window.matchMedia('(max-width: 1024px)');
        matcher.addListener(() => {
            console.log(window.innerWidth);
        });
        function sendipc() {
            var ipc = window.require('electron').ipcRenderer;
            ipc.send('print');
        }
    </script>

handle the ipc message in the main process:

    ipc.on('print', (msg) => {
        mainWindow.webContents.printToPDF({}, () => {});
    });

When pressing the button, observe the media query events in the console log

Note: this is probably circumvented by rendering the pdf contents in a separate, hidden window and printing that to pdf. I'll try that next.

In any case, it took me quite a while to figure out that rendering to pdf caused window resizes, which caused the media queries to fire.

I can imagine this is desired behaviour, as we need a fixed size for the pdf render process. However, some improvements could be done

- make a note in the docs that the window will be resized while printing to pdf, this is not obvious
- add an option to printToPDF to print from a separate window, for which electron takes care of creating a snapshot of the current window and rerendering that in a hidden window.

<!-- For bugs, provide sample code or a repo URL that demos the problem -->
",zeke,platform/windows;component/printing;bug :beetle:,2017-02-27T16:41:21Z,2018-09-24T04:42:00Z,rikkertkoppes,groundwater;rikkertkoppes;codebytere;Vaggal,groundwater;zcbenz;sofianguy,zcbenz;sofianguy,groundwater,,codebytere,
electron/electron,8791,"Heap Snapshots crash when attempting to create * Electron version: 1.6.1, on both macOS and Windows

The following code seems to crash any renderer process hard on apps I've tested on (Slack Desktop, unreleased project X):

```js
process.atomBinding('v8_util').takeHeapSnapshot();
```

https://github.com/enlight/v8-profiler seems to have a similar effect when trying to take a heap snapshot as well.",zcbenz;kevinsawicki,bug :beetle:,2017-02-27T22:23:00Z,2017-03-17T16:55:40Z,anaisbetts,kevinsawicki;jingman,groundwater,,groundwater,,kevinsawicki,
electron/electron,8796,"systemPreferences.subscribeNotification not triggered * Electron version: 1.6.1
* Operating system: macOS 10.11.6

### Expected behavior

I can't seem to receive any system preference notifications on Electron 1.6.1. For example, given something like this:

         const id = systemPreferences.subscribeNotification(
           'AppleShowScrollBarsSettingChanged', () => {
              this.broadcast('scrollbars', !hasOverlayScrollBars())
           })

I would expect the event to be fired when the scroll bar preferences change. This works fine with Electron 1.4.15 on macOS 10.12.3.

### Actual behavior

The callback does not fire when I change the scroll bar preferences. This is true for other events like `AppleAquaColorVariantChanged`, too -- changing the preference does not trigger the callback.


### How to reproduce

Interestingly, when I run the `default-app` and change aqua color variant in the preferences, I notice that the buttons in the Electron window do not update (other apps pick up the change immediately) -- this may be the same or a related issue.",kevinsawicki,platform/macOS;blocked/need-info 閴;bug :beetle:,2017-02-28T17:17:15Z,2017-03-07T22:54:14Z,inukshuk,kevinsawicki;inukshuk,groundwater;kevinsawicki,,groundwater,,inukshuk,
electron/electron,8798,"Build Windows 7 Problem I'm using the latest version available for the electron
I am using Windows 7 Ultimate (x64)
I follow the build tutoria inl website: [build-instructions-windows](https://electron.atom.io/docs/development/build-instructions-windows) , but I could not build

I tried with Cygwin and Windows Terminal, but I have the same mistakes

Image: [here](https://www.imageupload.co.uk/images/2017/02/28/e.e.png)

Commandline: bootstrap.py --msvs

```
$ /cygdrive/c/Python27/python.exe script/bootstrap.py --msvs
Cloning into 'C:/Users/Administrador/Desktop/GIT/electron/electron/vendor/reques                                                                                                    ts'...
Submodule path 'vendor/boto': checked out 'f7574aa6cc2c819430c1f05e9a1a1a666ef81                                                                                                    69b'
Submodule path 'vendor/depot_tools': checked out '4fa73b8ca6899bc69577932b80145a                                                                                                    6bf07e4424'
fatal: Needed a single revision
Unable to find current revision in submodule path 'vendor/node'

Traceback (most recent call last):
  File ""script/bootstrap.py"", line 264, in <module>
    sys.exit(main())
  File ""script/bootstrap.py"", line 34, in main
    update_submodules()
  File ""script/bootstrap.py"", line 128, in update_submodules
    execute_stdout(['git', 'submodule', 'update', '--init', '--recursive'])
  File ""C:\Users\Administrador\desktop\GIT\electron\electron\script\lib\util.py""                                                                                                    , line 182, in execute_stdout
    execute(argv, env)
  File ""C:\Users\Administrador\desktop\GIT\electron\electron\script\lib\util.py""                                                                                                    , line 170, in execute
    raise e
subprocess.CalledProcessError: Command '['git', 'submodule', 'update', '--init',                                                                                                     '--recursive']' returned non-zero exit status 1
```
",alespergl,platform/windows;bug :beetle:;component/build,2017-02-28T20:04:22Z,2017-06-12T10:39:36Z,rafadsm,groundwater;rafadsm;alespergl;cifratila;zcbenz,groundwater,,groundwater,groundwater,zcbenz,
electron/electron,8802,"`fetch` in preload script with context isolation crashes <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.1
* Operating system: openSUSE Leap 42.2 (Linux 4.4.49, x86-64); also reproducible on Windows Server 2016 14393.

### Expected behavior

<!-- What do you think should happen? -->
In BrowserWindow or webview with context isolation enabled, calling `fetch` in preload script should work.  

### Actual behavior

<!-- What actually happens? -->
The page crashes and becomes blank. Devtools shows ""Devtools was disconnected from the page"".

### How to reproduce

<!-- For bugs, provide sample code or a repo URL that demos the problem -->
Download electron-quick-start, add `webPreferences: {preload: path.join(__dirname, 'index.js'), contextIsolation: true}` to the BrowserWindow options in main.js. 

Create index.js: `console.log(fetch('http://example.com'))`

Run `electron .` and it crashes. If started without preload script, calling `fetch('http://example.com')` in Electron Isolated Context of devtools also causes crash.

----

I think the problem may be related with the Isolated Context's security origin. In my local electron build I add the following to CreateIsolatedWorldContext() in atom/renderer/atom_renderer_client.cc to enable cross origin requests, which can make `fetch` work.

    static auto universalOriginURL = blink::WebURL(GURL(""app://universal""));
    static auto universalOrigin = []() {
        auto result = blink::WebSecurityOrigin::create(universalOriginURL);
        for (const char* scheme : {""http"", ""https""}) {
            blink::WebSecurityPolicy::addOriginAccessWhitelistEntry(universalOriginURL,
                blink::WebString::fromUTF8(scheme), blink::WebString(), true);
        }
        return result;
    }();
    render_frame_->GetWebFrame()->setIsolatedWorldSecurityOrigin(
        World::ISOLATED_WORLD, universalOrigin);",kevinsawicki,bug :beetle:,2017-03-01T12:46:27Z,2017-03-02T17:16:52Z,jingyu9575,kevinsawicki;jingyu9575,kevinsawicki;bengotow,kevinsawicki,kevinsawicki,,kevinsawicki,
electron/electron,8807,"app.commandLine.appendSwitch('ignore-gpu-blacklist') creates huge visual bug (even the devtools) * Electron version: 1.6.0, 1.6.1 and 1.6.2
* Operating system: OS X 10.9 Mavericks (inside a VM)

### Expected behavior

Using this command line switch doesn't create any bug with electron version 1.4.15, 1.5.0 or 1.5.1.

### Actual behavior

Screenshot of the bug running `electron-quick-start`:

<img width=""1440"" alt=""screen shot 2017-03-02 at 4 57 24 am"" src=""https://cloud.githubusercontent.com/assets/797899/23481215/9cc60ed8-ff05-11e6-86ec-ef3400f83f5b.png"">

When trying to interact (click on stuff) in the devtools, more visual bugs appear.

### How to reproduce

Not sure if it's OS X 10.9 related, or VM related, but OS X 10.9 inside a VM will have this problem.

Can't reproduce on the same machine with latest Sierra outside of a VM.",kevinsawicki,platform/macOS;bug :beetle:,2017-03-01T21:08:43Z,2017-03-03T08:34:03Z,romaincointepas,MarshallOfSound;romaincointepas;Kagami,groundwater,,groundwater,,romaincointepas,
electron/electron,8812,"setBadgeCount has no effect on Ubuntu with Unity ### Intro
`const bindings = process.atomBinding('app')`
`bindings.unityLauncherAvailable` doesn't exist. It looks like the code from b22ce93 (issue #4193) is not executed.


### Versions:
* Electron version: 1.6.1
* Operating system: Ubuntu 16.04

### Expected behavior

The app should set the badge on the launcher item for the app.

### Actual behavior

Nothing happens.

### How to reproduce

`electron-quick-start/main.js` at line 29 place:
```
console.log(util.inspect(process.atomBinding('app'), false, null));
console.log(""isUnityRunning? "" + app.isUnityRunning());
console.log(""setBadgeCount("" + 5 + "") returned: "" + app.setBadgeCount(5));
console.log(""getBadgeCount returned: "" + app.getBadgeCount());
```
Output:
```
{ App: [Function: App],
  app: 
   App {
     getAppPath: [Function: getAppPath],
     setAppPath: [Function: setAppPath],
     setApplicationMenu: [Function: setApplicationMenu],
     getApplicationMenu: [Function: getApplicationMenu],
     commandLine: 
      { appendSwitch: [Function: appendSwitch],
        appendArgument: [Function: appendArgument] },
     launcher: 
      { setBadgeCount: undefined,
        getBadgeCount: undefined,
        isCounterBadgeAvailable: undefined,
        isUnityRunning: undefined },
     allowNTLMCredentialsForAllDomains: [Function],
     _events: 
      { login: [Function],
        'certificate-error': [Function],
        'select-client-certificate': [Function],
        quit: [Function],
        'web-contents-created': [Function],
        'session-created': [Function],
        'will-quit': [Function],
        ready: [ [Function: createWindow] ],
        'window-all-closed': [ [Function], [Function] ],
        activate: [Function] },
     _eventsCount: 10 },
  appendSwitch: [Function],
  appendArgument: [Function] }
isUnityRunning? true
setBadgeCount(5) returned: true
getBadgeCount returned: 5
```
",deepak1556,platform/linux;bug :beetle:,2017-03-02T08:34:53Z,2017-06-12T10:57:35Z,anatoli26,anatoli26;akashnimare;lojmax;digitalstaub;JMarteF;jayarjo;owais;zcbenz,groundwater,,groundwater,,zcbenz,
electron/electron,8841,"`will-navigate` event not fired when in sandbox mode Thanks for Electron! Amazing project :)

* Electron version: 1.6.2
* Operating system: macOS Sierra (10.12.3)

It happens when `BrowserWindow` is opened with `sandbox: true`. It might be on purpose, but I couldn't find any Electron/Chromium documentation that explains why. So I'm suspecting it's a bug. I can submit a PR with a failing test to this repo if you agree that it's a bug.

### Expected behavior

`webContents`' `will-navigate` event should fire when user reloads page fx.

### Actual behavior

It does not fire.

### How to reproduce

package.json:

```json
{
  ""name"": ""electron-sandbox-will-navigate-bug"",
  ""version"": ""0.0.0"",
  ""main"": ""main.js"",
  ""dependencies"": {
    ""electron"": ""^1.6.2""
  }
}
```

main.js:

```js
const {app, BrowserWindow} = require('electron')
const path = require('path')

app.on('ready', function() {
  const win = new BrowserWindow({
    webPreferences: {
      sandbox: true
    }
  })

  const {webContents} = win
  webContents.on('will-navigate', () => {
    console.log('will-navigate')
  })
  webContents.on('did-navigate', () => {
    console.log('did-navigate')
  })

  win.loadURL('file://' + path.join(__dirname, 'index.html'))
})
```

index.html:

```html
<!doctype html>
<html>
  <body>
    <button onclick=""window.location.reload()"">Reload</button>
  </body>
</html>
```

Perform these steps:

- Run `npm install`
- Run `./node_modules/.bin/electron .`
- Click the Reload button in the browser window
- Observe the Terminal output

Expected output:

```
did-navigate
will-navigate
did-navigate
```

Actual output:

```
did-navigate
did-navigate
```

(will-navigate is not fired).

If you outcomment the line `sandbox:true` in `main.js`, then it works as expected.",codebytere,component/sandbox;bug :beetle:;platform/all;4-2-x;5-0-x;6-1-x,2017-03-06T00:58:11Z,2020-02-21T19:08:27Z,sebastianseilund,lachenmayer;jviotti;geakstr;markleutloff;mike-seekwell;mattbroussard;ridesky;codebytere;sofianguy;asherkin;lurch;aegarbutt;b8kkyn;phosphore;sebastianseilund;lneir;petemud;GhostlyDark,kevinsawicki;sofianguy;codebytere,sofianguy;codebytere,,,codebytere,
electron/electron,8859,"App icon on Ubuntu Unity * Electron version: 1.6.1
* Operating system: Ubuntu 16.04

### Expected behavior

A window with an red square as an icon should open.

### Actual behavior

A window opens with an undefined icon.
![screenshot from 2017-03-07 17-20-47](https://cloud.githubusercontent.com/assets/1530025/23686137/a9e95010-035c-11e7-95ae-bdaefd739571.png)

### How to reproduce

I have create a minimal electron example. Run the following commands on Ubuntu with the Unity desktop.

    git clone https://github.com/RedHatter/electron-quick-start.git
    npm i
    npm start

The icon is 128x128 and is named exactly `icon.png`, according to my research that is what should be needed to get an electron icon to display on Unity.",groundwater,bug :beetle:,2017-03-08T01:39:03Z,2017-06-13T10:00:19Z,RedHatter,pronebird;zeke;RedHatter;bilelmoussaoui;zcbenz,zeke,,zeke,,zcbenz,
electron/electron,9073,"executeJavaScript does not work in sandbox mode * Electron version: 1.6.4
* Operating system: macOS

### Expected behavior

executeJavaScript should return the result in callback or resolve/reject the promise
It works in not-sandbox mode

### Actual behavior

The callback is never called. The returned promise is never resolved

### How to reproduce

In did-finish-load:
```JS
webContents.executeJavaScript('123', false, res => {
   // never called
})
```
or
```JS
const res = await webContents.executeJavaScript('123')
// never resolved
```

Same if the js code is a promise or some other value.",nornagon,platform/macOS;beginner friendly;component/sandbox;bug :beetle:;2-0-x,2017-03-31T04:31:53Z,2018-04-12T01:57:41Z,aight8,codebytere;rhendric;steverandy;nornagon,kevinsawicki;zcbenz;sofianguy;nornagon,kevinsawicki;zcbenz;sofianguy,kevinsawicki;codebytere;nornagon,nornagon,MarshallOfSound,
electron/electron,9411,"showOpenDialog property 'openDirectory' does not work with 'promptToCreate' * Electron version: 1.6.6
* Operating system: Windows 10

### Expected behavior

When I set properties for shopwOpenDialog `properties: ['openDirectory','promptToCreate']` I should be able to specify an non-existing dir to create or select existing one.

### Actual behavior

1. With `properties: ['openDirectory','promptToCreate']` for showOpenDialog I'am able to select existing directory but I can't specify a non-existing directory. When I type name of non-existing directory there is prompt with question If I would like to create one but when I hit 'yes' there is error shown which says ""Provided name is invalid"".

2. With `properties: ['promptToCreate']` I'am not able to select existing directory, only I can do is specify non-exsiting directory and create it, or select file or hit right click on existing directory and hit 'select' to return path.

Is it possible to join this two properties to work?

### How to reproduce


```bash
# Clone this repository
git clone https://github.com/Sharim/electron-showOpenDialog.git electron-openDialog
# Go into the repository
cd electron-electron-openDialog
# Install dependencies
npm install
# Run the app
npm start
```",codebytere,platform/windows;bug :beetle:;component/dialog,2017-05-09T08:03:24Z,2018-05-03T16:19:26Z,pbrejdak,forman;codebytere,kevinsawicki;sofianguy,sofianguy,codebytere,,codebytere,
electron/electron,9418,"DOM APIs do not reflect the same zoom level as webFrame.getZoomLevel() * Electron version: 1.6.6
* Operating system: Ubuntu 16.04

### Expected behavior

After calling `webFrame.setZoomLevel()`, `webFrame.getZoomLevel()` and DOM APIs should both reflect the same (either old or new) zoom level.

### Actual behavior

It takes some time until the DOM APIs reflect the same zoom level reported by `webFrame.getZoomLevel()`. i.e. `webFrame.getZoomLevel()` returns the new zoom level, but DOM APIs will only do so after some time.

### How to reproduce

```
  $ git clone https://github.com/alexandrudima/electron-zoom-level.git
  $ npm install
  $ npm start || electron .
```

**or**

Edit `renderer.js` in the quick start:
```js
// This file is required by the index.html file and will
// be executed in the renderer process for that window.
// All of the Node.js APIs are available in this process.

const electron = require('electron');
const webFrame = electron.webFrame;
const remote = electron.remote;

test('initial');

webFrame.setZoomLevel(5);
test('after setZoomLevel call');

setTimeout(function () {
    test('5s after setZoomLevel call');
    remote.getCurrentWindow().webContents.openDevTools();
}, 5000);

function test(msg) {
    console.log(`${msg} - zoom level ${webFrame.getZoomLevel()} - pixel ratio: ${computePixelRatio()} - width of 'a': ${measureText('a')}`);
}

function computePixelRatio() {
    let ctx = document.createElement('canvas').getContext('2d');
    let dpr = window.devicePixelRatio || 1;
    let bsr = ctx.webkitBackingStorePixelRatio ||
        ctx.mozBackingStorePixelRatio ||
        ctx.msBackingStorePixelRatio ||
        ctx.oBackingStorePixelRatio ||
        ctx.backingStorePixelRatio || 1;
    return dpr / bsr;
}

function measureText(chr) {
    const PRECISION = 8;

    let d = document.createElement('span');
    let str = chr;
    for (let i = 0; i < PRECISION; i++) {
        str = str + str;
    }
    d.appendChild(document.createTextNode(str));

    document.body.appendChild(d);
    const result = (d.offsetWidth / (1 << PRECISION));
    document.body.removeChild(d);

    return result;
}

```

* Wait for 5s
* Example of output:
* Notice how for the same zoom level (5) we get different pixel ratios or DOM behaviour after a timeout of 5s. The same zoom level should always result for example in the same pixel ratio:

![image](https://cloud.githubusercontent.com/assets/5047891/25899485/58e23162-3590-11e7-8229-e93ccbdbe735.png)

```
initial - zoom level 0 - pixel ratio: 1 - width of 'a': 7.1015625
after setZoomLevel call - zoom level 5 - pixel ratio: 1 - width of 'a': 7.1015625
5s after setZoomLevel call - zoom level 5 - pixel ratio: 2.4883201122283936 - width of 'a': 7.13671875
```
",deepak1556,bug :beetle:;bug/regression :leftwards_arrow_with_hook:,2017-05-10T13:01:03Z,2018-09-24T04:53:33Z,alexdima,codebytere,deepak1556;sofianguy,sofianguy,deepak1556,,codebytere,
electron/electron,9447,"tray tooltip wont get updated/visible after app.hide() on macOS <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.6.7
* Operating system: macOS

### Expected behavior

1. start app set tooltip - it is shown correctly
2. update tooltip every 10 seconds
3. open app window - tooltip is shown correctly
4. close the window and do `app.hide()` to get focus on last used app
5. update tooltip - it is  shown


### Actual behavior


1. start app set tooltip - it is shown correctly
2. update tooltip every 10 seconds
3. open app window - tooltip is shown correctly
4. close the window and do `app.hide()` to get focus on last used app
5. update tooltip - it is **not** shown


### How to reproduce
```
  $ git clone https://github.com/hovancik/electron-bug.git
  $ npm install
  $ npm start
```
Behavior in `Actual behavior` is done in app via timers, so all one does need to do is watch the tray tooltip: 

App starts, after 20 seconds window get opened, then closed after 5 seconds and so on. 

",codebytere,platform/macOS;bug :beetle:;5-0-x,2017-05-12T14:49:10Z,2019-06-05T16:15:49Z,hovancik,hovancik;codebytere;Ubadub,sofianguy;codebytere,codebytere,codebytere,,codebytere,
electron/electron,9736,"webviewTag is not compatible with contextIsolation <!--
Thanks for opening an issue! A few things to keep in mind:

- The issue tracker is only for bugs and feature requests.
- Before reporting a bug, please try reproducing your issue against
  the latest version of Electron.
- If you need general advice, join our Slack: http://atom-slack.herokuapp.com
-->

* Electron version: 1.7.2
* Operating system: macOS Sierra

### Expected behavior

Webview appear

### Actual behavior

It don't

### How to reproduce

1. Create a browser window with contextIsolation on true and webviewTag on true
2. Inside of it, add a webview
3. Run it, webview should not appear

<!-- 

Your best chance of getting this bug looked at quickly is to provide a REPOSITORY that can be cloned and run.

You can fork https://github.com/electron/electron-quick-start and include a link to the branch with your changes.

If you provide a URL, please list the commands required to clone/setup/run your repo e.g.

  $ git clone $YOUR_URL -b $BRANCH
  $ npm install
  $ npm start || electron .

-->
",zcbenz,component/webview;bug :beetle:;2-0-x;3-0-x,2017-06-12T10:18:18Z,2018-12-14T06:38:36Z,ghost,hiddentao;codebytere;ikkisoft;BinaryMuse;kloinerblaier,sofianguy;MarshallOfSound;zcbenz,MarshallOfSound,zcbenz,,zcbenz,
electron/electron,9858,"In sanbox mode, BrowserWindow.reload() does not work * Electron version: 1.6.11
* Operating system: darwin x64

### Expected behavior

When I hit Cmd+R or click on the menu label, the main window reloads

### Actual behavior

The window does not reload

### How to reproduce

```
mainWindow = new BrowserWindow({
    webPreferences : {
      sandbox: true
    }
  })
```

```
var appMenu = Menu.buildFromTemplate([
   {
      label: ""View"",
      submenu: [
        { role: ""reload"" }
      ]
   }
])

```

",nornagon,platform/linux;blocked/need-info 閴;component/sandbox;bug :beetle:,2017-06-26T10:24:16Z,2018-04-13T17:19:59Z,CptMaumau,nornagon;sofianguy,sofianguy;nornagon,,nornagon,,sofianguy,
